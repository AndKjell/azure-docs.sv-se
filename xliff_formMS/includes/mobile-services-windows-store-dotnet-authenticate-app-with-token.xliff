<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="53fdcca6-ec16-4f9c-a365-e61e6a3b42be" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="53fdcca6-ec16-4f9c-a365-e61e6a3b42be" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="119d6789-8fd1-4d05-b8cd-fa5cfe4c5e6c">
        <trans-unit id="12a8a0da-a8fe-4876-bb05-f0eadc50017e" xml:space="preserve">
          <source>The previous example showed a standard sign-in, which requires the client to contact both the identity provider and the mobile service every time that the app starts.</source>
          <target state="new">The previous example showed a standard sign-in, which requires the client to contact both the identity provider and the mobile service every time that the app starts.</target>
        </trans-unit>
        <trans-unit id="1657f21c-bb10-44c7-8a46-3d02fa0be77a" xml:space="preserve">
          <source>Not only is this method inefficient, you can run into usage-relates issues should many customers try to start you app at the same time.</source>
          <target state="new">Not only is this method inefficient, you can run into usage-relates issues should many customers try to start you app at the same time.</target>
        </trans-unit>
        <trans-unit id="3380a77c-6157-433f-8e99-7c033e6d5b67" xml:space="preserve">
          <source>A better approach is to cache the authorization token returned by Mobile Services and try to use this first before using a provider-based sign-in.</source>
          <target state="new">A better approach is to cache the authorization token returned by Mobile Services and try to use this first before using a provider-based sign-in.</target>
        </trans-unit>
        <trans-unit id="f7c29651-30f7-4f5b-b170-4fbb50863520" xml:space="preserve">
          <source>You can cache the token issued by Mobile Services regardless of whether you are using client-managed or service-managed authentication.</source>
          <target state="new">You can cache the token issued by Mobile Services regardless of whether you are using client-managed or service-managed authentication.</target>
        </trans-unit>
        <trans-unit id="2a9c23fa-9e0c-45e4-ad37-26fdb7b4d84d" xml:space="preserve">
          <source>This tutorial uses service-managed authentication.</source>
          <target state="new">This tutorial uses service-managed authentication.</target>
        </trans-unit>
        <trans-unit id="d749275f-7af6-4c82-b0b4-fd31c663dea1" xml:space="preserve">
          <source>In the MainPage.xaml.cs project file, add the following <bpt id="d1ee7126-e0d8-466d-a225-1e581ba285ad">&lt;strong&gt;</bpt>using<ept id="d1ee7126-e0d8-466d-a225-1e581ba285ad">&lt;/strong&gt;</ept> statements:</source>
          <target state="new">In the MainPage.xaml.cs project file, add the following <bpt id="d1ee7126-e0d8-466d-a225-1e581ba285ad">&lt;strong&gt;</bpt>using<ept id="d1ee7126-e0d8-466d-a225-1e581ba285ad">&lt;/strong&gt;</ept> statements:</target>
        </trans-unit>
        <trans-unit id="6ed89873-aa9b-4dcf-9f42-034e82029746" xml:space="preserve">
          <source>Replace the <bpt id="e7dcae18-78c4-48d5-bc2a-20497a0ffab9">&lt;strong&gt;</bpt>AuthenticateAsync<ept id="e7dcae18-78c4-48d5-bc2a-20497a0ffab9">&lt;/strong&gt;</ept> method with the following code:</source>
          <target state="new">Replace the <bpt id="e7dcae18-78c4-48d5-bc2a-20497a0ffab9">&lt;strong&gt;</bpt>AuthenticateAsync<ept id="e7dcae18-78c4-48d5-bc2a-20497a0ffab9">&lt;/strong&gt;</ept> method with the following code:</target>
        </trans-unit>
        <trans-unit id="ad3f0406-a75d-476a-8e46-c36a172df7d7" xml:space="preserve">
          <source>In this version of <bpt id="efe78078-c42c-4a02-8758-b1c53f961842">&lt;strong&gt;</bpt>AuthenticateAsync<ept id="efe78078-c42c-4a02-8758-b1c53f961842">&lt;/strong&gt;</ept>, the app tries to use credentials stored in the <bpt id="3156f5a4-8cf5-4a9e-9cb0-d51537ceefd9">&lt;strong&gt;</bpt>PasswordVault<ept id="3156f5a4-8cf5-4a9e-9cb0-d51537ceefd9">&lt;/strong&gt;</ept> to access the mobile service.</source>
          <target state="new">In this version of <bpt id="efe78078-c42c-4a02-8758-b1c53f961842">&lt;strong&gt;</bpt>AuthenticateAsync<ept id="efe78078-c42c-4a02-8758-b1c53f961842">&lt;/strong&gt;</ept>, the app tries to use credentials stored in the <bpt id="3156f5a4-8cf5-4a9e-9cb0-d51537ceefd9">&lt;strong&gt;</bpt>PasswordVault<ept id="3156f5a4-8cf5-4a9e-9cb0-d51537ceefd9">&lt;/strong&gt;</ept> to access the mobile service.</target>
        </trans-unit>
        <trans-unit id="da26d203-2bf6-4771-b149-f65a7351d346" xml:space="preserve">
          <source>A simple query is sent to verify that the stored token is not expired.</source>
          <target state="new">A simple query is sent to verify that the stored token is not expired.</target>
        </trans-unit>
        <trans-unit id="1f0bebe5-ad85-4967-ac4e-2b925e734e05" xml:space="preserve">
          <source>When a 401 is returned, a regular provider-based sign-in is attempted.</source>
          <target state="new">When a 401 is returned, a regular provider-based sign-in is attempted.</target>
        </trans-unit>
        <trans-unit id="9f70b145-f43a-4bcd-8d28-b08fc02e35f9" xml:space="preserve">
          <source>A regular sign-in is also performed when there is no stored credential.</source>
          <target state="new">A regular sign-in is also performed when there is no stored credential.</target>
        </trans-unit>
        <trans-unit id="57b07070-9f90-4d22-b310-04c3442e058f" xml:space="preserve">
          <source>This app tests for expired tokens during login, but token expiration can occur after authentication when the app is in use.</source>
          <target state="new">This app tests for expired tokens during login, but token expiration can occur after authentication when the app is in use.</target>
        </trans-unit>
        <trans-unit id="74894af5-4b48-4bc9-b643-c34f849112d4" xml:space="preserve">
          <source>For a solution to handling authorization errors related to expiring tokens, see the post <bpt id="0e9aa21f-b677-44a3-9e76-e5be8f190cec">&lt;linkText&gt;</bpt>Caching and handling expired tokens in Azure Mobile Services managed SDK<ept id="0e9aa21f-b677-44a3-9e76-e5be8f190cec">&lt;/linkText&gt;</ept><bpt id="0e9aa21f-b677-44a3-9e76-e5be8f190cec">&lt;title&gt;</bpt><ept id="0e9aa21f-b677-44a3-9e76-e5be8f190cec">&lt;/title&gt;</ept>.</source>
          <target state="new">For a solution to handling authorization errors related to expiring tokens, see the post <bpt id="0e9aa21f-b677-44a3-9e76-e5be8f190cec">&lt;linkText&gt;</bpt>Caching and handling expired tokens in Azure Mobile Services managed SDK<ept id="0e9aa21f-b677-44a3-9e76-e5be8f190cec">&lt;/linkText&gt;</ept><bpt id="0e9aa21f-b677-44a3-9e76-e5be8f190cec">&lt;title&gt;</bpt><ept id="0e9aa21f-b677-44a3-9e76-e5be8f190cec">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="b62d949c-ef38-497e-80a2-85ba4dc7f167" xml:space="preserve">
          <source>Restart the app twice.</source>
          <target state="new">Restart the app twice.</target>
        </trans-unit>
        <trans-unit id="b0bb4d2c-1285-4797-9b59-a6047e7e4dd1" xml:space="preserve">
          <source>Notice that on the first start-up, sign-in with the provider is again required.</source>
          <target state="new">Notice that on the first start-up, sign-in with the provider is again required.</target>
        </trans-unit>
        <trans-unit id="5f75ee83-30fc-48c6-ba15-78ff9e066dba" xml:space="preserve">
          <source>However, on the second restart the cached credentials are used and sign-in is bypassed.</source>
          <target state="new">However, on the second restart the cached credentials are used and sign-in is bypassed.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>