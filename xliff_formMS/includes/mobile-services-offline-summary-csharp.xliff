<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="fb652e78-1f3e-478f-9f5a-444aea57e26b" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="fb652e78-1f3e-478f-9f5a-444aea57e26b" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="4dc07d6e-7f2d-4a5a-90f9-af09411c347b">
        <trans-unit id="261b77b9-d1b6-460a-b680-2dd0b392d1fd" xml:space="preserve">
          <source>In order to support the offline features of mobile services, we used the <bpt id="1fe9e6f6-49aa-4b0a-9a3d-45a9d57ace31">&lt;code&gt;</bpt>IMobileServiceSyncTable<ept id="1fe9e6f6-49aa-4b0a-9a3d-45a9d57ace31">&lt;/code&gt;</ept> interface and initialized <bpt id="6f30ab98-7e5f-497b-8c4e-00ac1f1af9f0">&lt;code&gt;</bpt>MobileServiceClient.SyncContext<ept id="6f30ab98-7e5f-497b-8c4e-00ac1f1af9f0">&lt;/code&gt;</ept> with a local store.</source>
          <target state="new">In order to support the offline features of mobile services, we used the <bpt id="1fe9e6f6-49aa-4b0a-9a3d-45a9d57ace31">&lt;code&gt;</bpt>IMobileServiceSyncTable<ept id="1fe9e6f6-49aa-4b0a-9a3d-45a9d57ace31">&lt;/code&gt;</ept> interface and initialized <bpt id="6f30ab98-7e5f-497b-8c4e-00ac1f1af9f0">&lt;code&gt;</bpt>MobileServiceClient.SyncContext<ept id="6f30ab98-7e5f-497b-8c4e-00ac1f1af9f0">&lt;/code&gt;</ept> with a local store.</target>
        </trans-unit>
        <trans-unit id="8353ef3e-625c-4c1e-aa6b-dbe1f07bcb88" xml:space="preserve">
          <source>In this case the local store was a SQLite database.</source>
          <target state="new">In this case the local store was a SQLite database.</target>
        </trans-unit>
        <trans-unit id="b035ec7a-5df5-44de-9102-c2f582591ff7" xml:space="preserve">
          <source>The normal CRUD operations for mobile services work as if the app is still connected but, all the operations occur against the local store.</source>
          <target state="new">The normal CRUD operations for mobile services work as if the app is still connected but, all the operations occur against the local store.</target>
        </trans-unit>
        <trans-unit id="9f8a46f7-66bb-4b2a-af23-9829ea288fbf" xml:space="preserve">
          <source>When we wanted to synchronize the local store with the server, we used the <bpt id="6a5d91d9-d91d-4f36-ad7d-48d12e3c7cee">&lt;code&gt;</bpt>IMobileServiceSyncTable.PullAsync<ept id="6a5d91d9-d91d-4f36-ad7d-48d12e3c7cee">&lt;/code&gt;</ept> and <bpt id="e00b7d7a-5db0-4bb3-826c-b581d7730297">&lt;code&gt;</bpt>MobileServiceClient.SyncContext.PushAsync<ept id="e00b7d7a-5db0-4bb3-826c-b581d7730297">&lt;/code&gt;</ept> methods.</source>
          <target state="new">When we wanted to synchronize the local store with the server, we used the <bpt id="6a5d91d9-d91d-4f36-ad7d-48d12e3c7cee">&lt;code&gt;</bpt>IMobileServiceSyncTable.PullAsync<ept id="6a5d91d9-d91d-4f36-ad7d-48d12e3c7cee">&lt;/code&gt;</ept> and <bpt id="e00b7d7a-5db0-4bb3-826c-b581d7730297">&lt;code&gt;</bpt>MobileServiceClient.SyncContext.PushAsync<ept id="e00b7d7a-5db0-4bb3-826c-b581d7730297">&lt;/code&gt;</ept> methods.</target>
        </trans-unit>
        <trans-unit id="32c91e11-4c4a-4ba6-a745-d0d223dce4df" xml:space="preserve">
          <source>To push changes to the server, we called <bpt id="0ecaa332-daf1-4144-8f29-577db272c651">&lt;code&gt;</bpt>IMobileServiceSyncContext.PushAsync()<ept id="0ecaa332-daf1-4144-8f29-577db272c651">&lt;/code&gt;</ept>.</source>
          <target state="new">To push changes to the server, we called <bpt id="0ecaa332-daf1-4144-8f29-577db272c651">&lt;code&gt;</bpt>IMobileServiceSyncContext.PushAsync()<ept id="0ecaa332-daf1-4144-8f29-577db272c651">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="be870fb3-1f80-4d87-ba52-8c810222d84c" xml:space="preserve">
          <source>This method is a member of <bpt id="f6cea5f7-f1fd-4b2a-8b97-7fad727bd2ca">&lt;code&gt;</bpt>IMobileServicesSyncContext<ept id="f6cea5f7-f1fd-4b2a-8b97-7fad727bd2ca">&lt;/code&gt;</ept> instead of the sync table because it will push changes across all tables.</source>
          <target state="new">This method is a member of <bpt id="f6cea5f7-f1fd-4b2a-8b97-7fad727bd2ca">&lt;code&gt;</bpt>IMobileServicesSyncContext<ept id="f6cea5f7-f1fd-4b2a-8b97-7fad727bd2ca">&lt;/code&gt;</ept> instead of the sync table because it will push changes across all tables.</target>
        </trans-unit>
        <trans-unit id="35fde0ba-f4d0-4f5e-aaa5-20b413bf24ea" xml:space="preserve">
          <source>Only records that have been modified in some way locally (through CUD operations) will be sent to the server.</source>
          <target state="new">Only records that have been modified in some way locally (through CUD operations) will be sent to the server.</target>
        </trans-unit>
        <trans-unit id="edb4b891-7dd5-46d2-b70d-1726a7f6cd92" xml:space="preserve">
          <source>To pull data from a table on the server to the app, we called <bpt id="0a943c5c-576e-4601-8e1f-1d6ad58cd230">&lt;code&gt;</bpt>IMobileServiceSyncTable.PullAsync<ept id="0a943c5c-576e-4601-8e1f-1d6ad58cd230">&lt;/code&gt;</ept>.</source>
          <target state="new">To pull data from a table on the server to the app, we called <bpt id="0a943c5c-576e-4601-8e1f-1d6ad58cd230">&lt;code&gt;</bpt>IMobileServiceSyncTable.PullAsync<ept id="0a943c5c-576e-4601-8e1f-1d6ad58cd230">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="601034b3-6ad9-4fbe-8291-b4653c3dc2d8" xml:space="preserve">
          <source>A pull always issues a push first.</source>
          <target state="new">A pull always issues a push first.</target>
        </trans-unit>
        <trans-unit id="6c4221b9-8c36-4264-a06e-24c84aede8bb" xml:space="preserve">
          <source>This is to ensure all tables in the local store along with relationships remain consistent.</source>
          <target state="new">This is to ensure all tables in the local store along with relationships remain consistent.</target>
        </trans-unit>
        <trans-unit id="503f663f-3021-4f80-926b-faee143493b7" xml:space="preserve">
          <source>There are also overloads of <bpt id="2a3dab33-a1fb-49a6-b982-cebfada55bc1">&lt;code&gt;</bpt>PullAsync()<ept id="2a3dab33-a1fb-49a6-b982-cebfada55bc1">&lt;/code&gt;</ept> that allow a query to be specified in order to filter the data that is stored on the client.</source>
          <target state="new">There are also overloads of <bpt id="2a3dab33-a1fb-49a6-b982-cebfada55bc1">&lt;code&gt;</bpt>PullAsync()<ept id="2a3dab33-a1fb-49a6-b982-cebfada55bc1">&lt;/code&gt;</ept> that allow a query to be specified in order to filter the data that is stored on the client.</target>
        </trans-unit>
        <trans-unit id="63be814e-8ff2-427f-8124-a263ef70d30f" xml:space="preserve">
          <source>If a query is not passed, <bpt id="c33290c7-9b5f-449f-81ce-2afe3f64356b">&lt;code&gt;</bpt>PullAsync()<ept id="c33290c7-9b5f-449f-81ce-2afe3f64356b">&lt;/code&gt;</ept> will pull all rows in the corresponding table (or query).</source>
          <target state="new">If a query is not passed, <bpt id="c33290c7-9b5f-449f-81ce-2afe3f64356b">&lt;code&gt;</bpt>PullAsync()<ept id="c33290c7-9b5f-449f-81ce-2afe3f64356b">&lt;/code&gt;</ept> will pull all rows in the corresponding table (or query).</target>
        </trans-unit>
        <trans-unit id="f3d9b7b8-fcf3-405d-bee1-8e56939c7e6a" xml:space="preserve">
          <source>You can pass the query to filter only the changes your app needs to sync with.</source>
          <target state="new">You can pass the query to filter only the changes your app needs to sync with.</target>
        </trans-unit>
        <trans-unit id="d37e22d5-c8f3-4174-9c72-9f3e2669216e" xml:space="preserve">
          <source>To enable incremental sync, pass a query ID to <bpt id="ba9f9ab8-e5cf-4409-abdc-23c718cdbaa6">&lt;code&gt;</bpt>PullAsync()<ept id="ba9f9ab8-e5cf-4409-abdc-23c718cdbaa6">&lt;/code&gt;</ept>.</source>
          <target state="new">To enable incremental sync, pass a query ID to <bpt id="ba9f9ab8-e5cf-4409-abdc-23c718cdbaa6">&lt;code&gt;</bpt>PullAsync()<ept id="ba9f9ab8-e5cf-4409-abdc-23c718cdbaa6">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="9d71af97-cf6f-4ea9-8225-056e45f3a1f1" xml:space="preserve">
          <source>The query ID is used to store the last updated timestamp from the results of the last pull operation.</source>
          <target state="new">The query ID is used to store the last updated timestamp from the results of the last pull operation.</target>
        </trans-unit>
        <trans-unit id="a5ec28e4-04c6-4ee3-b376-794fcf35294f" xml:space="preserve">
          <source>The query ID should be a descriptive string that is unique for each logical query in your app.</source>
          <target state="new">The query ID should be a descriptive string that is unique for each logical query in your app.</target>
        </trans-unit>
        <trans-unit id="c6ba8884-9cf9-4617-a350-d517056071b9" xml:space="preserve">
          <source>If the query has a parameter, then the same parameter value has to be part of the query ID.</source>
          <target state="new">If the query has a parameter, then the same parameter value has to be part of the query ID.</target>
        </trans-unit>
        <trans-unit id="40f60a1c-c5d2-4ed6-b771-84b58cd5d846" xml:space="preserve">
          <source>For instance, if you are filtering on userid, it needs to be part of the query ID:</source>
          <target state="new">For instance, if you are filtering on userid, it needs to be part of the query ID:</target>
        </trans-unit>
        <trans-unit id="f6fbfee7-5447-4c68-ae98-ed8bf2924d02" xml:space="preserve">
          <source>If you want to opt out of incremental sync, pass <bpt id="5417aecd-c9fd-45c8-bca4-29782e8b7324">&lt;code&gt;</bpt>null<ept id="5417aecd-c9fd-45c8-bca4-29782e8b7324">&lt;/code&gt;</ept> as the query ID.</source>
          <target state="new">If you want to opt out of incremental sync, pass <bpt id="5417aecd-c9fd-45c8-bca4-29782e8b7324">&lt;code&gt;</bpt>null<ept id="5417aecd-c9fd-45c8-bca4-29782e8b7324">&lt;/code&gt;</ept> as the query ID.</target>
        </trans-unit>
        <trans-unit id="765ed860-1653-4466-80e8-2537ffa868ad" xml:space="preserve">
          <source>In this case, all records will be retrieved on every call to <bpt id="9841c894-a9ef-4caf-9948-508b6b263ed5">&lt;code&gt;</bpt>PullAsync<ept id="9841c894-a9ef-4caf-9948-508b6b263ed5">&lt;/code&gt;</ept>, which is potentially inefficient.</source>
          <target state="new">In this case, all records will be retrieved on every call to <bpt id="9841c894-a9ef-4caf-9948-508b6b263ed5">&lt;code&gt;</bpt>PullAsync<ept id="9841c894-a9ef-4caf-9948-508b6b263ed5">&lt;/code&gt;</ept>, which is potentially inefficient.</target>
        </trans-unit>
        <trans-unit id="a95770ad-9080-47fd-973c-c5e7f6d05ece" xml:space="preserve">
          <source>To remove records from the device local store when they have been deleted in your mobile service database, you should enable [Soft Delete].</source>
          <target state="new">To remove records from the device local store when they have been deleted in your mobile service database, you should enable [Soft Delete].</target>
        </trans-unit>
        <trans-unit id="0ef80cd7-1b6c-47a7-bb7a-477b6ef4faef" xml:space="preserve">
          <source>Otherwise, your app should periodically call <bpt id="b0b8d1c6-06ab-4b39-ae82-41458eeace89">&lt;code&gt;</bpt>IMobileServiceSyncTable.PurgeAsync()<ept id="b0b8d1c6-06ab-4b39-ae82-41458eeace89">&lt;/code&gt;</ept> to purge the local store.</source>
          <target state="new">Otherwise, your app should periodically call <bpt id="b0b8d1c6-06ab-4b39-ae82-41458eeace89">&lt;code&gt;</bpt>IMobileServiceSyncTable.PurgeAsync()<ept id="b0b8d1c6-06ab-4b39-ae82-41458eeace89">&lt;/code&gt;</ept> to purge the local store.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>