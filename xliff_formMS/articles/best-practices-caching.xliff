<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="ab3be3fc-860d-4679-a088-0cd18ed84f7b" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="ab3be3fc-860d-4679-a088-0cd18ed84f7b" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="9bc67b8b-e086-4bb1-9806-48d67eaad795">
        <trans-unit id="9de05506-a181-4ef0-b15b-b9509f6adf5f" xml:space="preserve">
          <source>Caching guidance | Microsoft Azure</source>
          <target state="new">Caching guidance | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="a65db25b-50e7-4a17-9eea-7897029f1f98" xml:space="preserve">
          <source>Guidance on caching to improve performance and scalability.</source>
          <target state="new">Guidance on caching to improve performance and scalability.</target>
        </trans-unit>
        <trans-unit id="a4a8a57c-30e8-48a0-9b12-5efda1898567" xml:space="preserve">
          <source><bpt id="c7af28e5-df33-4d03-9e9c-a35e0554a90b">&lt;linkText&gt;</bpt><ept id="c7af28e5-df33-4d03-9e9c-a35e0554a90b">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="c7af28e5-df33-4d03-9e9c-a35e0554a90b">&lt;linkText&gt;</bpt><ept id="c7af28e5-df33-4d03-9e9c-a35e0554a90b">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d69b6fa9-7830-4455-b198-3c2d2d70a13e" xml:space="preserve">
          <source>Caching is a common technique that aims to improve the performance and
scalability of a system by temporarily copying frequently accessed data
to fast storage located close to the application.</source>
          <target state="new">Caching is a common technique that aims to improve the performance and
scalability of a system by temporarily copying frequently accessed data
to fast storage located close to the application.</target>
        </trans-unit>
        <trans-unit id="3faf7027-29a8-47ee-ac85-7f2331df0718" xml:space="preserve">
          <source>If this fast data storage
is located closer to the application than the original source then caching
can significantly improve response times for client applications by serving
data more quickly.</source>
          <target state="new">If this fast data storage
is located closer to the application than the original source then caching
can significantly improve response times for client applications by serving
data more quickly.</target>
        </trans-unit>
        <trans-unit id="1b378027-358e-492d-a232-65b049927784" xml:space="preserve">
          <source>Caching is most effective when a client instance repeatedly
reads the same data, especially if the data remains relatively static and
the original data store is slow relative to the speed of the cache, is
subject to a high level of contention, or is far away when network latency
can cause access to be slow.</source>
          <target state="new">Caching is most effective when a client instance repeatedly
reads the same data, especially if the data remains relatively static and
the original data store is slow relative to the speed of the cache, is
subject to a high level of contention, or is far away when network latency
can cause access to be slow.</target>
        </trans-unit>
        <trans-unit id="52efddda-84f7-42e7-83ce-747b00f5023d" xml:space="preserve">
          <source>Distributed applications typically implement either or both of the
following strategies when caching data:</source>
          <target state="new">Distributed applications typically implement either or both of the
following strategies when caching data:</target>
        </trans-unit>
        <trans-unit id="903bc931-75fc-4737-905e-fa96ab88d606" xml:space="preserve">
          <source>Using a private cache, where data is held locally on the computer running an instance of an application or service.</source>
          <target state="new">Using a private cache, where data is held locally on the computer running an instance of an application or service.</target>
        </trans-unit>
        <trans-unit id="326ef02b-92db-40b4-88e2-63e988e087e6" xml:space="preserve">
          <source>Using a shared cache, serving as a common source which can be accessed by multiple processes and/or machines.</source>
          <target state="new">Using a shared cache, serving as a common source which can be accessed by multiple processes and/or machines.</target>
        </trans-unit>
        <trans-unit id="5e6da94c-0f8f-4dcc-939e-69f0e9377c05" xml:space="preserve">
          <source>In both cases, caching could be performed client-side (by the process providing
the user interface for a system, such as a web browser or desktop application),
and/or server-side (by the process providing the business services
running remotely).</source>
          <target state="new">In both cases, caching could be performed client-side (by the process providing
the user interface for a system, such as a web browser or desktop application),
and/or server-side (by the process providing the business services
running remotely).</target>
        </trans-unit>
        <trans-unit id="19115001-c079-4b8d-9b82-c495dfe044aa" xml:space="preserve">
          <source>The most basic type of cache is an in-memory store, held in the address
space of a single process and accessed directly by the code that runs
in that process.</source>
          <target state="new">The most basic type of cache is an in-memory store, held in the address
space of a single process and accessed directly by the code that runs
in that process.</target>
        </trans-unit>
        <trans-unit id="52b57459-4edc-451c-ac38-0049773e3667" xml:space="preserve">
          <source>This type of cache is very quick to access, and it can
provide an extremely effective strategy for storing modest amounts of
static data as the size of a cache is typically constrained by the
volume of memory available on the machine hosting the process.</source>
          <target state="new">This type of cache is very quick to access, and it can
provide an extremely effective strategy for storing modest amounts of
static data as the size of a cache is typically constrained by the
volume of memory available on the machine hosting the process.</target>
        </trans-unit>
        <trans-unit id="3dfdca98-0949-443d-ab29-59cc84acfbd9" xml:space="preserve">
          <source>If you
need to cache more information than is physically possible in memory,
you can write cached data to the local file system.</source>
          <target state="new">If you
need to cache more information than is physically possible in memory,
you can write cached data to the local file system.</target>
        </trans-unit>
        <trans-unit id="a6c732bb-ef45-43f7-b162-afbbb55a9c8a" xml:space="preserve">
          <source>This will
necessarily be slower to access than data held in-memory, but should
still be faster and more reliable than retrieving data across a network.</source>
          <target state="new">This will
necessarily be slower to access than data held in-memory, but should
still be faster and more reliable than retrieving data across a network.</target>
        </trans-unit>
        <trans-unit id="a0ff138b-776a-4aa7-b82e-67f82a4a6564" xml:space="preserve">
          <source>If you have multiple instances of an application that uses this model
running concurrently, each application instance will have its own
independent cache holding its own copy of data.</source>
          <target state="new">If you have multiple instances of an application that uses this model
running concurrently, each application instance will have its own
independent cache holding its own copy of data.</target>
        </trans-unit>
        <trans-unit id="9dc51bb4-3c54-4758-919d-b5b66bf05749" xml:space="preserve">
          <source>You should think of a cache as a snapshot of the original data at some
point in the past.</source>
          <target state="new">You should think of a cache as a snapshot of the original data at some
point in the past.</target>
        </trans-unit>
        <trans-unit id="e44537ee-42c4-4813-955e-d429f3f68a73" xml:space="preserve">
          <source>If this data is not static, it is likely that
different application instances will hold different versions of the
data in their caches.</source>
          <target state="new">If this data is not static, it is likely that
different application instances will hold different versions of the
data in their caches.</target>
        </trans-unit>
        <trans-unit id="22914bc3-22d2-4987-bb37-237379fc6ccf" xml:space="preserve">
          <source>Therefore, the same query performed by these
instances could return different results, as shown in Figure 1.</source>
          <target state="new">Therefore, the same query performed by these
instances could return different results, as shown in Figure 1.</target>
        </trans-unit>
        <trans-unit id="d61a49ba-0ebf-4c01-be8c-23b76e7ecc0e" xml:space="preserve">
          <source><bpt id="fde7f311-e8c6-4f78-b246-21103cf1fd07">&lt;linkText&gt;</bpt>Using an in-memory cache in different instances of an application<ept id="fde7f311-e8c6-4f78-b246-21103cf1fd07">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="fde7f311-e8c6-4f78-b246-21103cf1fd07">&lt;linkText&gt;</bpt>Using an in-memory cache in different instances of an application<ept id="fde7f311-e8c6-4f78-b246-21103cf1fd07">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="dd350572-870f-4ab5-8fc3-9ef25e433183" xml:space="preserve">
          <source><bpt id="64e678b6-1d74-48e5-933c-9846fdc1b72d">&lt;em&gt;</bpt>Figure 1: Using an in-memory cache in different instances of an application<ept id="64e678b6-1d74-48e5-933c-9846fdc1b72d">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="64e678b6-1d74-48e5-933c-9846fdc1b72d">&lt;em&gt;</bpt>Figure 1: Using an in-memory cache in different instances of an application<ept id="64e678b6-1d74-48e5-933c-9846fdc1b72d">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="90305c03-d82d-4f75-af87-bb779b79aef1" xml:space="preserve">
          <source>Using a shared cache can help to alleviate the concern that data may
differ in each cache, as can occur with in-memory caching.</source>
          <target state="new">Using a shared cache can help to alleviate the concern that data may
differ in each cache, as can occur with in-memory caching.</target>
        </trans-unit>
        <trans-unit id="68384d89-5459-48d6-b20b-8f2493ec2f04" xml:space="preserve">
          <source>Shared
caching ensures that different application instances see the same
view of cached data by locating the cache in a separate location,
typically hosted as part of a separate service, as shown in Figure 2.</source>
          <target state="new">Shared
caching ensures that different application instances see the same
view of cached data by locating the cache in a separate location,
typically hosted as part of a separate service, as shown in Figure 2.</target>
        </trans-unit>
        <trans-unit id="89e996c6-50f7-47b3-b0f9-b7a3ad602cc7" xml:space="preserve">
          <source><bpt id="ad0a14be-4d13-49e6-8024-e1d4b5e8dab5">&lt;linkText&gt;</bpt>Using a shared cache_<ept id="ad0a14be-4d13-49e6-8024-e1d4b5e8dab5">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="ad0a14be-4d13-49e6-8024-e1d4b5e8dab5">&lt;linkText&gt;</bpt>Using a shared cache_<ept id="ad0a14be-4d13-49e6-8024-e1d4b5e8dab5">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ea53a1ca-57fb-493d-8e6d-8a00ec88dd34" xml:space="preserve">
          <source><bpt id="2ca8e4b8-ab1d-4532-9431-9363ae44758e">&lt;em&gt;</bpt>Figure 2: Using a shared cache<ept id="2ca8e4b8-ab1d-4532-9431-9363ae44758e">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="2ca8e4b8-ab1d-4532-9431-9363ae44758e">&lt;em&gt;</bpt>Figure 2: Using a shared cache<ept id="2ca8e4b8-ab1d-4532-9431-9363ae44758e">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="48e111d1-e72a-4335-920e-8018e05c1752" xml:space="preserve">
          <source>An important benefit of using the shared caching approach is the
scalability it can help to provide.</source>
          <target state="new">An important benefit of using the shared caching approach is the
scalability it can help to provide.</target>
        </trans-unit>
        <trans-unit id="9fc9ade3-aeaa-4f36-a029-df1b972fa26d" xml:space="preserve">
          <source>Many shared cache services are
implemented by using a cluster of servers, and utilize software that
distributes the data across the cluster in a transparent manner.</source>
          <target state="new">Many shared cache services are
implemented by using a cluster of servers, and utilize software that
distributes the data across the cluster in a transparent manner.</target>
        </trans-unit>
        <trans-unit id="b4ef4d2e-da24-4fe1-9876-fdcfce92fd2b" xml:space="preserve">
          <source>An
application instance simply sends a request to the cache service,
and the underlying infrastructure is responsible for determining the
location of the cached data in the cluster.</source>
          <target state="new">An
application instance simply sends a request to the cache service,
and the underlying infrastructure is responsible for determining the
location of the cached data in the cluster.</target>
        </trans-unit>
        <trans-unit id="84972c08-961a-4723-bbe1-781fa64d8bd8" xml:space="preserve">
          <source>You can easily scale the
cache by adding more servers.</source>
          <target state="new">You can easily scale the
cache by adding more servers.</target>
        </trans-unit>
        <trans-unit id="8e88f1e6-b4e6-4281-a638-d79e0409061a" xml:space="preserve">
          <source>The disadvantages of the shared caching approach are that the cache
is slower to access because it is no longer held locally to each
application instance, and the requirement to implement a separate
cache service may add complexity to the solution.</source>
          <target state="new">The disadvantages of the shared caching approach are that the cache
is slower to access because it is no longer held locally to each
application instance, and the requirement to implement a separate
cache service may add complexity to the solution.</target>
        </trans-unit>
        <trans-unit id="954a9c67-c389-4b9a-859e-4d530367776f" xml:space="preserve">
          <source>The following sections describe in more detail the considerations
for designing and using a cache.</source>
          <target state="new">The following sections describe in more detail the considerations
for designing and using a cache.</target>
        </trans-unit>
        <trans-unit id="2479a764-4ded-4d59-a6ae-d46d96005513" xml:space="preserve">
          <source>Caching can dramatically improve performance, scalability, and availability.</source>
          <target state="new">Caching can dramatically improve performance, scalability, and availability.</target>
        </trans-unit>
        <trans-unit id="a5c9083d-a433-4a45-9f36-2250f7e4d6b8" xml:space="preserve">
          <source>The more data
that you have and the larger the number of users that need to access this data, the greater
the benefits of caching become by reducing latency and contention associated with handling
large volumes of concurrent requests in the original data store.</source>
          <target state="new">The more data
that you have and the larger the number of users that need to access this data, the greater
the benefits of caching become by reducing latency and contention associated with handling
large volumes of concurrent requests in the original data store.</target>
        </trans-unit>
        <trans-unit id="f09b2f7d-d963-4382-bb2a-3d3f51b75252" xml:space="preserve">
          <source>For example, a database
may support a limited number of concurrent connections, but retrieving data from a shared
cache rather than the underlying database allows a client application to access this data
even if the number of available connections is currently exhausted.</source>
          <target state="new">For example, a database
may support a limited number of concurrent connections, but retrieving data from a shared
cache rather than the underlying database allows a client application to access this data
even if the number of available connections is currently exhausted.</target>
        </trans-unit>
        <trans-unit id="e3c76274-0046-400f-b81f-4e77f7a221f1" xml:space="preserve">
          <source>Additionally, if the
database becomes unavailable, client applications may be able to continue by using the
data held in the cache.</source>
          <target state="new">Additionally, if the
database becomes unavailable, client applications may be able to continue by using the
data held in the cache.</target>
        </trans-unit>
        <trans-unit id="f59d708e-34ce-4c94-923e-b87a57ee0640" xml:space="preserve">
          <source>You should consider caching data that is read frequently but that is modified infrequently
(the data has a high proportion of read operations compared to write operations).</source>
          <target state="new">You should consider caching data that is read frequently but that is modified infrequently
(the data has a high proportion of read operations compared to write operations).</target>
        </trans-unit>
        <trans-unit id="e6b915c8-d7b7-4652-b865-e1b9b1656f85" xml:space="preserve">
          <source>However,
you should not use the cache as the authoritative store of critical information; you should
ensure that all changes that your application cannot afford to lose are always saved to a
persistent data store.</source>
          <target state="new">However,
you should not use the cache as the authoritative store of critical information; you should
ensure that all changes that your application cannot afford to lose are always saved to a
persistent data store.</target>
        </trans-unit>
        <trans-unit id="bf73afbb-ccaf-49cc-8203-24b24d98eacb" xml:space="preserve">
          <source>In this way, if the cache is unavailable, your application can
still continue to operate by using the data store and you will not lose important
information.</source>
          <target state="new">In this way, if the cache is unavailable, your application can
still continue to operate by using the data store and you will not lose important
information.</target>
        </trans-unit>
        <trans-unit id="5236484e-7202-4485-8af1-0638930ba5ba" xml:space="preserve">
          <source>The key to using a cache effectively lies in determining the most appropriate data to
cache, and caching it at the appropriate time.</source>
          <target state="new">The key to using a cache effectively lies in determining the most appropriate data to
cache, and caching it at the appropriate time.</target>
        </trans-unit>
        <trans-unit id="bbededec-be62-4e25-9766-ebeba137b759" xml:space="preserve">
          <source>The data may be added to the cache on
demand the first time it is retrieved by an application, so that the application needs
fetch the data only once from the data store and subsequent accesses can be satisfied
by using the cache.</source>
          <target state="new">The data may be added to the cache on
demand the first time it is retrieved by an application, so that the application needs
fetch the data only once from the data store and subsequent accesses can be satisfied
by using the cache.</target>
        </trans-unit>
        <trans-unit id="cd0cff15-4919-4184-8fd3-13819938b13c" xml:space="preserve">
          <source>Alternatively, a cache may be partially or fully populated with data in advance,
typically when the application starts (an approach known as seeding).</source>
          <target state="new">Alternatively, a cache may be partially or fully populated with data in advance,
typically when the application starts (an approach known as seeding).</target>
        </trans-unit>
        <trans-unit id="012f2000-2531-4efa-90da-9976ba51e66e" xml:space="preserve">
          <source>However, it may
not be advisable to implement seeding for a large cache as this approach can impose
a sudden, high load on the original data store when the application starts running.</source>
          <target state="new">However, it may
not be advisable to implement seeding for a large cache as this approach can impose
a sudden, high load on the original data store when the application starts running.</target>
        </trans-unit>
        <trans-unit id="0e2bab70-7877-4121-aa69-33c6987dd3e5" xml:space="preserve">
          <source>Often an analysis of usage patterns can help to decide whether to fully or partially
prepopulate a cache, and to choose the data that should be cached.</source>
          <target state="new">Often an analysis of usage patterns can help to decide whether to fully or partially
prepopulate a cache, and to choose the data that should be cached.</target>
        </trans-unit>
        <trans-unit id="03e35370-7eef-41af-9ba3-282fb12b88da" xml:space="preserve">
          <source>For example, it
would probably be useful to seed the cache with the static user profile data for
customers who use the application regularly (perhaps every day), but not for
customers who use the application only once a week.</source>
          <target state="new">For example, it
would probably be useful to seed the cache with the static user profile data for
customers who use the application regularly (perhaps every day), but not for
customers who use the application only once a week.</target>
        </trans-unit>
        <trans-unit id="a85d1d6c-f37b-4e6e-a021-8b60b23238cd" xml:space="preserve">
          <source>Caching typically works well with data that is immutable or that changes
infrequently.</source>
          <target state="new">Caching typically works well with data that is immutable or that changes
infrequently.</target>
        </trans-unit>
        <trans-unit id="f9936487-f6db-4623-9b3c-a9bf50cc6d0d" xml:space="preserve">
          <source>Examples include reference information such as product and pricing
information in an ecommerce application, or shared static resources that are costly
to construct.</source>
          <target state="new">Examples include reference information such as product and pricing
information in an ecommerce application, or shared static resources that are costly
to construct.</target>
        </trans-unit>
        <trans-unit id="9ac98d7d-16b5-462e-88e6-807daea14682" xml:space="preserve">
          <source>Some or all of this data can be loaded into the cache at application
startup to minimize demand on resources and to improve performance.</source>
          <target state="new">Some or all of this data can be loaded into the cache at application
startup to minimize demand on resources and to improve performance.</target>
        </trans-unit>
        <trans-unit id="8e18af9b-4edb-45c1-89e0-962ea2a2da3c" xml:space="preserve">
          <source>It may also be
appropriate to have a background process that periodically updates reference data
in the cache to ensure it is up to date, or refreshes the cache when reference
data changes.</source>
          <target state="new">It may also be
appropriate to have a background process that periodically updates reference data
in the cache to ensure it is up to date, or refreshes the cache when reference
data changes.</target>
        </trans-unit>
        <trans-unit id="54fad17f-e407-4bf3-8c5d-5f772198265b" xml:space="preserve">
          <source>Caching may be less useful for dynamic data, although there are some exceptions to
this consideration (see the section Caching Highly Dynamic Data later in this
guidance for more information).</source>
          <target state="new">Caching may be less useful for dynamic data, although there are some exceptions to
this consideration (see the section Caching Highly Dynamic Data later in this
guidance for more information).</target>
        </trans-unit>
        <trans-unit id="9167f79d-a7af-4295-a38e-4126a9390cdb" xml:space="preserve">
          <source>When the original data regularly changes, either
the cached information can become stale very quickly or the overhead of keeping
the cache synchronized with the original data store reduces the effectiveness of
caching.</source>
          <target state="new">When the original data regularly changes, either
the cached information can become stale very quickly or the overhead of keeping
the cache synchronized with the original data store reduces the effectiveness of
caching.</target>
        </trans-unit>
        <trans-unit id="aedc08c8-036d-4d75-8a1b-fb4fe50300a1" xml:space="preserve">
          <source>Note that a cache does not have to include the complete data for an
entity.</source>
          <target state="new">Note that a cache does not have to include the complete data for an
entity.</target>
        </trans-unit>
        <trans-unit id="0ff5ae1a-12ed-4ff5-bf48-fa3723a561c3" xml:space="preserve">
          <source>For example, if a data item represents a multivalued object such as a bank
customer with a name, address, and account balance, some of these elements may
remain static (the name and address), while others (such as the account balance)
may be more dynamic.</source>
          <target state="new">For example, if a data item represents a multivalued object such as a bank
customer with a name, address, and account balance, some of these elements may
remain static (the name and address), while others (such as the account balance)
may be more dynamic.</target>
        </trans-unit>
        <trans-unit id="ebddd366-e7de-4c5d-aa61-5222700d71c9" xml:space="preserve">
          <source>In these situations, it could be useful to cache the static
portions of the data and only retrieve (or calculate) the remaining information as
and when it is required.</source>
          <target state="new">In these situations, it could be useful to cache the static
portions of the data and only retrieve (or calculate) the remaining information as
and when it is required.</target>
        </trans-unit>
        <trans-unit id="972e3617-86d8-4ca2-8a24-14861c6ad839" xml:space="preserve">
          <source>Performance testing and usage analysis should be carried out to determine whether
pre-population or on-demand loading of the cache, or a combination of both, is
appropriate.</source>
          <target state="new">Performance testing and usage analysis should be carried out to determine whether
pre-population or on-demand loading of the cache, or a combination of both, is
appropriate.</target>
        </trans-unit>
        <trans-unit id="9d60401c-a46e-4a77-8161-496b10ad826b" xml:space="preserve">
          <source>The decision should be based on a combination of the volatility and
usage pattern of the data.</source>
          <target state="new">The decision should be based on a combination of the volatility and
usage pattern of the data.</target>
        </trans-unit>
        <trans-unit id="b1b1ab96-2a4c-4406-be30-c555abea5fee" xml:space="preserve">
          <source>Cache utilization and performance analysis is
particularly important in applications that encounter heavy loads and must be
highly scalable.</source>
          <target state="new">Cache utilization and performance analysis is
particularly important in applications that encounter heavy loads and must be
highly scalable.</target>
        </trans-unit>
        <trans-unit id="9ab7d127-ef0c-46e1-8d45-fd42a94542de" xml:space="preserve">
          <source>For example, in highly scalable scenarios it may make sense to
seed the cache to reduce the load on the data store at peak times.</source>
          <target state="new">For example, in highly scalable scenarios it may make sense to
seed the cache to reduce the load on the data store at peak times.</target>
        </trans-unit>
        <trans-unit id="083f195e-6c18-434b-93b9-d9c8b1f62a85" xml:space="preserve">
          <source>Caching can also be used to avoid repeating computations as the application is
running.</source>
          <target state="new">Caching can also be used to avoid repeating computations as the application is
running.</target>
        </trans-unit>
        <trans-unit id="a59a9545-5283-41c3-93e7-ddb7ab30ca50" xml:space="preserve">
          <source>If an operation transforms data or performs a complicated calculation,
it can save the results of the operation in the cache.</source>
          <target state="new">If an operation transforms data or performs a complicated calculation,
it can save the results of the operation in the cache.</target>
        </trans-unit>
        <trans-unit id="b2353cad-7d3f-4591-bfe2-7a27198aa83d" xml:space="preserve">
          <source>If the same calculation
is required subsequently, the application can simply retrieve the results from
the cache.</source>
          <target state="new">If the same calculation
is required subsequently, the application can simply retrieve the results from
the cache.</target>
        </trans-unit>
        <trans-unit id="e791c8e6-cdca-4387-b7e5-f82a76f78943" xml:space="preserve">
          <source>An application can modify data held in a cache, but you should consider the
cache as a transient data store that could disappear at any time.</source>
          <target state="new">An application can modify data held in a cache, but you should consider the
cache as a transient data store that could disappear at any time.</target>
        </trans-unit>
        <trans-unit id="95e7f70d-a970-4e16-8f0e-637f686a1fa0" xml:space="preserve">
          <source>Do not store
valuable data only in the cache, but make sure that you maintain the information
in the original data store as well.</source>
          <target state="new">Do not store
valuable data only in the cache, but make sure that you maintain the information
in the original data store as well.</target>
        </trans-unit>
        <trans-unit id="5ce3b7d7-47ae-4c29-a257-bc234a810d2a" xml:space="preserve">
          <source>In this way, if the cache should become
unavailable, you minimize the chance of losing data.</source>
          <target state="new">In this way, if the cache should become
unavailable, you minimize the chance of losing data.</target>
        </trans-unit>
        <trans-unit id="a473748a-15b4-466d-90ab-4dbe4ac5f9b8" xml:space="preserve">
          <source>Storing information that changes rapidly in a persistent data store can impose
an overhead on the system.</source>
          <target state="new">Storing information that changes rapidly in a persistent data store can impose
an overhead on the system.</target>
        </trans-unit>
        <trans-unit id="a2d96a21-8649-4703-8507-5e0edba8adbd" xml:space="preserve">
          <source>For example, consider a device that continually reports
status or some other measurement.</source>
          <target state="new">For example, consider a device that continually reports
status or some other measurement.</target>
        </trans-unit>
        <trans-unit id="fe45392c-39e4-49de-9204-7b006cf8c724" xml:space="preserve">
          <source>If an application chooses not to cache this
data on the basis that the cached information will nearly always be outdated, then
the same consideration could be true when storing and retrieving this information
from the data store; in the time taken to save and fetch this data it may have
changed.</source>
          <target state="new">If an application chooses not to cache this
data on the basis that the cached information will nearly always be outdated, then
the same consideration could be true when storing and retrieving this information
from the data store; in the time taken to save and fetch this data it may have
changed.</target>
        </trans-unit>
        <trans-unit id="803ebeb0-18eb-4600-9bfd-9b970f7ecb5e" xml:space="preserve">
          <source>In a situation such as this, consider the benefits of storing the dynamic
information directly in the cache instead of the persistent data store.</source>
          <target state="new">In a situation such as this, consider the benefits of storing the dynamic
information directly in the cache instead of the persistent data store.</target>
        </trans-unit>
        <trans-unit id="447c9027-3687-4011-848d-4c5b86762de2" xml:space="preserve">
          <source>If the
data is non-critical and does not require to be audited, then it does not matter
if the occasional change is lost.</source>
          <target state="new">If the
data is non-critical and does not require to be audited, then it does not matter
if the occasional change is lost.</target>
        </trans-unit>
        <trans-unit id="b756d6cc-0f47-4e24-842e-0e9afe326962" xml:space="preserve">
          <source>In most cases, data held in a cache is a copy of the data held in the original data
store.</source>
          <target state="new">In most cases, data held in a cache is a copy of the data held in the original data
store.</target>
        </trans-unit>
        <trans-unit id="5142ad99-4dd1-4d50-a5ae-f2e49e9a1128" xml:space="preserve">
          <source>The data in the original data store might change after it was cached, causing
the cached data to become stale.</source>
          <target state="new">The data in the original data store might change after it was cached, causing
the cached data to become stale.</target>
        </trans-unit>
        <trans-unit id="aaf74954-609d-4ee5-b250-de4037e6da57" xml:space="preserve">
          <source>Many caching systems enable you to configure the
cache to expire data and reduce the period for which data may be out of date.</source>
          <target state="new">Many caching systems enable you to configure the
cache to expire data and reduce the period for which data may be out of date.</target>
        </trans-unit>
        <trans-unit id="15892743-07df-44da-b2e6-efdc13997d8f" xml:space="preserve">
          <source>When cached data expires it is removed from the cache, and the application must
retrieve the data from the original data store (it can put the newly-fetched
information back into cache).</source>
          <target state="new">When cached data expires it is removed from the cache, and the application must
retrieve the data from the original data store (it can put the newly-fetched
information back into cache).</target>
        </trans-unit>
        <trans-unit id="b44d1b48-32db-4fa8-b9ae-59572c6dc6c1" xml:space="preserve">
          <source>You can set a default expiration policy when you
configure the cache.</source>
          <target state="new">You can set a default expiration policy when you
configure the cache.</target>
        </trans-unit>
        <trans-unit id="58b6b9b0-75fa-42a1-a449-6834558a8254" xml:space="preserve">
          <source>In many cache services you can also stipulate the expiration
period for individual objects when you store them programmatically in the cache
(some caches enable you to specify the expiration period as an absolute value, or
as a sliding value that causes the item to be removed from cache if it is not
accessed within the specified time.</source>
          <target state="new">In many cache services you can also stipulate the expiration
period for individual objects when you store them programmatically in the cache
(some caches enable you to specify the expiration period as an absolute value, or
as a sliding value that causes the item to be removed from cache if it is not
accessed within the specified time.</target>
        </trans-unit>
        <trans-unit id="cff3131f-c9e1-4436-94f5-f547e622861f" xml:space="preserve">
          <source>This setting overrides any cache-wide
expiration policy, but only for the specified objects.</source>
          <target state="new">This setting overrides any cache-wide
expiration policy, but only for the specified objects.</target>
        </trans-unit>
        <trans-unit id="d223cc4e-bac7-4992-b99e-d4a40a1348e6" xml:space="preserve">
          <source>Consider the expiration period for the cache and the objects that it contains carefully.</source>
          <target state="new">Consider the expiration period for the cache and the objects that it contains carefully.</target>
        </trans-unit>
        <trans-unit id="5c63c078-daa3-4009-8220-d47f27106209" xml:space="preserve">
          <source>If you make it too short, objects will expire too quickly and you will reduce the benefits of using the cache.</source>
          <target state="new">If you make it too short, objects will expire too quickly and you will reduce the benefits of using the cache.</target>
        </trans-unit>
        <trans-unit id="96a3b598-c042-41c0-b7dc-8888e07a7871" xml:space="preserve">
          <source>If you make the period too long, you risk the data becoming stale.</source>
          <target state="new">If you make the period too long, you risk the data becoming stale.</target>
        </trans-unit>
        <trans-unit id="9b25d5ed-46e5-4c78-89b3-9bc6cc787b4a" xml:space="preserve">
          <source>It is also possible that the cache might fill up if data is allowed to remain
resident for a long time.</source>
          <target state="new">It is also possible that the cache might fill up if data is allowed to remain
resident for a long time.</target>
        </trans-unit>
        <trans-unit id="42ef4d4d-f85c-49ef-9535-53b8a49be154" xml:space="preserve">
          <source>In this case, any requests to add new items to the
cache might cause some items to be forcibly removed, in a process known as
eviction.</source>
          <target state="new">In this case, any requests to add new items to the
cache might cause some items to be forcibly removed, in a process known as
eviction.</target>
        </trans-unit>
        <trans-unit id="48d70873-8803-434d-a6f8-952b6571b923" xml:space="preserve">
          <source>Cache services typically evict data on a least-recently-used (LRU)
basis, but you can usually override this policy and prevent items from being
evicted.</source>
          <target state="new">Cache services typically evict data on a least-recently-used (LRU)
basis, but you can usually override this policy and prevent items from being
evicted.</target>
        </trans-unit>
        <trans-unit id="ac1399f2-f5bf-4c5a-a2a3-948a023b1ea1" xml:space="preserve">
          <source>However, if you adopt this approach you risk your cache exceeding the
memory that it has available, and an application that attempts to add an item
to the cache will fail with an exception.</source>
          <target state="new">However, if you adopt this approach you risk your cache exceeding the
memory that it has available, and an application that attempts to add an item
to the cache will fail with an exception.</target>
        </trans-unit>
        <trans-unit id="2c200589-1b23-4b1c-8eee-4dd426a4c6b7" xml:space="preserve">
          <source>Some caching implementations may provide additional eviction policies.</source>
          <target state="new">Some caching implementations may provide additional eviction policies.</target>
        </trans-unit>
        <trans-unit id="66475b6c-23f4-4b19-b86e-b868c3191eee" xml:space="preserve">
          <source>These
typically include the most-recently-used policy (in the expectation that the
data will not be required again), first-in-first-out policy (oldest data is
evicted first), or explicit removal based on a triggered event (such as the
data being modified).</source>
          <target state="new">These
typically include the most-recently-used policy (in the expectation that the
data will not be required again), first-in-first-out policy (oldest data is
evicted first), or explicit removal based on a triggered event (such as the
data being modified).</target>
        </trans-unit>
        <trans-unit id="1e7c413f-5abd-4bab-ab90-a3cf4b843ba8" xml:space="preserve">
          <source>Data held in a client-side cache is generally considered to be outside of
the auspices of the service providing the data to the client; a service
cannot directly force a client to add or remove information from a
client-side cache.</source>
          <target state="new">Data held in a client-side cache is generally considered to be outside of
the auspices of the service providing the data to the client; a service
cannot directly force a client to add or remove information from a
client-side cache.</target>
        </trans-unit>
        <trans-unit id="8fe141cc-5dad-42fd-8d2e-1818a6f49c00" xml:space="preserve">
          <source>This means that it is possible for a client that uses
a poorly configured cache (for example, expiration policies are not
properly implemented) to continue using outdated information cached
locally when the information in the original data source has changed.</source>
          <target state="new">This means that it is possible for a client that uses
a poorly configured cache (for example, expiration policies are not
properly implemented) to continue using outdated information cached
locally when the information in the original data source has changed.</target>
        </trans-unit>
        <trans-unit id="f5041676-3bdb-48dd-9eea-75e4f776c648" xml:space="preserve">
          <source>If you are building a web application that serves data over an HTTP
connection, you can implicitly force a web client (such as a browser or
web proxy) to fetch the most recent information if a resource is updated
by changing the URI of that resource.</source>
          <target state="new">If you are building a web application that serves data over an HTTP
connection, you can implicitly force a web client (such as a browser or
web proxy) to fetch the most recent information if a resource is updated
by changing the URI of that resource.</target>
        </trans-unit>
        <trans-unit id="1c3e1ef3-610c-4f98-9ed4-b4cc93089840" xml:space="preserve">
          <source>Web clients typically use the URI
of a resource as the key in the client-side cache, so changing the URI
causes the web client to ignore any previously cached version of a
resource and fetch the new version instead.</source>
          <target state="new">Web clients typically use the URI
of a resource as the key in the client-side cache, so changing the URI
causes the web client to ignore any previously cached version of a
resource and fetch the new version instead.</target>
        </trans-unit>
        <trans-unit id="fe775aa5-5a73-409f-b0b9-6f3f756c92f0" xml:space="preserve">
          <source>Caches are often designed to be shared by multiple instances of an
application.</source>
          <target state="new">Caches are often designed to be shared by multiple instances of an
application.</target>
        </trans-unit>
        <trans-unit id="fdff4718-f088-4482-bb83-e76b321d4253" xml:space="preserve">
          <source>Each application instance can read and modify data in
the cache.</source>
          <target state="new">Each application instance can read and modify data in
the cache.</target>
        </trans-unit>
        <trans-unit id="b4582c64-cdb9-4390-8c06-048afacc2a5c" xml:space="preserve">
          <source>Consequently, the same concurrency issues that arise with
any shared data store are also applicable to a cache.</source>
          <target state="new">Consequently, the same concurrency issues that arise with
any shared data store are also applicable to a cache.</target>
        </trans-unit>
        <trans-unit id="dc44145f-b6ac-4939-a0f4-0bb3bd7b5f49" xml:space="preserve">
          <source>In a situation
where an application needs to modify data held in the cache, you may
need to ensure that updates made by one instance of the application
do not blindly overwrite the changes made by another instance.</source>
          <target state="new">In a situation
where an application needs to modify data held in the cache, you may
need to ensure that updates made by one instance of the application
do not blindly overwrite the changes made by another instance.</target>
        </trans-unit>
        <trans-unit id="eeb23bb4-1502-415f-a9e5-eaf06aa7ce88" xml:space="preserve">
          <source>Depending on the nature of the data and the likelihood of collisions,
you can adopt one of two approaches to concurrency:</source>
          <target state="new">Depending on the nature of the data and the likelihood of collisions,
you can adopt one of two approaches to concurrency:</target>
        </trans-unit>
        <trans-unit id="d9acd5a3-3b90-41d1-a9d3-08f7bc8fe07c" xml:space="preserve">
          <source><bpt id="f2ab5722-268b-4703-bc07-11ecacef20ce">&lt;strong&gt;</bpt>Optimistic.<ept id="f2ab5722-268b-4703-bc07-11ecacef20ce">&lt;/strong&gt;</ept> The application checks to see whether the data in the cache has changed since it was retrieved, immediately prior to updating it.</source>
          <target state="new"><bpt id="f2ab5722-268b-4703-bc07-11ecacef20ce">&lt;strong&gt;</bpt>Optimistic.<ept id="f2ab5722-268b-4703-bc07-11ecacef20ce">&lt;/strong&gt;</ept> The application checks to see whether the data in the cache has changed since it was retrieved, immediately prior to updating it.</target>
        </trans-unit>
        <trans-unit id="0c876b92-d332-469e-9a94-41ec6ebcdb7f" xml:space="preserve">
          <source>If the data is still the same, the change can be made.</source>
          <target state="new">If the data is still the same, the change can be made.</target>
        </trans-unit>
        <trans-unit id="e3effa76-26b4-413e-b6d7-b35a5ab99350" xml:space="preserve">
          <source>Otherwise, the application has to decide whether to update it (the business logic that drives this decision will be application-specific).</source>
          <target state="new">Otherwise, the application has to decide whether to update it (the business logic that drives this decision will be application-specific).</target>
        </trans-unit>
        <trans-unit id="05444f51-1504-4edd-9525-cd0029b18a8c" xml:space="preserve">
          <source>This approach is suitable for situations where updates are infrequent, or where collisions are unlikely to occur.</source>
          <target state="new">This approach is suitable for situations where updates are infrequent, or where collisions are unlikely to occur.</target>
        </trans-unit>
        <trans-unit id="05d5291a-5403-4e60-b2d0-bd1adea68b6d" xml:space="preserve">
          <source><bpt id="0a307d7f-23d3-4f50-a4a8-df4c6c473fc1">&lt;strong&gt;</bpt>Pessimistic.<ept id="0a307d7f-23d3-4f50-a4a8-df4c6c473fc1">&lt;/strong&gt;</ept> The application locks the data in the cache when it retrieves it to prevent another instance from changing the data.</source>
          <target state="new"><bpt id="0a307d7f-23d3-4f50-a4a8-df4c6c473fc1">&lt;strong&gt;</bpt>Pessimistic.<ept id="0a307d7f-23d3-4f50-a4a8-df4c6c473fc1">&lt;/strong&gt;</ept> The application locks the data in the cache when it retrieves it to prevent another instance from changing the data.</target>
        </trans-unit>
        <trans-unit id="0060291c-38d5-4ddf-b473-436f3d690fdd" xml:space="preserve">
          <source>This process ensures that collisions cannot occur, but could block other instances that need to process the same data.</source>
          <target state="new">This process ensures that collisions cannot occur, but could block other instances that need to process the same data.</target>
        </trans-unit>
        <trans-unit id="7cf8ae1c-8da4-42e6-88eb-373b6bd6fb74" xml:space="preserve">
          <source>Pessimistic concurrency can affect the scalability of the solution and should be used only for short-lived operations.</source>
          <target state="new">Pessimistic concurrency can affect the scalability of the solution and should be used only for short-lived operations.</target>
        </trans-unit>
        <trans-unit id="83dea973-9e28-4067-852c-ce2f120fc5be" xml:space="preserve">
          <source>This approach may be appropriate for situations where collisions are more likely, especially if an application updates multiple items in the cache and must ensure that these changes are applied consistently.</source>
          <target state="new">This approach may be appropriate for situations where collisions are more likely, especially if an application updates multiple items in the cache and must ensure that these changes are applied consistently.</target>
        </trans-unit>
        <trans-unit id="ee745bb8-04bd-4109-ad51-bf2065fa8569" xml:space="preserve">
          <source>A cache should not be the primary repository of data; this is the role
of the original data store from which the cache is populated.</source>
          <target state="new">A cache should not be the primary repository of data; this is the role
of the original data store from which the cache is populated.</target>
        </trans-unit>
        <trans-unit id="3b6bf139-a1d6-4ca4-81f3-52514c1b5e7e" xml:space="preserve">
          <source>The
original data store is responsible for ensuring the persistence of the
data.</source>
          <target state="new">The
original data store is responsible for ensuring the persistence of the
data.</target>
        </trans-unit>
        <trans-unit id="f711bf6c-8a42-4f1a-829c-d315ce68a310" xml:space="preserve">
          <source>Be careful not to introduce critical dependencies on the availability
of a shared cache service into your solutions.</source>
          <target state="new">Be careful not to introduce critical dependencies on the availability
of a shared cache service into your solutions.</target>
        </trans-unit>
        <trans-unit id="22d41011-031e-4bd0-9066-794993aee1a1" xml:space="preserve">
          <source>An application should be
able to continue functioning if the service providing the shared cache
is unavailable; the application should not hang or fail while waiting
for the cache service to resume.</source>
          <target state="new">An application should be
able to continue functioning if the service providing the shared cache
is unavailable; the application should not hang or fail while waiting
for the cache service to resume.</target>
        </trans-unit>
        <trans-unit id="f5ba103a-0a29-4961-be70-12fed3f0360d" xml:space="preserve">
          <source>Therefore, the application must be
prepared to detect the availability of the cache service and fall back
to the original data store if the cache is inaccessible.</source>
          <target state="new">Therefore, the application must be
prepared to detect the availability of the cache service and fall back
to the original data store if the cache is inaccessible.</target>
        </trans-unit>
        <trans-unit id="12a8284b-5bc6-49c6-9a68-c532db2d486a" xml:space="preserve">
          <source>The
<bpt id="c674a23e-ba4a-43a2-a232-76434bae66b8">&lt;linkText&gt;</bpt>Circuit-Breaker Pattern<ept id="c674a23e-ba4a-43a2-a232-76434bae66b8">&lt;/linkText&gt;</ept><bpt id="c674a23e-ba4a-43a2-a232-76434bae66b8">&lt;title&gt;</bpt><ept id="c674a23e-ba4a-43a2-a232-76434bae66b8">&lt;/title&gt;</ept> is useful for handling this scenario.</source>
          <target state="new">The
<bpt id="c674a23e-ba4a-43a2-a232-76434bae66b8">&lt;linkText&gt;</bpt>Circuit-Breaker Pattern<ept id="c674a23e-ba4a-43a2-a232-76434bae66b8">&lt;/linkText&gt;</ept><bpt id="c674a23e-ba4a-43a2-a232-76434bae66b8">&lt;title&gt;</bpt><ept id="c674a23e-ba4a-43a2-a232-76434bae66b8">&lt;/title&gt;</ept> is useful for handling this scenario.</target>
        </trans-unit>
        <trans-unit id="9a71e4e9-3881-4b84-9a86-5067a457ffb6" xml:space="preserve">
          <source>The
service providing the cache can be recovered, and once it becomes
available the cache can be repopulated as data is read form the
original data store, following a strategy such as the <bpt id="e9cab053-f20e-46ec-a816-ea79896c5f78">&lt;linkText&gt;</bpt>Cache-Aside pattern<ept id="e9cab053-f20e-46ec-a816-ea79896c5f78">&lt;/linkText&gt;</ept><bpt id="e9cab053-f20e-46ec-a816-ea79896c5f78">&lt;title&gt;</bpt><ept id="e9cab053-f20e-46ec-a816-ea79896c5f78">&lt;/title&gt;</ept>.</source>
          <target state="new">The
service providing the cache can be recovered, and once it becomes
available the cache can be repopulated as data is read form the
original data store, following a strategy such as the <bpt id="e9cab053-f20e-46ec-a816-ea79896c5f78">&lt;linkText&gt;</bpt>Cache-Aside pattern<ept id="e9cab053-f20e-46ec-a816-ea79896c5f78">&lt;/linkText&gt;</ept><bpt id="e9cab053-f20e-46ec-a816-ea79896c5f78">&lt;title&gt;</bpt><ept id="e9cab053-f20e-46ec-a816-ea79896c5f78">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="d225c5f2-07ea-4104-86dc-6221ea857330" xml:space="preserve">
          <source>However, falling back to the original data store if the cache is
temporarily unavailable may have a scalability impact on the system;
while the data store is being recovered the original data store
could be swamped with requests for data, resulting in timeouts and
failed connections.</source>
          <target state="new">However, falling back to the original data store if the cache is
temporarily unavailable may have a scalability impact on the system;
while the data store is being recovered the original data store
could be swamped with requests for data, resulting in timeouts and
failed connections.</target>
        </trans-unit>
        <trans-unit id="08f2b0c4-d30f-4ca8-a636-a9fd7760c70d" xml:space="preserve">
          <source>A strategy that you should consider is to
implement a local, private cache in each instance of an application
together with the shared cache that all application instances
access.</source>
          <target state="new">A strategy that you should consider is to
implement a local, private cache in each instance of an application
together with the shared cache that all application instances
access.</target>
        </trans-unit>
        <trans-unit id="309428d1-4834-4b25-a9bb-ddd56c968c32" xml:space="preserve">
          <source>When the application retrieves an item, it can check first
in its local cache, then the shared cache, and finally the original
data store.</source>
          <target state="new">When the application retrieves an item, it can check first
in its local cache, then the shared cache, and finally the original
data store.</target>
        </trans-unit>
        <trans-unit id="ee85c14c-91de-4ad9-b441-f00c3cfce83d" xml:space="preserve">
          <source>The local cache can be populated using the data in the
shared cache, or the database if the shared cache is unavailable.</source>
          <target state="new">The local cache can be populated using the data in the
shared cache, or the database if the shared cache is unavailable.</target>
        </trans-unit>
        <trans-unit id="3d5002ed-78c6-4027-8281-36117d94baae" xml:space="preserve">
          <source>This approach requires careful configuration to prevent the local
cache becoming too stale with respect to the shared cache, but it
acts as a buffer if the shared cache is unreachable.</source>
          <target state="new">This approach requires careful configuration to prevent the local
cache becoming too stale with respect to the shared cache, but it
acts as a buffer if the shared cache is unreachable.</target>
        </trans-unit>
        <trans-unit id="9ef22b3c-2648-490d-b8ca-d9b0cab59eed" xml:space="preserve">
          <source>Figure 3
shows this structure.</source>
          <target state="new">Figure 3
shows this structure.</target>
        </trans-unit>
        <trans-unit id="3a2a856f-e5e4-4581-8520-f7b54c3990e7" xml:space="preserve">
          <source><bpt id="e07489bc-b7e0-4d5f-8612-e5234a3ba83f">&lt;linkText&gt;</bpt>Using a local, private cache with a shared cache_<ept id="e07489bc-b7e0-4d5f-8612-e5234a3ba83f">&lt;/linkText&gt;</ept>
<bpt id="6dc295c5-308e-4547-9a4c-d3809acd0def">&lt;em&gt;</bpt>Figure 3: Using a local, private cache with a shared cache<ept id="6dc295c5-308e-4547-9a4c-d3809acd0def">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="e07489bc-b7e0-4d5f-8612-e5234a3ba83f">&lt;linkText&gt;</bpt>Using a local, private cache with a shared cache_<ept id="e07489bc-b7e0-4d5f-8612-e5234a3ba83f">&lt;/linkText&gt;</ept>
<bpt id="6dc295c5-308e-4547-9a4c-d3809acd0def">&lt;em&gt;</bpt>Figure 3: Using a local, private cache with a shared cache<ept id="6dc295c5-308e-4547-9a4c-d3809acd0def">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8904d86e-aed8-462d-8451-d6b7d23d25dd" xml:space="preserve">
          <source>To support large caches that hold relatively long-lived data, some
cache services provide a high-availability option that implements
automatic failover if the cache becomes unavailable.</source>
          <target state="new">To support large caches that hold relatively long-lived data, some
cache services provide a high-availability option that implements
automatic failover if the cache becomes unavailable.</target>
        </trans-unit>
        <trans-unit id="4efed929-41c9-48f2-a44d-d91eba514480" xml:space="preserve">
          <source>This approach
typically involves replicating the cached data stored on a primary
cache server to a secondary cache server, and switching to the
secondary server if the primary server fails or connectivity is
lost.</source>
          <target state="new">This approach
typically involves replicating the cached data stored on a primary
cache server to a secondary cache server, and switching to the
secondary server if the primary server fails or connectivity is
lost.</target>
        </trans-unit>
        <trans-unit id="f6e91a35-a6b1-49c1-94a1-bc5653aa4449" xml:space="preserve">
          <source>To reduce the latency associated with writing to multiple
destinations, when data is written to the cache on the primary
server, the replication to the secondary server may occur
asynchronously.</source>
          <target state="new">To reduce the latency associated with writing to multiple
destinations, when data is written to the cache on the primary
server, the replication to the secondary server may occur
asynchronously.</target>
        </trans-unit>
        <trans-unit id="7a3bcab4-4826-406d-815e-02e0df0c98a9" xml:space="preserve">
          <source>This approach leads to the possibility that some
cached information may be lost in the event of a failure, but the
proportion of this data should be small compared to the overall
size of the cache.</source>
          <target state="new">This approach leads to the possibility that some
cached information may be lost in the event of a failure, but the
proportion of this data should be small compared to the overall
size of the cache.</target>
        </trans-unit>
        <trans-unit id="a332c9c3-cf24-4c36-ade6-152bb6e3d1ec" xml:space="preserve">
          <source>If a shared cache is large, it may be beneficial to partition the
cached data across nodes to reduce the chances of contention and
improve scalability.</source>
          <target state="new">If a shared cache is large, it may be beneficial to partition the
cached data across nodes to reduce the chances of contention and
improve scalability.</target>
        </trans-unit>
        <trans-unit id="d629b611-bf13-4637-9bdc-67daf49b562c" xml:space="preserve">
          <source>Many shared caches support the ability to
dynamically add (and remove) nodes and rebalance the data across
partitions.</source>
          <target state="new">Many shared caches support the ability to
dynamically add (and remove) nodes and rebalance the data across
partitions.</target>
        </trans-unit>
        <trans-unit id="c5450a0a-5552-47a0-b490-72166891323a" xml:space="preserve">
          <source>This approach may involve clustering whereby the
collection of nodes is presented to client applications as a
seamless, single cache, but internally the data is dispersed
between nodes following some predefined distribution strategy
which balances the load evenly.</source>
          <target state="new">This approach may involve clustering whereby the
collection of nodes is presented to client applications as a
seamless, single cache, but internally the data is dispersed
between nodes following some predefined distribution strategy
which balances the load evenly.</target>
        </trans-unit>
        <trans-unit id="a07fd3b4-0c69-4e9b-b8c2-c4bc0c800f6a" xml:space="preserve">
          <source>The <bpt id="8f3b77e6-0d9d-411e-90eb-ce6cd561f45a">&lt;linkText&gt;</bpt>Data Partitioning Guidance document<ept id="8f3b77e6-0d9d-411e-90eb-ce6cd561f45a">&lt;/linkText&gt;</ept><bpt id="8f3b77e6-0d9d-411e-90eb-ce6cd561f45a">&lt;title&gt;</bpt><ept id="8f3b77e6-0d9d-411e-90eb-ce6cd561f45a">&lt;/title&gt;</ept>
on the Microsoft website provides more information about possible
partitioning strategies.</source>
          <target state="new">The <bpt id="8f3b77e6-0d9d-411e-90eb-ce6cd561f45a">&lt;linkText&gt;</bpt>Data Partitioning Guidance document<ept id="8f3b77e6-0d9d-411e-90eb-ce6cd561f45a">&lt;/linkText&gt;</ept><bpt id="8f3b77e6-0d9d-411e-90eb-ce6cd561f45a">&lt;title&gt;</bpt><ept id="8f3b77e6-0d9d-411e-90eb-ce6cd561f45a">&lt;/title&gt;</ept>
on the Microsoft website provides more information about possible
partitioning strategies.</target>
        </trans-unit>
        <trans-unit id="2df0f821-6f48-496d-ad37-f29fa25f9eca" xml:space="preserve">
          <source>Clustering can also add further availability of the cache; if a
node fails, the remainder of the cache is still accessible.</source>
          <target state="new">Clustering can also add further availability of the cache; if a
node fails, the remainder of the cache is still accessible.</target>
        </trans-unit>
        <trans-unit id="523dffb8-fe06-46f5-bb5f-c063121d1492" xml:space="preserve">
          <source>Clustering is frequently used in conjunction with replication
and failover; each node can be replicated and the replica
quickly brought online if the node fails.</source>
          <target state="new">Clustering is frequently used in conjunction with replication
and failover; each node can be replicated and the replica
quickly brought online if the node fails.</target>
        </trans-unit>
        <trans-unit id="725c926c-26f1-4612-b13f-86610c1a8392" xml:space="preserve">
          <source>Many read and write operations will likely involve single data
values or objects.</source>
          <target state="new">Many read and write operations will likely involve single data
values or objects.</target>
        </trans-unit>
        <trans-unit id="a1a0bd25-cfbd-46cb-add4-e18124c581c7" xml:space="preserve">
          <source>However, there may be times when it is
necessary to store or retrieve large volumes of data quickly.</source>
          <target state="new">However, there may be times when it is
necessary to store or retrieve large volumes of data quickly.</target>
        </trans-unit>
        <trans-unit id="3208c276-5e0d-4f87-9056-fc1937ce17b0" xml:space="preserve">
          <source>For example, seeding a cache could involve writing hundreds or
thousands of items to the cache, or an application may need to
retrieve a large number of related items from the cache as
part of the same request.</source>
          <target state="new">For example, seeding a cache could involve writing hundreds or
thousands of items to the cache, or an application may need to
retrieve a large number of related items from the cache as
part of the same request.</target>
        </trans-unit>
        <trans-unit id="125ff63c-b9b9-4ff6-8769-165c210f3a67" xml:space="preserve">
          <source>Many large-scale caches provide batch
operations for these purposes, enabling a client application to
package up a large volume of items into a single request and
reducing the overhead associated with performing a large number
of small requests.</source>
          <target state="new">Many large-scale caches provide batch
operations for these purposes, enabling a client application to
package up a large volume of items into a single request and
reducing the overhead associated with performing a large number
of small requests.</target>
        </trans-unit>
        <trans-unit id="db38ba6b-140d-4de3-84cc-00bea2c20eaa" xml:space="preserve">
          <source>The Cache-Aside pattern depends on the instance of the application
populating the cache having access to the most recent and
consistent version of the data.</source>
          <target state="new">The Cache-Aside pattern depends on the instance of the application
populating the cache having access to the most recent and
consistent version of the data.</target>
        </trans-unit>
        <trans-unit id="b6cbc43e-0872-4bc0-8826-361b60efa406" xml:space="preserve">
          <source>In a system that implements
eventual consistency (such as a replicated data store) this may
not be the case.</source>
          <target state="new">In a system that implements
eventual consistency (such as a replicated data store) this may
not be the case.</target>
        </trans-unit>
        <trans-unit id="82ad843b-3b07-43d2-aae8-87f4d06e489b" xml:space="preserve">
          <source>One instance of an application could modify a
data item and invalidate the cached version of that item.</source>
          <target state="new">One instance of an application could modify a
data item and invalidate the cached version of that item.</target>
        </trans-unit>
        <trans-unit id="82f85324-c582-4597-9062-2996251d9d81" xml:space="preserve">
          <source>Another
instance of the application may attempt to read this item from
cache which causes a cache-miss, so it reads the data from the
data store and adds it to the cache.</source>
          <target state="new">Another
instance of the application may attempt to read this item from
cache which causes a cache-miss, so it reads the data from the
data store and adds it to the cache.</target>
        </trans-unit>
        <trans-unit id="1187eac2-f760-4870-8307-79ad2d0e8f7a" xml:space="preserve">
          <source>However, if the data store
has not been fully synchronized with the other replicas the
application instance could read and populate the cache with the
old value.</source>
          <target state="new">However, if the data store
has not been fully synchronized with the other replicas the
application instance could read and populate the cache with the
old value.</target>
        </trans-unit>
        <trans-unit id="0260a3b6-5d91-4970-9992-296a7a3cf6ab" xml:space="preserve">
          <source>For more information about handling data consistency, see the
Data Consistency Guidance page on the Microsoft website.</source>
          <target state="new">For more information about handling data consistency, see the
Data Consistency Guidance page on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="073212ae-9b3d-4f75-bb91-9a9cd4dda2bf" xml:space="preserve">
          <source>Irrespective of the cache service you use, you should consider
how to protect the data held in the cache from unauthorized
access.</source>
          <target state="new">Irrespective of the cache service you use, you should consider
how to protect the data held in the cache from unauthorized
access.</target>
        </trans-unit>
        <trans-unit id="23621cac-4963-4db7-b69e-4a260190d0bf" xml:space="preserve">
          <source>There are two main concerns:</source>
          <target state="new">There are two main concerns:</target>
        </trans-unit>
        <trans-unit id="a35ce7d0-a098-49b9-b2ba-317b77cd025d" xml:space="preserve">
          <source>The privacy of the data in the cache.</source>
          <target state="new">The privacy of the data in the cache.</target>
        </trans-unit>
        <trans-unit id="0e4b5adf-cf02-4d96-a742-e26e99cab474" xml:space="preserve">
          <source>The privacy of data as it flows between the cache and the
application using the cache.</source>
          <target state="new">The privacy of data as it flows between the cache and the
application using the cache.</target>
        </trans-unit>
        <trans-unit id="a93977dd-5ba8-494d-99e6-94ebc3b7390e" xml:space="preserve">
          <source>To protect data in the cache, the cache service may implement
an authentication mechanism requiring that applications
identify themselves, and an authorization scheme that
specifies which identities can access data in the cache, and
the operations (read and write) that these identities are
allowed to perform.</source>
          <target state="new">To protect data in the cache, the cache service may implement
an authentication mechanism requiring that applications
identify themselves, and an authorization scheme that
specifies which identities can access data in the cache, and
the operations (read and write) that these identities are
allowed to perform.</target>
        </trans-unit>
        <trans-unit id="94a74aef-8861-4195-a417-7695efa57d07" xml:space="preserve">
          <source>To reduce overheads associated with
reading and writing data, once an identity has been granted
write and/or read access to the cache, that identity can use
any data in the cache.</source>
          <target state="new">To reduce overheads associated with
reading and writing data, once an identity has been granted
write and/or read access to the cache, that identity can use
any data in the cache.</target>
        </trans-unit>
        <trans-unit id="52959fc0-7297-40c1-b96f-e86f16ee4fbe" xml:space="preserve">
          <source>If you need to restrict access to
subsets of the cached data, you can:</source>
          <target state="new">If you need to restrict access to
subsets of the cached data, you can:</target>
        </trans-unit>
        <trans-unit id="14b68b96-0901-4602-b35d-bdd1631c8a88" xml:space="preserve">
          <source>Split the cache into partitions (by using different cache
servers) and only grant access to identities for the
partitions that they should be allowed to use, or</source>
          <target state="new">Split the cache into partitions (by using different cache
servers) and only grant access to identities for the
partitions that they should be allowed to use, or</target>
        </trans-unit>
        <trans-unit id="82a7adc5-1441-4f7e-9d5b-6baa6655bbcc" xml:space="preserve">
          <source>Encrypt the data in each subset by using different keys
and only provide the encryption keys to identities that
should have access to each subset.</source>
          <target state="new">Encrypt the data in each subset by using different keys
and only provide the encryption keys to identities that
should have access to each subset.</target>
        </trans-unit>
        <trans-unit id="b709d839-284f-4fa3-8eb9-9ce2f043c0fb" xml:space="preserve">
          <source>A client application
may still be able to retrieve all of the data in the cache,
but it will only be able to decrypt the data for which it
has the keys.</source>
          <target state="new">A client application
may still be able to retrieve all of the data in the cache,
but it will only be able to decrypt the data for which it
has the keys.</target>
        </trans-unit>
        <trans-unit id="f06bf32f-3346-4a3a-ac94-23690da0c3a7" xml:space="preserve">
          <source>To protect the data as it flows into and out of the cache you
are dependent on the security features provided by the network
infrastructure that client applications use to connect to the
cache.</source>
          <target state="new">To protect the data as it flows into and out of the cache you
are dependent on the security features provided by the network
infrastructure that client applications use to connect to the
cache.</target>
        </trans-unit>
        <trans-unit id="0b27e8c6-17b4-4a98-a2cf-1dcb97dab94a" xml:space="preserve">
          <source>If the cache is implemented using an on-site server
within the same organization that hosts the client applications,
then the isolation of the network itself may not require you to
take any additional steps.</source>
          <target state="new">If the cache is implemented using an on-site server
within the same organization that hosts the client applications,
then the isolation of the network itself may not require you to
take any additional steps.</target>
        </trans-unit>
        <trans-unit id="b8736dea-a1ac-4c0c-85a9-a6c6c605ded1" xml:space="preserve">
          <source>If the cache is located remotely and
requires a TCP or HTTP connection over a public network (such
as the Internet), you should consider implementing SSL.</source>
          <target state="new">If the cache is located remotely and
requires a TCP or HTTP connection over a public network (such
as the Internet), you should consider implementing SSL.</target>
        </trans-unit>
        <trans-unit id="8733a57b-4189-46a2-8713-e4062d42ecf9" xml:space="preserve">
          <source>Azure provides the Azure Redis Cache.</source>
          <target state="new">Azure provides the Azure Redis Cache.</target>
        </trans-unit>
        <trans-unit id="ea926a2d-0a25-44a7-9853-ab7253badb3e" xml:space="preserve">
          <source>This is an implementation
of the open source Redis Cache that runs as a service in an
Azure datacenter.</source>
          <target state="new">This is an implementation
of the open source Redis Cache that runs as a service in an
Azure datacenter.</target>
        </trans-unit>
        <trans-unit id="9abd2031-7869-4736-b20d-dd9179b83da8" xml:space="preserve">
          <source>It provides a caching service that can be
accessed from any Azure application, whether the application
is implemented as a cloud service, a website, or inside an
Azure virtual machine.</source>
          <target state="new">It provides a caching service that can be
accessed from any Azure application, whether the application
is implemented as a cloud service, a website, or inside an
Azure virtual machine.</target>
        </trans-unit>
        <trans-unit id="24342835-2437-48a5-aabc-642e03f08ac8" xml:space="preserve">
          <source>Caches can be shared by client
applications that have the appropriate access key.</source>
          <target state="new">Caches can be shared by client
applications that have the appropriate access key.</target>
        </trans-unit>
        <trans-unit id="8680f242-dc81-407d-82f0-2c84e2b63074" xml:space="preserve">
          <source>Redis is a high-performance caching solution that provides
availability, scalability and security.</source>
          <target state="new">Redis is a high-performance caching solution that provides
availability, scalability and security.</target>
        </trans-unit>
        <trans-unit id="8389b7e8-4f56-4156-ad22-8c34d9d995b7" xml:space="preserve">
          <source>It typically runs
as a service spread across one or more dedicated machines and
attempts to store as much information as it can in memory to
ensure fast access.</source>
          <target state="new">It typically runs
as a service spread across one or more dedicated machines and
attempts to store as much information as it can in memory to
ensure fast access.</target>
        </trans-unit>
        <trans-unit id="85855da3-805b-450b-b6dd-783e28c63c3b" xml:space="preserve">
          <source>This architecture is intended to provide
low latency and high throughput by reducing the need to
perform slow I/O operations.</source>
          <target state="new">This architecture is intended to provide
low latency and high throughput by reducing the need to
perform slow I/O operations.</target>
        </trans-unit>
        <trans-unit id="0ada7707-0907-427b-9449-9fd8ce677e50" xml:space="preserve">
          <source>The Azure Redis cache is compatible with many of the various
APIs used by client applications.</source>
          <target state="new">The Azure Redis cache is compatible with many of the various
APIs used by client applications.</target>
        </trans-unit>
        <trans-unit id="e818aa15-ef58-4172-a8c1-4cb43371f1d2" xml:space="preserve">
          <source>If you have existing
applications that already use Redis running on-premises, the
Azure Redis cache provides a quick migration path to caching
in the cloud.</source>
          <target state="new">If you have existing
applications that already use Redis running on-premises, the
Azure Redis cache provides a quick migration path to caching
in the cloud.</target>
        </trans-unit>
        <trans-unit id="1cb83bcc-c360-4d14-9fa8-1522b1148179" xml:space="preserve">
          <source>Azure also provides the Managed Cache Service.</source>
          <target state="new">Azure also provides the Managed Cache Service.</target>
        </trans-unit>
        <trans-unit id="78f94723-2a8b-43d2-bd61-512801b2b4de" xml:space="preserve">
          <source>This
  service is based on the Microsoft AppFabric Cache engine.</source>
          <target state="new">This
  service is based on the Microsoft AppFabric Cache engine.</target>
        </trans-unit>
        <trans-unit id="a194da76-b935-431a-971f-030bf8bce3f0" xml:space="preserve">
          <source>It
  enables you to create a distributed cache that can be shared
  by loosely-coupled applications.</source>
          <target state="new">It
  enables you to create a distributed cache that can be shared
  by loosely-coupled applications.</target>
        </trans-unit>
        <trans-unit id="91ac4d50-64a2-4bba-948c-3aa310ab1945" xml:space="preserve">
          <source>The cache is hosted on
  high-performance servers running in an Azure datacenter.</source>
          <target state="new">The cache is hosted on
  high-performance servers running in an Azure datacenter.</target>
        </trans-unit>
        <trans-unit id="3b286bcd-44c4-4f22-8bc4-0a1558966d95" xml:space="preserve">
          <source>However, this option is no longer recommended and is only
  provided to support existing applications that have been built
  to use it.</source>
          <target state="new">However, this option is no longer recommended and is only
  provided to support existing applications that have been built
  to use it.</target>
        </trans-unit>
        <trans-unit id="449a1e63-14b4-4fa0-94a0-53d85d861adb" xml:space="preserve">
          <source>For all new development, use the Azure Redis
  Cache instead.</source>
          <target state="new">For all new development, use the Azure Redis
  Cache instead.</target>
        </trans-unit>
        <trans-unit id="23d74fb2-fb42-48d9-8e1a-dc7b4c45d133" xml:space="preserve">
          <source>Additionally, Azure supports in-role caching.</source>
          <target state="new">Additionally, Azure supports in-role caching.</target>
        </trans-unit>
        <trans-unit id="765b6c61-8337-4f4e-a68e-9ae428d629d0" xml:space="preserve">
          <source>This feature
  enables you to create a cache specific to a cloud service.</source>
          <target state="new">This feature
  enables you to create a cache specific to a cloud service.</target>
        </trans-unit>
        <trans-unit id="5384bce8-53fa-41e3-9c87-9d8e6cdb7496" xml:space="preserve">
          <source>The cache is hosted by instances of a web or worker role, and
  can only be accessed by roles operating as part of the same
  cloud service deployment unit (a deployment unit is the set
  of role instances deployed as a cloud service to a specific
  region).</source>
          <target state="new">The cache is hosted by instances of a web or worker role, and
  can only be accessed by roles operating as part of the same
  cloud service deployment unit (a deployment unit is the set
  of role instances deployed as a cloud service to a specific
  region).</target>
        </trans-unit>
        <trans-unit id="70fcd2d4-ef6a-4808-9d0b-930e69638938" xml:space="preserve">
          <source>The cache is clustered, and all instances of the
  role within the same deployment unit that host the cache
  become part of the same cache cluster.</source>
          <target state="new">The cache is clustered, and all instances of the
  role within the same deployment unit that host the cache
  become part of the same cache cluster.</target>
        </trans-unit>
        <trans-unit id="5b64e608-4dd4-4dd0-b5af-f882eaf8c067" xml:space="preserve">
          <source>Existing applications
  that use in-role caching can continue to do so, but
  migrating to the Azure Redis Cache may bring more benefits.</source>
          <target state="new">Existing applications
  that use in-role caching can continue to do so, but
  migrating to the Azure Redis Cache may bring more benefits.</target>
        </trans-unit>
        <trans-unit id="36e3c537-79d4-48ad-9db1-6d1598496987" xml:space="preserve">
          <source>For more information about whether to use Azure Redis Cache
  or an in-role cache, visit the page
  <bpt id="7c8610db-49b2-41ea-9b81-53ec644c3e59">&lt;linkText&gt;</bpt>Which Azure Cache offering is right for me?<ept id="7c8610db-49b2-41ea-9b81-53ec644c3e59">&lt;/linkText&gt;</ept><bpt id="7c8610db-49b2-41ea-9b81-53ec644c3e59">&lt;title&gt;</bpt><ept id="7c8610db-49b2-41ea-9b81-53ec644c3e59">&lt;/title&gt;</ept> on the Microsoft website.</source>
          <target state="new">For more information about whether to use Azure Redis Cache
  or an in-role cache, visit the page
  <bpt id="7c8610db-49b2-41ea-9b81-53ec644c3e59">&lt;linkText&gt;</bpt>Which Azure Cache offering is right for me?<ept id="7c8610db-49b2-41ea-9b81-53ec644c3e59">&lt;/linkText&gt;</ept><bpt id="7c8610db-49b2-41ea-9b81-53ec644c3e59">&lt;title&gt;</bpt><ept id="7c8610db-49b2-41ea-9b81-53ec644c3e59">&lt;/title&gt;</ept> on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="ce5f6fb3-5b47-4954-ace9-f6e3e4597de8" xml:space="preserve">
          <source>Redis is more than a simple cache server; it provides a distributed in-memory
database with an extensive command set that supports many common scenarios,
as described in the section Use-cases for Redis caching later in this
document.</source>
          <target state="new">Redis is more than a simple cache server; it provides a distributed in-memory
database with an extensive command set that supports many common scenarios,
as described in the section Use-cases for Redis caching later in this
document.</target>
        </trans-unit>
        <trans-unit id="999be3df-7eb8-4763-94da-de412f050147" xml:space="preserve">
          <source>This section summarizes some of the key features that Redis
provides.</source>
          <target state="new">This section summarizes some of the key features that Redis
provides.</target>
        </trans-unit>
        <trans-unit id="892ddbf4-5d5f-4622-b8b6-730123f64b2f" xml:space="preserve">
          <source>Redis supports both reading and writing operations.</source>
          <target state="new">Redis supports both reading and writing operations.</target>
        </trans-unit>
        <trans-unit id="055f085e-59cd-481a-85c8-13da8ad04ac7" xml:space="preserve">
          <source>Unlike many caches (which should be considered as transitory data stores), writes can be protected from system failure either by being stored in periodically in a local snapshot file or in an append-only log file.</source>
          <target state="new">Unlike many caches (which should be considered as transitory data stores), writes can be protected from system failure either by being stored in periodically in a local snapshot file or in an append-only log file.</target>
        </trans-unit>
        <trans-unit id="78f3d1a3-9d26-4ba4-8732-bf1ac20880e9" xml:space="preserve">
          <source>All writes are asynchronous and do not block clients reading and writing data.</source>
          <target state="new">All writes are asynchronous and do not block clients reading and writing data.</target>
        </trans-unit>
        <trans-unit id="6670429f-9f3c-4f38-a2ac-4d676efde713" xml:space="preserve">
          <source>When Redis starts running, it reads the data from the snapshot or log file and uses it to construct the in-memory cache.</source>
          <target state="new">When Redis starts running, it reads the data from the snapshot or log file and uses it to construct the in-memory cache.</target>
        </trans-unit>
        <trans-unit id="75088d67-094a-4d75-9769-275c59a20c2c" xml:space="preserve">
          <source>For more information, see <bpt id="94ed0155-f5cb-472f-b45a-4847ff6865b3">&lt;linkText&gt;</bpt>Redis Persistence<ept id="94ed0155-f5cb-472f-b45a-4847ff6865b3">&lt;/linkText&gt;</ept><bpt id="94ed0155-f5cb-472f-b45a-4847ff6865b3">&lt;title&gt;</bpt><ept id="94ed0155-f5cb-472f-b45a-4847ff6865b3">&lt;/title&gt;</ept> on the Redis website.</source>
          <target state="new">For more information, see <bpt id="94ed0155-f5cb-472f-b45a-4847ff6865b3">&lt;linkText&gt;</bpt>Redis Persistence<ept id="94ed0155-f5cb-472f-b45a-4847ff6865b3">&lt;/linkText&gt;</ept><bpt id="94ed0155-f5cb-472f-b45a-4847ff6865b3">&lt;title&gt;</bpt><ept id="94ed0155-f5cb-472f-b45a-4847ff6865b3">&lt;/title&gt;</ept> on the Redis website.</target>
        </trans-unit>
        <trans-unit id="91247360-9c99-454a-a50c-a150f2f203ff" xml:space="preserve">
          <source>Redis does not guarantee that all writes will be saved in the event
  of a catastrophic failure, but at worst you should only lose a few-seconds
  worth of data.</source>
          <target state="new">Redis does not guarantee that all writes will be saved in the event
  of a catastrophic failure, but at worst you should only lose a few-seconds
  worth of data.</target>
        </trans-unit>
        <trans-unit id="3397cca2-ae30-4bc6-b797-a1dd0e471bcc" xml:space="preserve">
          <source>Remember that a cache is not intended to act as an
  authoritative data source, and it is the responsibility of the applications
  using the cache to ensure that critical data is saved successfully to an
  appropriate data store.</source>
          <target state="new">Remember that a cache is not intended to act as an
  authoritative data source, and it is the responsibility of the applications
  using the cache to ensure that critical data is saved successfully to an
  appropriate data store.</target>
        </trans-unit>
        <trans-unit id="03f7608b-c450-4392-b31e-aaab6617b7b0" xml:space="preserve">
          <source>For more information, see the Cache-Aside pattern.</source>
          <target state="new">For more information, see the Cache-Aside pattern.</target>
        </trans-unit>
        <trans-unit id="f3098a77-77be-4356-aef2-da3bc577eef8" xml:space="preserve">
          <source>Redis is a key-value store, where values can contain simple types or complex data structures such as hashes, lists, and sets.</source>
          <target state="new">Redis is a key-value store, where values can contain simple types or complex data structures such as hashes, lists, and sets.</target>
        </trans-unit>
        <trans-unit id="1a191c3c-4623-450e-85f6-15bc8c120a62" xml:space="preserve">
          <source>It supports a set of atomic operations on these data types.</source>
          <target state="new">It supports a set of atomic operations on these data types.</target>
        </trans-unit>
        <trans-unit id="6ee0ea4b-a375-4c23-8794-adccbd2c9d99" xml:space="preserve">
          <source>Keys can be permanent or tagged with a limited time to live at which point the key and its corresponding value are automatically removed from the cache.</source>
          <target state="new">Keys can be permanent or tagged with a limited time to live at which point the key and its corresponding value are automatically removed from the cache.</target>
        </trans-unit>
        <trans-unit id="cb95a65e-c88e-4cf7-9e9d-863d5e2ccbc8" xml:space="preserve">
          <source>For more information about redis keys and values, visit the page <bpt id="41d87660-97f3-4d30-ac23-f51317457139">&lt;linkText&gt;</bpt>An Introduction to Redis data types and abstractions<ept id="41d87660-97f3-4d30-ac23-f51317457139">&lt;/linkText&gt;</ept><bpt id="41d87660-97f3-4d30-ac23-f51317457139">&lt;title&gt;</bpt><ept id="41d87660-97f3-4d30-ac23-f51317457139">&lt;/title&gt;</ept> on the Redis website.</source>
          <target state="new">For more information about redis keys and values, visit the page <bpt id="41d87660-97f3-4d30-ac23-f51317457139">&lt;linkText&gt;</bpt>An Introduction to Redis data types and abstractions<ept id="41d87660-97f3-4d30-ac23-f51317457139">&lt;/linkText&gt;</ept><bpt id="41d87660-97f3-4d30-ac23-f51317457139">&lt;title&gt;</bpt><ept id="41d87660-97f3-4d30-ac23-f51317457139">&lt;/title&gt;</ept> on the Redis website.</target>
        </trans-unit>
        <trans-unit id="5108491c-abfc-4f8f-8323-eb4e4056300e" xml:space="preserve">
          <source>Redis supports master/subordinate replication to help ensure availability and maintain throughput; write operations to a Redis master node are replicated to one or more subordinate nodes, and read operations can be served by the master or any of the subordinates.</source>
          <target state="new">Redis supports master/subordinate replication to help ensure availability and maintain throughput; write operations to a Redis master node are replicated to one or more subordinate nodes, and read operations can be served by the master or any of the subordinates.</target>
        </trans-unit>
        <trans-unit id="2731dbf8-2e88-4b09-a790-6dfed74b11cd" xml:space="preserve">
          <source>In the event of a network partition, subordinates can continue to serve data and then transparently resynchronize with the master when the connection is reestablished.</source>
          <target state="new">In the event of a network partition, subordinates can continue to serve data and then transparently resynchronize with the master when the connection is reestablished.</target>
        </trans-unit>
        <trans-unit id="06699508-13eb-4b75-9d0f-847ce13d86cf" xml:space="preserve">
          <source>For further details, visit the <bpt id="58cb4e3c-cfcd-4a1c-a36a-b62c11eb8320">&lt;linkText&gt;</bpt>Replication<ept id="58cb4e3c-cfcd-4a1c-a36a-b62c11eb8320">&lt;/linkText&gt;</ept><bpt id="58cb4e3c-cfcd-4a1c-a36a-b62c11eb8320">&lt;title&gt;</bpt><ept id="58cb4e3c-cfcd-4a1c-a36a-b62c11eb8320">&lt;/title&gt;</ept> page on the Redis website.</source>
          <target state="new">For further details, visit the <bpt id="58cb4e3c-cfcd-4a1c-a36a-b62c11eb8320">&lt;linkText&gt;</bpt>Replication<ept id="58cb4e3c-cfcd-4a1c-a36a-b62c11eb8320">&lt;/linkText&gt;</ept><bpt id="58cb4e3c-cfcd-4a1c-a36a-b62c11eb8320">&lt;title&gt;</bpt><ept id="58cb4e3c-cfcd-4a1c-a36a-b62c11eb8320">&lt;/title&gt;</ept> page on the Redis website.</target>
        </trans-unit>
        <trans-unit id="bd759b26-6647-43a8-b83d-83e550f6e582" xml:space="preserve">
          <source>Redis also provides clustering, enabling you to transparently partition data into shards across servers and spread the load.</source>
          <target state="new">Redis also provides clustering, enabling you to transparently partition data into shards across servers and spread the load.</target>
        </trans-unit>
        <trans-unit id="b46ff523-e19f-4aef-9ea2-8518bd19d8ea" xml:space="preserve">
          <source>This feature improves scalability as new Redis servers can be added and the data repartitioned as the size of the cache increases.</source>
          <target state="new">This feature improves scalability as new Redis servers can be added and the data repartitioned as the size of the cache increases.</target>
        </trans-unit>
        <trans-unit id="a0089303-aa66-4447-9081-e16eeda16230" xml:space="preserve">
          <source>Furthermore, each server in the cluster can be replicated by using master/subordinate replication to ensure availability across each node in the cluster.</source>
          <target state="new">Furthermore, each server in the cluster can be replicated by using master/subordinate replication to ensure availability across each node in the cluster.</target>
        </trans-unit>
        <trans-unit id="2aa7e483-0e0c-4210-8d36-02714d0160d1" xml:space="preserve">
          <source>For more information about clustering and sharding, visit the <bpt id="2224e1c8-1303-4a96-95f6-cdd91b199d5e">&lt;linkText&gt;</bpt>Redis Cluster Tutorial page<ept id="2224e1c8-1303-4a96-95f6-cdd91b199d5e">&lt;/linkText&gt;</ept><bpt id="2224e1c8-1303-4a96-95f6-cdd91b199d5e">&lt;title&gt;</bpt><ept id="2224e1c8-1303-4a96-95f6-cdd91b199d5e">&lt;/title&gt;</ept> on the Redis website.</source>
          <target state="new">For more information about clustering and sharding, visit the <bpt id="2224e1c8-1303-4a96-95f6-cdd91b199d5e">&lt;linkText&gt;</bpt>Redis Cluster Tutorial page<ept id="2224e1c8-1303-4a96-95f6-cdd91b199d5e">&lt;/linkText&gt;</ept><bpt id="2224e1c8-1303-4a96-95f6-cdd91b199d5e">&lt;title&gt;</bpt><ept id="2224e1c8-1303-4a96-95f6-cdd91b199d5e">&lt;/title&gt;</ept> on the Redis website.</target>
        </trans-unit>
        <trans-unit id="b9420311-4196-4b30-91bb-35a499470412" xml:space="preserve">
          <source>Azure Redis Cache does not currently support clustering.</source>
          <target state="new">Azure Redis Cache does not currently support clustering.</target>
        </trans-unit>
        <trans-unit id="d86c01ef-10c0-492c-af09-617d06f099ff" xml:space="preserve">
          <source>If you wish to create a Redis cluster you can build your own custom Redis server.</source>
          <target state="new">If you wish to create a Redis cluster you can build your own custom Redis server.</target>
        </trans-unit>
        <trans-unit id="8e884701-0f05-4279-a235-7e30afda14c9" xml:space="preserve">
          <source>For more information, see the section Building a Custom Redis Cache later in this document.</source>
          <target state="new">For more information, see the section Building a Custom Redis Cache later in this document.</target>
        </trans-unit>
        <trans-unit id="a6350600-3636-4bbe-9c23-35e87e1debc8" xml:space="preserve">
          <source>A Redis cache has a finite size depending on the resources available on the host computer.</source>
          <target state="new">A Redis cache has a finite size depending on the resources available on the host computer.</target>
        </trans-unit>
        <trans-unit id="ffd4add9-e8be-445e-8149-a986ba3d7b90" xml:space="preserve">
          <source>When you configure a Redis server, you can specify the maximum amount of memory it can use.</source>
          <target state="new">When you configure a Redis server, you can specify the maximum amount of memory it can use.</target>
        </trans-unit>
        <trans-unit id="6c32fbca-2e1a-4448-b4bb-31b85d21ac12" xml:space="preserve">
          <source>A key in a Redis cache can be configured with an expiration time, after which it is automatically removed from the cache.</source>
          <target state="new">A key in a Redis cache can be configured with an expiration time, after which it is automatically removed from the cache.</target>
        </trans-unit>
        <trans-unit id="655f8099-7a80-4218-b947-4f374b707817" xml:space="preserve">
          <source>This feature can help prevent the in-memory cache from being filled with old or stale data.</source>
          <target state="new">This feature can help prevent the in-memory cache from being filled with old or stale data.</target>
        </trans-unit>
        <trans-unit id="e5fd902c-cb57-443c-b1e3-b09594bc4b8f" xml:space="preserve">
          <source>As memory fills up, Redis can automatically evict keys and their values by following a number of policies.</source>
          <target state="new">As memory fills up, Redis can automatically evict keys and their values by following a number of policies.</target>
        </trans-unit>
        <trans-unit id="21c1e759-e9cc-4317-a0ee-c16d4f944883" xml:space="preserve">
          <source>The default is LRU (least recently used), but you can also select other policies such as evicting keys at random, or turning off eviction altogether (in which case, attempts to add items to the cache will fail if it is full).</source>
          <target state="new">The default is LRU (least recently used), but you can also select other policies such as evicting keys at random, or turning off eviction altogether (in which case, attempts to add items to the cache will fail if it is full).</target>
        </trans-unit>
        <trans-unit id="34beacd6-aede-4940-9855-add2eee3da9d" xml:space="preserve">
          <source>The page <bpt id="506b7da3-0f14-4c18-884e-93ec5ec3fae2">&lt;linkText&gt;</bpt>Using Redis as an LRU Cache<ept id="506b7da3-0f14-4c18-884e-93ec5ec3fae2">&lt;/linkText&gt;</ept><bpt id="506b7da3-0f14-4c18-884e-93ec5ec3fae2">&lt;title&gt;</bpt><ept id="506b7da3-0f14-4c18-884e-93ec5ec3fae2">&lt;/title&gt;</ept> provides more information.</source>
          <target state="new">The page <bpt id="506b7da3-0f14-4c18-884e-93ec5ec3fae2">&lt;linkText&gt;</bpt>Using Redis as an LRU Cache<ept id="506b7da3-0f14-4c18-884e-93ec5ec3fae2">&lt;/linkText&gt;</ept><bpt id="506b7da3-0f14-4c18-884e-93ec5ec3fae2">&lt;title&gt;</bpt><ept id="506b7da3-0f14-4c18-884e-93ec5ec3fae2">&lt;/title&gt;</ept> provides more information.</target>
        </trans-unit>
        <trans-unit id="21e78d51-9a6f-4c38-8f59-8725051da32e" xml:space="preserve">
          <source>Redis enables a client application to submit a series of operations that read and write data in the cache as an atomic transaction.</source>
          <target state="new">Redis enables a client application to submit a series of operations that read and write data in the cache as an atomic transaction.</target>
        </trans-unit>
        <trans-unit id="04b290ad-732e-4cfc-b684-1916313448e4" xml:space="preserve">
          <source>All of the commands in the transaction are guaranteed to be executed sequentially and no commands issued by other concurrent clients will be interwoven between them.</source>
          <target state="new">All of the commands in the transaction are guaranteed to be executed sequentially and no commands issued by other concurrent clients will be interwoven between them.</target>
        </trans-unit>
        <trans-unit id="d616836a-9b02-4c8c-9cf6-0dabe20173c2" xml:space="preserve">
          <source>However, these are not true transactions as a relational database would perform them.</source>
          <target state="new">However, these are not true transactions as a relational database would perform them.</target>
        </trans-unit>
        <trans-unit id="7c34a823-ec41-4c4c-97ca-628252617612" xml:space="preserve">
          <source>Transaction processing consists of two stages; command queuing and command execution.</source>
          <target state="new">Transaction processing consists of two stages; command queuing and command execution.</target>
        </trans-unit>
        <trans-unit id="123211f5-a82b-48a4-844a-143e9f86a2d7" xml:space="preserve">
          <source>During the command queuing stage, the commands that comprise the transaction are submitted by the client.</source>
          <target state="new">During the command queuing stage, the commands that comprise the transaction are submitted by the client.</target>
        </trans-unit>
        <trans-unit id="86535d51-14dc-484e-9659-11dd9b289a80" xml:space="preserve">
          <source>If some sort of error occurs at this point (such as a syntax error, or the wrong number of parameters) then Redis will refuse to process the entire transaction and discard it.</source>
          <target state="new">If some sort of error occurs at this point (such as a syntax error, or the wrong number of parameters) then Redis will refuse to process the entire transaction and discard it.</target>
        </trans-unit>
        <trans-unit id="a23bf595-1254-4077-b2ac-60d240890e9b" xml:space="preserve">
          <source>During the execution phase, Redis performs each queued command in sequence.</source>
          <target state="new">During the execution phase, Redis performs each queued command in sequence.</target>
        </trans-unit>
        <trans-unit id="6a762abc-3a56-400f-a443-bfdb5722b260" xml:space="preserve">
          <source>If a command fails during this phase Redis will continue with the next queued command and it does not roll back the effects of any commands that have already been executed.</source>
          <target state="new">If a command fails during this phase Redis will continue with the next queued command and it does not roll back the effects of any commands that have already been executed.</target>
        </trans-unit>
        <trans-unit id="2f5b409b-d309-431f-942a-a3d6647f0ceb" xml:space="preserve">
          <source>This simplified form of transaction helps to maintain performance and avoid performance problems caused by contention.</source>
          <target state="new">This simplified form of transaction helps to maintain performance and avoid performance problems caused by contention.</target>
        </trans-unit>
        <trans-unit id="d980f8be-ad66-4645-9d79-a3af910f3f6d" xml:space="preserve">
          <source>Redis does implement a form of optimistic locking to assist in maintaining consistency.</source>
          <target state="new">Redis does implement a form of optimistic locking to assist in maintaining consistency.</target>
        </trans-unit>
        <trans-unit id="ff0b013c-1a39-4316-9628-83a92f58bf67" xml:space="preserve">
          <source>For detailed information about transactions and locking with Redis, visit the <bpt id="f3bfdef2-d38d-413f-af9e-638f74635250">&lt;linkText&gt;</bpt>Transactions page<ept id="f3bfdef2-d38d-413f-af9e-638f74635250">&lt;/linkText&gt;</ept><bpt id="f3bfdef2-d38d-413f-af9e-638f74635250">&lt;title&gt;</bpt><ept id="f3bfdef2-d38d-413f-af9e-638f74635250">&lt;/title&gt;</ept> on the Redis website.</source>
          <target state="new">For detailed information about transactions and locking with Redis, visit the <bpt id="f3bfdef2-d38d-413f-af9e-638f74635250">&lt;linkText&gt;</bpt>Transactions page<ept id="f3bfdef2-d38d-413f-af9e-638f74635250">&lt;/linkText&gt;</ept><bpt id="f3bfdef2-d38d-413f-af9e-638f74635250">&lt;title&gt;</bpt><ept id="f3bfdef2-d38d-413f-af9e-638f74635250">&lt;/title&gt;</ept> on the Redis website.</target>
        </trans-unit>
        <trans-unit id="7be07817-4dd9-4a74-8766-9cd3eb9e27c5" xml:space="preserve">
          <source>Redis also supports non-transactional batching of requests.</source>
          <target state="new">Redis also supports non-transactional batching of requests.</target>
        </trans-unit>
        <trans-unit id="0b485152-f1ac-4f72-b7d0-80406e2998f3" xml:space="preserve">
          <source>The Redis protocol that clients use to send commands to a Redis server enables a client to send a series of operations as part of the same request.</source>
          <target state="new">The Redis protocol that clients use to send commands to a Redis server enables a client to send a series of operations as part of the same request.</target>
        </trans-unit>
        <trans-unit id="057be8da-222a-4971-9269-f0deb789e66e" xml:space="preserve">
          <source>This can help to reduce packet fragmentation on the network.</source>
          <target state="new">This can help to reduce packet fragmentation on the network.</target>
        </trans-unit>
        <trans-unit id="f280fa63-2eb3-4ce2-a56b-7236fdd93ad1" xml:space="preserve">
          <source>When the batch is processed, each command is performed.</source>
          <target state="new">When the batch is processed, each command is performed.</target>
        </trans-unit>
        <trans-unit id="da5f3853-dc4b-482d-9a2e-bf65acd58c1b" xml:space="preserve">
          <source>Unlike a transaction, if any of these commands are malformed they will be rejected but the remaining commands will be performed.</source>
          <target state="new">Unlike a transaction, if any of these commands are malformed they will be rejected but the remaining commands will be performed.</target>
        </trans-unit>
        <trans-unit id="b0967bbc-6867-4adc-9525-1b4e551e27fc" xml:space="preserve">
          <source>There is also no guarantee on the order in which the commands in the batch will be processed.</source>
          <target state="new">There is also no guarantee on the order in which the commands in the batch will be processed.</target>
        </trans-unit>
        <trans-unit id="465332d9-d510-449f-a581-44704bccbcee" xml:space="preserve">
          <source>Redis is focused purely on providing fast access to data, and is designed to run inside a trusted environment and be accessed only by trusted clients.</source>
          <target state="new">Redis is focused purely on providing fast access to data, and is designed to run inside a trusted environment and be accessed only by trusted clients.</target>
        </trans-unit>
        <trans-unit id="7a8f7081-246d-4f34-b0dc-36cff1257db8" xml:space="preserve">
          <source>Redis only supports a limited security model based on password authentication (it is possible to remove authentication completely, although this is not recommended).</source>
          <target state="new">Redis only supports a limited security model based on password authentication (it is possible to remove authentication completely, although this is not recommended).</target>
        </trans-unit>
        <trans-unit id="8a95ce08-6122-47ec-9f25-60904e227557" xml:space="preserve">
          <source>All authenticated clients share the same global password, and have access to the same resources.</source>
          <target state="new">All authenticated clients share the same global password, and have access to the same resources.</target>
        </trans-unit>
        <trans-unit id="c6418508-2356-4864-8e42-749181342310" xml:space="preserve">
          <source>If you need more comprehensive login security, you must implement your own security layer in front of the Redis server and all client requests should pass through this additional layer; Redis should not be directly exposed to untrusted or unauthenticated clients.</source>
          <target state="new">If you need more comprehensive login security, you must implement your own security layer in front of the Redis server and all client requests should pass through this additional layer; Redis should not be directly exposed to untrusted or unauthenticated clients.</target>
        </trans-unit>
        <trans-unit id="80c69987-d3bb-4c3b-b23a-773985df5fd9" xml:space="preserve">
          <source>You can restrict access to commands by disabling them or renaming them (and only providing privileged clients with the new names).</source>
          <target state="new">You can restrict access to commands by disabling them or renaming them (and only providing privileged clients with the new names).</target>
        </trans-unit>
        <trans-unit id="73827242-8119-4305-85f7-376888f7dbe8" xml:space="preserve">
          <source>Redis does not directly support any form of data encryption, so all encoding must be performed by client applications.</source>
          <target state="new">Redis does not directly support any form of data encryption, so all encoding must be performed by client applications.</target>
        </trans-unit>
        <trans-unit id="0ac0b0f8-5e0f-422c-98bf-3739cb880637" xml:space="preserve">
          <source>Additionally, Redis does not provide any form of transport security, so if you need to protect data as it flows across the network you should implement an SSL proxy.</source>
          <target state="new">Additionally, Redis does not provide any form of transport security, so if you need to protect data as it flows across the network you should implement an SSL proxy.</target>
        </trans-unit>
        <trans-unit id="f0fcdfda-70ea-42bc-8c50-701d34aa8d34" xml:space="preserve">
          <source>For more information, visit the <bpt id="d06df84e-9f27-497f-9dd6-b4fc22194d75">&lt;linkText&gt;</bpt>Redis Security<ept id="d06df84e-9f27-497f-9dd6-b4fc22194d75">&lt;/linkText&gt;</ept><bpt id="d06df84e-9f27-497f-9dd6-b4fc22194d75">&lt;title&gt;</bpt><ept id="d06df84e-9f27-497f-9dd6-b4fc22194d75">&lt;/title&gt;</ept> page on the Redis website.</source>
          <target state="new">For more information, visit the <bpt id="d06df84e-9f27-497f-9dd6-b4fc22194d75">&lt;linkText&gt;</bpt>Redis Security<ept id="d06df84e-9f27-497f-9dd6-b4fc22194d75">&lt;/linkText&gt;</ept><bpt id="d06df84e-9f27-497f-9dd6-b4fc22194d75">&lt;title&gt;</bpt><ept id="d06df84e-9f27-497f-9dd6-b4fc22194d75">&lt;/title&gt;</ept> page on the Redis website.</target>
        </trans-unit>
        <trans-unit id="1c7bd44f-cf4b-4733-a185-c3ebea2ec56c" xml:space="preserve">
          <source>Azure Redis Cache provides its own security layer through which clients connect; the underlying Redis
  servers are not exposed to the public network.</source>
          <target state="new">Azure Redis Cache provides its own security layer through which clients connect; the underlying Redis
  servers are not exposed to the public network.</target>
        </trans-unit>
        <trans-unit id="bcf5fa30-9658-40bd-ac57-a365b1f5ce15" xml:space="preserve">
          <source>The Azure Redis Cache provides access to Redis servers running on servers hosted at an Azure datacenter; it acts as a façade that provides access control and security.</source>
          <target state="new">The Azure Redis Cache provides access to Redis servers running on servers hosted at an Azure datacenter; it acts as a façade that provides access control and security.</target>
        </trans-unit>
        <trans-unit id="34232364-d269-4382-b800-8f5ffdcb8617" xml:space="preserve">
          <source>You can provision a cache by using the Azure Management portal.</source>
          <target state="new">You can provision a cache by using the Azure Management portal.</target>
        </trans-unit>
        <trans-unit id="a5a19bcd-3c7c-4048-a7cc-7288a21ff6f6" xml:space="preserve">
          <source>The portal provides a number of predefined configurations, ranging from a 53GB cache running as a dedicated service that supports SSL communications (for privacy) and master/subordinate replication with an SLA of 99.9% availability, down to a 250MB cache without replication (no availability guarantees) running on shared hardware.</source>
          <target state="new">The portal provides a number of predefined configurations, ranging from a 53GB cache running as a dedicated service that supports SSL communications (for privacy) and master/subordinate replication with an SLA of 99.9% availability, down to a 250MB cache without replication (no availability guarantees) running on shared hardware.</target>
        </trans-unit>
        <trans-unit id="71417e25-b93a-41f8-9560-d93425908b53" xml:space="preserve">
          <source>Using the Azure Management portal you can also configure the eviction policy of the cache, and control access to the cache by adding users to the roles provided; Owner, Contributor, Reader.</source>
          <target state="new">Using the Azure Management portal you can also configure the eviction policy of the cache, and control access to the cache by adding users to the roles provided; Owner, Contributor, Reader.</target>
        </trans-unit>
        <trans-unit id="d6b96128-03a8-49ae-a20c-020bbc321880" xml:space="preserve">
          <source>These roles define the operations that members can perform.</source>
          <target state="new">These roles define the operations that members can perform.</target>
        </trans-unit>
        <trans-unit id="3448c8b0-10d9-47a5-ae46-8ed9dff9bd31" xml:space="preserve">
          <source>For example, members of the Owner role have complete control over the cache (including security) and its contents, members of the Contributor role can read and write information in the cache, and members of the Reader role can only retrieve data from the cache.</source>
          <target state="new">For example, members of the Owner role have complete control over the cache (including security) and its contents, members of the Contributor role can read and write information in the cache, and members of the Reader role can only retrieve data from the cache.</target>
        </trans-unit>
        <trans-unit id="c4aeee5e-9af3-4ec7-b57f-5402e7fc7b03" xml:space="preserve">
          <source>Most administrative tasks are performed through the Azure Management portal, and for this reason many of the administrative commands available in the standard version of Redis are not available, including the ability to modify the configuration programmatically, shutdown the Redis server, configure additional slaves, or forcibly save data to disk.</source>
          <target state="new">Most administrative tasks are performed through the Azure Management portal, and for this reason many of the administrative commands available in the standard version of Redis are not available, including the ability to modify the configuration programmatically, shutdown the Redis server, configure additional slaves, or forcibly save data to disk.</target>
        </trans-unit>
        <trans-unit id="8fecb840-94eb-4baf-8f55-efc15b0e4148" xml:space="preserve">
          <source>The Azure management portal includes a convenient graphical display that enables you to monitor the performance of the cache.</source>
          <target state="new">The Azure management portal includes a convenient graphical display that enables you to monitor the performance of the cache.</target>
        </trans-unit>
        <trans-unit id="c6bef0e1-8e44-4554-8f1a-de0a0ad55c58" xml:space="preserve">
          <source>For example, you can view the number of connections being made, the number of requests performed, the volume of reads and writes, and the number of cache hits versus cache misses.</source>
          <target state="new">For example, you can view the number of connections being made, the number of requests performed, the volume of reads and writes, and the number of cache hits versus cache misses.</target>
        </trans-unit>
        <trans-unit id="1c324b60-7697-485e-a0b0-0172ba80fbbb" xml:space="preserve">
          <source>Using this information you can determine the effectiveness of the cache and if necessary switch to a different configuration or change the eviction policy.</source>
          <target state="new">Using this information you can determine the effectiveness of the cache and if necessary switch to a different configuration or change the eviction policy.</target>
        </trans-unit>
        <trans-unit id="255d7e5a-85f9-4a0a-847c-9cd818fc16f4" xml:space="preserve">
          <source>Additionally, you can create alerts that send email messages to an administrator if one or more critical metrics fall outside of an expected range.</source>
          <target state="new">Additionally, you can create alerts that send email messages to an administrator if one or more critical metrics fall outside of an expected range.</target>
        </trans-unit>
        <trans-unit id="facd94c6-f987-4b28-ab43-a073cdccb0f1" xml:space="preserve">
          <source>For example, if the number of cache misses exceeds a specified value in the last hour, an administrator could be alerted as the cache may be too small or data may be being evicted too quickly.</source>
          <target state="new">For example, if the number of cache misses exceeds a specified value in the last hour, an administrator could be alerted as the cache may be too small or data may be being evicted too quickly.</target>
        </trans-unit>
        <trans-unit id="1c744bc5-f60f-4eda-983e-5050e05aa2b0" xml:space="preserve">
          <source>You can also monitor CPU, memory, and network usage for the cache.</source>
          <target state="new">You can also monitor CPU, memory, and network usage for the cache.</target>
        </trans-unit>
        <trans-unit id="b33d718f-7210-47b5-9f5d-8249747c2cef" xml:space="preserve">
          <source>Azure Redis Cache is intended to act purely as a cache rather than a database.</source>
          <target state="new">Azure Redis Cache is intended to act purely as a cache rather than a database.</target>
        </trans-unit>
        <trans-unit id="aa2df0bf-7f9a-492a-8ca4-d1a1f0d1aedb" xml:space="preserve">
          <source>As a result, it does not currently implement Redis persistence.</source>
          <target state="new">As a result, it does not currently implement Redis persistence.</target>
        </trans-unit>
        <trans-unit id="53d7e937-0a16-4a57-b76c-ea45de5b5f3c" xml:space="preserve">
          <source>For further information and examples showing how to create and configure an Azure Redis Cache, visit the page <bpt id="10bd106a-6e83-40b2-8114-a3de511bbdf9">&lt;linkText&gt;</bpt>Lap around Azure Redis Cache<ept id="10bd106a-6e83-40b2-8114-a3de511bbdf9">&lt;/linkText&gt;</ept><bpt id="10bd106a-6e83-40b2-8114-a3de511bbdf9">&lt;title&gt;</bpt><ept id="10bd106a-6e83-40b2-8114-a3de511bbdf9">&lt;/title&gt;</ept> on the Azure blog.</source>
          <target state="new">For further information and examples showing how to create and configure an Azure Redis Cache, visit the page <bpt id="10bd106a-6e83-40b2-8114-a3de511bbdf9">&lt;linkText&gt;</bpt>Lap around Azure Redis Cache<ept id="10bd106a-6e83-40b2-8114-a3de511bbdf9">&lt;/linkText&gt;</ept><bpt id="10bd106a-6e83-40b2-8114-a3de511bbdf9">&lt;title&gt;</bpt><ept id="10bd106a-6e83-40b2-8114-a3de511bbdf9">&lt;/title&gt;</ept> on the Azure blog.</target>
        </trans-unit>
        <trans-unit id="b6703cae-b32c-4325-a99e-44e55ecdc475" xml:space="preserve">
          <source>If you building ASP.NET web applications that run by using Azure web roles, you can save session state information and HTML output in an Azure Redis Cache.</source>
          <target state="new">If you building ASP.NET web applications that run by using Azure web roles, you can save session state information and HTML output in an Azure Redis Cache.</target>
        </trans-unit>
        <trans-unit id="dbd9a572-0ce6-41d2-b8a0-a2d5cf5f64ce" xml:space="preserve">
          <source>The Session State Provider for Azure Redis Cache enables you to share session information between different instances of an ASP.NET web application, and is very useful in web farm situations where client-server affinity is not available and caching session data in-memory would not be appropriate.</source>
          <target state="new">The Session State Provider for Azure Redis Cache enables you to share session information between different instances of an ASP.NET web application, and is very useful in web farm situations where client-server affinity is not available and caching session data in-memory would not be appropriate.</target>
        </trans-unit>
        <trans-unit id="cb897aef-7ed0-4a92-a607-d85a92d49a79" xml:space="preserve">
          <source>Using the Session State Provider with Azure Redis Cache delivers several benefits, including:</source>
          <target state="new">Using the Session State Provider with Azure Redis Cache delivers several benefits, including:</target>
        </trans-unit>
        <trans-unit id="603e7b55-5fff-4713-8d70-d86f41116ad7" xml:space="preserve">
          <source>It can share session state amongst a large number of instances of an ASP.NET web application, providing improved scalability,</source>
          <target state="new">It can share session state amongst a large number of instances of an ASP.NET web application, providing improved scalability,</target>
        </trans-unit>
        <trans-unit id="32544e97-9834-4c64-ace0-6e4d9c04fd49" xml:space="preserve">
          <source>It supports controlled, concurrent access to the same session state data for multiple readers and a single writer, and</source>
          <target state="new">It supports controlled, concurrent access to the same session state data for multiple readers and a single writer, and</target>
        </trans-unit>
        <trans-unit id="a33feb18-35c7-4b7d-904b-1272765a1b96" xml:space="preserve">
          <source>It can use compression to save memory and improve network performance.</source>
          <target state="new">It can use compression to save memory and improve network performance.</target>
        </trans-unit>
        <trans-unit id="3d482287-cc5b-40c2-9731-b5d1667b8c46" xml:space="preserve">
          <source>For more information visit the <bpt id="72fbd81d-ce48-412c-a924-439c4c769887">&lt;linkText&gt;</bpt>ASP.NET Session State Provider for Azure Redis Cache<ept id="72fbd81d-ce48-412c-a924-439c4c769887">&lt;/linkText&gt;</ept><bpt id="72fbd81d-ce48-412c-a924-439c4c769887">&lt;title&gt;</bpt><ept id="72fbd81d-ce48-412c-a924-439c4c769887">&lt;/title&gt;</ept> page on the Microsoft website.</source>
          <target state="new">For more information visit the <bpt id="72fbd81d-ce48-412c-a924-439c4c769887">&lt;linkText&gt;</bpt>ASP.NET Session State Provider for Azure Redis Cache<ept id="72fbd81d-ce48-412c-a924-439c4c769887">&lt;/linkText&gt;</ept><bpt id="72fbd81d-ce48-412c-a924-439c4c769887">&lt;title&gt;</bpt><ept id="72fbd81d-ce48-412c-a924-439c4c769887">&lt;/title&gt;</ept> page on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="77f67120-73e8-438a-99a9-2c689f3eac85" xml:space="preserve">
          <source>Do not use the Session State Provider for Azure Redis Cache for ASP.NET applications that run outside of the Azure environment.</source>
          <target state="new">Do not use the Session State Provider for Azure Redis Cache for ASP.NET applications that run outside of the Azure environment.</target>
        </trans-unit>
        <trans-unit id="a9d8da57-fc42-48d0-99c9-049e25054a61" xml:space="preserve">
          <source>The latency of accessing the cache from outside of Azure can eliminate the performance benefits of caching data.</source>
          <target state="new">The latency of accessing the cache from outside of Azure can eliminate the performance benefits of caching data.</target>
        </trans-unit>
        <trans-unit id="8446ab87-df64-4e1a-879b-45f326b318ca" xml:space="preserve">
          <source>Similarly, the Output Cache Provider for Azure Redis Cache enables you to save the HTTP responses generated by an ASP.NET web application.</source>
          <target state="new">Similarly, the Output Cache Provider for Azure Redis Cache enables you to save the HTTP responses generated by an ASP.NET web application.</target>
        </trans-unit>
        <trans-unit id="0815b1f0-c74f-4b15-8839-6ec5b25c3c4e" xml:space="preserve">
          <source>Using the Output Cache Provider with Azure Redis Cache can improve the response times of applications that render complex HTML output; application instances generating similar responses can make use of the shared output fragments in the cache rather than generating this HTML output afresh.</source>
          <target state="new">Using the Output Cache Provider with Azure Redis Cache can improve the response times of applications that render complex HTML output; application instances generating similar responses can make use of the shared output fragments in the cache rather than generating this HTML output afresh.</target>
        </trans-unit>
        <trans-unit id="eb773103-442e-4131-b6f5-ce56c755eb60" xml:space="preserve">
          <source>For more information visit the <bpt id="a04274d4-91c9-4a2a-a063-ef76a1148c4e">&lt;linkText&gt;</bpt>ASP.NET Output Cache Provider for Azure Redis Cache<ept id="a04274d4-91c9-4a2a-a063-ef76a1148c4e">&lt;/linkText&gt;</ept><bpt id="a04274d4-91c9-4a2a-a063-ef76a1148c4e">&lt;title&gt;</bpt><ept id="a04274d4-91c9-4a2a-a063-ef76a1148c4e">&lt;/title&gt;</ept> page on the Microsoft website.</source>
          <target state="new">For more information visit the <bpt id="a04274d4-91c9-4a2a-a063-ef76a1148c4e">&lt;linkText&gt;</bpt>ASP.NET Output Cache Provider for Azure Redis Cache<ept id="a04274d4-91c9-4a2a-a063-ef76a1148c4e">&lt;/linkText&gt;</ept><bpt id="a04274d4-91c9-4a2a-a063-ef76a1148c4e">&lt;title&gt;</bpt><ept id="a04274d4-91c9-4a2a-a063-ef76a1148c4e">&lt;/title&gt;</ept> page on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="0291f4ac-b0a4-4314-b91d-8d448d97bb91" xml:space="preserve">
          <source>The Azure Redis cache acts as a façade to the underlying Redis servers.</source>
          <target state="new">The Azure Redis cache acts as a façade to the underlying Redis servers.</target>
        </trans-unit>
        <trans-unit id="ef551d49-4fae-47ed-8396-6aa1b331cfeb" xml:space="preserve">
          <source>Currently it supports a fixed set of configurations but does not provide for Redis clustering.</source>
          <target state="new">Currently it supports a fixed set of configurations but does not provide for Redis clustering.</target>
        </trans-unit>
        <trans-unit id="87615911-f093-40d7-bf4c-e5e79342652a" xml:space="preserve">
          <source>If you require an advanced configuration that is not covered by the Azure Redis cache (such as a cache bigger than 53GB) you can build and host your own Redis servers by using Azure virtual machines.</source>
          <target state="new">If you require an advanced configuration that is not covered by the Azure Redis cache (such as a cache bigger than 53GB) you can build and host your own Redis servers by using Azure virtual machines.</target>
        </trans-unit>
        <trans-unit id="02562130-3840-42a8-b9df-68e971791130" xml:space="preserve">
          <source>This is a potentially complex process as you may need to create several VMs to act as master and subordinate nodes if you want to implement replication.</source>
          <target state="new">This is a potentially complex process as you may need to create several VMs to act as master and subordinate nodes if you want to implement replication.</target>
        </trans-unit>
        <trans-unit id="83e4cf8b-33c2-4b77-b424-ac6f9fbb3df6" xml:space="preserve">
          <source>Furthermore, if you wish to create a cluster, then you will need multiple masters and subordinate servers; a minimal clustered, replication topology that provides a high degree of availability and scalability comprises at least 6 VMs organized as 3 pairs of master/subordinate servers (a cluster must contain at least 3 master nodes).</source>
          <target state="new">Furthermore, if you wish to create a cluster, then you will need multiple masters and subordinate servers; a minimal clustered, replication topology that provides a high degree of availability and scalability comprises at least 6 VMs organized as 3 pairs of master/subordinate servers (a cluster must contain at least 3 master nodes).</target>
        </trans-unit>
        <trans-unit id="e2e61f82-65d8-4f78-9db7-bbef4e034694" xml:space="preserve">
          <source>Each master/subordinate pair should be located close together to minimize latency, but each set of pairs can be running in different Azure datacenters located in different regions if you wish to locate cached data close to the applications that are most likely to use it.</source>
          <target state="new">Each master/subordinate pair should be located close together to minimize latency, but each set of pairs can be running in different Azure datacenters located in different regions if you wish to locate cached data close to the applications that are most likely to use it.</target>
        </trans-unit>
        <trans-unit id="3e96c5dd-c035-4287-933a-9a935f172858" xml:space="preserve">
          <source>The page <bpt id="5c7e05d4-6061-421d-a85d-93077ad0094e">&lt;linkText&gt;</bpt>Running Redis on a CentOS Linux VM in Azure<ept id="5c7e05d4-6061-421d-a85d-93077ad0094e">&lt;/linkText&gt;</ept><bpt id="5c7e05d4-6061-421d-a85d-93077ad0094e">&lt;title&gt;</bpt><ept id="5c7e05d4-6061-421d-a85d-93077ad0094e">&lt;/title&gt;</ept> on the Microsoft website walks through an example showing how to build and configure a Redis node running as an Azure VM.</source>
          <target state="new">The page <bpt id="5c7e05d4-6061-421d-a85d-93077ad0094e">&lt;linkText&gt;</bpt>Running Redis on a CentOS Linux VM in Azure<ept id="5c7e05d4-6061-421d-a85d-93077ad0094e">&lt;/linkText&gt;</ept><bpt id="5c7e05d4-6061-421d-a85d-93077ad0094e">&lt;title&gt;</bpt><ept id="5c7e05d4-6061-421d-a85d-93077ad0094e">&lt;/title&gt;</ept> on the Microsoft website walks through an example showing how to build and configure a Redis node running as an Azure VM.</target>
        </trans-unit>
        <trans-unit id="928c193b-cefe-4f6e-af64-96e0f6302318" xml:space="preserve">
          <source>Note that if you implement your own Redis cache in this way, you are responsible for monitoring, managing, and securing the service.</source>
          <target state="new">Note that if you implement your own Redis cache in this way, you are responsible for monitoring, managing, and securing the service.</target>
        </trans-unit>
        <trans-unit id="66aa8cda-6401-486c-9102-2fafb3f303b9" xml:space="preserve">
          <source>Partitioning the cache involves splitting the cache across multiple computers.</source>
          <target state="new">Partitioning the cache involves splitting the cache across multiple computers.</target>
        </trans-unit>
        <trans-unit id="a680c214-8bc9-47bb-88fe-71ed3b38f2e5" xml:space="preserve">
          <source>This structure gives you several advantages over using a single cache server, including:</source>
          <target state="new">This structure gives you several advantages over using a single cache server, including:</target>
        </trans-unit>
        <trans-unit id="aceacfbc-f6b5-419f-ae8b-102ce873faac" xml:space="preserve">
          <source>Creating a cache that is much bigger than can be stored on a single server.</source>
          <target state="new">Creating a cache that is much bigger than can be stored on a single server.</target>
        </trans-unit>
        <trans-unit id="94fa01b3-bea1-41aa-b3a7-edb9bf036d6a" xml:space="preserve">
          <source>Distributing data across servers, improving availability.</source>
          <target state="new">Distributing data across servers, improving availability.</target>
        </trans-unit>
        <trans-unit id="9d89bf7a-cf30-4eea-8fe7-41abe1e9dff5" xml:space="preserve">
          <source>If one server fails or becomes inaccessible, only the data that it holds is unavailable; the data on the remaining servers can still be accessed.</source>
          <target state="new">If one server fails or becomes inaccessible, only the data that it holds is unavailable; the data on the remaining servers can still be accessed.</target>
        </trans-unit>
        <trans-unit id="1d2716bd-ada0-43fe-8620-67ee55c5fb29" xml:space="preserve">
          <source>For a cache, this is not crucial as the cached data is only a transient copy of the data held in a database, and cached data on a server that becomes inaccessible can be cached on a different server instead.</source>
          <target state="new">For a cache, this is not crucial as the cached data is only a transient copy of the data held in a database, and cached data on a server that becomes inaccessible can be cached on a different server instead.</target>
        </trans-unit>
        <trans-unit id="648423db-6e02-4a04-9d98-de692d6f77e8" xml:space="preserve">
          <source>Spreading the load across servers, thereby improving performance and scalability.</source>
          <target state="new">Spreading the load across servers, thereby improving performance and scalability.</target>
        </trans-unit>
        <trans-unit id="2e915456-6e2f-4bef-8ad3-1e480f783ef9" xml:space="preserve">
          <source>Geolocating data close to the users that access it, reducing latency.</source>
          <target state="new">Geolocating data close to the users that access it, reducing latency.</target>
        </trans-unit>
        <trans-unit id="11f119f4-ed59-4d34-9387-09a73daa1dc1" xml:space="preserve">
          <source>For a cache, the most common form of partitioning is sharding.</source>
          <target state="new">For a cache, the most common form of partitioning is sharding.</target>
        </trans-unit>
        <trans-unit id="fd964993-6d08-4f25-9246-8fd325d52076" xml:space="preserve">
          <source>In this strategy each partition (or shard) is a Redis cache in its own right.</source>
          <target state="new">In this strategy each partition (or shard) is a Redis cache in its own right.</target>
        </trans-unit>
        <trans-unit id="86b44b00-33e5-4bb0-bfda-7a5373946c1d" xml:space="preserve">
          <source>Data is directed to a specific partition by using sharding logic, which can use a variety of approaches to distribute the data.</source>
          <target state="new">Data is directed to a specific partition by using sharding logic, which can use a variety of approaches to distribute the data.</target>
        </trans-unit>
        <trans-unit id="ac29d74a-6fe2-4385-9f4e-1e876e2cb37a" xml:space="preserve">
          <source>The <bpt id="f63d9cd0-2ef1-4418-8777-e50e63dbe826">&lt;linkText&gt;</bpt>Sharding Pattern<ept id="f63d9cd0-2ef1-4418-8777-e50e63dbe826">&lt;/linkText&gt;</ept><bpt id="f63d9cd0-2ef1-4418-8777-e50e63dbe826">&lt;title&gt;</bpt><ept id="f63d9cd0-2ef1-4418-8777-e50e63dbe826">&lt;/title&gt;</ept> provides more information on implementing sharding.</source>
          <target state="new">The <bpt id="f63d9cd0-2ef1-4418-8777-e50e63dbe826">&lt;linkText&gt;</bpt>Sharding Pattern<ept id="f63d9cd0-2ef1-4418-8777-e50e63dbe826">&lt;/linkText&gt;</ept><bpt id="f63d9cd0-2ef1-4418-8777-e50e63dbe826">&lt;title&gt;</bpt><ept id="f63d9cd0-2ef1-4418-8777-e50e63dbe826">&lt;/title&gt;</ept> provides more information on implementing sharding.</target>
        </trans-unit>
        <trans-unit id="9d922261-8f7f-4c2e-ba79-35bb2575a3af" xml:space="preserve">
          <source>To implement partitioning in a Redis cache, you can adopt one of the following approaches:</source>
          <target state="new">To implement partitioning in a Redis cache, you can adopt one of the following approaches:</target>
        </trans-unit>
        <trans-unit id="2cd8916f-602b-484e-b92f-7aea172fdd98" xml:space="preserve">
          <source><bpt id="563f9b42-52c7-4292-bb9c-7f8afcab3b80">&lt;em&gt;</bpt>Server-side query routing.<ept id="563f9b42-52c7-4292-bb9c-7f8afcab3b80">&lt;/em&gt;</ept> In this technique, a client application sends a request to any of the
Redis servers that comprise the cache (probably the closest server).</source>
          <target state="new"><bpt id="563f9b42-52c7-4292-bb9c-7f8afcab3b80">&lt;em&gt;</bpt>Server-side query routing.<ept id="563f9b42-52c7-4292-bb9c-7f8afcab3b80">&lt;/em&gt;</ept> In this technique, a client application sends a request to any of the
Redis servers that comprise the cache (probably the closest server).</target>
        </trans-unit>
        <trans-unit id="a8d7d7f9-2060-4740-9148-9c6a864606b8" xml:space="preserve">
          <source>Each Redis server stores
metadata that describes the partition that it holds, and also contains information about which
partitions are located on other servers.</source>
          <target state="new">Each Redis server stores
metadata that describes the partition that it holds, and also contains information about which
partitions are located on other servers.</target>
        </trans-unit>
        <trans-unit id="1c1cf353-3683-463c-83e6-25f4a2bd08db" xml:space="preserve">
          <source>The Redis server examines the client request and if it
can be resolved locally it will perform the requested operation, otherwise it will forward the
request on to the appropriate server.</source>
          <target state="new">The Redis server examines the client request and if it
can be resolved locally it will perform the requested operation, otherwise it will forward the
request on to the appropriate server.</target>
        </trans-unit>
        <trans-unit id="e1e49b37-89e9-48b3-9539-f209037474be" xml:space="preserve">
          <source>This model is implemented by Redis clustering, and is
described in more detail on the <bpt id="6da5f189-eb51-4bac-a9e7-bc9cc964174b">&lt;linkText&gt;</bpt>Redis cluster tutorial<ept id="6da5f189-eb51-4bac-a9e7-bc9cc964174b">&lt;/linkText&gt;</ept><bpt id="6da5f189-eb51-4bac-a9e7-bc9cc964174b">&lt;title&gt;</bpt><ept id="6da5f189-eb51-4bac-a9e7-bc9cc964174b">&lt;/title&gt;</ept> page on the Redis website.</source>
          <target state="new">This model is implemented by Redis clustering, and is
described in more detail on the <bpt id="6da5f189-eb51-4bac-a9e7-bc9cc964174b">&lt;linkText&gt;</bpt>Redis cluster tutorial<ept id="6da5f189-eb51-4bac-a9e7-bc9cc964174b">&lt;/linkText&gt;</ept><bpt id="6da5f189-eb51-4bac-a9e7-bc9cc964174b">&lt;title&gt;</bpt><ept id="6da5f189-eb51-4bac-a9e7-bc9cc964174b">&lt;/title&gt;</ept> page on the Redis website.</target>
        </trans-unit>
        <trans-unit id="1214d7c4-9614-4c3e-a8b7-f40fcc7bf7a4" xml:space="preserve">
          <source>Redis clustering
is transparent to client applications, and additional Redis servers can be added to the cluster
(and the data re-partitioned) without requiring that you reconfigure the clients.</source>
          <target state="new">Redis clustering
is transparent to client applications, and additional Redis servers can be added to the cluster
(and the data re-partitioned) without requiring that you reconfigure the clients.</target>
        </trans-unit>
        <trans-unit id="f3d3c849-12d4-4939-91f1-3420061b515a" xml:space="preserve">
          <source>Azure Redis Cache does not currently support Redis clustering.</source>
          <target state="new">Azure Redis Cache does not currently support Redis clustering.</target>
        </trans-unit>
        <trans-unit id="6f833000-febc-4270-b864-fa3ca328c088" xml:space="preserve">
          <source>If you wish to
implement this approach then you should build a custom Redis cache as described earlier.</source>
          <target state="new">If you wish to
implement this approach then you should build a custom Redis cache as described earlier.</target>
        </trans-unit>
        <trans-unit id="a3dc0a74-268e-4ac4-bcf1-422fcf58999e" xml:space="preserve">
          <source><bpt id="0506881d-a7dc-4233-abac-a519a3c9bd00">&lt;em&gt;</bpt>Client-side partitioning.<ept id="0506881d-a7dc-4233-abac-a519a3c9bd00">&lt;/em&gt;</ept> In this model, the client application contains logic (possibly in
the form of a library) that routes requests to the appropriate Redis server.</source>
          <target state="new"><bpt id="0506881d-a7dc-4233-abac-a519a3c9bd00">&lt;em&gt;</bpt>Client-side partitioning.<ept id="0506881d-a7dc-4233-abac-a519a3c9bd00">&lt;/em&gt;</ept> In this model, the client application contains logic (possibly in
the form of a library) that routes requests to the appropriate Redis server.</target>
        </trans-unit>
        <trans-unit id="22c4873d-8380-41c1-9f61-d808102126f2" xml:space="preserve">
          <source>This approach
can be used with Azure Redis Cache; create multiple Azure Redis Caches (one for each data
partition) and implement the client-side logic that routes the requests to the correct
cache.</source>
          <target state="new">This approach
can be used with Azure Redis Cache; create multiple Azure Redis Caches (one for each data
partition) and implement the client-side logic that routes the requests to the correct
cache.</target>
        </trans-unit>
        <trans-unit id="870a65ab-c6c6-4c6d-b691-089664dc8c79" xml:space="preserve">
          <source>If the partitioning scheme changes (if additional Azure Redis Caches are created,
for example), client applications may need to be reconfigured.</source>
          <target state="new">If the partitioning scheme changes (if additional Azure Redis Caches are created,
for example), client applications may need to be reconfigured.</target>
        </trans-unit>
        <trans-unit id="6a2164fe-fa78-4b38-a5fd-35db546f8ce1" xml:space="preserve">
          <source><bpt id="ea3e7af8-ff5c-4d8c-845f-0d95692a5272">&lt;em&gt;</bpt>Proxy-assisted partitioning.<ept id="ea3e7af8-ff5c-4d8c-845f-0d95692a5272">&lt;/em&gt;</ept> In this scheme, client applications send requests to an
intermediary proxy service which understands how the data is partitioned and then routes
the request to the appropriate Redis server.</source>
          <target state="new"><bpt id="ea3e7af8-ff5c-4d8c-845f-0d95692a5272">&lt;em&gt;</bpt>Proxy-assisted partitioning.<ept id="ea3e7af8-ff5c-4d8c-845f-0d95692a5272">&lt;/em&gt;</ept> In this scheme, client applications send requests to an
intermediary proxy service which understands how the data is partitioned and then routes
the request to the appropriate Redis server.</target>
        </trans-unit>
        <trans-unit id="7bd1c3de-b552-4e07-b46e-bbef3e0ffa49" xml:space="preserve">
          <source>This approach can also be used with Azure
Redis Cache; the proxy service could be implemented as an Azure cloud service.</source>
          <target state="new">This approach can also be used with Azure
Redis Cache; the proxy service could be implemented as an Azure cloud service.</target>
        </trans-unit>
        <trans-unit id="395f4aeb-e934-45f2-bcf1-03cb4bfa3d0c" xml:space="preserve">
          <source>This
approach requires an additional level of complexity to implement the service, and
requests may take longer to perform than using client-side partitioning.</source>
          <target state="new">This
approach requires an additional level of complexity to implement the service, and
requests may take longer to perform than using client-side partitioning.</target>
        </trans-unit>
        <trans-unit id="71283ba3-7959-4a87-95fb-a1d7e1a18edb" xml:space="preserve">
          <source>The page <bpt id="fb44f5f8-cce3-45be-84e8-ba678ba36b1e">&lt;linkText&gt;</bpt>Partitioning: how to split data among multiple Redis instances<ept id="fb44f5f8-cce3-45be-84e8-ba678ba36b1e">&lt;/linkText&gt;</ept><bpt id="fb44f5f8-cce3-45be-84e8-ba678ba36b1e">&lt;title&gt;</bpt><ept id="fb44f5f8-cce3-45be-84e8-ba678ba36b1e">&lt;/title&gt;</ept>
on the Redis website provides further information about implementing partitioning with Redis.</source>
          <target state="new">The page <bpt id="fb44f5f8-cce3-45be-84e8-ba678ba36b1e">&lt;linkText&gt;</bpt>Partitioning: how to split data among multiple Redis instances<ept id="fb44f5f8-cce3-45be-84e8-ba678ba36b1e">&lt;/linkText&gt;</ept><bpt id="fb44f5f8-cce3-45be-84e8-ba678ba36b1e">&lt;title&gt;</bpt><ept id="fb44f5f8-cce3-45be-84e8-ba678ba36b1e">&lt;/title&gt;</ept>
on the Redis website provides further information about implementing partitioning with Redis.</target>
        </trans-unit>
        <trans-unit id="a70aa861-7831-4acc-aa07-51e4f6356fe9" xml:space="preserve">
          <source>Redis supports client applications written in numerous programming languages.</source>
          <target state="new">Redis supports client applications written in numerous programming languages.</target>
        </trans-unit>
        <trans-unit id="3c1ca837-0955-424d-843c-a4050a9ee31e" xml:space="preserve">
          <source>If you are building new applications by using the .NET Framework, the recommended approach is to use the StackExchange.Redis client library.</source>
          <target state="new">If you are building new applications by using the .NET Framework, the recommended approach is to use the StackExchange.Redis client library.</target>
        </trans-unit>
        <trans-unit id="b1517a01-c03e-4981-b925-a96de25d1067" xml:space="preserve">
          <source>This library provides a .NET Framework object model that abstracts the details for connecting to a Redis server, sending commands, and receiving responses.</source>
          <target state="new">This library provides a .NET Framework object model that abstracts the details for connecting to a Redis server, sending commands, and receiving responses.</target>
        </trans-unit>
        <trans-unit id="71586e32-305c-47a3-8a39-3f518dd949bf" xml:space="preserve">
          <source>It is available in Visual Studio as a NuGet package.</source>
          <target state="new">It is available in Visual Studio as a NuGet package.</target>
        </trans-unit>
        <trans-unit id="854ace2b-b127-4c55-a31e-7d52d866cb10" xml:space="preserve">
          <source>You can use this same library to connect to an Azure Redis cache, or a custom Redis cache hosted on a VM.</source>
          <target state="new">You can use this same library to connect to an Azure Redis cache, or a custom Redis cache hosted on a VM.</target>
        </trans-unit>
        <trans-unit id="7f2d52f3-1c7b-4e09-b930-b974575618ed" xml:space="preserve">
          <source>To connect to a Redis server you use the static <bpt id="1a8225ca-75ff-438b-9417-e5727a749fbb">&lt;code&gt;</bpt>Connect<ept id="1a8225ca-75ff-438b-9417-e5727a749fbb">&lt;/code&gt;</ept> method of the <bpt id="617acee6-2888-4e0c-b36f-313998640325">&lt;code&gt;</bpt>ConnectionMultiplexer<ept id="617acee6-2888-4e0c-b36f-313998640325">&lt;/code&gt;</ept> class.</source>
          <target state="new">To connect to a Redis server you use the static <bpt id="1a8225ca-75ff-438b-9417-e5727a749fbb">&lt;code&gt;</bpt>Connect<ept id="1a8225ca-75ff-438b-9417-e5727a749fbb">&lt;/code&gt;</ept> method of the <bpt id="617acee6-2888-4e0c-b36f-313998640325">&lt;code&gt;</bpt>ConnectionMultiplexer<ept id="617acee6-2888-4e0c-b36f-313998640325">&lt;/code&gt;</ept> class.</target>
        </trans-unit>
        <trans-unit id="133271be-60e4-4023-9243-4e88a5dbe9de" xml:space="preserve">
          <source>The connection that this method creates is designed to be used throughout the lifetime of the client application, and the same connection can be used by multiple concurrent threads; do not reconnect and disconnect each time you perform a Redis operation as this can degrade performance.</source>
          <target state="new">The connection that this method creates is designed to be used throughout the lifetime of the client application, and the same connection can be used by multiple concurrent threads; do not reconnect and disconnect each time you perform a Redis operation as this can degrade performance.</target>
        </trans-unit>
        <trans-unit id="7c6c616a-d595-4c75-9785-08405ce461c6" xml:space="preserve">
          <source>You can specify the connection parameters, such as the address of the Redis host and the password.</source>
          <target state="new">You can specify the connection parameters, such as the address of the Redis host and the password.</target>
        </trans-unit>
        <trans-unit id="5d75fd84-aa49-4eb3-8428-25b7a7f23fa1" xml:space="preserve">
          <source>If you are using the Azure Redis cache, the password this is either the primary or secondary key generated for the Azure Redis Cache by using the Azure Management portal.</source>
          <target state="new">If you are using the Azure Redis cache, the password this is either the primary or secondary key generated for the Azure Redis Cache by using the Azure Management portal.</target>
        </trans-unit>
        <trans-unit id="1dd2bf63-4e09-4407-be41-a3f408b61199" xml:space="preserve">
          <source>After you have connected to the Redis server, you can obtain a handle on the Redis database that acts as the cache.</source>
          <target state="new">After you have connected to the Redis server, you can obtain a handle on the Redis database that acts as the cache.</target>
        </trans-unit>
        <trans-unit id="7afbed16-cd5f-4ab0-8985-93c6b658561f" xml:space="preserve">
          <source>The Redis connection provides the <bpt id="3fc0036d-c4b5-472f-b807-561f346aadb0">&lt;code&gt;</bpt>GetDatabase<ept id="3fc0036d-c4b5-472f-b807-561f346aadb0">&lt;/code&gt;</ept> method to do this.</source>
          <target state="new">The Redis connection provides the <bpt id="3fc0036d-c4b5-472f-b807-561f346aadb0">&lt;code&gt;</bpt>GetDatabase<ept id="3fc0036d-c4b5-472f-b807-561f346aadb0">&lt;/code&gt;</ept> method to do this.</target>
        </trans-unit>
        <trans-unit id="0ecf3b6f-6dda-4e7a-81c3-28b499b87f21" xml:space="preserve">
          <source>You can then retrieve items from the cache and store data in the cache by using the <bpt id="50406ab1-4d70-42b4-9422-98b86d81ba5c">&lt;code&gt;</bpt>StringGet<ept id="50406ab1-4d70-42b4-9422-98b86d81ba5c">&lt;/code&gt;</ept> and <bpt id="e062b9c1-eeb2-43e6-be6b-08496d5885f4">&lt;code&gt;</bpt>StringSet<ept id="e062b9c1-eeb2-43e6-be6b-08496d5885f4">&lt;/code&gt;</ept> methods.</source>
          <target state="new">You can then retrieve items from the cache and store data in the cache by using the <bpt id="50406ab1-4d70-42b4-9422-98b86d81ba5c">&lt;code&gt;</bpt>StringGet<ept id="50406ab1-4d70-42b4-9422-98b86d81ba5c">&lt;/code&gt;</ept> and <bpt id="e062b9c1-eeb2-43e6-be6b-08496d5885f4">&lt;code&gt;</bpt>StringSet<ept id="e062b9c1-eeb2-43e6-be6b-08496d5885f4">&lt;/code&gt;</ept> methods.</target>
        </trans-unit>
        <trans-unit id="09e04011-5b1c-44de-a189-754815e50410" xml:space="preserve">
          <source>These methods expect a key as a parameter, and either return the item in the cache that has a matching value (<bpt id="0493a5c6-acd4-4d34-9a40-039b4e6f9505">&lt;code&gt;</bpt>StringGet<ept id="0493a5c6-acd4-4d34-9a40-039b4e6f9505">&lt;/code&gt;</ept>) or add the item to the cache with this key (<bpt id="56e726d5-7acb-4520-b975-cd449265c8d8">&lt;code&gt;</bpt>StringSet<ept id="56e726d5-7acb-4520-b975-cd449265c8d8">&lt;/code&gt;</ept>).</source>
          <target state="new">These methods expect a key as a parameter, and either return the item in the cache that has a matching value (<bpt id="0493a5c6-acd4-4d34-9a40-039b4e6f9505">&lt;code&gt;</bpt>StringGet<ept id="0493a5c6-acd4-4d34-9a40-039b4e6f9505">&lt;/code&gt;</ept>) or add the item to the cache with this key (<bpt id="56e726d5-7acb-4520-b975-cd449265c8d8">&lt;code&gt;</bpt>StringSet<ept id="56e726d5-7acb-4520-b975-cd449265c8d8">&lt;/code&gt;</ept>).</target>
        </trans-unit>
        <trans-unit id="08c4ff30-3421-4c54-98c3-a60c7b953c75" xml:space="preserve">
          <source>Depending on the location of the Redis server, many operations may incur some latency while a request is transmitted to the server and a response returned to the client.</source>
          <target state="new">Depending on the location of the Redis server, many operations may incur some latency while a request is transmitted to the server and a response returned to the client.</target>
        </trans-unit>
        <trans-unit id="a13745c7-9e60-473e-8478-a5a7e48b2e8c" xml:space="preserve">
          <source>The StackExchange library provides asynchronous versions of many of the methods that it exposes to help client applications remain responsive.</source>
          <target state="new">The StackExchange library provides asynchronous versions of many of the methods that it exposes to help client applications remain responsive.</target>
        </trans-unit>
        <trans-unit id="64e227b3-43cc-4e66-ae1d-48289957f13c" xml:space="preserve">
          <source>These methods support the <bpt id="13a69fc9-9f42-4ac6-942b-f363f035c1bf">&lt;linkText&gt;</bpt>Task-based Asynchronous Pattern<ept id="13a69fc9-9f42-4ac6-942b-f363f035c1bf">&lt;/linkText&gt;</ept><bpt id="13a69fc9-9f42-4ac6-942b-f363f035c1bf">&lt;title&gt;</bpt><ept id="13a69fc9-9f42-4ac6-942b-f363f035c1bf">&lt;/title&gt;</ept> in the .NET Framework.</source>
          <target state="new">These methods support the <bpt id="13a69fc9-9f42-4ac6-942b-f363f035c1bf">&lt;linkText&gt;</bpt>Task-based Asynchronous Pattern<ept id="13a69fc9-9f42-4ac6-942b-f363f035c1bf">&lt;/linkText&gt;</ept><bpt id="13a69fc9-9f42-4ac6-942b-f363f035c1bf">&lt;title&gt;</bpt><ept id="13a69fc9-9f42-4ac6-942b-f363f035c1bf">&lt;/title&gt;</ept> in the .NET Framework.</target>
        </trans-unit>
        <trans-unit id="a8d0514d-9540-4d4f-af1c-4038ec3616cb" xml:space="preserve">
          <source>The following code snippet shows a method named <bpt id="eaee2cd6-36af-45f1-8749-33e095e996be">&lt;code&gt;</bpt>RetrieveItem<ept id="eaee2cd6-36af-45f1-8749-33e095e996be">&lt;/code&gt;</ept> that illustrates an example of an implementation of the cache-aside pattern based on Redis and the StackExchange library.</source>
          <target state="new">The following code snippet shows a method named <bpt id="eaee2cd6-36af-45f1-8749-33e095e996be">&lt;code&gt;</bpt>RetrieveItem<ept id="eaee2cd6-36af-45f1-8749-33e095e996be">&lt;/code&gt;</ept> that illustrates an example of an implementation of the cache-aside pattern based on Redis and the StackExchange library.</target>
        </trans-unit>
        <trans-unit id="4b44c7c5-179d-44d9-9112-e4c4d997bdfc" xml:space="preserve">
          <source>The method takes a string key value, and attempts to retrieve the corresponding item from the Redis cache by calling the <bpt id="a0baf75b-9e6a-4475-b4a9-dfd84b030ef9">&lt;code&gt;</bpt>StringGetAsync<ept id="a0baf75b-9e6a-4475-b4a9-dfd84b030ef9">&lt;/code&gt;</ept> method (the asynchronous version of <bpt id="cd5917ed-8b1c-4540-8cd4-bf67da7286c4">&lt;code&gt;</bpt>StringGet<ept id="cd5917ed-8b1c-4540-8cd4-bf67da7286c4">&lt;/code&gt;</ept>).</source>
          <target state="new">The method takes a string key value, and attempts to retrieve the corresponding item from the Redis cache by calling the <bpt id="a0baf75b-9e6a-4475-b4a9-dfd84b030ef9">&lt;code&gt;</bpt>StringGetAsync<ept id="a0baf75b-9e6a-4475-b4a9-dfd84b030ef9">&lt;/code&gt;</ept> method (the asynchronous version of <bpt id="cd5917ed-8b1c-4540-8cd4-bf67da7286c4">&lt;code&gt;</bpt>StringGet<ept id="cd5917ed-8b1c-4540-8cd4-bf67da7286c4">&lt;/code&gt;</ept>).</target>
        </trans-unit>
        <trans-unit id="8ea0f8ce-5c68-4384-aae7-4c519a828b84" xml:space="preserve">
          <source>If the item is not found, it is fetched from the underlying data source using the <bpt id="34e56e78-3161-419c-9b22-7bd86c9c438f">&lt;code&gt;</bpt>GetItemFromDataSourceAsync<ept id="34e56e78-3161-419c-9b22-7bd86c9c438f">&lt;/code&gt;</ept> method (which is a local method and not part of the StackExchange library), and then added to the cache by using the <bpt id="b441766c-d194-40e9-b9a2-32b79f28ea77">&lt;code&gt;</bpt>StringSetAsync<ept id="b441766c-d194-40e9-b9a2-32b79f28ea77">&lt;/code&gt;</ept> method so it can be retrieved more quickly next time.</source>
          <target state="new">If the item is not found, it is fetched from the underlying data source using the <bpt id="34e56e78-3161-419c-9b22-7bd86c9c438f">&lt;code&gt;</bpt>GetItemFromDataSourceAsync<ept id="34e56e78-3161-419c-9b22-7bd86c9c438f">&lt;/code&gt;</ept> method (which is a local method and not part of the StackExchange library), and then added to the cache by using the <bpt id="b441766c-d194-40e9-b9a2-32b79f28ea77">&lt;code&gt;</bpt>StringSetAsync<ept id="b441766c-d194-40e9-b9a2-32b79f28ea77">&lt;/code&gt;</ept> method so it can be retrieved more quickly next time.</target>
        </trans-unit>
        <trans-unit id="e6f793fd-266f-4fd7-9120-45ddb1654784" xml:space="preserve">
          <source>The <bpt id="bfaf963a-ba84-41ec-a793-0e1fc1e3b012">&lt;code&gt;</bpt>StringGet<ept id="bfaf963a-ba84-41ec-a793-0e1fc1e3b012">&lt;/code&gt;</ept> and <bpt id="18d70236-3a9a-4573-a14a-a01edcea91ae">&lt;code&gt;</bpt>StringSet<ept id="18d70236-3a9a-4573-a14a-a01edcea91ae">&lt;/code&gt;</ept> methods are not restricted to retrieving or storing string values; they can take any item serialized as an array of bytes.</source>
          <target state="new">The <bpt id="bfaf963a-ba84-41ec-a793-0e1fc1e3b012">&lt;code&gt;</bpt>StringGet<ept id="bfaf963a-ba84-41ec-a793-0e1fc1e3b012">&lt;/code&gt;</ept> and <bpt id="18d70236-3a9a-4573-a14a-a01edcea91ae">&lt;code&gt;</bpt>StringSet<ept id="18d70236-3a9a-4573-a14a-a01edcea91ae">&lt;/code&gt;</ept> methods are not restricted to retrieving or storing string values; they can take any item serialized as an array of bytes.</target>
        </trans-unit>
        <trans-unit id="26a759a0-df5d-429c-ac3a-e2b3d9b509e9" xml:space="preserve">
          <source>If you need to save a .NET object you can serialize it as a byte stream and use the StringSet method to write it to the cache.</source>
          <target state="new">If you need to save a .NET object you can serialize it as a byte stream and use the StringSet method to write it to the cache.</target>
        </trans-unit>
        <trans-unit id="fb90cf79-7994-4d29-892a-7fc4aefea55e" xml:space="preserve">
          <source>Similarly, you can read an object from cache by using the StringGet method and deserialize it as a .NET object.</source>
          <target state="new">Similarly, you can read an object from cache by using the StringGet method and deserialize it as a .NET object.</target>
        </trans-unit>
        <trans-unit id="90481700-678d-4d5a-80fe-ff123dcc41a9" xml:space="preserve">
          <source>The following code shows a set of extension methods for the IDatabase interface (the GetDatabase method of a Redis connection returns an <bpt id="11971d0a-5d0a-4061-a400-ff5772ff42df">&lt;code&gt;</bpt>IDatabase<ept id="11971d0a-5d0a-4061-a400-ff5772ff42df">&lt;/code&gt;</ept> object),  and some sample code that uses these methods to read and write a BlogPost object to the cache:</source>
          <target state="new">The following code shows a set of extension methods for the IDatabase interface (the GetDatabase method of a Redis connection returns an <bpt id="11971d0a-5d0a-4061-a400-ff5772ff42df">&lt;code&gt;</bpt>IDatabase<ept id="11971d0a-5d0a-4061-a400-ff5772ff42df">&lt;/code&gt;</ept> object),  and some sample code that uses these methods to read and write a BlogPost object to the cache:</target>
        </trans-unit>
        <trans-unit id="361ca599-7848-4392-a355-6386e7dfd2c4" xml:space="preserve">
          <source>The following code illustrates a method named <bpt id="111cb822-4907-4e3b-a517-c24e4c92abb6">&lt;code&gt;</bpt>RetrieveBlogPost<ept id="111cb822-4907-4e3b-a517-c24e4c92abb6">&lt;/code&gt;</ept> that uses these extension methods to read and write a serializable <bpt id="22bf22b3-ae32-4358-9daa-9cd89ecf8a91">&lt;code&gt;</bpt>BlogPost<ept id="22bf22b3-ae32-4358-9daa-9cd89ecf8a91">&lt;/code&gt;</ept> object to the cache following the cache-aside pattern:</source>
          <target state="new">The following code illustrates a method named <bpt id="111cb822-4907-4e3b-a517-c24e4c92abb6">&lt;code&gt;</bpt>RetrieveBlogPost<ept id="111cb822-4907-4e3b-a517-c24e4c92abb6">&lt;/code&gt;</ept> that uses these extension methods to read and write a serializable <bpt id="22bf22b3-ae32-4358-9daa-9cd89ecf8a91">&lt;code&gt;</bpt>BlogPost<ept id="22bf22b3-ae32-4358-9daa-9cd89ecf8a91">&lt;/code&gt;</ept> object to the cache following the cache-aside pattern:</target>
        </trans-unit>
        <trans-unit id="a2045e13-7122-48e9-976a-6159b70392be" xml:space="preserve">
          <source>Redis supports command pipelining if a client application sends multiple asynchronous requests.</source>
          <target state="new">Redis supports command pipelining if a client application sends multiple asynchronous requests.</target>
        </trans-unit>
        <trans-unit id="b9ca7c4b-0a9d-4e43-870f-a286185077fa" xml:space="preserve">
          <source>Redis can multiplex the requests using the same connection rather than receiving and responding to commands in a strict sequence.</source>
          <target state="new">Redis can multiplex the requests using the same connection rather than receiving and responding to commands in a strict sequence.</target>
        </trans-unit>
        <trans-unit id="6fd2bae5-c8a9-4696-a429-273edc9893ff" xml:space="preserve">
          <source>This approach helps to reduce latency by making more efficient use of the network.</source>
          <target state="new">This approach helps to reduce latency by making more efficient use of the network.</target>
        </trans-unit>
        <trans-unit id="414ceda7-8532-4ba7-89ff-ec151d6b6aae" xml:space="preserve">
          <source>The following code snippet shows an example that retrieves the details of two customers concurrently.</source>
          <target state="new">The following code snippet shows an example that retrieves the details of two customers concurrently.</target>
        </trans-unit>
        <trans-unit id="245be6d0-6f2d-415b-b969-a02dc1c0cf8e" xml:space="preserve">
          <source>The code submits two requests and then performs some other processing (not shown) before waiting to receive the results.</source>
          <target state="new">The code submits two requests and then performs some other processing (not shown) before waiting to receive the results.</target>
        </trans-unit>
        <trans-unit id="a2397677-dd5b-4876-b0dc-684be229eeac" xml:space="preserve">
          <source>The Wait method of the cache object is similar to the .NET Framework Task.Wait method:</source>
          <target state="new">The Wait method of the cache object is similar to the .NET Framework Task.Wait method:</target>
        </trans-unit>
        <trans-unit id="357c1bfc-bfca-4297-bc46-4b022f247aab" xml:space="preserve">
          <source>The page <bpt id="8afa4d32-2987-4406-8b6d-db8590d2abff">&lt;linkText&gt;</bpt>Develop for Azure Redis Cache<ept id="8afa4d32-2987-4406-8b6d-db8590d2abff">&lt;/linkText&gt;</ept><bpt id="8afa4d32-2987-4406-8b6d-db8590d2abff">&lt;title&gt;</bpt><ept id="8afa4d32-2987-4406-8b6d-db8590d2abff">&lt;/title&gt;</ept> on the Microsoft website provides more information on how to write client applications that can use the Azure Redis cache.</source>
          <target state="new">The page <bpt id="8afa4d32-2987-4406-8b6d-db8590d2abff">&lt;linkText&gt;</bpt>Develop for Azure Redis Cache<ept id="8afa4d32-2987-4406-8b6d-db8590d2abff">&lt;/linkText&gt;</ept><bpt id="8afa4d32-2987-4406-8b6d-db8590d2abff">&lt;title&gt;</bpt><ept id="8afa4d32-2987-4406-8b6d-db8590d2abff">&lt;/title&gt;</ept> on the Microsoft website provides more information on how to write client applications that can use the Azure Redis cache.</target>
        </trans-unit>
        <trans-unit id="8250049f-6af4-4e39-a86e-229c54b03112" xml:space="preserve">
          <source>Additional information is available on the <bpt id="ccad2ab2-6125-4245-9040-5ffa6ff7c1fd">&lt;linkText&gt;</bpt>Basic Usage page<ept id="ccad2ab2-6125-4245-9040-5ffa6ff7c1fd">&lt;/linkText&gt;</ept><bpt id="ccad2ab2-6125-4245-9040-5ffa6ff7c1fd">&lt;title&gt;</bpt><ept id="ccad2ab2-6125-4245-9040-5ffa6ff7c1fd">&lt;/title&gt;</ept> on the StackExchange.Redis website, and the page <bpt id="e83de953-5d6d-4f1f-94a5-af9cec9bc21e">&lt;linkText&gt;</bpt>Pipelines and Multiplexers<ept id="e83de953-5d6d-4f1f-94a5-af9cec9bc21e">&lt;/linkText&gt;</ept><bpt id="e83de953-5d6d-4f1f-94a5-af9cec9bc21e">&lt;title&gt;</bpt><ept id="e83de953-5d6d-4f1f-94a5-af9cec9bc21e">&lt;/title&gt;</ept> on the same website provides more information about asynchronous operations and pipelining with Redis and the StackExchange library.</source>
          <target state="new">Additional information is available on the <bpt id="ccad2ab2-6125-4245-9040-5ffa6ff7c1fd">&lt;linkText&gt;</bpt>Basic Usage page<ept id="ccad2ab2-6125-4245-9040-5ffa6ff7c1fd">&lt;/linkText&gt;</ept><bpt id="ccad2ab2-6125-4245-9040-5ffa6ff7c1fd">&lt;title&gt;</bpt><ept id="ccad2ab2-6125-4245-9040-5ffa6ff7c1fd">&lt;/title&gt;</ept> on the StackExchange.Redis website, and the page <bpt id="e83de953-5d6d-4f1f-94a5-af9cec9bc21e">&lt;linkText&gt;</bpt>Pipelines and Multiplexers<ept id="e83de953-5d6d-4f1f-94a5-af9cec9bc21e">&lt;/linkText&gt;</ept><bpt id="e83de953-5d6d-4f1f-94a5-af9cec9bc21e">&lt;title&gt;</bpt><ept id="e83de953-5d6d-4f1f-94a5-af9cec9bc21e">&lt;/title&gt;</ept> on the same website provides more information about asynchronous operations and pipelining with Redis and the StackExchange library.</target>
        </trans-unit>
        <trans-unit id="8e602d1c-ec13-452e-b731-41bb8f833827" xml:space="preserve">
          <source>The section Use-Cases for Redis Caching later in this guidance provides examples of some of the more advanced techniques that you can apply to data held in a Redis cache.</source>
          <target state="new">The section Use-Cases for Redis Caching later in this guidance provides examples of some of the more advanced techniques that you can apply to data held in a Redis cache.</target>
        </trans-unit>
        <trans-unit id="9894b7fd-f0ce-4e32-965b-af1cef907086" xml:space="preserve">
          <source>The simplest use of Redis for caching concerns storing key/value pairs where the value is an uninterpreted string of arbitrary length that can contain any binary data (it is essentially  an array of bytes that can be treated as a string).</source>
          <target state="new">The simplest use of Redis for caching concerns storing key/value pairs where the value is an uninterpreted string of arbitrary length that can contain any binary data (it is essentially  an array of bytes that can be treated as a string).</target>
        </trans-unit>
        <trans-unit id="cd7d1341-607d-4849-96be-bc8fd87e5af8" xml:space="preserve">
          <source>This scenario was illustrated in the section Implementing Redis Cache Client Applications earlier in this guidance.</source>
          <target state="new">This scenario was illustrated in the section Implementing Redis Cache Client Applications earlier in this guidance.</target>
        </trans-unit>
        <trans-unit id="3b4ee59f-5b55-4367-8577-297f1c5f3b30" xml:space="preserve">
          <source>You should note that keys also contain uninterpreted data, so you can use any binary information as the key, although the longer the key is the more space it will take to store, and the longer it will take to perform lookup operations.</source>
          <target state="new">You should note that keys also contain uninterpreted data, so you can use any binary information as the key, although the longer the key is the more space it will take to store, and the longer it will take to perform lookup operations.</target>
        </trans-unit>
        <trans-unit id="016e071c-ef87-4fe6-b792-36fe6a1fc525" xml:space="preserve">
          <source>For usability and ease of maintenance design your keyspace carefully and use meaningful (but not verbose) keys.</source>
          <target state="new">For usability and ease of maintenance design your keyspace carefully and use meaningful (but not verbose) keys.</target>
        </trans-unit>
        <trans-unit id="f1c256e9-da6d-4c82-9355-6713856fadeb" xml:space="preserve">
          <source>For example, use structured keys such as "customer:100" to represent the key for the customer with ID 100 rather than simply "100".</source>
          <target state="new">For example, use structured keys such as "customer:100" to represent the key for the customer with ID 100 rather than simply "100".</target>
        </trans-unit>
        <trans-unit id="40fa0f9a-7d5f-4177-9032-253bd9be87b0" xml:space="preserve">
          <source>This scheme enables you to easily distinguish between values that store different data types.</source>
          <target state="new">This scheme enables you to easily distinguish between values that store different data types.</target>
        </trans-unit>
        <trans-unit id="33a673ef-6bcb-4b69-afd0-2965e5b55ea6" xml:space="preserve">
          <source>For example, you could also use the key "orders:100" to represent the key for the order with ID 100.</source>
          <target state="new">For example, you could also use the key "orders:100" to represent the key for the order with ID 100.</target>
        </trans-unit>
        <trans-unit id="d88bdfce-e311-4019-b85b-1060f3e49812" xml:space="preserve">
          <source>Apart from one-dimensional binary strings, a value in a Redis key/value pair can also hold more structured information, including lists, sets (sorted and unsorted), and hashes.</source>
          <target state="new">Apart from one-dimensional binary strings, a value in a Redis key/value pair can also hold more structured information, including lists, sets (sorted and unsorted), and hashes.</target>
        </trans-unit>
        <trans-unit id="99dbaa61-e521-4530-8a0a-59202cb3d4f7" xml:space="preserve">
          <source>Redis provides a comprehensive command set that can manipulate these types, and many of these commands are available to .NET Framework applications through a client library such as StackExchange.</source>
          <target state="new">Redis provides a comprehensive command set that can manipulate these types, and many of these commands are available to .NET Framework applications through a client library such as StackExchange.</target>
        </trans-unit>
        <trans-unit id="ab93ae23-67ab-4511-ae69-55f687a178eb" xml:space="preserve">
          <source>The page <bpt id="4ec0a49a-163e-4196-bf4d-d881cba187d2">&lt;linkText&gt;</bpt>An introduction to Redis data types and abstractions<ept id="4ec0a49a-163e-4196-bf4d-d881cba187d2">&lt;/linkText&gt;</ept><bpt id="4ec0a49a-163e-4196-bf4d-d881cba187d2">&lt;title&gt;</bpt><ept id="4ec0a49a-163e-4196-bf4d-d881cba187d2">&lt;/title&gt;</ept> on the Redis website provides a more detailed overview of these types and the commands that you can use to manipulate them.</source>
          <target state="new">The page <bpt id="4ec0a49a-163e-4196-bf4d-d881cba187d2">&lt;linkText&gt;</bpt>An introduction to Redis data types and abstractions<ept id="4ec0a49a-163e-4196-bf4d-d881cba187d2">&lt;/linkText&gt;</ept><bpt id="4ec0a49a-163e-4196-bf4d-d881cba187d2">&lt;title&gt;</bpt><ept id="4ec0a49a-163e-4196-bf4d-d881cba187d2">&lt;/title&gt;</ept> on the Redis website provides a more detailed overview of these types and the commands that you can use to manipulate them.</target>
        </trans-unit>
        <trans-unit id="52641ca1-bf7d-4197-abb1-02bc85a7163e" xml:space="preserve">
          <source>This section summarizes some common use-cases for these data types and commands.</source>
          <target state="new">This section summarizes some common use-cases for these data types and commands.</target>
        </trans-unit>
        <trans-unit id="5d240f0f-0e53-44c8-b4dc-884d8823d3cf" xml:space="preserve">
          <source>Redis supports a series of atomic get-and-set operations on string values.</source>
          <target state="new">Redis supports a series of atomic get-and-set operations on string values.</target>
        </trans-unit>
        <trans-unit id="45d8d802-9753-424c-a71d-45ec0dabd029" xml:space="preserve">
          <source>These operations remove the possible race hazards that might occur when using separate <bpt id="f7d24e29-e8cd-4eb1-9212-7435780cb45d">&lt;code&gt;</bpt>GET<ept id="f7d24e29-e8cd-4eb1-9212-7435780cb45d">&lt;/code&gt;</ept> and <bpt id="456933af-6920-4b08-9703-96236d077efb">&lt;code&gt;</bpt>SET<ept id="456933af-6920-4b08-9703-96236d077efb">&lt;/code&gt;</ept> commands.</source>
          <target state="new">These operations remove the possible race hazards that might occur when using separate <bpt id="f7d24e29-e8cd-4eb1-9212-7435780cb45d">&lt;code&gt;</bpt>GET<ept id="f7d24e29-e8cd-4eb1-9212-7435780cb45d">&lt;/code&gt;</ept> and <bpt id="456933af-6920-4b08-9703-96236d077efb">&lt;code&gt;</bpt>SET<ept id="456933af-6920-4b08-9703-96236d077efb">&lt;/code&gt;</ept> commands.</target>
        </trans-unit>
        <trans-unit id="5f00aa0d-d2dc-4bc8-ae75-41c6ed29d279" xml:space="preserve">
          <source>The operations available include:</source>
          <target state="new">The operations available include:</target>
        </trans-unit>
        <trans-unit id="5870990e-1f52-4f5c-99a2-94e849e83fc7" xml:space="preserve">
          <source><bpt id="5072fcbd-4208-4ad7-b132-6a7a42acbf9c">&lt;code&gt;</bpt>INCR<ept id="5072fcbd-4208-4ad7-b132-6a7a42acbf9c">&lt;/code&gt;</ept>, <bpt id="8cb5319a-f410-4d13-8195-63f455427094">&lt;code&gt;</bpt>INCRBY<ept id="8cb5319a-f410-4d13-8195-63f455427094">&lt;/code&gt;</ept>, <bpt id="52b22945-a30c-4b27-8ec6-d3c6e84d4cb9">&lt;code&gt;</bpt>DECR<ept id="52b22945-a30c-4b27-8ec6-d3c6e84d4cb9">&lt;/code&gt;</ept>, and <bpt id="0b0d9460-275a-49dc-a33e-fd1dc72bd928">&lt;code&gt;</bpt>DECRBY<ept id="0b0d9460-275a-49dc-a33e-fd1dc72bd928">&lt;/code&gt;</ept> which perform atomic increment and decrement operations on
integer numeric data values.</source>
          <target state="new"><bpt id="5072fcbd-4208-4ad7-b132-6a7a42acbf9c">&lt;code&gt;</bpt>INCR<ept id="5072fcbd-4208-4ad7-b132-6a7a42acbf9c">&lt;/code&gt;</ept>, <bpt id="8cb5319a-f410-4d13-8195-63f455427094">&lt;code&gt;</bpt>INCRBY<ept id="8cb5319a-f410-4d13-8195-63f455427094">&lt;/code&gt;</ept>, <bpt id="52b22945-a30c-4b27-8ec6-d3c6e84d4cb9">&lt;code&gt;</bpt>DECR<ept id="52b22945-a30c-4b27-8ec6-d3c6e84d4cb9">&lt;/code&gt;</ept>, and <bpt id="0b0d9460-275a-49dc-a33e-fd1dc72bd928">&lt;code&gt;</bpt>DECRBY<ept id="0b0d9460-275a-49dc-a33e-fd1dc72bd928">&lt;/code&gt;</ept> which perform atomic increment and decrement operations on
integer numeric data values.</target>
        </trans-unit>
        <trans-unit id="6c1d53f3-1696-4a8a-b53b-685d8f687e77" xml:space="preserve">
          <source>The StackExchange library provides overloaded versions of the
<bpt id="d0966512-7aa8-4207-8c3d-d27ae4e4efb9">&lt;code&gt;</bpt>IDatabase.StringIncrementAsync<ept id="d0966512-7aa8-4207-8c3d-d27ae4e4efb9">&lt;/code&gt;</ept> and <bpt id="7d360ad5-c8fc-4647-b1c8-b28583bd61da">&lt;code&gt;</bpt>IDatabase.StringDecrementAsync<ept id="7d360ad5-c8fc-4647-b1c8-b28583bd61da">&lt;/code&gt;</ept> methods to perform
these operations and return the resulting value stored in the cache.</source>
          <target state="new">The StackExchange library provides overloaded versions of the
<bpt id="d0966512-7aa8-4207-8c3d-d27ae4e4efb9">&lt;code&gt;</bpt>IDatabase.StringIncrementAsync<ept id="d0966512-7aa8-4207-8c3d-d27ae4e4efb9">&lt;/code&gt;</ept> and <bpt id="7d360ad5-c8fc-4647-b1c8-b28583bd61da">&lt;code&gt;</bpt>IDatabase.StringDecrementAsync<ept id="7d360ad5-c8fc-4647-b1c8-b28583bd61da">&lt;/code&gt;</ept> methods to perform
these operations and return the resulting value stored in the cache.</target>
        </trans-unit>
        <trans-unit id="bff1c6a2-9e2c-495e-9b47-da53dd432607" xml:space="preserve">
          <source>The following code
snippet illustrates how to use these methods:</source>
          <target state="new">The following code
snippet illustrates how to use these methods:</target>
        </trans-unit>
        <trans-unit id="f7ad9618-51bd-43e0-af67-e5cb525364be" xml:space="preserve">
          <source><bpt id="d208ccbf-d89f-41ee-9002-19bef9324c73">&lt;code&gt;</bpt>GETSET<ept id="d208ccbf-d89f-41ee-9002-19bef9324c73">&lt;/code&gt;</ept> which retrieves the value associated with a key and changes it to a new value.</source>
          <target state="new"><bpt id="d208ccbf-d89f-41ee-9002-19bef9324c73">&lt;code&gt;</bpt>GETSET<ept id="d208ccbf-d89f-41ee-9002-19bef9324c73">&lt;/code&gt;</ept> which retrieves the value associated with a key and changes it to a new value.</target>
        </trans-unit>
        <trans-unit id="dc8d96f5-9b3e-4869-81ea-ef8c412d04ed" xml:space="preserve">
          <source>The
StackExchange library makes this operation available through the <bpt id="2fb2ed13-4109-4e01-bf05-fb6684f52753">&lt;code&gt;</bpt>IDatabase.StringGetSetAsync<ept id="2fb2ed13-4109-4e01-bf05-fb6684f52753">&lt;/code&gt;</ept>
method.</source>
          <target state="new">The
StackExchange library makes this operation available through the <bpt id="2fb2ed13-4109-4e01-bf05-fb6684f52753">&lt;code&gt;</bpt>IDatabase.StringGetSetAsync<ept id="2fb2ed13-4109-4e01-bf05-fb6684f52753">&lt;/code&gt;</ept>
method.</target>
        </trans-unit>
        <trans-unit id="450eecad-7c50-42bf-9979-981c881f76fc" xml:space="preserve">
          <source>The code snippet below shows an example of this method.</source>
          <target state="new">The code snippet below shows an example of this method.</target>
        </trans-unit>
        <trans-unit id="a4b9ed3a-3569-4d14-be28-7aaf21b3e933" xml:space="preserve">
          <source>This code returns the current
value associated with the key "data:counter" from the previous example and resets the value
for this key back to zero, all as part of the same operation:</source>
          <target state="new">This code returns the current
value associated with the key "data:counter" from the previous example and resets the value
for this key back to zero, all as part of the same operation:</target>
        </trans-unit>
        <trans-unit id="31aaa87a-73df-4079-8edb-a6bb3c529e95" xml:space="preserve">
          <source><bpt id="2280f561-9262-4bc8-85ee-7b44eb599df7">&lt;code&gt;</bpt>MGET<ept id="2280f561-9262-4bc8-85ee-7b44eb599df7">&lt;/code&gt;</ept> and <bpt id="0cba916e-0184-4191-9cab-d63412674672">&lt;code&gt;</bpt>MSET<ept id="0cba916e-0184-4191-9cab-d63412674672">&lt;/code&gt;</ept>, which can return or change a set of string values as a single operation.</source>
          <target state="new"><bpt id="2280f561-9262-4bc8-85ee-7b44eb599df7">&lt;code&gt;</bpt>MGET<ept id="2280f561-9262-4bc8-85ee-7b44eb599df7">&lt;/code&gt;</ept> and <bpt id="0cba916e-0184-4191-9cab-d63412674672">&lt;code&gt;</bpt>MSET<ept id="0cba916e-0184-4191-9cab-d63412674672">&lt;/code&gt;</ept>, which can return or change a set of string values as a single operation.</target>
        </trans-unit>
        <trans-unit id="972783aa-3374-4704-855c-5094f26ee16b" xml:space="preserve">
          <source>The
<bpt id="fcf73bb6-b872-4d4e-9365-c369714b6208">&lt;code&gt;</bpt>IDatabase.StringGetAsync<ept id="fcf73bb6-b872-4d4e-9365-c369714b6208">&lt;/code&gt;</ept> and <bpt id="84df1918-200a-46b6-962f-ae4608388429">&lt;code&gt;</bpt>IDatabase.StringSetAsync<ept id="84df1918-200a-46b6-962f-ae4608388429">&lt;/code&gt;</ept> methods are overloaded to support
this functionality, as shown in the following example:</source>
          <target state="new">The
<bpt id="fcf73bb6-b872-4d4e-9365-c369714b6208">&lt;code&gt;</bpt>IDatabase.StringGetAsync<ept id="fcf73bb6-b872-4d4e-9365-c369714b6208">&lt;/code&gt;</ept> and <bpt id="84df1918-200a-46b6-962f-ae4608388429">&lt;code&gt;</bpt>IDatabase.StringSetAsync<ept id="84df1918-200a-46b6-962f-ae4608388429">&lt;/code&gt;</ept> methods are overloaded to support
this functionality, as shown in the following example:</target>
        </trans-unit>
        <trans-unit id="70e43aed-9484-4173-9a8e-382416a5e02a" xml:space="preserve">
          <source>You can also combine multiple operations into a single Redis transaction as described in the Redis Transactions and Batches section in this guidance.</source>
          <target state="new">You can also combine multiple operations into a single Redis transaction as described in the Redis Transactions and Batches section in this guidance.</target>
        </trans-unit>
        <trans-unit id="049ceabd-30ad-4b05-b6bf-fc167e4a9130" xml:space="preserve">
          <source>The StackExchange library provides support for transactions through the <bpt id="24e37874-61dd-42d4-90ed-a17ac9ad43c1">&lt;code&gt;</bpt>ITransaction<ept id="24e37874-61dd-42d4-90ed-a17ac9ad43c1">&lt;/code&gt;</ept> interface.</source>
          <target state="new">The StackExchange library provides support for transactions through the <bpt id="24e37874-61dd-42d4-90ed-a17ac9ad43c1">&lt;code&gt;</bpt>ITransaction<ept id="24e37874-61dd-42d4-90ed-a17ac9ad43c1">&lt;/code&gt;</ept> interface.</target>
        </trans-unit>
        <trans-unit id="1cee31f9-0780-41cb-8d98-f001a948db2b" xml:space="preserve">
          <source>You can create an ITransaction object by using the IDatabase.CreateTransaction method, and invoke commands to the transaction by using the methods provided <bpt id="6ca9ea6b-976a-46ba-aa55-fa07f03edd6b">&lt;code&gt;</bpt>ITransaction<ept id="6ca9ea6b-976a-46ba-aa55-fa07f03edd6b">&lt;/code&gt;</ept> object.</source>
          <target state="new">You can create an ITransaction object by using the IDatabase.CreateTransaction method, and invoke commands to the transaction by using the methods provided <bpt id="6ca9ea6b-976a-46ba-aa55-fa07f03edd6b">&lt;code&gt;</bpt>ITransaction<ept id="6ca9ea6b-976a-46ba-aa55-fa07f03edd6b">&lt;/code&gt;</ept> object.</target>
        </trans-unit>
        <trans-unit id="f8399db4-4f6a-442f-b3b5-3d2d8a80a492" xml:space="preserve">
          <source>The <bpt id="3393d570-6fff-4c66-97c1-98f61d64de0b">&lt;code&gt;</bpt>ITransaction<ept id="3393d570-6fff-4c66-97c1-98f61d64de0b">&lt;/code&gt;</ept> interface provides access to a similar set of methods as the <bpt id="127d620b-66ff-4f99-9707-9e9f60a78c93">&lt;code&gt;</bpt>IDatabase<ept id="127d620b-66ff-4f99-9707-9e9f60a78c93">&lt;/code&gt;</ept> interface except that all the methods are asynchronous; they are only performed when the <bpt id="a71a8980-6cfe-4c01-9d1b-9f2ae4f003e5">&lt;code&gt;</bpt>ITransaction.Execute<ept id="a71a8980-6cfe-4c01-9d1b-9f2ae4f003e5">&lt;/code&gt;</ept> method is invoked.</source>
          <target state="new">The <bpt id="3393d570-6fff-4c66-97c1-98f61d64de0b">&lt;code&gt;</bpt>ITransaction<ept id="3393d570-6fff-4c66-97c1-98f61d64de0b">&lt;/code&gt;</ept> interface provides access to a similar set of methods as the <bpt id="127d620b-66ff-4f99-9707-9e9f60a78c93">&lt;code&gt;</bpt>IDatabase<ept id="127d620b-66ff-4f99-9707-9e9f60a78c93">&lt;/code&gt;</ept> interface except that all the methods are asynchronous; they are only performed when the <bpt id="a71a8980-6cfe-4c01-9d1b-9f2ae4f003e5">&lt;code&gt;</bpt>ITransaction.Execute<ept id="a71a8980-6cfe-4c01-9d1b-9f2ae4f003e5">&lt;/code&gt;</ept> method is invoked.</target>
        </trans-unit>
        <trans-unit id="9e7bfede-bdef-4d9d-952b-defd6669d38d" xml:space="preserve">
          <source>The value returned by the execute method indicates whether the transaction was created successfully (true) or it failed (false).</source>
          <target state="new">The value returned by the execute method indicates whether the transaction was created successfully (true) or it failed (false).</target>
        </trans-unit>
        <trans-unit id="b64d95a7-fd69-47c5-ad9e-6cab76aa148d" xml:space="preserve">
          <source>The following code snippet shows an example that increments and decrements two counters as part of the same transaction:</source>
          <target state="new">The following code snippet shows an example that increments and decrements two counters as part of the same transaction:</target>
        </trans-unit>
        <trans-unit id="0179f6da-1e5f-473d-9d7f-9ba627dc1eba" xml:space="preserve">
          <source>Remember that Redis transactions are unlike transactions in relational databases.</source>
          <target state="new">Remember that Redis transactions are unlike transactions in relational databases.</target>
        </trans-unit>
        <trans-unit id="a9aa63d4-75c4-455e-b73d-499e43fc65b0" xml:space="preserve">
          <source>The Execute method simply queues all the commands that comprise the transaction for execution, and if any of them is malformed then the transaction is aborted.</source>
          <target state="new">The Execute method simply queues all the commands that comprise the transaction for execution, and if any of them is malformed then the transaction is aborted.</target>
        </trans-unit>
        <trans-unit id="e5b328e7-f83f-4980-80dc-27f41ea4a4a2" xml:space="preserve">
          <source>If all the commands have been queued successfully, each command will be run asynchronously.</source>
          <target state="new">If all the commands have been queued successfully, each command will be run asynchronously.</target>
        </trans-unit>
        <trans-unit id="8fcbdc9a-05f4-4d34-a942-389799c19e37" xml:space="preserve">
          <source>If any command fails, the others will still continue processing.</source>
          <target state="new">If any command fails, the others will still continue processing.</target>
        </trans-unit>
        <trans-unit id="53d2e06b-da15-4496-ad69-1fb1eae50097" xml:space="preserve">
          <source>If you need to verify that a command has completed successfully you must fetch the results of the command by using the Result property of the corresponding task, as shown in the example above.</source>
          <target state="new">If you need to verify that a command has completed successfully you must fetch the results of the command by using the Result property of the corresponding task, as shown in the example above.</target>
        </trans-unit>
        <trans-unit id="b3a6e867-1872-4dd6-8c07-1f1c19135e31" xml:space="preserve">
          <source>Reading the Result property will block until the task has completed.</source>
          <target state="new">Reading the Result property will block until the task has completed.</target>
        </trans-unit>
        <trans-unit id="5b4fb4b1-f61d-4067-b20b-c6d7a8f644ae" xml:space="preserve">
          <source>For more information, see the <bpt id="01b407af-c5c5-4a9d-9a0a-53dd46cbcd10">&lt;linkText&gt;</bpt>Transactions in Redis<ept id="01b407af-c5c5-4a9d-9a0a-53dd46cbcd10">&lt;/linkText&gt;</ept><bpt id="01b407af-c5c5-4a9d-9a0a-53dd46cbcd10">&lt;title&gt;</bpt><ept id="01b407af-c5c5-4a9d-9a0a-53dd46cbcd10">&lt;/title&gt;</ept> page on the StackExchange.Redis website.</source>
          <target state="new">For more information, see the <bpt id="01b407af-c5c5-4a9d-9a0a-53dd46cbcd10">&lt;linkText&gt;</bpt>Transactions in Redis<ept id="01b407af-c5c5-4a9d-9a0a-53dd46cbcd10">&lt;/linkText&gt;</ept><bpt id="01b407af-c5c5-4a9d-9a0a-53dd46cbcd10">&lt;title&gt;</bpt><ept id="01b407af-c5c5-4a9d-9a0a-53dd46cbcd10">&lt;/title&gt;</ept> page on the StackExchange.Redis website.</target>
        </trans-unit>
        <trans-unit id="0d18cd08-f14d-4886-b021-ee1bd9406442" xml:space="preserve">
          <source>For performing batch operations, you can use the IBatch interface of the StackExchange library.</source>
          <target state="new">For performing batch operations, you can use the IBatch interface of the StackExchange library.</target>
        </trans-unit>
        <trans-unit id="b027ba08-71fe-4058-bd77-52b8fc8fb722" xml:space="preserve">
          <source>This interface provides access to a similar set of methods as the IDatabase interface except that all the methods are asynchronous.</source>
          <target state="new">This interface provides access to a similar set of methods as the IDatabase interface except that all the methods are asynchronous.</target>
        </trans-unit>
        <trans-unit id="447f35d6-f7f4-46f1-a414-31fcd21756a2" xml:space="preserve">
          <source>You create an IBatch object by using the IDatabase.CreateBatch method and then run the batch by using the IBatch.Execute method, as shown in the following example.</source>
          <target state="new">You create an IBatch object by using the IDatabase.CreateBatch method and then run the batch by using the IBatch.Execute method, as shown in the following example.</target>
        </trans-unit>
        <trans-unit id="0a1f7b6d-dc32-457b-bc78-dbc430c9cccf" xml:space="preserve">
          <source>This code simply sets a string value, and increments and decrements the same counters used in the previous example and displays the results:</source>
          <target state="new">This code simply sets a string value, and increments and decrements the same counters used in the previous example and displays the results:</target>
        </trans-unit>
        <trans-unit id="2f2b2ff1-4798-41c0-a580-fcf109c19963" xml:space="preserve">
          <source>It is important to understand that unlike a transaction, if a command in a batch fails because it is malformed the other commands may still run; the IBatch.Execute method does not return any indication of success or failure.</source>
          <target state="new">It is important to understand that unlike a transaction, if a command in a batch fails because it is malformed the other commands may still run; the IBatch.Execute method does not return any indication of success or failure.</target>
        </trans-unit>
        <trans-unit id="964ab943-e667-4b73-909b-cd87bf0d4642" xml:space="preserve">
          <source>Redis supports fire-and-forget operations by using command flags.</source>
          <target state="new">Redis supports fire-and-forget operations by using command flags.</target>
        </trans-unit>
        <trans-unit id="53042943-be14-43c3-ac9c-4b1e216b1b18" xml:space="preserve">
          <source>In this situation, the client simply initiates an operation but has no interest in the result and does not wait for the command to be completed.</source>
          <target state="new">In this situation, the client simply initiates an operation but has no interest in the result and does not wait for the command to be completed.</target>
        </trans-unit>
        <trans-unit id="ad640ccd-3b1d-46ef-94f4-3fc3dbea9d1e" xml:space="preserve">
          <source>The example below shows how to perform the INCR command as a fire-and-forget operation:</source>
          <target state="new">The example below shows how to perform the INCR command as a fire-and-forget operation:</target>
        </trans-unit>
        <trans-unit id="cad9f32c-faa1-452b-94a8-ed1a4d934001" xml:space="preserve">
          <source>When you store an item in a Redis cache, you can specify a timeout after which the item will be automatically removed from the cache.</source>
          <target state="new">When you store an item in a Redis cache, you can specify a timeout after which the item will be automatically removed from the cache.</target>
        </trans-unit>
        <trans-unit id="8de61892-9f01-445d-9fbb-ac098b934ef9" xml:space="preserve">
          <source>You can also query how much more time a key has before it expires by using the <bpt id="852ff09a-39e9-4cda-ace4-59a289f75d3c">&lt;code&gt;</bpt>TTL<ept id="852ff09a-39e9-4cda-ace4-59a289f75d3c">&lt;/code&gt;</ept> command; this command is available to StackExchange applications by using the IDatabase.KeyTimeToLive method.</source>
          <target state="new">You can also query how much more time a key has before it expires by using the <bpt id="852ff09a-39e9-4cda-ace4-59a289f75d3c">&lt;code&gt;</bpt>TTL<ept id="852ff09a-39e9-4cda-ace4-59a289f75d3c">&lt;/code&gt;</ept> command; this command is available to StackExchange applications by using the IDatabase.KeyTimeToLive method.</target>
        </trans-unit>
        <trans-unit id="516d73c7-d522-41ca-9437-aa0cdacb2efd" xml:space="preserve">
          <source>The following code snippet shows an example of setting an expiration time of 20 seconds on a key, and querying the remaining lifetime of the key:</source>
          <target state="new">The following code snippet shows an example of setting an expiration time of 20 seconds on a key, and querying the remaining lifetime of the key:</target>
        </trans-unit>
        <trans-unit id="ea2df41d-b7df-4050-8a72-0de4598b184a" xml:space="preserve">
          <source>You can also set the expiration time to a specific date and time by using the EXPIRE command, available in the StackExchange library as the KeyExpireAsync method:</source>
          <target state="new">You can also set the expiration time to a specific date and time by using the EXPIRE command, available in the StackExchange library as the KeyExpireAsync method:</target>
        </trans-unit>
        <trans-unit id="2c28321c-cbb4-4307-a822-4bfc228dd877" xml:space="preserve">
          <source><bpt id="02f2d9d3-c2e5-4fd2-86cb-c591f8ce4e82">&lt;em&gt;</bpt>Tip:<ept id="02f2d9d3-c2e5-4fd2-86cb-c591f8ce4e82">&lt;/em&gt;</ept> You can manually remove an item from the cache by using the DEL command, which is available through the StackExchange library as the IDatabase.KeyDeleteAsync method.</source>
          <target state="new"><bpt id="02f2d9d3-c2e5-4fd2-86cb-c591f8ce4e82">&lt;em&gt;</bpt>Tip:<ept id="02f2d9d3-c2e5-4fd2-86cb-c591f8ce4e82">&lt;/em&gt;</ept> You can manually remove an item from the cache by using the DEL command, which is available through the StackExchange library as the IDatabase.KeyDeleteAsync method.</target>
        </trans-unit>
        <trans-unit id="6a9dda01-bb4d-4c62-8c21-7fa903b991d6" xml:space="preserve">
          <source>A Redis set is a collection of multiple items that share a single key.</source>
          <target state="new">A Redis set is a collection of multiple items that share a single key.</target>
        </trans-unit>
        <trans-unit id="ee4fabf6-c8a5-480c-a7ed-987e93145bcf" xml:space="preserve">
          <source>You can create a set by using the SADD command.</source>
          <target state="new">You can create a set by using the SADD command.</target>
        </trans-unit>
        <trans-unit id="dd50aa34-5f71-4526-83b8-56d0d2c92070" xml:space="preserve">
          <source>You can retrieve the items in a set by using the SMEMBERS command.</source>
          <target state="new">You can retrieve the items in a set by using the SMEMBERS command.</target>
        </trans-unit>
        <trans-unit id="6c324970-5ab0-4c53-9a1f-3733606e6b7a" xml:space="preserve">
          <source>The StackExchange library implements the SADD command through the IDatabase.SetAddAsync method, and the SMEMBERS command with the IDatabase.SetMembersAsync method.</source>
          <target state="new">The StackExchange library implements the SADD command through the IDatabase.SetAddAsync method, and the SMEMBERS command with the IDatabase.SetMembersAsync method.</target>
        </trans-unit>
        <trans-unit id="22954e0e-42cf-47f3-b2ca-9179c5e065a4" xml:space="preserve">
          <source>You can also combine existing sets to create new sets by using the SDIFF (set difference), SINTER (set intersection), and SUNION (set union) commands.</source>
          <target state="new">You can also combine existing sets to create new sets by using the SDIFF (set difference), SINTER (set intersection), and SUNION (set union) commands.</target>
        </trans-unit>
        <trans-unit id="1dbe9631-b421-45be-b52b-4fe72267afe0" xml:space="preserve">
          <source>The StackExchange library unifies these operations in the IDatabase.SetCombineAsync method; the first parameter to this method specifies the set operation to perform.</source>
          <target state="new">The StackExchange library unifies these operations in the IDatabase.SetCombineAsync method; the first parameter to this method specifies the set operation to perform.</target>
        </trans-unit>
        <trans-unit id="1c04c968-8d70-4f0e-ab37-015468c85fd9" xml:space="preserve">
          <source>The following code snippets show how sets can be useful for quickly storing and retrieving collections of related items.</source>
          <target state="new">The following code snippets show how sets can be useful for quickly storing and retrieving collections of related items.</target>
        </trans-unit>
        <trans-unit id="479837b8-e1b8-464b-abab-b8a387b63d2d" xml:space="preserve">
          <source>This code uses the BlogPost type described in the section Implementing Redis Cache Client Applications.</source>
          <target state="new">This code uses the BlogPost type described in the section Implementing Redis Cache Client Applications.</target>
        </trans-unit>
        <trans-unit id="c4cfd1f1-58c5-4b1f-b6d8-39a19e7bfc0d" xml:space="preserve">
          <source>A BlogPost object contains four fields—an ID, a title, a ranking score, and a collection of tags.</source>
          <target state="new">A BlogPost object contains four fields—an ID, a title, a ranking score, and a collection of tags.</target>
        </trans-unit>
        <trans-unit id="86e26455-de54-43cc-ad3c-2a3a40800f44" xml:space="preserve">
          <source>The first code snippet below shows the sample data used for populating a C# list of BlogPost objects:</source>
          <target state="new">The first code snippet below shows the sample data used for populating a C# list of BlogPost objects:</target>
        </trans-unit>
        <trans-unit id="fa6bb2a4-bb83-4511-a625-f0ff9747b9fd" xml:space="preserve">
          <source>You can store the tags for each BlogPost object as a set in a Redis cache and associate each set with the ID of the BlogPost.</source>
          <target state="new">You can store the tags for each BlogPost object as a set in a Redis cache and associate each set with the ID of the BlogPost.</target>
        </trans-unit>
        <trans-unit id="9861d67f-f1ec-418a-90f9-fd6cf7b36176" xml:space="preserve">
          <source>This enables an application to quickly find all the tags belonging to a specific blog post.</source>
          <target state="new">This enables an application to quickly find all the tags belonging to a specific blog post.</target>
        </trans-unit>
        <trans-unit id="3e963583-57ca-4862-9db2-329ea003f6d5" xml:space="preserve">
          <source>To enable searching in the opposite direction and find all blog posts that share a specific tag, you can create another set that holds the blog posts referencing the tag ID in the key:</source>
          <target state="new">To enable searching in the opposite direction and find all blog posts that share a specific tag, you can create another set that holds the blog posts referencing the tag ID in the key:</target>
        </trans-unit>
        <trans-unit id="4fb4941c-9816-495b-984c-2aacff0d7fb0" xml:space="preserve">
          <source>These structures enable you to perform many common queries very efficiently.</source>
          <target state="new">These structures enable you to perform many common queries very efficiently.</target>
        </trans-unit>
        <trans-unit id="213a5754-8f54-4719-a5e1-123aecd24301" xml:space="preserve">
          <source>For example, you can find and display all of the tags for blog post 1 like this:</source>
          <target state="new">For example, you can find and display all of the tags for blog post 1 like this:</target>
        </trans-unit>
        <trans-unit id="4543cba8-b22e-4c23-8cc8-4313d921fd7a" xml:space="preserve">
          <source>You can find all tags that are common to blog post 1 and blog post 2 by performing a set intersection operation, as follows:</source>
          <target state="new">You can find all tags that are common to blog post 1 and blog post 2 by performing a set intersection operation, as follows:</target>
        </trans-unit>
        <trans-unit id="5188a959-a871-40fe-ae0d-1909fb9e978f" xml:space="preserve">
          <source>And you can find all blog posts that contain a specific tag:</source>
          <target state="new">And you can find all blog posts that contain a specific tag:</target>
        </trans-unit>
        <trans-unit id="07561279-2fca-4cee-b9cc-74d7bdb3dc82" xml:space="preserve">
          <source>A common problem required by many applications is to find the most recently accessed items.</source>
          <target state="new">A common problem required by many applications is to find the most recently accessed items.</target>
        </trans-unit>
        <trans-unit id="81f7ea4a-377c-47b2-825f-5e60d7bdbd05" xml:space="preserve">
          <source>For example, a blogging site might want to display information about the most recently read blog posts.</source>
          <target state="new">For example, a blogging site might want to display information about the most recently read blog posts.</target>
        </trans-unit>
        <trans-unit id="36d3e1ef-e971-4bde-a204-f18332de7c7f" xml:space="preserve">
          <source>You can implement this functionality by using a Redis list.</source>
          <target state="new">You can implement this functionality by using a Redis list.</target>
        </trans-unit>
        <trans-unit id="11213b21-7e72-4794-b6b8-428631be0598" xml:space="preserve">
          <source>A Redis list contains multiple items that share the same key, but the list acts as a double-ended queue.</source>
          <target state="new">A Redis list contains multiple items that share the same key, but the list acts as a double-ended queue.</target>
        </trans-unit>
        <trans-unit id="3541a02b-cd1c-4cae-af3e-26558d47b70b" xml:space="preserve">
          <source>You can push items on to either end of the list by using the LPUSH (left push) and RPUSH (right push) commands.</source>
          <target state="new">You can push items on to either end of the list by using the LPUSH (left push) and RPUSH (right push) commands.</target>
        </trans-unit>
        <trans-unit id="7daa000b-3330-4a4f-a6f2-50683a27c785" xml:space="preserve">
          <source>You can retrieve items from either end of the list by using the LPOP and RPOP commands.</source>
          <target state="new">You can retrieve items from either end of the list by using the LPOP and RPOP commands.</target>
        </trans-unit>
        <trans-unit id="900a1d8a-24e7-4ff8-9054-0684264532cb" xml:space="preserve">
          <source>You can also return a set of elements by using the LRANGE and RRANGE commands.</source>
          <target state="new">You can also return a set of elements by using the LRANGE and RRANGE commands.</target>
        </trans-unit>
        <trans-unit id="40377528-7d20-4bf6-82d8-1abfb7cffcaa" xml:space="preserve">
          <source>The code snippets below show how you can perform these operations by using the StackExchange library.</source>
          <target state="new">The code snippets below show how you can perform these operations by using the StackExchange library.</target>
        </trans-unit>
        <trans-unit id="567c9a44-6c0e-4d71-a0bc-566c96fcf09d" xml:space="preserve">
          <source>This code uses the BlogPost type from the previous examples.</source>
          <target state="new">This code uses the BlogPost type from the previous examples.</target>
        </trans-unit>
        <trans-unit id="4a4ac62e-b71b-4a2b-8fd9-f11f805d0829" xml:space="preserve">
          <source>As a blog post is read by a user, the title of the blog post is pushed onto a list associated with the key "blog:recent_posts" in the Redis cache by using the IDatabase.ListLeftPushAsync method:</source>
          <target state="new">As a blog post is read by a user, the title of the blog post is pushed onto a list associated with the key "blog:recent_posts" in the Redis cache by using the IDatabase.ListLeftPushAsync method:</target>
        </trans-unit>
        <trans-unit id="815accca-77d2-4b44-9595-08c835d67944" xml:space="preserve">
          <source>As more blog posts are read, their titles are pushed onto the same list.</source>
          <target state="new">As more blog posts are read, their titles are pushed onto the same list.</target>
        </trans-unit>
        <trans-unit id="4bcdf470-544a-4885-9acb-b5fb6a11a2ac" xml:space="preserve">
          <source>The list is ordered by the sequence in which they have been added; the most recently read blog posts are towards the left end of the list (if the same blog post is read more than once, it will have multiple entries in the list).</source>
          <target state="new">The list is ordered by the sequence in which they have been added; the most recently read blog posts are towards the left end of the list (if the same blog post is read more than once, it will have multiple entries in the list).</target>
        </trans-unit>
        <trans-unit id="465e817a-c39e-4050-8610-ca2500c0a2d6" xml:space="preserve">
          <source>You can display the titles of the most recently read posts by using the IDatabase.ListRange method.</source>
          <target state="new">You can display the titles of the most recently read posts by using the IDatabase.ListRange method.</target>
        </trans-unit>
        <trans-unit id="95c0a83a-a10f-4bc0-aaa5-d94093b2dd29" xml:space="preserve">
          <source>This method takes the key that contains the list, a starting point, and an ending point.</source>
          <target state="new">This method takes the key that contains the list, a starting point, and an ending point.</target>
        </trans-unit>
        <trans-unit id="af6143dc-2b31-47ba-aabd-94b880ccdbb8" xml:space="preserve">
          <source>The following code retrieves the titles of the 10 blog posts (items from 0 to 9) at the left-most end of the list:</source>
          <target state="new">The following code retrieves the titles of the 10 blog posts (items from 0 to 9) at the left-most end of the list:</target>
        </trans-unit>
        <trans-unit id="b020c912-1876-423c-9ed1-152dd8b37522" xml:space="preserve">
          <source>Note that ListRangeAsync does not remove items from the list; to do this you can use the IDatabase.ListLeftPopAsync and IDatabase.ListRightPopAsync methods.</source>
          <target state="new">Note that ListRangeAsync does not remove items from the list; to do this you can use the IDatabase.ListLeftPopAsync and IDatabase.ListRightPopAsync methods.</target>
        </trans-unit>
        <trans-unit id="925462a9-33b6-48e6-ac3a-3474c0bdf026" xml:space="preserve">
          <source>To prevent the list from growing indefinitely, you can periodically cull items by trimming the list.</source>
          <target state="new">To prevent the list from growing indefinitely, you can periodically cull items by trimming the list.</target>
        </trans-unit>
        <trans-unit id="906be7ba-2f65-4fa2-a85a-3ab9fce077aa" xml:space="preserve">
          <source>The code snippet below, removes all but the 5 left-most items from the list:</source>
          <target state="new">The code snippet below, removes all but the 5 left-most items from the list:</target>
        </trans-unit>
        <trans-unit id="c38d901f-a3e8-4d5e-be58-8f08a68c1d08" xml:space="preserve">
          <source>By default the items in a set are not held in any specific order.</source>
          <target state="new">By default the items in a set are not held in any specific order.</target>
        </trans-unit>
        <trans-unit id="045e3ffe-8e79-447e-a553-249e241e528a" xml:space="preserve">
          <source>You can create an ordered set by using the ZADD command (the IDatabase.SortedSetAdd method in the StackExchange library).</source>
          <target state="new">You can create an ordered set by using the ZADD command (the IDatabase.SortedSetAdd method in the StackExchange library).</target>
        </trans-unit>
        <trans-unit id="3a2631d4-01f0-453b-9056-53f8af68c9fe" xml:space="preserve">
          <source>The items are ordered by using a numeric value called a score provided as a parameter to the command.</source>
          <target state="new">The items are ordered by using a numeric value called a score provided as a parameter to the command.</target>
        </trans-unit>
        <trans-unit id="3dfcb604-48c5-4b6a-9489-e3584c6cb9c0" xml:space="preserve">
          <source>The following code snippet adds the title of a blog post to an ordered list.</source>
          <target state="new">The following code snippet adds the title of a blog post to an ordered list.</target>
        </trans-unit>
        <trans-unit id="9c86d0fc-f5de-4004-a765-3a098689db0f" xml:space="preserve">
          <source>In the example, each blog post also has a score field that contains the ranking of the blog post.</source>
          <target state="new">In the example, each blog post also has a score field that contains the ranking of the blog post.</target>
        </trans-unit>
        <trans-unit id="ed627fcf-7527-4a4f-b512-2f67fc500cc4" xml:space="preserve">
          <source>You can retrieve the blog post titles and scores in ascending score order by using the IDatabase.SortedSetRangeByRankWithScores method:</source>
          <target state="new">You can retrieve the blog post titles and scores in ascending score order by using the IDatabase.SortedSetRangeByRankWithScores method:</target>
        </trans-unit>
        <trans-unit id="8ef44731-a299-4854-a293-219b480fc11d" xml:space="preserve">
          <source>The StackExchange library also provides the IDatabase.SortedSetRangeByRankAsync method which returns the data in score order, but does not return the scores.</source>
          <target state="new">The StackExchange library also provides the IDatabase.SortedSetRangeByRankAsync method which returns the data in score order, but does not return the scores.</target>
        </trans-unit>
        <trans-unit id="31c8efbc-b98d-4df0-a046-3ee77f101374" xml:space="preserve">
          <source>You can also retrieve items in descending order of scores, and limit the number of items returned by providing additional parameters to the IDatabase.SortedSetRangeByRankWithScoresAsync method.</source>
          <target state="new">You can also retrieve items in descending order of scores, and limit the number of items returned by providing additional parameters to the IDatabase.SortedSetRangeByRankWithScoresAsync method.</target>
        </trans-unit>
        <trans-unit id="c8f36eb5-ac8f-4f8e-b792-64ad1dd91310" xml:space="preserve">
          <source>The next example displays the titles and scores of the top 10 ranked blog posts:</source>
          <target state="new">The next example displays the titles and scores of the top 10 ranked blog posts:</target>
        </trans-unit>
        <trans-unit id="b33b1e23-8ca6-489b-9531-5ccea1771662" xml:space="preserve">
          <source>The next example uses the IDatabase.SortedSetRangeByScoreWithScoresAsync method which you can use to limit the items returned to those that fall within a given score range:</source>
          <target state="new">The next example uses the IDatabase.SortedSetRangeByScoreWithScoresAsync method which you can use to limit the items returned to those that fall within a given score range:</target>
        </trans-unit>
        <trans-unit id="f04644e3-2776-4f25-acef-f54d2882419d" xml:space="preserve">
          <source>Apart from acting as a data cache, a Redis server provides messaging through a high-performance publisher/subscriber mechanism.</source>
          <target state="new">Apart from acting as a data cache, a Redis server provides messaging through a high-performance publisher/subscriber mechanism.</target>
        </trans-unit>
        <trans-unit id="aee1fa54-8e7a-4909-bce1-88dfd539a0ee" xml:space="preserve">
          <source>Client applications can subscribe to a channel, and other applications or services can publish messages to the channel.</source>
          <target state="new">Client applications can subscribe to a channel, and other applications or services can publish messages to the channel.</target>
        </trans-unit>
        <trans-unit id="9b3fc9c3-88c3-4b2a-8ef6-646f148a8187" xml:space="preserve">
          <source>Subscribing applications will then receive these messages and can process them.</source>
          <target state="new">Subscribing applications will then receive these messages and can process them.</target>
        </trans-unit>
        <trans-unit id="c9aadbd0-35e1-4896-ad6a-fa090c58da8e" xml:space="preserve">
          <source>To subscribe to channel, Redis provides the SUBSCRIBE command.</source>
          <target state="new">To subscribe to channel, Redis provides the SUBSCRIBE command.</target>
        </trans-unit>
        <trans-unit id="a6eee518-ae11-4bb6-bbbe-e3567d81d1d0" xml:space="preserve">
          <source>This command expects the name of one or more channels on which the application will accept messages.</source>
          <target state="new">This command expects the name of one or more channels on which the application will accept messages.</target>
        </trans-unit>
        <trans-unit id="07444f2f-d15e-4d7a-a5ef-6a16f89ee704" xml:space="preserve">
          <source>The StackExchange library includes the ISubscription interface which enables a .NET Framework application to subscribe and publish to channels.</source>
          <target state="new">The StackExchange library includes the ISubscription interface which enables a .NET Framework application to subscribe and publish to channels.</target>
        </trans-unit>
        <trans-unit id="7297ed35-cca9-4360-8695-960845400b1b" xml:space="preserve">
          <source>You create an ISubscription object by using the GetSubscriber method of the connection to the Redis server, and then listen for messages on a channel by using the SubscribeAsync method of this object.</source>
          <target state="new">You create an ISubscription object by using the GetSubscriber method of the connection to the Redis server, and then listen for messages on a channel by using the SubscribeAsync method of this object.</target>
        </trans-unit>
        <trans-unit id="78868788-67fb-43ad-8a83-74409d59245b" xml:space="preserve">
          <source>The following code example shows how to subscribe to a channel named "messages:blogPosts":</source>
          <target state="new">The following code example shows how to subscribe to a channel named "messages:blogPosts":</target>
        </trans-unit>
        <trans-unit id="4cfca804-73bc-456c-937c-60cc71aa568b" xml:space="preserve">
          <source>The first parameter to the Subscribe method is the name of the channel.</source>
          <target state="new">The first parameter to the Subscribe method is the name of the channel.</target>
        </trans-unit>
        <trans-unit id="2da38339-6388-4841-8a34-72b8a72a227b" xml:space="preserve">
          <source>This name follows the same conventions as that used by keys in the cache, and can contain any binary data, although it is advisable to use relatively short, meaningful strings to help ensure good performance and maintainability.</source>
          <target state="new">This name follows the same conventions as that used by keys in the cache, and can contain any binary data, although it is advisable to use relatively short, meaningful strings to help ensure good performance and maintainability.</target>
        </trans-unit>
        <trans-unit id="f4d990c5-f9bd-483a-922d-3470a8a16119" xml:space="preserve">
          <source>You should also note that the namespace used by channels is separate from that used by keys, so you can have channels and keys that have the same name, although this may make your application code more difficult to maintain.</source>
          <target state="new">You should also note that the namespace used by channels is separate from that used by keys, so you can have channels and keys that have the same name, although this may make your application code more difficult to maintain.</target>
        </trans-unit>
        <trans-unit id="a8f4b551-413c-4f9a-b04e-ee74af27ef11" xml:space="preserve">
          <source>The second parameter is an Action delegate.</source>
          <target state="new">The second parameter is an Action delegate.</target>
        </trans-unit>
        <trans-unit id="cb9619b5-d7c3-4ce5-9cd8-70e166814bb8" xml:space="preserve">
          <source>This delegate runs asynchronously whenever a new message appears on the channel.</source>
          <target state="new">This delegate runs asynchronously whenever a new message appears on the channel.</target>
        </trans-unit>
        <trans-unit id="e831afed-4b68-424a-9861-ce24efdba769" xml:space="preserve">
          <source>This example simply displays the message on the console (the message will contain the title of a blog post).</source>
          <target state="new">This example simply displays the message on the console (the message will contain the title of a blog post).</target>
        </trans-unit>
        <trans-unit id="9075b668-9810-4852-948d-2f5c3423ad36" xml:space="preserve">
          <source>To publish to a channel, an application can use the Redis PUBLISH command.</source>
          <target state="new">To publish to a channel, an application can use the Redis PUBLISH command.</target>
        </trans-unit>
        <trans-unit id="d1c17e6a-8288-44b2-b75c-3c7c891c04ce" xml:space="preserve">
          <source>The StackExchange library provides the IServer.PublishAsync method to perform this operation.</source>
          <target state="new">The StackExchange library provides the IServer.PublishAsync method to perform this operation.</target>
        </trans-unit>
        <trans-unit id="7c9bb87a-4d90-4c0f-918c-e16c1353b872" xml:space="preserve">
          <source>The next code snippet shows how to publish a message to the "messages:blogPosts" channel:</source>
          <target state="new">The next code snippet shows how to publish a message to the "messages:blogPosts" channel:</target>
        </trans-unit>
        <trans-unit id="20a023b0-f65d-4f6b-8e4a-d43a2ca4b69b" xml:space="preserve">
          <source>There are several points you should understand about the publish/subscribe mechanism:</source>
          <target state="new">There are several points you should understand about the publish/subscribe mechanism:</target>
        </trans-unit>
        <trans-unit id="82c0968b-bf04-4e29-a99c-d83e3837c67d" xml:space="preserve">
          <source>Multiple subscribers can subscribe to the same channel, and they will all receive the messages published to that channel.</source>
          <target state="new">Multiple subscribers can subscribe to the same channel, and they will all receive the messages published to that channel.</target>
        </trans-unit>
        <trans-unit id="f908919c-98b5-469d-b8df-4e1c1a4723e5" xml:space="preserve">
          <source>Subscribers only receive messages that have been published after they have subscribed.</source>
          <target state="new">Subscribers only receive messages that have been published after they have subscribed.</target>
        </trans-unit>
        <trans-unit id="cd277612-df5e-4ff2-a0b7-ebe1bdc797b1" xml:space="preserve">
          <source>Channels are not buffered, and once a message is published the Redis infrastructure pushes the message to each subscriber and then removes it.</source>
          <target state="new">Channels are not buffered, and once a message is published the Redis infrastructure pushes the message to each subscriber and then removes it.</target>
        </trans-unit>
        <trans-unit id="13d5fd02-b606-4214-a3d3-c948e28b9e99" xml:space="preserve">
          <source>By default, messages are received by subscribers in the order in which they are sent.</source>
          <target state="new">By default, messages are received by subscribers in the order in which they are sent.</target>
        </trans-unit>
        <trans-unit id="9e873dd5-b822-4edb-9894-5c3ecfcd14e3" xml:space="preserve">
          <source>In a highly active system with a large number
of messages and many subscribers and publishers, guaranteed sequential delivery of messages can slow performance of the system.</source>
          <target state="new">In a highly active system with a large number
of messages and many subscribers and publishers, guaranteed sequential delivery of messages can slow performance of the system.</target>
        </trans-unit>
        <trans-unit id="dd76cfce-5f0f-42f0-b248-284e715ca287" xml:space="preserve">
          <source>If
each message is independent and the order is immaterial you can enable concurrent processing by the Redis system which can help to
improve responsiveness.</source>
          <target state="new">If
each message is independent and the order is immaterial you can enable concurrent processing by the Redis system which can help to
improve responsiveness.</target>
        </trans-unit>
        <trans-unit id="a13f9e4c-aeec-4a3e-a1f7-bf8c64ed5c32" xml:space="preserve">
          <source>You can achieve this in a StackExchange client by setting the PreserveAsyncOrder of the connection used by
the subscriber to false:</source>
          <target state="new">You can achieve this in a StackExchange client by setting the PreserveAsyncOrder of the connection used by
the subscriber to false:</target>
        </trans-unit>
        <trans-unit id="b63c0c93-5986-44c4-9fd3-f7119cf1946f" xml:space="preserve">
          <source>The following pattern may also be relevant to your scenario when implementing caching in your applications:</source>
          <target state="new">The following pattern may also be relevant to your scenario when implementing caching in your applications:</target>
        </trans-unit>
        <trans-unit id="3688362a-1f9d-4e3c-9357-2124c6e55143" xml:space="preserve">
          <source><bpt id="92a6e56d-c226-4d6e-9a7a-aaa4ee483c89">&lt;linkText&gt;</bpt>Cache-Aside Pattern<ept id="92a6e56d-c226-4d6e-9a7a-aaa4ee483c89">&lt;/linkText&gt;</ept><bpt id="92a6e56d-c226-4d6e-9a7a-aaa4ee483c89">&lt;title&gt;</bpt><ept id="92a6e56d-c226-4d6e-9a7a-aaa4ee483c89">&lt;/title&gt;</ept>: This pattern describes how to load data on-demand into a cache from a data store.</source>
          <target state="new"><bpt id="92a6e56d-c226-4d6e-9a7a-aaa4ee483c89">&lt;linkText&gt;</bpt>Cache-Aside Pattern<ept id="92a6e56d-c226-4d6e-9a7a-aaa4ee483c89">&lt;/linkText&gt;</ept><bpt id="92a6e56d-c226-4d6e-9a7a-aaa4ee483c89">&lt;title&gt;</bpt><ept id="92a6e56d-c226-4d6e-9a7a-aaa4ee483c89">&lt;/title&gt;</ept>: This pattern describes how to load data on-demand into a cache from a data store.</target>
        </trans-unit>
        <trans-unit id="3aef14d6-f274-4c9d-992d-eba237587c8c" xml:space="preserve">
          <source>This pattern also helps to maintain consistency between data held in the cache and the data in the original data store.</source>
          <target state="new">This pattern also helps to maintain consistency between data held in the cache and the data in the original data store.</target>
        </trans-unit>
        <trans-unit id="2837c144-ccce-4525-b984-1cd50d29f3a1" xml:space="preserve">
          <source>The <bpt id="7090a5bd-c593-4a3f-a357-79f46a01fc1a">&lt;linkText&gt;</bpt>Sharding Pattern<ept id="7090a5bd-c593-4a3f-a357-79f46a01fc1a">&lt;/linkText&gt;</ept><bpt id="7090a5bd-c593-4a3f-a357-79f46a01fc1a">&lt;title&gt;</bpt><ept id="7090a5bd-c593-4a3f-a357-79f46a01fc1a">&lt;/title&gt;</ept> provides information on implementing horizontal partitioning to help improve scalability when storing and accessing large volumes of data.</source>
          <target state="new">The <bpt id="7090a5bd-c593-4a3f-a357-79f46a01fc1a">&lt;linkText&gt;</bpt>Sharding Pattern<ept id="7090a5bd-c593-4a3f-a357-79f46a01fc1a">&lt;/linkText&gt;</ept><bpt id="7090a5bd-c593-4a3f-a357-79f46a01fc1a">&lt;title&gt;</bpt><ept id="7090a5bd-c593-4a3f-a357-79f46a01fc1a">&lt;/title&gt;</ept> provides information on implementing horizontal partitioning to help improve scalability when storing and accessing large volumes of data.</target>
        </trans-unit>
        <trans-unit id="6d8eba3b-dcea-43c6-95d4-9f12a9eb011f" xml:space="preserve">
          <source>The <bpt id="dc88fcb6-3f80-4619-bc36-ce95f91d27e5">&lt;linkText&gt;</bpt>MemoryCache Class<ept id="dc88fcb6-3f80-4619-bc36-ce95f91d27e5">&lt;/linkText&gt;</ept><bpt id="dc88fcb6-3f80-4619-bc36-ce95f91d27e5">&lt;title&gt;</bpt><ept id="dc88fcb6-3f80-4619-bc36-ce95f91d27e5">&lt;/title&gt;</ept> page on the Microsoft website.</source>
          <target state="new">The <bpt id="dc88fcb6-3f80-4619-bc36-ce95f91d27e5">&lt;linkText&gt;</bpt>MemoryCache Class<ept id="dc88fcb6-3f80-4619-bc36-ce95f91d27e5">&lt;/linkText&gt;</ept><bpt id="dc88fcb6-3f80-4619-bc36-ce95f91d27e5">&lt;title&gt;</bpt><ept id="dc88fcb6-3f80-4619-bc36-ce95f91d27e5">&lt;/title&gt;</ept> page on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="d4a2eb14-bfba-46a6-94e1-7203c9f77d53" xml:space="preserve">
          <source>The <bpt id="adf58c84-1e37-4a12-8c31-c438c09c698e">&lt;linkText&gt;</bpt>Microsoft Azure Cache<ept id="adf58c84-1e37-4a12-8c31-c438c09c698e">&lt;/linkText&gt;</ept><bpt id="adf58c84-1e37-4a12-8c31-c438c09c698e">&lt;title&gt;</bpt><ept id="adf58c84-1e37-4a12-8c31-c438c09c698e">&lt;/title&gt;</ept> page on the Microsoft website.</source>
          <target state="new">The <bpt id="adf58c84-1e37-4a12-8c31-c438c09c698e">&lt;linkText&gt;</bpt>Microsoft Azure Cache<ept id="adf58c84-1e37-4a12-8c31-c438c09c698e">&lt;/linkText&gt;</ept><bpt id="adf58c84-1e37-4a12-8c31-c438c09c698e">&lt;title&gt;</bpt><ept id="adf58c84-1e37-4a12-8c31-c438c09c698e">&lt;/title&gt;</ept> page on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="784725b9-2123-43a8-abf1-af3e892bc8fa" xml:space="preserve">
          <source>The <bpt id="5db52b43-d4c8-4564-8f0d-e1bc3f2e4573">&lt;linkText&gt;</bpt>Which Azure Cache offering is right for me?<ept id="5db52b43-d4c8-4564-8f0d-e1bc3f2e4573">&lt;/linkText&gt;</ept><bpt id="5db52b43-d4c8-4564-8f0d-e1bc3f2e4573">&lt;title&gt;</bpt><ept id="5db52b43-d4c8-4564-8f0d-e1bc3f2e4573">&lt;/title&gt;</ept> page on the Microsoft website.</source>
          <target state="new">The <bpt id="5db52b43-d4c8-4564-8f0d-e1bc3f2e4573">&lt;linkText&gt;</bpt>Which Azure Cache offering is right for me?<ept id="5db52b43-d4c8-4564-8f0d-e1bc3f2e4573">&lt;/linkText&gt;</ept><bpt id="5db52b43-d4c8-4564-8f0d-e1bc3f2e4573">&lt;title&gt;</bpt><ept id="5db52b43-d4c8-4564-8f0d-e1bc3f2e4573">&lt;/title&gt;</ept> page on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="8fbe0043-eaca-438d-9877-b6f11e2b3f7b" xml:space="preserve">
          <source>The <bpt id="ee0e86b4-453c-47b1-bb11-e1bb83dce6f5">&lt;linkText&gt;</bpt>Configuration Model<ept id="ee0e86b4-453c-47b1-bb11-e1bb83dce6f5">&lt;/linkText&gt;</ept><bpt id="ee0e86b4-453c-47b1-bb11-e1bb83dce6f5">&lt;title&gt;</bpt><ept id="ee0e86b4-453c-47b1-bb11-e1bb83dce6f5">&lt;/title&gt;</ept> page on the Microsoft website.</source>
          <target state="new">The <bpt id="ee0e86b4-453c-47b1-bb11-e1bb83dce6f5">&lt;linkText&gt;</bpt>Configuration Model<ept id="ee0e86b4-453c-47b1-bb11-e1bb83dce6f5">&lt;/linkText&gt;</ept><bpt id="ee0e86b4-453c-47b1-bb11-e1bb83dce6f5">&lt;title&gt;</bpt><ept id="ee0e86b4-453c-47b1-bb11-e1bb83dce6f5">&lt;/title&gt;</ept> page on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="e689bc46-2b50-482d-a1b8-9c1d2b3f8fab" xml:space="preserve">
          <source>The <bpt id="ffc4efbd-01e3-4e82-a406-0453965886e8">&lt;linkText&gt;</bpt>Task-based Asynchronous Pattern<ept id="ffc4efbd-01e3-4e82-a406-0453965886e8">&lt;/linkText&gt;</ept><bpt id="ffc4efbd-01e3-4e82-a406-0453965886e8">&lt;title&gt;</bpt><ept id="ffc4efbd-01e3-4e82-a406-0453965886e8">&lt;/title&gt;</ept> page on the Microsoft website.</source>
          <target state="new">The <bpt id="ffc4efbd-01e3-4e82-a406-0453965886e8">&lt;linkText&gt;</bpt>Task-based Asynchronous Pattern<ept id="ffc4efbd-01e3-4e82-a406-0453965886e8">&lt;/linkText&gt;</ept><bpt id="ffc4efbd-01e3-4e82-a406-0453965886e8">&lt;title&gt;</bpt><ept id="ffc4efbd-01e3-4e82-a406-0453965886e8">&lt;/title&gt;</ept> page on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="90e93d21-fe72-4aa4-9872-a38cd8eb6804" xml:space="preserve">
          <source>The <bpt id="da4230e4-7c02-4987-9a60-30bc211724ab">&lt;linkText&gt;</bpt>Pipelines and Multiplexers<ept id="da4230e4-7c02-4987-9a60-30bc211724ab">&lt;/linkText&gt;</ept><bpt id="da4230e4-7c02-4987-9a60-30bc211724ab">&lt;title&gt;</bpt><ept id="da4230e4-7c02-4987-9a60-30bc211724ab">&lt;/title&gt;</ept> page on the StackExchange.Redis GitHub repo.</source>
          <target state="new">The <bpt id="da4230e4-7c02-4987-9a60-30bc211724ab">&lt;linkText&gt;</bpt>Pipelines and Multiplexers<ept id="da4230e4-7c02-4987-9a60-30bc211724ab">&lt;/linkText&gt;</ept><bpt id="da4230e4-7c02-4987-9a60-30bc211724ab">&lt;title&gt;</bpt><ept id="da4230e4-7c02-4987-9a60-30bc211724ab">&lt;/title&gt;</ept> page on the StackExchange.Redis GitHub repo.</target>
        </trans-unit>
        <trans-unit id="551a21f3-cd4f-4c37-bd3f-d1a601948739" xml:space="preserve">
          <source>The <bpt id="877b66f9-06f6-45c7-9e95-58b706d51126">&lt;linkText&gt;</bpt>Redis Persistence<ept id="877b66f9-06f6-45c7-9e95-58b706d51126">&lt;/linkText&gt;</ept><bpt id="877b66f9-06f6-45c7-9e95-58b706d51126">&lt;title&gt;</bpt><ept id="877b66f9-06f6-45c7-9e95-58b706d51126">&lt;/title&gt;</ept> page on the Redis website.</source>
          <target state="new">The <bpt id="877b66f9-06f6-45c7-9e95-58b706d51126">&lt;linkText&gt;</bpt>Redis Persistence<ept id="877b66f9-06f6-45c7-9e95-58b706d51126">&lt;/linkText&gt;</ept><bpt id="877b66f9-06f6-45c7-9e95-58b706d51126">&lt;title&gt;</bpt><ept id="877b66f9-06f6-45c7-9e95-58b706d51126">&lt;/title&gt;</ept> page on the Redis website.</target>
        </trans-unit>
        <trans-unit id="2d5895b8-8dbc-4d3a-bd30-9055888c23aa" xml:space="preserve">
          <source>The <bpt id="9b79713a-2066-49f2-94e0-80ed24c1d81e">&lt;linkText&gt;</bpt>Replication page<ept id="9b79713a-2066-49f2-94e0-80ed24c1d81e">&lt;/linkText&gt;</ept><bpt id="9b79713a-2066-49f2-94e0-80ed24c1d81e">&lt;title&gt;</bpt><ept id="9b79713a-2066-49f2-94e0-80ed24c1d81e">&lt;/title&gt;</ept> on the Redis website.</source>
          <target state="new">The <bpt id="9b79713a-2066-49f2-94e0-80ed24c1d81e">&lt;linkText&gt;</bpt>Replication page<ept id="9b79713a-2066-49f2-94e0-80ed24c1d81e">&lt;/linkText&gt;</ept><bpt id="9b79713a-2066-49f2-94e0-80ed24c1d81e">&lt;title&gt;</bpt><ept id="9b79713a-2066-49f2-94e0-80ed24c1d81e">&lt;/title&gt;</ept> on the Redis website.</target>
        </trans-unit>
        <trans-unit id="42d4b4ca-7968-4412-86f2-9f1c2edc8e60" xml:space="preserve">
          <source>The <bpt id="ec40e9fe-b59b-4e2c-8be2-e3f40283f418">&lt;linkText&gt;</bpt>Redis Cluster Tutorial<ept id="ec40e9fe-b59b-4e2c-8be2-e3f40283f418">&lt;/linkText&gt;</ept><bpt id="ec40e9fe-b59b-4e2c-8be2-e3f40283f418">&lt;title&gt;</bpt><ept id="ec40e9fe-b59b-4e2c-8be2-e3f40283f418">&lt;/title&gt;</ept> page on the Redis website.</source>
          <target state="new">The <bpt id="ec40e9fe-b59b-4e2c-8be2-e3f40283f418">&lt;linkText&gt;</bpt>Redis Cluster Tutorial<ept id="ec40e9fe-b59b-4e2c-8be2-e3f40283f418">&lt;/linkText&gt;</ept><bpt id="ec40e9fe-b59b-4e2c-8be2-e3f40283f418">&lt;title&gt;</bpt><ept id="ec40e9fe-b59b-4e2c-8be2-e3f40283f418">&lt;/title&gt;</ept> page on the Redis website.</target>
        </trans-unit>
        <trans-unit id="1d6e5f5a-29ac-4937-b83e-d6cd24d16fa2" xml:space="preserve">
          <source>The <bpt id="afb63e50-91f5-4795-9846-a4827430ad5a">&lt;linkText&gt;</bpt>Partitioning: how to split data among multiple Redis instances<ept id="afb63e50-91f5-4795-9846-a4827430ad5a">&lt;/linkText&gt;</ept><bpt id="afb63e50-91f5-4795-9846-a4827430ad5a">&lt;title&gt;</bpt><ept id="afb63e50-91f5-4795-9846-a4827430ad5a">&lt;/title&gt;</ept> page on the Redis website.</source>
          <target state="new">The <bpt id="afb63e50-91f5-4795-9846-a4827430ad5a">&lt;linkText&gt;</bpt>Partitioning: how to split data among multiple Redis instances<ept id="afb63e50-91f5-4795-9846-a4827430ad5a">&lt;/linkText&gt;</ept><bpt id="afb63e50-91f5-4795-9846-a4827430ad5a">&lt;title&gt;</bpt><ept id="afb63e50-91f5-4795-9846-a4827430ad5a">&lt;/title&gt;</ept> page on the Redis website.</target>
        </trans-unit>
        <trans-unit id="f32f5c29-3e33-4659-b29c-b96ea804efae" xml:space="preserve">
          <source>The page <bpt id="57f9873a-f90e-4d5d-b0a1-49ef863151c9">&lt;linkText&gt;</bpt>Using Redis as an LRU Cache<ept id="57f9873a-f90e-4d5d-b0a1-49ef863151c9">&lt;/linkText&gt;</ept><bpt id="57f9873a-f90e-4d5d-b0a1-49ef863151c9">&lt;title&gt;</bpt><ept id="57f9873a-f90e-4d5d-b0a1-49ef863151c9">&lt;/title&gt;</ept> on the Redis website.</source>
          <target state="new">The page <bpt id="57f9873a-f90e-4d5d-b0a1-49ef863151c9">&lt;linkText&gt;</bpt>Using Redis as an LRU Cache<ept id="57f9873a-f90e-4d5d-b0a1-49ef863151c9">&lt;/linkText&gt;</ept><bpt id="57f9873a-f90e-4d5d-b0a1-49ef863151c9">&lt;title&gt;</bpt><ept id="57f9873a-f90e-4d5d-b0a1-49ef863151c9">&lt;/title&gt;</ept> on the Redis website.</target>
        </trans-unit>
        <trans-unit id="9c1e4ef8-fe2d-4147-a23e-430f1186c59d" xml:space="preserve">
          <source>The <bpt id="15921490-80e2-451d-aaa5-be0de928b8b7">&lt;linkText&gt;</bpt>Transactions page<ept id="15921490-80e2-451d-aaa5-be0de928b8b7">&lt;/linkText&gt;</ept><bpt id="15921490-80e2-451d-aaa5-be0de928b8b7">&lt;title&gt;</bpt><ept id="15921490-80e2-451d-aaa5-be0de928b8b7">&lt;/title&gt;</ept> on the Redis website.</source>
          <target state="new">The <bpt id="15921490-80e2-451d-aaa5-be0de928b8b7">&lt;linkText&gt;</bpt>Transactions page<ept id="15921490-80e2-451d-aaa5-be0de928b8b7">&lt;/linkText&gt;</ept><bpt id="15921490-80e2-451d-aaa5-be0de928b8b7">&lt;title&gt;</bpt><ept id="15921490-80e2-451d-aaa5-be0de928b8b7">&lt;/title&gt;</ept> on the Redis website.</target>
        </trans-unit>
        <trans-unit id="94af0ae9-4cb4-4bba-9864-5311cb48ea47" xml:space="preserve">
          <source>The <bpt id="364cbaf9-8aeb-4d22-8cb8-f0c172e70d08">&lt;linkText&gt;</bpt>Redis Security<ept id="364cbaf9-8aeb-4d22-8cb8-f0c172e70d08">&lt;/linkText&gt;</ept><bpt id="364cbaf9-8aeb-4d22-8cb8-f0c172e70d08">&lt;title&gt;</bpt><ept id="364cbaf9-8aeb-4d22-8cb8-f0c172e70d08">&lt;/title&gt;</ept> page on the Redis website.</source>
          <target state="new">The <bpt id="364cbaf9-8aeb-4d22-8cb8-f0c172e70d08">&lt;linkText&gt;</bpt>Redis Security<ept id="364cbaf9-8aeb-4d22-8cb8-f0c172e70d08">&lt;/linkText&gt;</ept><bpt id="364cbaf9-8aeb-4d22-8cb8-f0c172e70d08">&lt;title&gt;</bpt><ept id="364cbaf9-8aeb-4d22-8cb8-f0c172e70d08">&lt;/title&gt;</ept> page on the Redis website.</target>
        </trans-unit>
        <trans-unit id="082e5b40-9173-43bc-b922-d9bb04e0f455" xml:space="preserve">
          <source>The page <bpt id="eafbe78b-599c-490e-b2ea-5ac299081c7a">&lt;linkText&gt;</bpt>Lap around Azure Redis Cache<ept id="eafbe78b-599c-490e-b2ea-5ac299081c7a">&lt;/linkText&gt;</ept><bpt id="eafbe78b-599c-490e-b2ea-5ac299081c7a">&lt;title&gt;</bpt><ept id="eafbe78b-599c-490e-b2ea-5ac299081c7a">&lt;/title&gt;</ept> on the Azure blog.</source>
          <target state="new">The page <bpt id="eafbe78b-599c-490e-b2ea-5ac299081c7a">&lt;linkText&gt;</bpt>Lap around Azure Redis Cache<ept id="eafbe78b-599c-490e-b2ea-5ac299081c7a">&lt;/linkText&gt;</ept><bpt id="eafbe78b-599c-490e-b2ea-5ac299081c7a">&lt;title&gt;</bpt><ept id="eafbe78b-599c-490e-b2ea-5ac299081c7a">&lt;/title&gt;</ept> on the Azure blog.</target>
        </trans-unit>
        <trans-unit id="eb8e1b20-a97f-4121-aeec-9c8b099eabfe" xml:space="preserve">
          <source>The page <bpt id="bbdcd0d1-07f8-4385-b950-1452132c636a">&lt;linkText&gt;</bpt>Running Redis on a CentOS Linux VM<ept id="bbdcd0d1-07f8-4385-b950-1452132c636a">&lt;/linkText&gt;</ept><bpt id="bbdcd0d1-07f8-4385-b950-1452132c636a">&lt;title&gt;</bpt><ept id="bbdcd0d1-07f8-4385-b950-1452132c636a">&lt;/title&gt;</ept> in Azure on the Microsoft website.</source>
          <target state="new">The page <bpt id="bbdcd0d1-07f8-4385-b950-1452132c636a">&lt;linkText&gt;</bpt>Running Redis on a CentOS Linux VM<ept id="bbdcd0d1-07f8-4385-b950-1452132c636a">&lt;/linkText&gt;</ept><bpt id="bbdcd0d1-07f8-4385-b950-1452132c636a">&lt;title&gt;</bpt><ept id="bbdcd0d1-07f8-4385-b950-1452132c636a">&lt;/title&gt;</ept> in Azure on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="06577633-6b81-4509-8fd7-7b73a23f2742" xml:space="preserve">
          <source>The <bpt id="7072fe8b-29c2-4766-ad10-6f8428da72ae">&lt;linkText&gt;</bpt>ASP.NET Session State Provider for Azure Redis Cache<ept id="7072fe8b-29c2-4766-ad10-6f8428da72ae">&lt;/linkText&gt;</ept><bpt id="7072fe8b-29c2-4766-ad10-6f8428da72ae">&lt;title&gt;</bpt><ept id="7072fe8b-29c2-4766-ad10-6f8428da72ae">&lt;/title&gt;</ept> page on the Microsoft website.</source>
          <target state="new">The <bpt id="7072fe8b-29c2-4766-ad10-6f8428da72ae">&lt;linkText&gt;</bpt>ASP.NET Session State Provider for Azure Redis Cache<ept id="7072fe8b-29c2-4766-ad10-6f8428da72ae">&lt;/linkText&gt;</ept><bpt id="7072fe8b-29c2-4766-ad10-6f8428da72ae">&lt;title&gt;</bpt><ept id="7072fe8b-29c2-4766-ad10-6f8428da72ae">&lt;/title&gt;</ept> page on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="9668b31b-6923-4dc5-beba-a36f2a5ab973" xml:space="preserve">
          <source>The <bpt id="1c3040da-fe31-47bd-97b1-1d7bb5cc1d4e">&lt;linkText&gt;</bpt>ASP.NET Output Cache Provider for Azure Redis Cache<ept id="1c3040da-fe31-47bd-97b1-1d7bb5cc1d4e">&lt;/linkText&gt;</ept><bpt id="1c3040da-fe31-47bd-97b1-1d7bb5cc1d4e">&lt;title&gt;</bpt><ept id="1c3040da-fe31-47bd-97b1-1d7bb5cc1d4e">&lt;/title&gt;</ept> page on the Microsoft website.</source>
          <target state="new">The <bpt id="1c3040da-fe31-47bd-97b1-1d7bb5cc1d4e">&lt;linkText&gt;</bpt>ASP.NET Output Cache Provider for Azure Redis Cache<ept id="1c3040da-fe31-47bd-97b1-1d7bb5cc1d4e">&lt;/linkText&gt;</ept><bpt id="1c3040da-fe31-47bd-97b1-1d7bb5cc1d4e">&lt;title&gt;</bpt><ept id="1c3040da-fe31-47bd-97b1-1d7bb5cc1d4e">&lt;/title&gt;</ept> page on the Microsoft website.</target>
        </trans-unit>
        <trans-unit id="e174b6c7-0c84-4d60-ab22-0f36e7a33305" xml:space="preserve">
          <source>The page <bpt id="220587bb-6f32-4325-a1f4-f0d25c1514f2">&lt;linkText&gt;</bpt>Develop for Azure Redis Cache<ept id="220587bb-6f32-4325-a1f4-f0d25c1514f2">&lt;/linkText&gt;</ept><bpt id="220587bb-6f32-4325-a1f4-f0d25c1514f2">&lt;title&gt;</bpt><ept id="220587bb-6f32-4325-a1f4-f0d25c1514f2">&lt;/title&gt;</ept> on the Azure site.</source>
          <target state="new">The page <bpt id="220587bb-6f32-4325-a1f4-f0d25c1514f2">&lt;linkText&gt;</bpt>Develop for Azure Redis Cache<ept id="220587bb-6f32-4325-a1f4-f0d25c1514f2">&lt;/linkText&gt;</ept><bpt id="220587bb-6f32-4325-a1f4-f0d25c1514f2">&lt;title&gt;</bpt><ept id="220587bb-6f32-4325-a1f4-f0d25c1514f2">&lt;/title&gt;</ept> on the Azure site.</target>
        </trans-unit>
        <trans-unit id="e5625755-1720-4995-b7a9-1b1bceefdaa7" xml:space="preserve">
          <source>The page <bpt id="8c0a40bc-c8cb-4b36-bfed-03e7c381dc04">&lt;linkText&gt;</bpt>An Introduction to Redis data types and abstractions<ept id="8c0a40bc-c8cb-4b36-bfed-03e7c381dc04">&lt;/linkText&gt;</ept><bpt id="8c0a40bc-c8cb-4b36-bfed-03e7c381dc04">&lt;title&gt;</bpt><ept id="8c0a40bc-c8cb-4b36-bfed-03e7c381dc04">&lt;/title&gt;</ept> on the Redis website.</source>
          <target state="new">The page <bpt id="8c0a40bc-c8cb-4b36-bfed-03e7c381dc04">&lt;linkText&gt;</bpt>An Introduction to Redis data types and abstractions<ept id="8c0a40bc-c8cb-4b36-bfed-03e7c381dc04">&lt;/linkText&gt;</ept><bpt id="8c0a40bc-c8cb-4b36-bfed-03e7c381dc04">&lt;title&gt;</bpt><ept id="8c0a40bc-c8cb-4b36-bfed-03e7c381dc04">&lt;/title&gt;</ept> on the Redis website.</target>
        </trans-unit>
        <trans-unit id="b36d9f81-e39e-4abf-9ad7-f3e6625ac08c" xml:space="preserve">
          <source>The <bpt id="6a879db3-4d3d-4df8-9282-6fa8b453f560">&lt;linkText&gt;</bpt>Basic Usage<ept id="6a879db3-4d3d-4df8-9282-6fa8b453f560">&lt;/linkText&gt;</ept><bpt id="6a879db3-4d3d-4df8-9282-6fa8b453f560">&lt;title&gt;</bpt><ept id="6a879db3-4d3d-4df8-9282-6fa8b453f560">&lt;/title&gt;</ept> page on the StackExchange.Redis website.</source>
          <target state="new">The <bpt id="6a879db3-4d3d-4df8-9282-6fa8b453f560">&lt;linkText&gt;</bpt>Basic Usage<ept id="6a879db3-4d3d-4df8-9282-6fa8b453f560">&lt;/linkText&gt;</ept><bpt id="6a879db3-4d3d-4df8-9282-6fa8b453f560">&lt;title&gt;</bpt><ept id="6a879db3-4d3d-4df8-9282-6fa8b453f560">&lt;/title&gt;</ept> page on the StackExchange.Redis website.</target>
        </trans-unit>
        <trans-unit id="81cb3932-1e5d-4cae-bc32-64e615e4a894" xml:space="preserve">
          <source>The <bpt id="2b63a782-3c6b-472c-bdab-c94f8f2d70f8">&lt;linkText&gt;</bpt>Transactions in Redis<ept id="2b63a782-3c6b-472c-bdab-c94f8f2d70f8">&lt;/linkText&gt;</ept><bpt id="2b63a782-3c6b-472c-bdab-c94f8f2d70f8">&lt;title&gt;</bpt><ept id="2b63a782-3c6b-472c-bdab-c94f8f2d70f8">&lt;/title&gt;</ept> page on the StackExchange.Redis repo.</source>
          <target state="new">The <bpt id="2b63a782-3c6b-472c-bdab-c94f8f2d70f8">&lt;linkText&gt;</bpt>Transactions in Redis<ept id="2b63a782-3c6b-472c-bdab-c94f8f2d70f8">&lt;/linkText&gt;</ept><bpt id="2b63a782-3c6b-472c-bdab-c94f8f2d70f8">&lt;title&gt;</bpt><ept id="2b63a782-3c6b-472c-bdab-c94f8f2d70f8">&lt;/title&gt;</ept> page on the StackExchange.Redis repo.</target>
        </trans-unit>
        <trans-unit id="00453045-b6d4-4e3f-926e-3110b9591067" xml:space="preserve">
          <source>The <bpt id="3b77d052-917a-48a7-a6e1-ceb0a721d760">&lt;linkText&gt;</bpt>Data Partitioning Guide<ept id="3b77d052-917a-48a7-a6e1-ceb0a721d760">&lt;/linkText&gt;</ept><bpt id="3b77d052-917a-48a7-a6e1-ceb0a721d760">&lt;title&gt;</bpt><ept id="3b77d052-917a-48a7-a6e1-ceb0a721d760">&lt;/title&gt;</ept> on the Microsoft website.</source>
          <target state="new">The <bpt id="3b77d052-917a-48a7-a6e1-ceb0a721d760">&lt;linkText&gt;</bpt>Data Partitioning Guide<ept id="3b77d052-917a-48a7-a6e1-ceb0a721d760">&lt;/linkText&gt;</ept><bpt id="3b77d052-917a-48a7-a6e1-ceb0a721d760">&lt;title&gt;</bpt><ept id="3b77d052-917a-48a7-a6e1-ceb0a721d760">&lt;/title&gt;</ept> on the Microsoft website.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>