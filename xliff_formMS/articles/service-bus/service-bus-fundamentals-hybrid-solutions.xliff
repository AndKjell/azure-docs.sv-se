<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="016cc1aa-8e04-4dcb-a8d9-87a3b134c077" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="016cc1aa-8e04-4dcb-a8d9-87a3b134c077" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="0f854ffc-f08b-4a42-945a-db6f59b63b85">
        <trans-unit id="246cde59-2da7-4ae4-93db-f1aeda37ada5" xml:space="preserve">
          <source>Azure Service Bus | Microsoft Azure</source>
          <target state="new">Azure Service Bus | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="887598f9-87b4-431d-b66a-e471fa185175" xml:space="preserve">
          <source>An introduction to different ways you can use the Service Bus to connect Azure applications to other software.</source>
          <target state="new">An introduction to different ways you can use the Service Bus to connect Azure applications to other software.</target>
        </trans-unit>
        <trans-unit id="5a7e226f-db01-4890-938a-3a741f67b2c7" xml:space="preserve">
          <source>Whether an application or service runs in the cloud or on premises, it often needs to interact with other applications or services.</source>
          <target state="new">Whether an application or service runs in the cloud or on premises, it often needs to interact with other applications or services.</target>
        </trans-unit>
        <trans-unit id="705a37f5-ae81-46b4-9651-9b95a9a4cc9a" xml:space="preserve">
          <source>To provide a broadly useful way to do this, Azure offers Service Bus.</source>
          <target state="new">To provide a broadly useful way to do this, Azure offers Service Bus.</target>
        </trans-unit>
        <trans-unit id="c9d79985-2ec7-49ca-94e9-60ba17434f79" xml:space="preserve">
          <source>This article takes a look at this technology, describing what it is and why you might want to use it.</source>
          <target state="new">This article takes a look at this technology, describing what it is and why you might want to use it.</target>
        </trans-unit>
        <trans-unit id="990347c5-1308-47fb-b3fe-e6b922031493" xml:space="preserve">
          <source>Different situations call for different styles of communication.</source>
          <target state="new">Different situations call for different styles of communication.</target>
        </trans-unit>
        <trans-unit id="caefd8bb-d98f-49b0-9181-d77c805209c5" xml:space="preserve">
          <source>Sometimes, letting applications send and receive messages through a simple queue is the best solution.</source>
          <target state="new">Sometimes, letting applications send and receive messages through a simple queue is the best solution.</target>
        </trans-unit>
        <trans-unit id="91ef66a2-8220-4f20-ac4b-40ba598e727b" xml:space="preserve">
          <source>In other situations, an ordinary queue isn't enough; a queue with a publish-and-subscribe mechanism is better.</source>
          <target state="new">In other situations, an ordinary queue isn't enough; a queue with a publish-and-subscribe mechanism is better.</target>
        </trans-unit>
        <trans-unit id="323e5b50-0722-46e9-b654-186d81fdbe1c" xml:space="preserve">
          <source>And in some cases, all that's really needed is a connection between applications&amp;#151;queues aren't required.</source>
          <target state="new">And in some cases, all that's really needed is a connection between applications&amp;#151;queues aren't required.</target>
        </trans-unit>
        <trans-unit id="0bcbe6d2-ed2b-4356-b0c4-6fdb28893b0b" xml:space="preserve">
          <source>Service Bus provides all three options, letting your applications interact in several different ways.</source>
          <target state="new">Service Bus provides all three options, letting your applications interact in several different ways.</target>
        </trans-unit>
        <trans-unit id="a8c9c88b-84c8-4eaa-889a-9adb51ae24a3" xml:space="preserve">
          <source>Service Bus is a multi-tenant cloud service, which means that the service is shared by multiple users.</source>
          <target state="new">Service Bus is a multi-tenant cloud service, which means that the service is shared by multiple users.</target>
        </trans-unit>
        <trans-unit id="14cf3704-8c86-4b63-b67a-bb7da0f8c066" xml:space="preserve">
          <source>Each user, such as an application developer, creates a <bpt id="5c0de887-ca78-4050-8252-594bbbaec51d">&lt;em&gt;</bpt>namespace<ept id="5c0de887-ca78-4050-8252-594bbbaec51d">&lt;/em&gt;</ept>, then defines the communication mechanisms she needs within that namespace.</source>
          <target state="new">Each user, such as an application developer, creates a <bpt id="5c0de887-ca78-4050-8252-594bbbaec51d">&lt;em&gt;</bpt>namespace<ept id="5c0de887-ca78-4050-8252-594bbbaec51d">&lt;/em&gt;</ept>, then defines the communication mechanisms she needs within that namespace.</target>
        </trans-unit>
        <trans-unit id="faba4033-d5f2-415a-82b7-ac63ae44e56e" xml:space="preserve">
          <source>Figure 1 shows how this looks.</source>
          <target state="new">Figure 1 shows how this looks.</target>
        </trans-unit>
        <trans-unit id="0e554285-4253-4f4a-b0dc-9f7e12a6da66" xml:space="preserve">
          <source><bpt id="643c6e52-2e03-4fed-86e4-53e4821b80b9">&lt;linkText&gt;</bpt><ept id="643c6e52-2e03-4fed-86e4-53e4821b80b9">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="643c6e52-2e03-4fed-86e4-53e4821b80b9">&lt;linkText&gt;</bpt><ept id="643c6e52-2e03-4fed-86e4-53e4821b80b9">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="5a068dfb-8318-4cf9-b0da-53ac5524d8e9" xml:space="preserve">
          <source><bpt id="1f8f1672-5028-4bbb-9bb3-accad3a4f0a7">&lt;strong&gt;</bpt>Figure 1: Service Bus provides a multi-tenant service for connecting applications through the cloud.<ept id="1f8f1672-5028-4bbb-9bb3-accad3a4f0a7">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="1f8f1672-5028-4bbb-9bb3-accad3a4f0a7">&lt;strong&gt;</bpt>Figure 1: Service Bus provides a multi-tenant service for connecting applications through the cloud.<ept id="1f8f1672-5028-4bbb-9bb3-accad3a4f0a7">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="c8538b72-21d4-4d2e-b5bb-c5f35945c2c2" xml:space="preserve">
          <source>Within a namespace, you can use one or more instances of four different communication mechanisms, each of which connects applications in a different way.</source>
          <target state="new">Within a namespace, you can use one or more instances of four different communication mechanisms, each of which connects applications in a different way.</target>
        </trans-unit>
        <trans-unit id="fc2c7885-4eec-431f-8228-843df051f795" xml:space="preserve">
          <source>The choices are:</source>
          <target state="new">The choices are:</target>
        </trans-unit>
        <trans-unit id="f6570b27-f1e2-48b8-9327-124fc70faa8c" xml:space="preserve">
          <source><bpt id="8cf4b827-64f6-42b5-a14e-8f96f17e82e5">&lt;em&gt;</bpt>Queues<ept id="8cf4b827-64f6-42b5-a14e-8f96f17e82e5">&lt;/em&gt;</ept>, which allow one-directional communication.</source>
          <target state="new"><bpt id="8cf4b827-64f6-42b5-a14e-8f96f17e82e5">&lt;em&gt;</bpt>Queues<ept id="8cf4b827-64f6-42b5-a14e-8f96f17e82e5">&lt;/em&gt;</ept>, which allow one-directional communication.</target>
        </trans-unit>
        <trans-unit id="b8eb7c1b-1cd3-4ccf-9950-f1fd1b23edfe" xml:space="preserve">
          <source>Each queue acts as an intermediary (sometimes called a <bpt id="7db8d68f-1da2-4004-b77b-6a8508fea492">&lt;em&gt;</bpt>broker<ept id="7db8d68f-1da2-4004-b77b-6a8508fea492">&lt;/em&gt;</ept>) that stores sent messages until they are received.</source>
          <target state="new">Each queue acts as an intermediary (sometimes called a <bpt id="7db8d68f-1da2-4004-b77b-6a8508fea492">&lt;em&gt;</bpt>broker<ept id="7db8d68f-1da2-4004-b77b-6a8508fea492">&lt;/em&gt;</ept>) that stores sent messages until they are received.</target>
        </trans-unit>
        <trans-unit id="c8e37ab6-f8e5-43ab-8cb9-e61e5bb3f554" xml:space="preserve">
          <source>Each message is received by a single recipient.</source>
          <target state="new">Each message is received by a single recipient.</target>
        </trans-unit>
        <trans-unit id="771787e0-b6bb-4bd7-a3f5-adb2a7f3edd3" xml:space="preserve">
          <source><bpt id="b50ba7e1-71f1-4114-9d5c-02aeab022830">&lt;em&gt;</bpt>Topics<ept id="b50ba7e1-71f1-4114-9d5c-02aeab022830">&lt;/em&gt;</ept>, which provide one-directional communication using <bpt id="08c82022-059e-4b9e-b277-ade7014755df">&lt;em&gt;</bpt>subscriptions<ept id="08c82022-059e-4b9e-b277-ade7014755df">&lt;/em&gt;</ept>-a single topic can have multiple subscriptions.</source>
          <target state="new"><bpt id="b50ba7e1-71f1-4114-9d5c-02aeab022830">&lt;em&gt;</bpt>Topics<ept id="b50ba7e1-71f1-4114-9d5c-02aeab022830">&lt;/em&gt;</ept>, which provide one-directional communication using <bpt id="08c82022-059e-4b9e-b277-ade7014755df">&lt;em&gt;</bpt>subscriptions<ept id="08c82022-059e-4b9e-b277-ade7014755df">&lt;/em&gt;</ept>-a single topic can have multiple subscriptions.</target>
        </trans-unit>
        <trans-unit id="bfa5cf0e-3ae6-453b-8125-5d7dd99e0771" xml:space="preserve">
          <source>Like a queue, a topic acts as a broker, but each subscription can optionally use a filter to receive only messages that match specific criteria.</source>
          <target state="new">Like a queue, a topic acts as a broker, but each subscription can optionally use a filter to receive only messages that match specific criteria.</target>
        </trans-unit>
        <trans-unit id="d0112bba-8461-4596-9a78-b7097bdab06f" xml:space="preserve">
          <source><bpt id="e4f86238-72f5-4b6a-b4d4-e413fc5470ec">&lt;em&gt;</bpt>Relays<ept id="e4f86238-72f5-4b6a-b4d4-e413fc5470ec">&lt;/em&gt;</ept>, which provide bi-directional communication.</source>
          <target state="new"><bpt id="e4f86238-72f5-4b6a-b4d4-e413fc5470ec">&lt;em&gt;</bpt>Relays<ept id="e4f86238-72f5-4b6a-b4d4-e413fc5470ec">&lt;/em&gt;</ept>, which provide bi-directional communication.</target>
        </trans-unit>
        <trans-unit id="7312fcb5-2f81-4e23-9bbc-5cd8b6d68080" xml:space="preserve">
          <source>Unlike queues and topics, a relay doesn't store in-flight messages-it's not a broker.</source>
          <target state="new">Unlike queues and topics, a relay doesn't store in-flight messages-it's not a broker.</target>
        </trans-unit>
        <trans-unit id="88cb4a3c-3d98-4ffc-8d12-2ce523fc64bc" xml:space="preserve">
          <source>Instead, it just passes them on to the destination application.</source>
          <target state="new">Instead, it just passes them on to the destination application.</target>
        </trans-unit>
        <trans-unit id="137cbc49-3959-48a1-80a7-6c3ccb426a72" xml:space="preserve">
          <source><bpt id="161be280-9eec-4409-81df-0814fe0d2e39">&lt;em&gt;</bpt>Event Hubs<ept id="161be280-9eec-4409-81df-0814fe0d2e39">&lt;/em&gt;</ept>, which provide event and telemetry ingress to the cloud at massive scale, with low latency and high reliability.</source>
          <target state="new"><bpt id="161be280-9eec-4409-81df-0814fe0d2e39">&lt;em&gt;</bpt>Event Hubs<ept id="161be280-9eec-4409-81df-0814fe0d2e39">&lt;/em&gt;</ept>, which provide event and telemetry ingress to the cloud at massive scale, with low latency and high reliability.</target>
        </trans-unit>
        <trans-unit id="0c84deec-880b-49a9-afe4-79c60763ff0f" xml:space="preserve">
          <source>When you create a queue, topic, relay, or Event Hub, you give it a name.</source>
          <target state="new">When you create a queue, topic, relay, or Event Hub, you give it a name.</target>
        </trans-unit>
        <trans-unit id="0a924012-f56c-4258-bcb3-94a5b8c17803" xml:space="preserve">
          <source>Combined with whatever you called your namespace, this name creates a unique identifier for the object.</source>
          <target state="new">Combined with whatever you called your namespace, this name creates a unique identifier for the object.</target>
        </trans-unit>
        <trans-unit id="69ff1a6f-614c-4c1a-8a0d-05752f6538fc" xml:space="preserve">
          <source>Applications can provide this name to Service Bus, then use that queue, topic, relay, or Event Hub to communicate with one another.</source>
          <target state="new">Applications can provide this name to Service Bus, then use that queue, topic, relay, or Event Hub to communicate with one another.</target>
        </trans-unit>
        <trans-unit id="dadfdc4e-dfac-4296-bec3-71a4c9ac8525" xml:space="preserve">
          <source>To use any of these objects, Windows applications can use Windows Communication Foundation (WCF).</source>
          <target state="new">To use any of these objects, Windows applications can use Windows Communication Foundation (WCF).</target>
        </trans-unit>
        <trans-unit id="80556c8d-7b19-4ee6-ad52-e5ff02b876d7" xml:space="preserve">
          <source>For queues, topics, and Event Hubs Windows applications can also use Service Bus-defined messaging APIs.</source>
          <target state="new">For queues, topics, and Event Hubs Windows applications can also use Service Bus-defined messaging APIs.</target>
        </trans-unit>
        <trans-unit id="c43e4a1f-13a7-418a-aba4-d22e0377abed" xml:space="preserve">
          <source>To make these objects easier to use from non-Windows applications, Microsoft provides SDKs for Java, Node.js, and other languages.</source>
          <target state="new">To make these objects easier to use from non-Windows applications, Microsoft provides SDKs for Java, Node.js, and other languages.</target>
        </trans-unit>
        <trans-unit id="cc995c73-fead-4c36-9331-b493dbc9f86b" xml:space="preserve">
          <source>You can also access queues, topics, and Event Hubs using REST APIs over HTTP.</source>
          <target state="new">You can also access queues, topics, and Event Hubs using REST APIs over HTTP.</target>
        </trans-unit>
        <trans-unit id="5b890cdb-f51e-447f-b077-dfd021ede896" xml:space="preserve">
          <source>It's important to understand that even though Service Bus itself runs in the cloud (that is, in Microsoft's Azure datacenters), applications that use it can run anywhere.</source>
          <target state="new">It's important to understand that even though Service Bus itself runs in the cloud (that is, in Microsoft's Azure datacenters), applications that use it can run anywhere.</target>
        </trans-unit>
        <trans-unit id="2e2d469a-d0fd-4496-badf-a6f28701a6d9" xml:space="preserve">
          <source>You can use Service Bus to connect applications running on Azure, for example, or applications running inside your own datacenter.</source>
          <target state="new">You can use Service Bus to connect applications running on Azure, for example, or applications running inside your own datacenter.</target>
        </trans-unit>
        <trans-unit id="7cef7478-da63-4f4d-8f84-bfcd776a4b97" xml:space="preserve">
          <source>You can also use it to connect an application running on Azure or another cloud platform with an on-premises application or with tablets and phones.</source>
          <target state="new">You can also use it to connect an application running on Azure or another cloud platform with an on-premises application or with tablets and phones.</target>
        </trans-unit>
        <trans-unit id="adc47dfd-90c9-448e-b71d-e2fbcf42fdbe" xml:space="preserve">
          <source>It's even possible to connect household appliances, sensors, and other devices to a central application or to one other.</source>
          <target state="new">It's even possible to connect household appliances, sensors, and other devices to a central application or to one other.</target>
        </trans-unit>
        <trans-unit id="0eaaf217-8e3c-4e22-9e54-184df7494b88" xml:space="preserve">
          <source>Service Bus is a generic communication mechanism in the cloud that's accessible from pretty much anywhere.</source>
          <target state="new">Service Bus is a generic communication mechanism in the cloud that's accessible from pretty much anywhere.</target>
        </trans-unit>
        <trans-unit id="c99cd815-2342-4f8d-acfb-8b36ae1c43db" xml:space="preserve">
          <source>How you use it depends on what your applications need to do.</source>
          <target state="new">How you use it depends on what your applications need to do.</target>
        </trans-unit>
        <trans-unit id="5bd393a8-c4fd-49cd-bf05-e236d93aaae4" xml:space="preserve">
          <source>Suppose you decide to connect two applications using a Service Bus queue.</source>
          <target state="new">Suppose you decide to connect two applications using a Service Bus queue.</target>
        </trans-unit>
        <trans-unit id="18d1f013-e7d0-4c74-a58e-c6e3c91c54f2" xml:space="preserve">
          <source>Figure 2 illustrates this situation.</source>
          <target state="new">Figure 2 illustrates this situation.</target>
        </trans-unit>
        <trans-unit id="8f0869c2-f564-4034-b127-168817db1a27" xml:space="preserve">
          <source><bpt id="a2f9e020-8184-49c3-82be-2927fb9aefd4">&lt;linkText&gt;</bpt><ept id="a2f9e020-8184-49c3-82be-2927fb9aefd4">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="a2f9e020-8184-49c3-82be-2927fb9aefd4">&lt;linkText&gt;</bpt><ept id="a2f9e020-8184-49c3-82be-2927fb9aefd4">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="3f967e48-cffd-4347-85e1-99a8c3dca071" xml:space="preserve">
          <source><bpt id="06458cbe-70be-48ef-88d9-c89f0a750436">&lt;strong&gt;</bpt>Figure 2: Service Bus queues provide one-way asynchronous queuing.<ept id="06458cbe-70be-48ef-88d9-c89f0a750436">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="06458cbe-70be-48ef-88d9-c89f0a750436">&lt;strong&gt;</bpt>Figure 2: Service Bus queues provide one-way asynchronous queuing.<ept id="06458cbe-70be-48ef-88d9-c89f0a750436">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="045eb197-7a98-44ce-9e61-52ca68c023e1" xml:space="preserve">
          <source>The process is simple: A sender sends a message to a Service Bus queue, and a receiver picks up that message at some later time.</source>
          <target state="new">The process is simple: A sender sends a message to a Service Bus queue, and a receiver picks up that message at some later time.</target>
        </trans-unit>
        <trans-unit id="f4554b4a-14ec-4f0a-9be5-5d55d6101ac1" xml:space="preserve">
          <source>A queue can have just a single receiver, as Figure 2 shows, or multiple applications can read from the same queue.</source>
          <target state="new">A queue can have just a single receiver, as Figure 2 shows, or multiple applications can read from the same queue.</target>
        </trans-unit>
        <trans-unit id="260e3548-9c02-47d7-ba1a-86b96825b4e0" xml:space="preserve">
          <source>In the latter situation, each message is read by just one receiver-for a multi-cast service you should use a topic instead.</source>
          <target state="new">In the latter situation, each message is read by just one receiver-for a multi-cast service you should use a topic instead.</target>
        </trans-unit>
        <trans-unit id="2663f978-3a83-4337-b33a-1cc5e0e35923" xml:space="preserve">
          <source>Each message has two parts: a set of properties, each a key/value pair, and a binary message body.</source>
          <target state="new">Each message has two parts: a set of properties, each a key/value pair, and a binary message body.</target>
        </trans-unit>
        <trans-unit id="048d6dff-bf59-4ff8-9d69-2b69e2f6d62c" xml:space="preserve">
          <source>How they're used depends on what an application is trying to do.</source>
          <target state="new">How they're used depends on what an application is trying to do.</target>
        </trans-unit>
        <trans-unit id="de33ca6b-5f10-4615-8d94-0c238286b585" xml:space="preserve">
          <source>For example, an application sending a message about a recent sale might include the properties <bpt id="7c11634f-71d5-4ba0-9aee-eab832e6c1af">&lt;em&gt;</bpt>Seller="Ava"<ept id="7c11634f-71d5-4ba0-9aee-eab832e6c1af">&lt;/em&gt;</ept> and <bpt id="ca5787b7-35e0-4aea-9b31-184ee003595b">&lt;em&gt;</bpt>Amount=10000<ept id="ca5787b7-35e0-4aea-9b31-184ee003595b">&lt;/em&gt;</ept>.</source>
          <target state="new">For example, an application sending a message about a recent sale might include the properties <bpt id="7c11634f-71d5-4ba0-9aee-eab832e6c1af">&lt;em&gt;</bpt>Seller="Ava"<ept id="7c11634f-71d5-4ba0-9aee-eab832e6c1af">&lt;/em&gt;</ept> and <bpt id="ca5787b7-35e0-4aea-9b31-184ee003595b">&lt;em&gt;</bpt>Amount=10000<ept id="ca5787b7-35e0-4aea-9b31-184ee003595b">&lt;/em&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="fcabf558-ca5f-40d6-a63e-f3430f71d6f3" xml:space="preserve">
          <source>The message body might contain a scanned image of the sale's signed contract or, if there isn't one, just remain empty.</source>
          <target state="new">The message body might contain a scanned image of the sale's signed contract or, if there isn't one, just remain empty.</target>
        </trans-unit>
        <trans-unit id="c573d150-8b4c-414d-afb1-3c5b82673774" xml:space="preserve">
          <source>A receiver can read a message from a Service Bus queue in two different ways.</source>
          <target state="new">A receiver can read a message from a Service Bus queue in two different ways.</target>
        </trans-unit>
        <trans-unit id="b74be11f-565d-4aa8-b399-999be44756e1" xml:space="preserve">
          <source>The first option, called <bpt id="4d732d0e-e6ba-4d68-ad9b-38e709e8a9c7">&lt;em&gt;</bpt>ReceiveAndDelete<ept id="4d732d0e-e6ba-4d68-ad9b-38e709e8a9c7">&lt;/em&gt;</ept>, removes a message from the queue and immediately deletes it.</source>
          <target state="new">The first option, called <bpt id="4d732d0e-e6ba-4d68-ad9b-38e709e8a9c7">&lt;em&gt;</bpt>ReceiveAndDelete<ept id="4d732d0e-e6ba-4d68-ad9b-38e709e8a9c7">&lt;/em&gt;</ept>, removes a message from the queue and immediately deletes it.</target>
        </trans-unit>
        <trans-unit id="1f170330-3fc9-4733-a66a-87bb29fd003e" xml:space="preserve">
          <source>This is simple, but if the receiver crashes before it finishes processing the message, the message will be lost.</source>
          <target state="new">This is simple, but if the receiver crashes before it finishes processing the message, the message will be lost.</target>
        </trans-unit>
        <trans-unit id="7e213add-80dd-45c5-8014-81940ff68c10" xml:space="preserve">
          <source>Because it's been removed from the queue, no other receiver can access it.</source>
          <target state="new">Because it's been removed from the queue, no other receiver can access it.</target>
        </trans-unit>
        <trans-unit id="145c566f-913c-401b-93ee-e58694db980d" xml:space="preserve">
          <source>The second option, <bpt id="590d8013-eee2-4c1d-9659-2f75713f7f21">&lt;em&gt;</bpt>PeekLock<ept id="590d8013-eee2-4c1d-9659-2f75713f7f21">&lt;/em&gt;</ept>, is meant to help with this problem.</source>
          <target state="new">The second option, <bpt id="590d8013-eee2-4c1d-9659-2f75713f7f21">&lt;em&gt;</bpt>PeekLock<ept id="590d8013-eee2-4c1d-9659-2f75713f7f21">&lt;/em&gt;</ept>, is meant to help with this problem.</target>
        </trans-unit>
        <trans-unit id="853f3a03-8af2-4df0-9f45-e9d0fd955914" xml:space="preserve">
          <source>Like ReceiveAndDelete, a PeekLock read removes a message from the queue.</source>
          <target state="new">Like ReceiveAndDelete, a PeekLock read removes a message from the queue.</target>
        </trans-unit>
        <trans-unit id="1e1f6e4a-645d-461c-94d2-0e5fe32f2e95" xml:space="preserve">
          <source>It doesn't delete the message, however.</source>
          <target state="new">It doesn't delete the message, however.</target>
        </trans-unit>
        <trans-unit id="bf6907a7-b619-4869-89bf-a33fb199eec0" xml:space="preserve">
          <source>Instead, it locks the message, making it invisible to other receivers, then waits for one of three events:</source>
          <target state="new">Instead, it locks the message, making it invisible to other receivers, then waits for one of three events:</target>
        </trans-unit>
        <trans-unit id="36cc5ee1-df68-4845-8506-5439b7ffc631" xml:space="preserve">
          <source>If the receiver processes the message successfully, it calls <bpt id="53a03ada-7bc1-44bb-9940-b6e1764ff063">&lt;em&gt;</bpt>Complete<ept id="53a03ada-7bc1-44bb-9940-b6e1764ff063">&lt;/em&gt;</ept>, and the queue deletes the message.</source>
          <target state="new">If the receiver processes the message successfully, it calls <bpt id="53a03ada-7bc1-44bb-9940-b6e1764ff063">&lt;em&gt;</bpt>Complete<ept id="53a03ada-7bc1-44bb-9940-b6e1764ff063">&lt;/em&gt;</ept>, and the queue deletes the message.</target>
        </trans-unit>
        <trans-unit id="1aaddcd6-0534-4886-87f0-2e017a3a12fc" xml:space="preserve">
          <source>If the receiver decides that it can't process the message successfully, it calls <bpt id="289ea51c-95b9-414a-bb59-ccaaba1dd0cc">&lt;em&gt;</bpt>Abandon<ept id="289ea51c-95b9-414a-bb59-ccaaba1dd0cc">&lt;/em&gt;</ept>.</source>
          <target state="new">If the receiver decides that it can't process the message successfully, it calls <bpt id="289ea51c-95b9-414a-bb59-ccaaba1dd0cc">&lt;em&gt;</bpt>Abandon<ept id="289ea51c-95b9-414a-bb59-ccaaba1dd0cc">&lt;/em&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="0d170f52-cb0d-4cf2-97b7-f236ec34294a" xml:space="preserve">
          <source>The queue then removes the lock from the message and makes it available to other receivers.</source>
          <target state="new">The queue then removes the lock from the message and makes it available to other receivers.</target>
        </trans-unit>
        <trans-unit id="48ff3c1d-81fc-47de-829e-3acaee59a657" xml:space="preserve">
          <source>If the receiver calls neither of these within a configurable period of time (by default, 60 seconds), the queue assumes the receiver has failed.</source>
          <target state="new">If the receiver calls neither of these within a configurable period of time (by default, 60 seconds), the queue assumes the receiver has failed.</target>
        </trans-unit>
        <trans-unit id="95ba6495-2fa1-451e-9262-d0718a611d28" xml:space="preserve">
          <source>In this case, it behaves as if the receiver had called Abandon, making the message available to other receivers.</source>
          <target state="new">In this case, it behaves as if the receiver had called Abandon, making the message available to other receivers.</target>
        </trans-unit>
        <trans-unit id="6dc0f38c-3c59-4b8c-8fc9-104eb74a9d3f" xml:space="preserve">
          <source>Notice what can happen here: The same message might be delivered twice, perhaps to two different receivers.</source>
          <target state="new">Notice what can happen here: The same message might be delivered twice, perhaps to two different receivers.</target>
        </trans-unit>
        <trans-unit id="033672f5-1fa3-4767-9e1e-427d038769a1" xml:space="preserve">
          <source>Applications using Service Bus queues must be prepared for this.</source>
          <target state="new">Applications using Service Bus queues must be prepared for this.</target>
        </trans-unit>
        <trans-unit id="d898e49e-626b-419e-bb69-36e225670840" xml:space="preserve">
          <source>To make duplicate detection easier, each message has a unique MessageID property that by default stays the same no matter how many times the message is read from a queue.</source>
          <target state="new">To make duplicate detection easier, each message has a unique MessageID property that by default stays the same no matter how many times the message is read from a queue.</target>
        </trans-unit>
        <trans-unit id="0d0786e6-52fe-4846-addc-0206aa0c78ca" xml:space="preserve">
          <source>Queues are useful in quite a few situations.</source>
          <target state="new">Queues are useful in quite a few situations.</target>
        </trans-unit>
        <trans-unit id="13adaa70-8a74-420d-92c6-8195d3621046" xml:space="preserve">
          <source>They let applications communicate even when both aren't running at the same time, something that's especially handy with batch and mobile applications.</source>
          <target state="new">They let applications communicate even when both aren't running at the same time, something that's especially handy with batch and mobile applications.</target>
        </trans-unit>
        <trans-unit id="54c46a55-bafe-4cc0-94d4-2e2f80f8c43d" xml:space="preserve">
          <source>A queue with multiple receivers also provides automatic load balancing, since sent messages are spread across these receivers.</source>
          <target state="new">A queue with multiple receivers also provides automatic load balancing, since sent messages are spread across these receivers.</target>
        </trans-unit>
        <trans-unit id="3e72c8b5-8c3c-44e8-8253-f012ee69eed3" xml:space="preserve">
          <source>Useful as they are, queues aren't always the right solution.</source>
          <target state="new">Useful as they are, queues aren't always the right solution.</target>
        </trans-unit>
        <trans-unit id="357fe516-fa82-4594-8bb8-73feee5a28cf" xml:space="preserve">
          <source>Sometimes, Service Bus topics are better.</source>
          <target state="new">Sometimes, Service Bus topics are better.</target>
        </trans-unit>
        <trans-unit id="dee3b435-87a1-4a94-ba10-4bf1c567e5be" xml:space="preserve">
          <source>Figure 3 illustrates this idea.</source>
          <target state="new">Figure 3 illustrates this idea.</target>
        </trans-unit>
        <trans-unit id="ee0daa44-a3ba-46b5-9c92-a9f5c99131a9" xml:space="preserve">
          <source><bpt id="70c7d203-39de-4699-b607-6be4f6b00726">&lt;linkText&gt;</bpt><ept id="70c7d203-39de-4699-b607-6be4f6b00726">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="70c7d203-39de-4699-b607-6be4f6b00726">&lt;linkText&gt;</bpt><ept id="70c7d203-39de-4699-b607-6be4f6b00726">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="374fe3a1-3599-4352-a959-c03ef490499c" xml:space="preserve">
          <source><bpt id="2aba8d42-3830-4006-b586-57825bab5e1e">&lt;strong&gt;</bpt>Figure 3: Based on the filter a subscribing application specifies, it can receive some or all of the messages sent to a Service Bus topic.<ept id="2aba8d42-3830-4006-b586-57825bab5e1e">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="2aba8d42-3830-4006-b586-57825bab5e1e">&lt;strong&gt;</bpt>Figure 3: Based on the filter a subscribing application specifies, it can receive some or all of the messages sent to a Service Bus topic.<ept id="2aba8d42-3830-4006-b586-57825bab5e1e">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="e7fc6628-bc25-45e5-9afa-b2dd83c7b205" xml:space="preserve">
          <source>A topic is similar in many ways to a queue.</source>
          <target state="new">A topic is similar in many ways to a queue.</target>
        </trans-unit>
        <trans-unit id="c7911e00-eef6-48ae-9d3e-867b05f9c58e" xml:space="preserve">
          <source>Senders submit messages to a topic in the same way that they submit messages to a queue, and those messages look the same as with queues.</source>
          <target state="new">Senders submit messages to a topic in the same way that they submit messages to a queue, and those messages look the same as with queues.</target>
        </trans-unit>
        <trans-unit id="cbf9325b-e4cc-4ac7-b875-1d85a20b7bf1" xml:space="preserve">
          <source>The big difference is that topics let each receiving application create its own subscription by defining a <bpt id="1ef4540e-1cfc-49d0-8d7c-fca616b1cde2">&lt;em&gt;</bpt>filter<ept id="1ef4540e-1cfc-49d0-8d7c-fca616b1cde2">&lt;/em&gt;</ept>.</source>
          <target state="new">The big difference is that topics let each receiving application create its own subscription by defining a <bpt id="1ef4540e-1cfc-49d0-8d7c-fca616b1cde2">&lt;em&gt;</bpt>filter<ept id="1ef4540e-1cfc-49d0-8d7c-fca616b1cde2">&lt;/em&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="6a95d169-bb33-4c9b-b191-c305413c95a4" xml:space="preserve">
          <source>A subscriber will then see only the messages that match that filter.</source>
          <target state="new">A subscriber will then see only the messages that match that filter.</target>
        </trans-unit>
        <trans-unit id="f039263d-a720-44b1-957a-8cbf3ee6128d" xml:space="preserve">
          <source>For example, Figure 3 shows a sender and a topic with three subscribers, each with its own filter:</source>
          <target state="new">For example, Figure 3 shows a sender and a topic with three subscribers, each with its own filter:</target>
        </trans-unit>
        <trans-unit id="2d8aeb99-fece-4bc0-b5a5-bf12aa43ea0a" xml:space="preserve">
          <source>Subscriber 1 receives only messages that contain the property <bpt id="164cbbdd-d649-4354-afe7-af8e1b417370">&lt;em&gt;</bpt>Seller="Ava"<ept id="164cbbdd-d649-4354-afe7-af8e1b417370">&lt;/em&gt;</ept>.</source>
          <target state="new">Subscriber 1 receives only messages that contain the property <bpt id="164cbbdd-d649-4354-afe7-af8e1b417370">&lt;em&gt;</bpt>Seller="Ava"<ept id="164cbbdd-d649-4354-afe7-af8e1b417370">&lt;/em&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="fa8b258c-a17c-4108-bec6-c7ed6e1e66ca" xml:space="preserve">
          <source>Subscriber 2 receives messages that contain the property <bpt id="0feb9453-c827-40de-ac91-db3a3a7ff5e1">&lt;em&gt;</bpt>Seller="Ruby"<ept id="0feb9453-c827-40de-ac91-db3a3a7ff5e1">&lt;/em&gt;</ept> and/or contain an <bpt id="13e7710b-b4be-4de3-bb0f-21f6dbc0ce22">&lt;em&gt;</bpt>Amount<ept id="13e7710b-b4be-4de3-bb0f-21f6dbc0ce22">&lt;/em&gt;</ept> property whose value is greater than 100,000.</source>
          <target state="new">Subscriber 2 receives messages that contain the property <bpt id="0feb9453-c827-40de-ac91-db3a3a7ff5e1">&lt;em&gt;</bpt>Seller="Ruby"<ept id="0feb9453-c827-40de-ac91-db3a3a7ff5e1">&lt;/em&gt;</ept> and/or contain an <bpt id="13e7710b-b4be-4de3-bb0f-21f6dbc0ce22">&lt;em&gt;</bpt>Amount<ept id="13e7710b-b4be-4de3-bb0f-21f6dbc0ce22">&lt;/em&gt;</ept> property whose value is greater than 100,000.</target>
        </trans-unit>
        <trans-unit id="e0ac0805-7bc0-4891-a3d8-ca2cd3d794e1" xml:space="preserve">
          <source>Perhaps Ruby is the sales manager, and so she wants to see both her own sales and all big sales regardless of who makes them.</source>
          <target state="new">Perhaps Ruby is the sales manager, and so she wants to see both her own sales and all big sales regardless of who makes them.</target>
        </trans-unit>
        <trans-unit id="4477ebc0-b96a-402e-9bb0-fe3f7b0efcc4" xml:space="preserve">
          <source>Subscriber 3 has set its filter to <bpt id="8137ddf0-d92d-498b-a23f-4158bcb6d539">&lt;em&gt;</bpt>True<ept id="8137ddf0-d92d-498b-a23f-4158bcb6d539">&lt;/em&gt;</ept>, which means that it receives all messages.</source>
          <target state="new">Subscriber 3 has set its filter to <bpt id="8137ddf0-d92d-498b-a23f-4158bcb6d539">&lt;em&gt;</bpt>True<ept id="8137ddf0-d92d-498b-a23f-4158bcb6d539">&lt;/em&gt;</ept>, which means that it receives all messages.</target>
        </trans-unit>
        <trans-unit id="228d56ba-0546-47e9-86ba-9455480461f1" xml:space="preserve">
          <source>For example, this application might be responsible for maintaining an audit trail and therefore it needs to see all the messages.</source>
          <target state="new">For example, this application might be responsible for maintaining an audit trail and therefore it needs to see all the messages.</target>
        </trans-unit>
        <trans-unit id="4747c5e2-b220-4208-80eb-ebd9d9cc3797" xml:space="preserve">
          <source>As with queues, subscribers to a topic can read messages using either ReceiveAndDelete or PeekLock.</source>
          <target state="new">As with queues, subscribers to a topic can read messages using either ReceiveAndDelete or PeekLock.</target>
        </trans-unit>
        <trans-unit id="f82964b6-2081-4e9c-9330-b627a65d7d4b" xml:space="preserve">
          <source>Unlike queues, however, a single message sent to a topic can be received by multiple subscribers.</source>
          <target state="new">Unlike queues, however, a single message sent to a topic can be received by multiple subscribers.</target>
        </trans-unit>
        <trans-unit id="46ebec97-13e8-47df-87cc-363dbe2f8d12" xml:space="preserve">
          <source>This approach, commonly called <bpt id="518287d1-dd48-4715-913d-1e1cb16af0dd">&lt;em&gt;</bpt>publish and subscribe<ept id="518287d1-dd48-4715-913d-1e1cb16af0dd">&lt;/em&gt;</ept>, is useful whenever multiple applications might be interested in the same messages.</source>
          <target state="new">This approach, commonly called <bpt id="518287d1-dd48-4715-913d-1e1cb16af0dd">&lt;em&gt;</bpt>publish and subscribe<ept id="518287d1-dd48-4715-913d-1e1cb16af0dd">&lt;/em&gt;</ept>, is useful whenever multiple applications might be interested in the same messages.</target>
        </trans-unit>
        <trans-unit id="c1e51f73-8670-4dcc-868f-34d2fd3fe6bb" xml:space="preserve">
          <source>By defining the right filter, each subscriber can tap into just the part of the message stream that it needs to see.</source>
          <target state="new">By defining the right filter, each subscriber can tap into just the part of the message stream that it needs to see.</target>
        </trans-unit>
        <trans-unit id="02f733c7-9bb7-4ed8-b5ea-8f00905801ce" xml:space="preserve">
          <source>Both queues and topics provide one-way asynchronous communication through a broker.</source>
          <target state="new">Both queues and topics provide one-way asynchronous communication through a broker.</target>
        </trans-unit>
        <trans-unit id="b967b9df-4ba2-4578-a133-6f39fc59df5c" xml:space="preserve">
          <source>Traffic flows in just one direction, and there's no direct connection between senders and receivers.</source>
          <target state="new">Traffic flows in just one direction, and there's no direct connection between senders and receivers.</target>
        </trans-unit>
        <trans-unit id="0db27912-6b05-4695-acb7-43b720c73d19" xml:space="preserve">
          <source>But what if you don't want this?</source>
          <target state="new">But what if you don't want this?</target>
        </trans-unit>
        <trans-unit id="66712aa3-57ac-42d9-9d40-842abd52bc1d" xml:space="preserve">
          <source>Suppose your applications need to both send and receive messages, or perhaps you want a direct link between them and you don't need a broker to store messages.</source>
          <target state="new">Suppose your applications need to both send and receive messages, or perhaps you want a direct link between them and you don't need a broker to store messages.</target>
        </trans-unit>
        <trans-unit id="ec987027-115a-4b11-8507-3ea3ba295bef" xml:space="preserve">
          <source>To address scenarios such as this, Service Bus provides relays, as Figure 4 shows.</source>
          <target state="new">To address scenarios such as this, Service Bus provides relays, as Figure 4 shows.</target>
        </trans-unit>
        <trans-unit id="46e2e116-185b-4293-b87e-0b9bd7492aec" xml:space="preserve">
          <source><bpt id="7b6f84e0-782b-4b61-bfa4-07e73a59028d">&lt;linkText&gt;</bpt><ept id="7b6f84e0-782b-4b61-bfa4-07e73a59028d">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="7b6f84e0-782b-4b61-bfa4-07e73a59028d">&lt;linkText&gt;</bpt><ept id="7b6f84e0-782b-4b61-bfa4-07e73a59028d">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="404bd78b-04c6-4d73-ab84-173a48ccea86" xml:space="preserve">
          <source><bpt id="90c132de-9fe5-4762-be00-3004844b2414">&lt;strong&gt;</bpt>Figure 4: Service Bus relay provides synchronous, two-way communication between applications.<ept id="90c132de-9fe5-4762-be00-3004844b2414">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="90c132de-9fe5-4762-be00-3004844b2414">&lt;strong&gt;</bpt>Figure 4: Service Bus relay provides synchronous, two-way communication between applications.<ept id="90c132de-9fe5-4762-be00-3004844b2414">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9a6ca5cb-ea93-4d1c-84d5-ee6541cc2595" xml:space="preserve">
          <source>The obvious question to ask about relays is this: Why would I use one?</source>
          <target state="new">The obvious question to ask about relays is this: Why would I use one?</target>
        </trans-unit>
        <trans-unit id="b77d3af9-64da-4d31-b0f3-485027785aea" xml:space="preserve">
          <source>Even if I don't need queues, why make applications communicate via a cloud service rather than just interact directly?</source>
          <target state="new">Even if I don't need queues, why make applications communicate via a cloud service rather than just interact directly?</target>
        </trans-unit>
        <trans-unit id="1196152a-050b-441b-a4f7-7b71d5254145" xml:space="preserve">
          <source>The answer is that talking directly can be harder than you might think.</source>
          <target state="new">The answer is that talking directly can be harder than you might think.</target>
        </trans-unit>
        <trans-unit id="a370b2b5-4834-472a-ace8-e7848d079426" xml:space="preserve">
          <source>Suppose you want to connect two on-premises applications, both running inside corporate datacenters.</source>
          <target state="new">Suppose you want to connect two on-premises applications, both running inside corporate datacenters.</target>
        </trans-unit>
        <trans-unit id="66701c2b-f9bc-4239-be04-c91a6e68eeb1" xml:space="preserve">
          <source>Each of these applications sits behind a firewall, and each datacenter probably uses network address translation (NAT).</source>
          <target state="new">Each of these applications sits behind a firewall, and each datacenter probably uses network address translation (NAT).</target>
        </trans-unit>
        <trans-unit id="d625d33a-d40c-45bd-873c-be73e5151005" xml:space="preserve">
          <source>The firewall blocks incoming data on all but a few ports, and NAT implies that the machine each application is running on doesn't have a fixed IP address that you can reach directly from outside the datacenter.</source>
          <target state="new">The firewall blocks incoming data on all but a few ports, and NAT implies that the machine each application is running on doesn't have a fixed IP address that you can reach directly from outside the datacenter.</target>
        </trans-unit>
        <trans-unit id="12f1383d-8a0c-4cc5-9fe8-276be9b3d207" xml:space="preserve">
          <source>Without some extra help, connecting these applications over the public Internet is problematic.</source>
          <target state="new">Without some extra help, connecting these applications over the public Internet is problematic.</target>
        </trans-unit>
        <trans-unit id="69728c2f-03c8-43b7-a7cd-bd88b1a6434d" xml:space="preserve">
          <source>A Service Bus relay provides this help.</source>
          <target state="new">A Service Bus relay provides this help.</target>
        </trans-unit>
        <trans-unit id="b6f4481f-a963-45d8-8191-39942dbf33f1" xml:space="preserve">
          <source>To communicate bi-directionally through a relay, each application establishes an outbound TCP connection with Service Bus, then keeps it open.</source>
          <target state="new">To communicate bi-directionally through a relay, each application establishes an outbound TCP connection with Service Bus, then keeps it open.</target>
        </trans-unit>
        <trans-unit id="dab51335-13cb-4d2c-9046-217df4f3f8b7" xml:space="preserve">
          <source>All communication between the two applications will travel over these connections.</source>
          <target state="new">All communication between the two applications will travel over these connections.</target>
        </trans-unit>
        <trans-unit id="692aa986-bc78-44e0-a4e8-8de07beb6184" xml:space="preserve">
          <source>Because each connection was established from inside the datacenter, the firewall will allow incoming traffic to each application without opening new ports.</source>
          <target state="new">Because each connection was established from inside the datacenter, the firewall will allow incoming traffic to each application without opening new ports.</target>
        </trans-unit>
        <trans-unit id="3907bcf2-71c7-46c5-8a64-df462818642a" xml:space="preserve">
          <source>This approach also gets around the NAT problem, because each application has a consistent endpoint in the cloud throughout the communication.</source>
          <target state="new">This approach also gets around the NAT problem, because each application has a consistent endpoint in the cloud throughout the communication.</target>
        </trans-unit>
        <trans-unit id="57ccc589-4656-4086-bb38-c6d14f4cf8e9" xml:space="preserve">
          <source>By exchanging data through the relay, the applications can avoid the problems that would otherwise make communication difficult.</source>
          <target state="new">By exchanging data through the relay, the applications can avoid the problems that would otherwise make communication difficult.</target>
        </trans-unit>
        <trans-unit id="782ac091-3b13-42a6-ac1f-308b09a67fc6" xml:space="preserve">
          <source>To use Service Bus relays, applications rely on Windows Communication Foundation (WCF).</source>
          <target state="new">To use Service Bus relays, applications rely on Windows Communication Foundation (WCF).</target>
        </trans-unit>
        <trans-unit id="771eb70b-6a3b-48d4-a4ad-419f573bb7fe" xml:space="preserve">
          <source>Service Bus provides WCF bindings that make it straightforward for Windows applications to interact via relays.</source>
          <target state="new">Service Bus provides WCF bindings that make it straightforward for Windows applications to interact via relays.</target>
        </trans-unit>
        <trans-unit id="d9d7e703-6d39-49d1-a386-5f10554f4b78" xml:space="preserve">
          <source>Applications that already use WCF can typically just specify one of these bindings, then talk to each other through a relay.</source>
          <target state="new">Applications that already use WCF can typically just specify one of these bindings, then talk to each other through a relay.</target>
        </trans-unit>
        <trans-unit id="7d830bcc-05c0-434c-b788-b0e56c042626" xml:space="preserve">
          <source>Unlike queues and topics, however, using relays from non-Windows applications, while possible, requires some programming effort; no standard libraries are provided.</source>
          <target state="new">Unlike queues and topics, however, using relays from non-Windows applications, while possible, requires some programming effort; no standard libraries are provided.</target>
        </trans-unit>
        <trans-unit id="e49d4571-2d75-4edb-8391-d454f2e52421" xml:space="preserve">
          <source>Unlike queues and topics, applications don't explicitly create relays.</source>
          <target state="new">Unlike queues and topics, applications don't explicitly create relays.</target>
        </trans-unit>
        <trans-unit id="1f9c6ce2-66ca-4419-b5a1-e73e3668daaa" xml:space="preserve">
          <source>Instead, when an application that wishes to receive messages establishes a TCP connection with Service Bus, a relay is created automatically.</source>
          <target state="new">Instead, when an application that wishes to receive messages establishes a TCP connection with Service Bus, a relay is created automatically.</target>
        </trans-unit>
        <trans-unit id="c6ff9408-5f78-4187-8960-0bce6f1335b5" xml:space="preserve">
          <source>When the connection is dropped, the relay is deleted.</source>
          <target state="new">When the connection is dropped, the relay is deleted.</target>
        </trans-unit>
        <trans-unit id="415552aa-e711-43b3-b4ca-5632eae2af97" xml:space="preserve">
          <source>To let an application find the relay created by a specific listener, Service Bus provides a registry that enables applications to locate a specific relay by name.</source>
          <target state="new">To let an application find the relay created by a specific listener, Service Bus provides a registry that enables applications to locate a specific relay by name.</target>
        </trans-unit>
        <trans-unit id="67508bd2-909f-402b-bc2f-fd09f14e4d1b" xml:space="preserve">
          <source>Relays are the right solution when you need direct communication between applications.</source>
          <target state="new">Relays are the right solution when you need direct communication between applications.</target>
        </trans-unit>
        <trans-unit id="1e65395a-7bc3-42b0-885a-d11dbf751c72" xml:space="preserve">
          <source>For example, consider an airline reservation system running in an on-premises datacenter that must be accessed from check-in kiosks, mobile devices, and other computers.</source>
          <target state="new">For example, consider an airline reservation system running in an on-premises datacenter that must be accessed from check-in kiosks, mobile devices, and other computers.</target>
        </trans-unit>
        <trans-unit id="c3d4e62f-fcea-4cae-8323-f52b2865326b" xml:space="preserve">
          <source>Applications running on all of these systems could rely on Service Bus relays in the cloud to communicate, wherever they might be running.</source>
          <target state="new">Applications running on all of these systems could rely on Service Bus relays in the cloud to communicate, wherever they might be running.</target>
        </trans-unit>
        <trans-unit id="ef57c8f4-bb8b-4029-aade-883b8cb39bdc" xml:space="preserve">
          <source>Event Hubs is a highly scalable ingestion system that can process millions of events per second, enabling your application to process and analyze the massive amounts of data produced by your connected devices and applications.</source>
          <target state="new">Event Hubs is a highly scalable ingestion system that can process millions of events per second, enabling your application to process and analyze the massive amounts of data produced by your connected devices and applications.</target>
        </trans-unit>
        <trans-unit id="bf5a7103-e66d-4517-b824-4c79098f021e" xml:space="preserve">
          <source>For example, you could use an Event Hub to collect live engine performance data from a fleet of cars.</source>
          <target state="new">For example, you could use an Event Hub to collect live engine performance data from a fleet of cars.</target>
        </trans-unit>
        <trans-unit id="f08d152c-fcc1-4527-8a65-928a91427ede" xml:space="preserve">
          <source>Once collected into Event Hubs, you can transform and store data using any real-time analytics provider or storage cluster.</source>
          <target state="new">Once collected into Event Hubs, you can transform and store data using any real-time analytics provider or storage cluster.</target>
        </trans-unit>
        <trans-unit id="5f83ce5d-63d9-4245-b7d8-a8bd03243ccd" xml:space="preserve">
          <source>For more information about Event Hubs, see the <bpt id="9dea044a-4531-44f2-b27f-99e36e9e4fe0">&lt;linkText&gt;</bpt>Event Hubs overview<ept id="9dea044a-4531-44f2-b27f-99e36e9e4fe0">&lt;/linkText&gt;</ept><bpt id="9dea044a-4531-44f2-b27f-99e36e9e4fe0">&lt;title&gt;</bpt><ept id="9dea044a-4531-44f2-b27f-99e36e9e4fe0">&lt;/title&gt;</ept>.</source>
          <target state="new">For more information about Event Hubs, see the <bpt id="9dea044a-4531-44f2-b27f-99e36e9e4fe0">&lt;linkText&gt;</bpt>Event Hubs overview<ept id="9dea044a-4531-44f2-b27f-99e36e9e4fe0">&lt;/linkText&gt;</ept><bpt id="9dea044a-4531-44f2-b27f-99e36e9e4fe0">&lt;title&gt;</bpt><ept id="9dea044a-4531-44f2-b27f-99e36e9e4fe0">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="333cc89f-eb15-479c-8a14-f47d53c3adac" xml:space="preserve">
          <source>Connecting applications has always been part of building complete solutions, and the range of scenarios that require applications and services to communicate with each other is set to increase as more applications and devices are connected to the Internet.</source>
          <target state="new">Connecting applications has always been part of building complete solutions, and the range of scenarios that require applications and services to communicate with each other is set to increase as more applications and devices are connected to the Internet.</target>
        </trans-unit>
        <trans-unit id="f55f6626-ed88-4876-b4ab-8fb07e2cc993" xml:space="preserve">
          <source>By providing cloud-based technologies for achieving this through queues, topics, relays, and Event Hubs, Service Bus aims to make this essential function easier to implement and more broadly available.</source>
          <target state="new">By providing cloud-based technologies for achieving this through queues, topics, relays, and Event Hubs, Service Bus aims to make this essential function easier to implement and more broadly available.</target>
        </trans-unit>
        <trans-unit id="0c35f2c9-15c8-4d65-b8e5-3ee2a1c4c39a" xml:space="preserve">
          <source>Now that you've learned the fundamentals of Azure Service Bus, follow these links to learn more.</source>
          <target state="new">Now that you've learned the fundamentals of Azure Service Bus, follow these links to learn more.</target>
        </trans-unit>
        <trans-unit id="7a1bb2d8-f8db-4df5-85e5-32ad6b4106dd" xml:space="preserve">
          <source>How to use <bpt id="f8c05f2a-ea3d-4ac3-a797-c2e059dc783d">&lt;linkText&gt;</bpt>Service Bus queues<ept id="f8c05f2a-ea3d-4ac3-a797-c2e059dc783d">&lt;/linkText&gt;</ept><bpt id="f8c05f2a-ea3d-4ac3-a797-c2e059dc783d">&lt;title&gt;</bpt><ept id="f8c05f2a-ea3d-4ac3-a797-c2e059dc783d">&lt;/title&gt;</ept>.</source>
          <target state="new">How to use <bpt id="f8c05f2a-ea3d-4ac3-a797-c2e059dc783d">&lt;linkText&gt;</bpt>Service Bus queues<ept id="f8c05f2a-ea3d-4ac3-a797-c2e059dc783d">&lt;/linkText&gt;</ept><bpt id="f8c05f2a-ea3d-4ac3-a797-c2e059dc783d">&lt;title&gt;</bpt><ept id="f8c05f2a-ea3d-4ac3-a797-c2e059dc783d">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="c161c5ca-d772-499d-a897-7dcbcc024ece" xml:space="preserve">
          <source>How to use <bpt id="dd8c846b-38c4-4673-8587-cd2dfc116a1b">&lt;linkText&gt;</bpt>Service Bus topics<ept id="dd8c846b-38c4-4673-8587-cd2dfc116a1b">&lt;/linkText&gt;</ept><bpt id="dd8c846b-38c4-4673-8587-cd2dfc116a1b">&lt;title&gt;</bpt><ept id="dd8c846b-38c4-4673-8587-cd2dfc116a1b">&lt;/title&gt;</ept>.</source>
          <target state="new">How to use <bpt id="dd8c846b-38c4-4673-8587-cd2dfc116a1b">&lt;linkText&gt;</bpt>Service Bus topics<ept id="dd8c846b-38c4-4673-8587-cd2dfc116a1b">&lt;/linkText&gt;</ept><bpt id="dd8c846b-38c4-4673-8587-cd2dfc116a1b">&lt;title&gt;</bpt><ept id="dd8c846b-38c4-4673-8587-cd2dfc116a1b">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="7120038f-ae01-41be-8d9b-82b5190d2e9f" xml:space="preserve">
          <source>How to use <bpt id="b6e16534-a95d-4b29-b67a-d98d4b604771">&lt;linkText&gt;</bpt>Service Bus relay<ept id="b6e16534-a95d-4b29-b67a-d98d4b604771">&lt;/linkText&gt;</ept><bpt id="b6e16534-a95d-4b29-b67a-d98d4b604771">&lt;title&gt;</bpt><ept id="b6e16534-a95d-4b29-b67a-d98d4b604771">&lt;/title&gt;</ept>.</source>
          <target state="new">How to use <bpt id="b6e16534-a95d-4b29-b67a-d98d4b604771">&lt;linkText&gt;</bpt>Service Bus relay<ept id="b6e16534-a95d-4b29-b67a-d98d4b604771">&lt;/linkText&gt;</ept><bpt id="b6e16534-a95d-4b29-b67a-d98d4b604771">&lt;title&gt;</bpt><ept id="b6e16534-a95d-4b29-b67a-d98d4b604771">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="8b1c146d-24bc-4cd1-b834-38c64761c564" xml:space="preserve">
          <source>Service Bus samples: see the overview on <bpt id="0f45e3f3-55fe-4f50-b743-6fa6536819bf">&lt;linkText&gt;</bpt>MSDN<ept id="0f45e3f3-55fe-4f50-b743-6fa6536819bf">&lt;/linkText&gt;</ept><bpt id="0f45e3f3-55fe-4f50-b743-6fa6536819bf">&lt;title&gt;</bpt><ept id="0f45e3f3-55fe-4f50-b743-6fa6536819bf">&lt;/title&gt;</ept>.</source>
          <target state="new">Service Bus samples: see the overview on <bpt id="0f45e3f3-55fe-4f50-b743-6fa6536819bf">&lt;linkText&gt;</bpt>MSDN<ept id="0f45e3f3-55fe-4f50-b743-6fa6536819bf">&lt;/linkText&gt;</ept><bpt id="0f45e3f3-55fe-4f50-b743-6fa6536819bf">&lt;title&gt;</bpt><ept id="0f45e3f3-55fe-4f50-b743-6fa6536819bf">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="92b02638-bf61-45e7-be74-e7779512c639" xml:space="preserve">
          <source>./media/fundamentals-service-bus-hybrid-solutions/SvcBus_01_architecture.png</source>
          <target state="new">./media/fundamentals-service-bus-hybrid-solutions/SvcBus_01_architecture.png</target>
        </trans-unit>
        <trans-unit id="ca11025b-acd9-4f00-a43c-3edac0cc4d13" xml:space="preserve">
          <source>./media/fundamentals-service-bus-hybrid-solutions/SvcBus_02_queues.png</source>
          <target state="new">./media/fundamentals-service-bus-hybrid-solutions/SvcBus_02_queues.png</target>
        </trans-unit>
        <trans-unit id="a6a6d09d-d10d-42d8-91f9-d56ee21df4b6" xml:space="preserve">
          <source>./media/fundamentals-service-bus-hybrid-solutions/SvcBus_03_topicsandsubscriptions.png</source>
          <target state="new">./media/fundamentals-service-bus-hybrid-solutions/SvcBus_03_topicsandsubscriptions.png</target>
        </trans-unit>
        <trans-unit id="430a1fcd-2369-4bc7-91fd-633c1b3cadf2" xml:space="preserve">
          <source>./media/fundamentals-service-bus-hybrid-solutions/SvcBus_04_relay.png</source>
          <target state="new">./media/fundamentals-service-bus-hybrid-solutions/SvcBus_04_relay.png</target>
        </trans-unit>
        <trans-unit id="27bde999-5e98-4556-a6c2-0581e2a6fc94" xml:space="preserve">
          <source>https://msdn.microsoft.com/library/dn194201.aspx</source>
          <target state="new">https://msdn.microsoft.com/library/dn194201.aspx</target>
        </trans-unit>
        <trans-unit id="f8bcba47-defb-4874-a713-f15b7bd7d0b1" xml:space="preserve">
          <source>./media/service-bus-fundamentals-hybrid-solutions/SvcBus_01_architecture.png</source>
          <target state="new">./media/service-bus-fundamentals-hybrid-solutions/SvcBus_01_architecture.png</target>
        </trans-unit>
        <trans-unit id="05977adc-da6f-4938-9c51-53fd5070f07e" xml:space="preserve">
          <source>./media/service-bus-fundamentals-hybrid-solutions/SvcBus_02_queues.png</source>
          <target state="new">./media/service-bus-fundamentals-hybrid-solutions/SvcBus_02_queues.png</target>
        </trans-unit>
        <trans-unit id="11e2db56-3fad-417c-acad-6250eeed3566" xml:space="preserve">
          <source>./media/service-bus-fundamentals-hybrid-solutions/SvcBus_03_topicsandsubscriptions.png</source>
          <target state="new">./media/service-bus-fundamentals-hybrid-solutions/SvcBus_03_topicsandsubscriptions.png</target>
        </trans-unit>
        <trans-unit id="f0a1d176-1140-45fc-b304-c97a62b9744a" xml:space="preserve">
          <source>./media/service-bus-fundamentals-hybrid-solutions/SvcBus_04_relay.png</source>
          <target state="new">./media/service-bus-fundamentals-hybrid-solutions/SvcBus_04_relay.png</target>
        </trans-unit>
      </group>
      <group id="224ecb91-646a-47a4-ad3f-fdef9eb17a0e" />
    </body>
  </file>
</xliff>