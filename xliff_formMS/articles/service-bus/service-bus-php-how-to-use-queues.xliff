<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="f70866f6-8f3c-43ba-9680-530fa25e8b64" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="f70866f6-8f3c-43ba-9680-530fa25e8b64" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="b6963b69-c207-49be-9b86-641f7880905a">
        <trans-unit id="5c871aba-c694-45b9-86ae-97ecc7aaee56" xml:space="preserve">
          <source>How to use Service Bus queues (PHP) | Microsoft Azure</source>
          <target state="new">How to use Service Bus queues (PHP) | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="e4ef9118-03d5-4ab4-b440-eac17e41f2fd" xml:space="preserve">
          <source>Learn how to use Service Bus queues in Azure. Code samples written in PHP.</source>
          <target state="new">Learn how to use Service Bus queues in Azure. Code samples written in PHP.</target>
        </trans-unit>
        <trans-unit id="506f8f91-f533-4b9f-98ee-d2127e6bb0ad" xml:space="preserve">
          <source>This guide shows you how to use Service Bus queues.</source>
          <target state="new">This guide shows you how to use Service Bus queues.</target>
        </trans-unit>
        <trans-unit id="9a7b554a-250e-422d-bb18-a5492352e50e" xml:space="preserve">
          <source>The samples are written in PHP and use the <bpt id="ebd5c063-8608-4bb7-a3d9-e50e08cec7ab">&lt;linkText&gt;</bpt>Azure SDK for PHP<ept id="ebd5c063-8608-4bb7-a3d9-e50e08cec7ab">&lt;/linkText&gt;</ept><bpt id="ebd5c063-8608-4bb7-a3d9-e50e08cec7ab">&lt;title&gt;</bpt><ept id="ebd5c063-8608-4bb7-a3d9-e50e08cec7ab">&lt;/title&gt;</ept>.</source>
          <target state="new">The samples are written in PHP and use the <bpt id="ebd5c063-8608-4bb7-a3d9-e50e08cec7ab">&lt;linkText&gt;</bpt>Azure SDK for PHP<ept id="ebd5c063-8608-4bb7-a3d9-e50e08cec7ab">&lt;/linkText&gt;</ept><bpt id="ebd5c063-8608-4bb7-a3d9-e50e08cec7ab">&lt;title&gt;</bpt><ept id="ebd5c063-8608-4bb7-a3d9-e50e08cec7ab">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="0e9b07a5-9dd4-49a6-94a4-c75527a19f2d" xml:space="preserve">
          <source>The scenarios covered include <bpt id="83150623-87ef-4ab4-b13a-925e3e59c3ae">&lt;strong&gt;</bpt>creating queues<ept id="83150623-87ef-4ab4-b13a-925e3e59c3ae">&lt;/strong&gt;</ept>, <bpt id="cf4bc7f8-e73b-4675-af60-f40a3a0fa43d">&lt;strong&gt;</bpt>sending and receiving messages<ept id="cf4bc7f8-e73b-4675-af60-f40a3a0fa43d">&lt;/strong&gt;</ept>, and <bpt id="1ee086ec-d102-408a-84df-d17a081f0dda">&lt;strong&gt;</bpt>deleting queues<ept id="1ee086ec-d102-408a-84df-d17a081f0dda">&lt;/strong&gt;</ept>.</source>
          <target state="new">The scenarios covered include <bpt id="83150623-87ef-4ab4-b13a-925e3e59c3ae">&lt;strong&gt;</bpt>creating queues<ept id="83150623-87ef-4ab4-b13a-925e3e59c3ae">&lt;/strong&gt;</ept>, <bpt id="cf4bc7f8-e73b-4675-af60-f40a3a0fa43d">&lt;strong&gt;</bpt>sending and receiving messages<ept id="cf4bc7f8-e73b-4675-af60-f40a3a0fa43d">&lt;/strong&gt;</ept>, and <bpt id="1ee086ec-d102-408a-84df-d17a081f0dda">&lt;strong&gt;</bpt>deleting queues<ept id="1ee086ec-d102-408a-84df-d17a081f0dda">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="e453e3c6-d4d1-45a5-90c5-b2ca737513a9" xml:space="preserve">
          <source><bpt id="bbbd327d-cb88-4818-ba40-713ee6db929a">&lt;token href="../../includes/howto-service-bus-queues.md"&gt;</bpt><ept id="bbbd327d-cb88-4818-ba40-713ee6db929a">&lt;/token&gt;</ept></source>
          <target state="new"><bpt id="bbbd327d-cb88-4818-ba40-713ee6db929a">&lt;token href="../../includes/howto-service-bus-queues.md"&gt;</bpt><ept id="bbbd327d-cb88-4818-ba40-713ee6db929a">&lt;/token&gt;</ept></target>
        </trans-unit>
        <trans-unit id="5e97ceb3-8fc3-4ab9-aaca-8edad6925062" xml:space="preserve">
          <source>The only requirement for creating a PHP application that accesses the Azure Blob service is the referencing of classes in the <bpt id="5ef8e45f-b5fc-4ad4-aa4e-2b693a0b268f">&lt;linkText&gt;</bpt>Azure SDK for PHP<ept id="5ef8e45f-b5fc-4ad4-aa4e-2b693a0b268f">&lt;/linkText&gt;</ept><bpt id="5ef8e45f-b5fc-4ad4-aa4e-2b693a0b268f">&lt;title&gt;</bpt><ept id="5ef8e45f-b5fc-4ad4-aa4e-2b693a0b268f">&lt;/title&gt;</ept> from within your code.</source>
          <target state="new">The only requirement for creating a PHP application that accesses the Azure Blob service is the referencing of classes in the <bpt id="5ef8e45f-b5fc-4ad4-aa4e-2b693a0b268f">&lt;linkText&gt;</bpt>Azure SDK for PHP<ept id="5ef8e45f-b5fc-4ad4-aa4e-2b693a0b268f">&lt;/linkText&gt;</ept><bpt id="5ef8e45f-b5fc-4ad4-aa4e-2b693a0b268f">&lt;title&gt;</bpt><ept id="5ef8e45f-b5fc-4ad4-aa4e-2b693a0b268f">&lt;/title&gt;</ept> from within your code.</target>
        </trans-unit>
        <trans-unit id="d4adf386-dda5-4ade-8761-011ae4059b53" xml:space="preserve">
          <source>You can use any development tools to create your application, or Notepad.</source>
          <target state="new">You can use any development tools to create your application, or Notepad.</target>
        </trans-unit>
        <trans-unit id="c43b5413-0378-495a-8b91-6b2c93b7ea1e" xml:space="preserve">
          <source>Your PHP installation must also have the <bpt id="a31f6ad7-6465-4423-b077-dc22e7835c11">&lt;linkText&gt;</bpt>OpenSSL extension<ept id="a31f6ad7-6465-4423-b077-dc22e7835c11">&lt;/linkText&gt;</ept><bpt id="a31f6ad7-6465-4423-b077-dc22e7835c11">&lt;title&gt;</bpt><ept id="a31f6ad7-6465-4423-b077-dc22e7835c11">&lt;/title&gt;</ept> installed and enabled.</source>
          <target state="new">Your PHP installation must also have the <bpt id="a31f6ad7-6465-4423-b077-dc22e7835c11">&lt;linkText&gt;</bpt>OpenSSL extension<ept id="a31f6ad7-6465-4423-b077-dc22e7835c11">&lt;/linkText&gt;</ept><bpt id="a31f6ad7-6465-4423-b077-dc22e7835c11">&lt;title&gt;</bpt><ept id="a31f6ad7-6465-4423-b077-dc22e7835c11">&lt;/title&gt;</ept> installed and enabled.</target>
        </trans-unit>
        <trans-unit id="d1da7525-7f44-4608-b643-afa116d641d8" xml:space="preserve">
          <source>In this guide, you will use service features which can be called from within a PHP application locally, or in code running within an Azure web role, worker role, or website.</source>
          <target state="new">In this guide, you will use service features which can be called from within a PHP application locally, or in code running within an Azure web role, worker role, or website.</target>
        </trans-unit>
        <trans-unit id="ee309f08-3426-489a-8768-d7dbb082d1ea" xml:space="preserve">
          <source><bpt id="6c5a7990-c761-4a5f-9ceb-ea257b260466">&lt;token href="../../includes/get-client-libraries.md"&gt;</bpt><ept id="6c5a7990-c761-4a5f-9ceb-ea257b260466">&lt;/token&gt;</ept></source>
          <target state="new"><bpt id="6c5a7990-c761-4a5f-9ceb-ea257b260466">&lt;token href="../../includes/get-client-libraries.md"&gt;</bpt><ept id="6c5a7990-c761-4a5f-9ceb-ea257b260466">&lt;/token&gt;</ept></target>
        </trans-unit>
        <trans-unit id="be759877-1b2d-4a8b-b44a-54cf9c1416a2" xml:space="preserve">
          <source>To use the Azure Service Bus queue APIs, do the following:</source>
          <target state="new">To use the Azure Service Bus queue APIs, do the following:</target>
        </trans-unit>
        <trans-unit id="1b1eef89-6e55-485e-a578-b94b3dc42854" xml:space="preserve">
          <source>Reference the autoloader file using the <bpt id="b6aaf092-c0e7-4f3a-ad3f-277a316d8fb6">&lt;linkText&gt;</bpt>require_once[require_once]<ept id="b6aaf092-c0e7-4f3a-ad3f-277a316d8fb6">&lt;/linkText&gt;</ept><bpt id="b6aaf092-c0e7-4f3a-ad3f-277a316d8fb6">&lt;title&gt;</bpt><ept id="b6aaf092-c0e7-4f3a-ad3f-277a316d8fb6">&lt;/title&gt;</ept> statement.</source>
          <target state="new">Reference the autoloader file using the <bpt id="b6aaf092-c0e7-4f3a-ad3f-277a316d8fb6">&lt;linkText&gt;</bpt>require_once[require_once]<ept id="b6aaf092-c0e7-4f3a-ad3f-277a316d8fb6">&lt;/linkText&gt;</ept><bpt id="b6aaf092-c0e7-4f3a-ad3f-277a316d8fb6">&lt;title&gt;</bpt><ept id="b6aaf092-c0e7-4f3a-ad3f-277a316d8fb6">&lt;/title&gt;</ept> statement.</target>
        </trans-unit>
        <trans-unit id="2e12892e-fd0b-4964-8e16-ad2fbeaec681" xml:space="preserve">
          <source>Reference any classes you might use.</source>
          <target state="new">Reference any classes you might use.</target>
        </trans-unit>
        <trans-unit id="87f3dcb3-6b5c-4157-b5de-abaec556f5f0" xml:space="preserve">
          <source>The following example shows how to include the autoloader file and reference the <bpt id="d0444fd8-1dc1-40ba-a0ba-01620c01887c">&lt;strong&gt;</bpt>ServicesBuilder<ept id="d0444fd8-1dc1-40ba-a0ba-01620c01887c">&lt;/strong&gt;</ept> class.</source>
          <target state="new">The following example shows how to include the autoloader file and reference the <bpt id="d0444fd8-1dc1-40ba-a0ba-01620c01887c">&lt;strong&gt;</bpt>ServicesBuilder<ept id="d0444fd8-1dc1-40ba-a0ba-01620c01887c">&lt;/strong&gt;</ept> class.</target>
        </trans-unit>
        <trans-unit id="b5c8fa85-bf58-44d6-82b1-6966b3adddfd" xml:space="preserve">
          <source>This example (and other examples in this article) assumes you have installed the PHP Client Libraries for Azure via Composer.</source>
          <target state="new">This example (and other examples in this article) assumes you have installed the PHP Client Libraries for Azure via Composer.</target>
        </trans-unit>
        <trans-unit id="9d3df528-c352-4097-942b-c2aeda4fe7f8" xml:space="preserve">
          <source>If you installed the libraries manually or as a PEAR package, you must reference the <bpt id="45d2fb57-d8c3-4173-9a14-805bdc225ca6">&lt;strong&gt;</bpt>WindowsAzure.php<ept id="45d2fb57-d8c3-4173-9a14-805bdc225ca6">&lt;/strong&gt;</ept> autoloader file.</source>
          <target state="new">If you installed the libraries manually or as a PEAR package, you must reference the <bpt id="45d2fb57-d8c3-4173-9a14-805bdc225ca6">&lt;strong&gt;</bpt>WindowsAzure.php<ept id="45d2fb57-d8c3-4173-9a14-805bdc225ca6">&lt;/strong&gt;</ept> autoloader file.</target>
        </trans-unit>
        <trans-unit id="52d1a549-9e4c-4536-8339-7424aba4d668" xml:space="preserve">
          <source>In the examples below, the <bpt id="aa16b763-6dbb-4e54-b2b7-b730dacca899">&lt;code&gt;</bpt>require_once<ept id="aa16b763-6dbb-4e54-b2b7-b730dacca899">&lt;/code&gt;</ept> statement will always be shown, but only the classes necessary for the example to execute are referenced.</source>
          <target state="new">In the examples below, the <bpt id="aa16b763-6dbb-4e54-b2b7-b730dacca899">&lt;code&gt;</bpt>require_once<ept id="aa16b763-6dbb-4e54-b2b7-b730dacca899">&lt;/code&gt;</ept> statement will always be shown, but only the classes necessary for the example to execute are referenced.</target>
        </trans-unit>
        <trans-unit id="b8d49b4f-b714-4839-a331-fc5a6a33d4f3" xml:space="preserve">
          <source>To instantiate a Service Bus client, you must first have a valid connection string in this format:</source>
          <target state="new">To instantiate a Service Bus client, you must first have a valid connection string in this format:</target>
        </trans-unit>
        <trans-unit id="731df347-85ee-4ce8-ac11-91dfe231b575" xml:space="preserve">
          <source>Where <bpt id="62bda622-43e6-4399-97fc-eb2562184ef4">&lt;strong&gt;</bpt>Endpoint<ept id="62bda622-43e6-4399-97fc-eb2562184ef4">&lt;/strong&gt;</ept> is typically of the format <bpt id="4d764a00-42be-44eb-8603-ffbccdceefbc">&lt;code&gt;</bpt>https://[yourNamespace].servicebus.windows.net<ept id="4d764a00-42be-44eb-8603-ffbccdceefbc">&lt;/code&gt;</ept>.</source>
          <target state="new">Where <bpt id="62bda622-43e6-4399-97fc-eb2562184ef4">&lt;strong&gt;</bpt>Endpoint<ept id="62bda622-43e6-4399-97fc-eb2562184ef4">&lt;/strong&gt;</ept> is typically of the format <bpt id="4d764a00-42be-44eb-8603-ffbccdceefbc">&lt;code&gt;</bpt>https://[yourNamespace].servicebus.windows.net<ept id="4d764a00-42be-44eb-8603-ffbccdceefbc">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="6fc43c52-292c-4f88-afe4-82f107355cd6" xml:space="preserve">
          <source>To create any Azure service client you must use the <bpt id="59120ffa-ad71-47f1-817d-052e3d72e4cd">&lt;strong&gt;</bpt>ServicesBuilder<ept id="59120ffa-ad71-47f1-817d-052e3d72e4cd">&lt;/strong&gt;</ept> class.</source>
          <target state="new">To create any Azure service client you must use the <bpt id="59120ffa-ad71-47f1-817d-052e3d72e4cd">&lt;strong&gt;</bpt>ServicesBuilder<ept id="59120ffa-ad71-47f1-817d-052e3d72e4cd">&lt;/strong&gt;</ept> class.</target>
        </trans-unit>
        <trans-unit id="af690261-5241-490d-84e2-66098abeea7c" xml:space="preserve">
          <source>You can:</source>
          <target state="new">You can:</target>
        </trans-unit>
        <trans-unit id="b17b385b-0db2-4714-820d-fbf1b2957c48" xml:space="preserve">
          <source>Pass the connection string directly to it.</source>
          <target state="new">Pass the connection string directly to it.</target>
        </trans-unit>
        <trans-unit id="6ddc6d0e-d7dc-405b-9f40-6509275091a5" xml:space="preserve">
          <source>Use the <bpt id="dfa7ebf9-615c-4193-9721-cb36ab51ec66">&lt;strong&gt;</bpt>CloudConfigurationManager (CCM)<ept id="dfa7ebf9-615c-4193-9721-cb36ab51ec66">&lt;/strong&gt;</ept> to check multiple external sources for the connection string:</source>
          <target state="new">Use the <bpt id="dfa7ebf9-615c-4193-9721-cb36ab51ec66">&lt;strong&gt;</bpt>CloudConfigurationManager (CCM)<ept id="dfa7ebf9-615c-4193-9721-cb36ab51ec66">&lt;/strong&gt;</ept> to check multiple external sources for the connection string:</target>
        </trans-unit>
        <trans-unit id="18abe165-4ea4-472c-904a-f6aad3c058bc" xml:space="preserve">
          <source>By default it comes with support for one external source - environmental variables</source>
          <target state="new">By default it comes with support for one external source - environmental variables</target>
        </trans-unit>
        <trans-unit id="7a0963aa-1a4d-4656-adb1-6e69395612c8" xml:space="preserve">
          <source>You can add new sources by extending the <bpt id="449e7c05-bdcb-4fc1-b620-17d39350f32a">&lt;strong&gt;</bpt>ConnectionStringSource<ept id="449e7c05-bdcb-4fc1-b620-17d39350f32a">&lt;/strong&gt;</ept> class</source>
          <target state="new">You can add new sources by extending the <bpt id="449e7c05-bdcb-4fc1-b620-17d39350f32a">&lt;strong&gt;</bpt>ConnectionStringSource<ept id="449e7c05-bdcb-4fc1-b620-17d39350f32a">&lt;/strong&gt;</ept> class</target>
        </trans-unit>
        <trans-unit id="66c3f2ac-525e-4850-a35d-3b3a192a25bc" xml:space="preserve">
          <source>For the examples outlined here, the connection string will be passed directly.</source>
          <target state="new">For the examples outlined here, the connection string will be passed directly.</target>
        </trans-unit>
        <trans-unit id="2a33b98c-9276-4284-894c-5e5c17d18d0b" xml:space="preserve">
          <source>You can perform management operations for Service Bus queues via the <bpt id="a48ddd03-40ba-486f-bec5-4c29fbd4cd1b">&lt;strong&gt;</bpt>ServiceBusRestProxy<ept id="a48ddd03-40ba-486f-bec5-4c29fbd4cd1b">&lt;/strong&gt;</ept> class.</source>
          <target state="new">You can perform management operations for Service Bus queues via the <bpt id="a48ddd03-40ba-486f-bec5-4c29fbd4cd1b">&lt;strong&gt;</bpt>ServiceBusRestProxy<ept id="a48ddd03-40ba-486f-bec5-4c29fbd4cd1b">&lt;/strong&gt;</ept> class.</target>
        </trans-unit>
        <trans-unit id="b0f4dc4d-476c-4dbe-89d7-a1236e451c39" xml:space="preserve">
          <source>A <bpt id="a5d1a027-7804-46e6-b65f-2d8d6aa83acc">&lt;strong&gt;</bpt>ServiceBusRestProxy<ept id="a5d1a027-7804-46e6-b65f-2d8d6aa83acc">&lt;/strong&gt;</ept> object is constructed via the <bpt id="5a914bfe-ec64-44f6-9b59-31debbca102f">&lt;strong&gt;</bpt>ServicesBuilder::createServiceBusService<ept id="5a914bfe-ec64-44f6-9b59-31debbca102f">&lt;/strong&gt;</ept> factory method with an appropriate connection string that encapsulates the token permissions to manage it.</source>
          <target state="new">A <bpt id="a5d1a027-7804-46e6-b65f-2d8d6aa83acc">&lt;strong&gt;</bpt>ServiceBusRestProxy<ept id="a5d1a027-7804-46e6-b65f-2d8d6aa83acc">&lt;/strong&gt;</ept> object is constructed via the <bpt id="5a914bfe-ec64-44f6-9b59-31debbca102f">&lt;strong&gt;</bpt>ServicesBuilder::createServiceBusService<ept id="5a914bfe-ec64-44f6-9b59-31debbca102f">&lt;/strong&gt;</ept> factory method with an appropriate connection string that encapsulates the token permissions to manage it.</target>
        </trans-unit>
        <trans-unit id="d47b05f3-6360-4f2f-8528-055fbf7524d7" xml:space="preserve">
          <source>The following example shows how to instantiate a <bpt id="6b7e498c-c12b-4f55-98d1-ae3a15e10fe9">&lt;strong&gt;</bpt>ServiceBusRestProxy<ept id="6b7e498c-c12b-4f55-98d1-ae3a15e10fe9">&lt;/strong&gt;</ept> and call <bpt id="f0ed36c8-00ae-4a8b-b17f-0650c11f8144">&lt;strong&gt;</bpt>ServiceBusRestProxy-&gt;createQueue<ept id="f0ed36c8-00ae-4a8b-b17f-0650c11f8144">&lt;/strong&gt;</ept> to create a queue named <bpt id="280617f8-3465-4760-8fc7-ebd1825880f4">&lt;code&gt;</bpt>myqueue<ept id="280617f8-3465-4760-8fc7-ebd1825880f4">&lt;/code&gt;</ept> within a <bpt id="e2a3a42c-85d6-489a-87a9-cb794082b623">&lt;code&gt;</bpt>MySBNamespace<ept id="e2a3a42c-85d6-489a-87a9-cb794082b623">&lt;/code&gt;</ept> service namespace:</source>
          <target state="new">The following example shows how to instantiate a <bpt id="6b7e498c-c12b-4f55-98d1-ae3a15e10fe9">&lt;strong&gt;</bpt>ServiceBusRestProxy<ept id="6b7e498c-c12b-4f55-98d1-ae3a15e10fe9">&lt;/strong&gt;</ept> and call <bpt id="f0ed36c8-00ae-4a8b-b17f-0650c11f8144">&lt;strong&gt;</bpt>ServiceBusRestProxy-&gt;createQueue<ept id="f0ed36c8-00ae-4a8b-b17f-0650c11f8144">&lt;/strong&gt;</ept> to create a queue named <bpt id="280617f8-3465-4760-8fc7-ebd1825880f4">&lt;code&gt;</bpt>myqueue<ept id="280617f8-3465-4760-8fc7-ebd1825880f4">&lt;/code&gt;</ept> within a <bpt id="e2a3a42c-85d6-489a-87a9-cb794082b623">&lt;code&gt;</bpt>MySBNamespace<ept id="e2a3a42c-85d6-489a-87a9-cb794082b623">&lt;/code&gt;</ept> service namespace:</target>
        </trans-unit>
        <trans-unit id="c4c8a39e-8270-4db9-82e2-f3d9157f0655" xml:space="preserve">
          <source>You can use the <bpt id="4450297f-3ab2-4c81-a658-8b8c9b90589c">&lt;code&gt;</bpt>listQueues<ept id="4450297f-3ab2-4c81-a658-8b8c9b90589c">&lt;/code&gt;</ept> method on <bpt id="fd781a6a-a558-4a95-ab48-7751d7d1d5a3">&lt;code&gt;</bpt>ServiceBusRestProxy<ept id="fd781a6a-a558-4a95-ab48-7751d7d1d5a3">&lt;/code&gt;</ept> objects to check if a queue with a specified name already exists within a service namespace.</source>
          <target state="new">You can use the <bpt id="4450297f-3ab2-4c81-a658-8b8c9b90589c">&lt;code&gt;</bpt>listQueues<ept id="4450297f-3ab2-4c81-a658-8b8c9b90589c">&lt;/code&gt;</ept> method on <bpt id="fd781a6a-a558-4a95-ab48-7751d7d1d5a3">&lt;code&gt;</bpt>ServiceBusRestProxy<ept id="fd781a6a-a558-4a95-ab48-7751d7d1d5a3">&lt;/code&gt;</ept> objects to check if a queue with a specified name already exists within a service namespace.</target>
        </trans-unit>
        <trans-unit id="ae3ba68c-b5b7-4047-bbdb-d4e55c7135e0" xml:space="preserve">
          <source>To send a message to a Service Bus queue, your application calls the <bpt id="6d584cf1-ccb3-40b3-99ef-0d819156f035">&lt;strong&gt;</bpt>ServiceBusRestProxy-&gt;sendQueueMessage<ept id="6d584cf1-ccb3-40b3-99ef-0d819156f035">&lt;/strong&gt;</ept> method.</source>
          <target state="new">To send a message to a Service Bus queue, your application calls the <bpt id="6d584cf1-ccb3-40b3-99ef-0d819156f035">&lt;strong&gt;</bpt>ServiceBusRestProxy-&gt;sendQueueMessage<ept id="6d584cf1-ccb3-40b3-99ef-0d819156f035">&lt;/strong&gt;</ept> method.</target>
        </trans-unit>
        <trans-unit id="175e64da-4748-4979-9b0d-eb2816aa8c2b" xml:space="preserve">
          <source>The following code shows how to send a message to the <bpt id="dfc2dc48-642a-4253-a4f0-7d2caa4c82f2">&lt;code&gt;</bpt>myqueue<ept id="dfc2dc48-642a-4253-a4f0-7d2caa4c82f2">&lt;/code&gt;</ept> queue previously created within the
<bpt id="0ae04035-a3cb-40fd-a2e6-d46a7708169b">&lt;code&gt;</bpt>MySBNamespace<ept id="0ae04035-a3cb-40fd-a2e6-d46a7708169b">&lt;/code&gt;</ept> service namespace.</source>
          <target state="new">The following code shows how to send a message to the <bpt id="dfc2dc48-642a-4253-a4f0-7d2caa4c82f2">&lt;code&gt;</bpt>myqueue<ept id="dfc2dc48-642a-4253-a4f0-7d2caa4c82f2">&lt;/code&gt;</ept> queue previously created within the
<bpt id="0ae04035-a3cb-40fd-a2e6-d46a7708169b">&lt;code&gt;</bpt>MySBNamespace<ept id="0ae04035-a3cb-40fd-a2e6-d46a7708169b">&lt;/code&gt;</ept> service namespace.</target>
        </trans-unit>
        <trans-unit id="c3e814f9-b3ea-4185-b2b8-0b90c66ead21" xml:space="preserve">
          <source>Messages sent to (and received from ) Service Bus queues are instances of the <bpt id="0e19a013-f244-47c0-85c9-6f897c622bb4">&lt;strong&gt;</bpt>BrokeredMessage<ept id="0e19a013-f244-47c0-85c9-6f897c622bb4">&lt;/strong&gt;</ept> class.</source>
          <target state="new">Messages sent to (and received from ) Service Bus queues are instances of the <bpt id="0e19a013-f244-47c0-85c9-6f897c622bb4">&lt;strong&gt;</bpt>BrokeredMessage<ept id="0e19a013-f244-47c0-85c9-6f897c622bb4">&lt;/strong&gt;</ept> class.</target>
        </trans-unit>
        <trans-unit id="c67ba5d1-aaf9-4e07-922d-fe3bd60c2670" xml:space="preserve">
          <source><bpt id="023651c7-015a-4c5b-8a4d-37a205c3f720">&lt;strong&gt;</bpt>BrokeredMessage<ept id="023651c7-015a-4c5b-8a4d-37a205c3f720">&lt;/strong&gt;</ept> objects have a set of standard methods (such as <bpt id="bd1dd59d-6170-4351-b7c3-e2c599c7732a">&lt;strong&gt;</bpt>getLabel<ept id="bd1dd59d-6170-4351-b7c3-e2c599c7732a">&lt;/strong&gt;</ept>, <bpt id="b82704ee-c9dd-4215-807b-4692c884aaab">&lt;strong&gt;</bpt>getTimeToLive<ept id="b82704ee-c9dd-4215-807b-4692c884aaab">&lt;/strong&gt;</ept>, <bpt id="4b53e966-e606-4ac4-b525-c3f9705f2546">&lt;strong&gt;</bpt>setLabel<ept id="4b53e966-e606-4ac4-b525-c3f9705f2546">&lt;/strong&gt;</ept>, and <bpt id="538078e5-3f02-4815-b889-83e47981ec4c">&lt;strong&gt;</bpt>setTimeToLive<ept id="538078e5-3f02-4815-b889-83e47981ec4c">&lt;/strong&gt;</ept>) and properties that are used to hold custom application-specific properties, and a body of arbitrary application data.</source>
          <target state="new"><bpt id="023651c7-015a-4c5b-8a4d-37a205c3f720">&lt;strong&gt;</bpt>BrokeredMessage<ept id="023651c7-015a-4c5b-8a4d-37a205c3f720">&lt;/strong&gt;</ept> objects have a set of standard methods (such as <bpt id="bd1dd59d-6170-4351-b7c3-e2c599c7732a">&lt;strong&gt;</bpt>getLabel<ept id="bd1dd59d-6170-4351-b7c3-e2c599c7732a">&lt;/strong&gt;</ept>, <bpt id="b82704ee-c9dd-4215-807b-4692c884aaab">&lt;strong&gt;</bpt>getTimeToLive<ept id="b82704ee-c9dd-4215-807b-4692c884aaab">&lt;/strong&gt;</ept>, <bpt id="4b53e966-e606-4ac4-b525-c3f9705f2546">&lt;strong&gt;</bpt>setLabel<ept id="4b53e966-e606-4ac4-b525-c3f9705f2546">&lt;/strong&gt;</ept>, and <bpt id="538078e5-3f02-4815-b889-83e47981ec4c">&lt;strong&gt;</bpt>setTimeToLive<ept id="538078e5-3f02-4815-b889-83e47981ec4c">&lt;/strong&gt;</ept>) and properties that are used to hold custom application-specific properties, and a body of arbitrary application data.</target>
        </trans-unit>
        <trans-unit id="632ad325-afc8-4c67-a1a4-62e297c5c305" xml:space="preserve">
          <source>Service Bus queues support a maximum message size of 256 KB (the header, which includes the standard and custom application properties, can have a maximum size of 64 KB).</source>
          <target state="new">Service Bus queues support a maximum message size of 256 KB (the header, which includes the standard and custom application properties, can have a maximum size of 64 KB).</target>
        </trans-unit>
        <trans-unit id="542f16b0-50ea-455c-a04e-e119aa141167" xml:space="preserve">
          <source>There is no limit on the number of messages held in a queue but there is a cap on the total size of the messages held by a queue.</source>
          <target state="new">There is no limit on the number of messages held in a queue but there is a cap on the total size of the messages held by a queue.</target>
        </trans-unit>
        <trans-unit id="f703b76c-31a8-458f-bb57-1bc5f52acf78" xml:space="preserve">
          <source>This upper limit on queue size is 5 GB.</source>
          <target state="new">This upper limit on queue size is 5 GB.</target>
        </trans-unit>
        <trans-unit id="bef76220-b952-4326-af87-79729c2d2111" xml:space="preserve">
          <source>The best way to receive messages from a queue is to use a <bpt id="a0f88751-85fc-4f0f-9595-1a6f6bf637fa">&lt;strong&gt;</bpt>ServiceBusRestProxy-&gt;receiveQueueMessage<ept id="a0f88751-85fc-4f0f-9595-1a6f6bf637fa">&lt;/strong&gt;</ept> method.</source>
          <target state="new">The best way to receive messages from a queue is to use a <bpt id="a0f88751-85fc-4f0f-9595-1a6f6bf637fa">&lt;strong&gt;</bpt>ServiceBusRestProxy-&gt;receiveQueueMessage<ept id="a0f88751-85fc-4f0f-9595-1a6f6bf637fa">&lt;/strong&gt;</ept> method.</target>
        </trans-unit>
        <trans-unit id="f1152075-4ee9-4fa1-9d8c-f5abcec3b268" xml:space="preserve">
          <source>Messages can be received in two different modes: <bpt id="28d4885d-d16c-410e-8546-bcef1d451288">&lt;strong&gt;</bpt>ReceiveAndDelete<ept id="28d4885d-d16c-410e-8546-bcef1d451288">&lt;/strong&gt;</ept> (the default) and <bpt id="f3f6f00b-c68a-4f22-bddd-bb377aa5c7d6">&lt;strong&gt;</bpt>PeekLock<ept id="f3f6f00b-c68a-4f22-bddd-bb377aa5c7d6">&lt;/strong&gt;</ept>.</source>
          <target state="new">Messages can be received in two different modes: <bpt id="28d4885d-d16c-410e-8546-bcef1d451288">&lt;strong&gt;</bpt>ReceiveAndDelete<ept id="28d4885d-d16c-410e-8546-bcef1d451288">&lt;/strong&gt;</ept> (the default) and <bpt id="f3f6f00b-c68a-4f22-bddd-bb377aa5c7d6">&lt;strong&gt;</bpt>PeekLock<ept id="f3f6f00b-c68a-4f22-bddd-bb377aa5c7d6">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="e6521c5e-dda3-4a4b-b77c-0b3c7f8e0295" xml:space="preserve">
          <source>When using the <bpt id="71634eba-60a7-4abf-887a-d0f0a636ab4b">&lt;strong&gt;</bpt>ReceiveAndDelete<ept id="71634eba-60a7-4abf-887a-d0f0a636ab4b">&lt;/strong&gt;</ept> mode, receive is a single-shot operation - that is, when Service Bus receives a read request for a message in a queue, it marks the message as being consumed and returns it to the application.</source>
          <target state="new">When using the <bpt id="71634eba-60a7-4abf-887a-d0f0a636ab4b">&lt;strong&gt;</bpt>ReceiveAndDelete<ept id="71634eba-60a7-4abf-887a-d0f0a636ab4b">&lt;/strong&gt;</ept> mode, receive is a single-shot operation - that is, when Service Bus receives a read request for a message in a queue, it marks the message as being consumed and returns it to the application.</target>
        </trans-unit>
        <trans-unit id="fa9a049a-b4f4-49f5-8aa0-ac9666c5a268" xml:space="preserve">
          <source><bpt id="e0f7d862-285b-48bd-bb0a-c6b391e9141a">&lt;strong&gt;</bpt>ReceiveAndDelete<ept id="e0f7d862-285b-48bd-bb0a-c6b391e9141a">&lt;/strong&gt;</ept> mode is the simplest model and works best for scenarios in which an application can tolerate not processing a message in the event of a failure.</source>
          <target state="new"><bpt id="e0f7d862-285b-48bd-bb0a-c6b391e9141a">&lt;strong&gt;</bpt>ReceiveAndDelete<ept id="e0f7d862-285b-48bd-bb0a-c6b391e9141a">&lt;/strong&gt;</ept> mode is the simplest model and works best for scenarios in which an application can tolerate not processing a message in the event of a failure.</target>
        </trans-unit>
        <trans-unit id="7866dac9-5ba9-40c6-8a8f-17dd42d7dea9" xml:space="preserve">
          <source>To understand this, consider a scenario in which the consumer issues the receive request and then crashes before processing it.</source>
          <target state="new">To understand this, consider a scenario in which the consumer issues the receive request and then crashes before processing it.</target>
        </trans-unit>
        <trans-unit id="b972ae2b-79e4-457a-8e2c-a6fc5120ef6c" xml:space="preserve">
          <source>Because Service Bus will have marked the message as being consumed, then when the application restarts and begins consuming messages again, it will have missed the message that was consumed prior to the crash.</source>
          <target state="new">Because Service Bus will have marked the message as being consumed, then when the application restarts and begins consuming messages again, it will have missed the message that was consumed prior to the crash.</target>
        </trans-unit>
        <trans-unit id="10c7c29b-1d09-47d0-ae5e-56fb75f7f148" xml:space="preserve">
          <source>In <bpt id="901dfed6-f020-4a29-9a2d-0b2b42f1e8f8">&lt;strong&gt;</bpt>PeekLock<ept id="901dfed6-f020-4a29-9a2d-0b2b42f1e8f8">&lt;/strong&gt;</ept> mode, receiving a message becomes a two stage operation, which makes it possible to support applications that cannot tolerate missing messages.</source>
          <target state="new">In <bpt id="901dfed6-f020-4a29-9a2d-0b2b42f1e8f8">&lt;strong&gt;</bpt>PeekLock<ept id="901dfed6-f020-4a29-9a2d-0b2b42f1e8f8">&lt;/strong&gt;</ept> mode, receiving a message becomes a two stage operation, which makes it possible to support applications that cannot tolerate missing messages.</target>
        </trans-unit>
        <trans-unit id="3fcdcbaa-3a07-49ca-9cd3-696f22e53507" xml:space="preserve">
          <source>When Service Bus receives a request, it finds the next message to be consumed, locks it to prevent other consumers from receiving it, and then returns it to the application.</source>
          <target state="new">When Service Bus receives a request, it finds the next message to be consumed, locks it to prevent other consumers from receiving it, and then returns it to the application.</target>
        </trans-unit>
        <trans-unit id="e82bbc1b-6996-46f1-8e7b-84d3867cb96d" xml:space="preserve">
          <source>After the application finishes processing the message (or stores it reliably for future processing), it completes the second stage of the receive process by passing the received message to <bpt id="00652c3d-26b7-43d1-adc4-3699d2deca08">&lt;strong&gt;</bpt>ServiceBusRestProxy-&gt;deleteMessage<ept id="00652c3d-26b7-43d1-adc4-3699d2deca08">&lt;/strong&gt;</ept>.</source>
          <target state="new">After the application finishes processing the message (or stores it reliably for future processing), it completes the second stage of the receive process by passing the received message to <bpt id="00652c3d-26b7-43d1-adc4-3699d2deca08">&lt;strong&gt;</bpt>ServiceBusRestProxy-&gt;deleteMessage<ept id="00652c3d-26b7-43d1-adc4-3699d2deca08">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="ce75a892-7cd6-416c-aad0-310d5cc687df" xml:space="preserve">
          <source>When Service Bus sees the <bpt id="84e04d44-4b33-4ff3-9db6-fe5eced64d20">&lt;strong&gt;</bpt>deleteMessage<ept id="84e04d44-4b33-4ff3-9db6-fe5eced64d20">&lt;/strong&gt;</ept> call, it will mark the message as being consumed and remove it from the queue.</source>
          <target state="new">When Service Bus sees the <bpt id="84e04d44-4b33-4ff3-9db6-fe5eced64d20">&lt;strong&gt;</bpt>deleteMessage<ept id="84e04d44-4b33-4ff3-9db6-fe5eced64d20">&lt;/strong&gt;</ept> call, it will mark the message as being consumed and remove it from the queue.</target>
        </trans-unit>
        <trans-unit id="2401eb69-ed41-4800-b6e8-d5272f7e0d93" xml:space="preserve">
          <source>The following example shows how a message can be received and processed using <bpt id="ef521175-bf94-40fb-b995-b23c094f84dc">&lt;strong&gt;</bpt>PeekLock<ept id="ef521175-bf94-40fb-b995-b23c094f84dc">&lt;/strong&gt;</ept> mode (not the default mode).</source>
          <target state="new">The following example shows how a message can be received and processed using <bpt id="ef521175-bf94-40fb-b995-b23c094f84dc">&lt;strong&gt;</bpt>PeekLock<ept id="ef521175-bf94-40fb-b995-b23c094f84dc">&lt;/strong&gt;</ept> mode (not the default mode).</target>
        </trans-unit>
        <trans-unit id="11b86aed-a97e-4d55-8bc1-0b2edad04c0d" xml:space="preserve">
          <source>Service Bus provides functionality to help you gracefully recover from errors in your application or difficulties processing a message.</source>
          <target state="new">Service Bus provides functionality to help you gracefully recover from errors in your application or difficulties processing a message.</target>
        </trans-unit>
        <trans-unit id="7a153d91-f7f5-4f2f-97a5-b254dfb1b6ae" xml:space="preserve">
          <source>If a receiver application is unable to process the message for some reason, then it can call the <bpt id="e52c9fa4-3fa1-440e-9c01-7e4d8a0946d3">&lt;strong&gt;</bpt>unlockMessage<ept id="e52c9fa4-3fa1-440e-9c01-7e4d8a0946d3">&lt;/strong&gt;</ept> method on the received message (instead of the <bpt id="f8402631-9d82-429c-9a7e-ca22d0a0c958">&lt;strong&gt;</bpt>deleteMessage<ept id="f8402631-9d82-429c-9a7e-ca22d0a0c958">&lt;/strong&gt;</ept> method).</source>
          <target state="new">If a receiver application is unable to process the message for some reason, then it can call the <bpt id="e52c9fa4-3fa1-440e-9c01-7e4d8a0946d3">&lt;strong&gt;</bpt>unlockMessage<ept id="e52c9fa4-3fa1-440e-9c01-7e4d8a0946d3">&lt;/strong&gt;</ept> method on the received message (instead of the <bpt id="f8402631-9d82-429c-9a7e-ca22d0a0c958">&lt;strong&gt;</bpt>deleteMessage<ept id="f8402631-9d82-429c-9a7e-ca22d0a0c958">&lt;/strong&gt;</ept> method).</target>
        </trans-unit>
        <trans-unit id="e808f572-26af-4b40-a8f4-f012b7249c24" xml:space="preserve">
          <source>This will cause Service Bus to unlock the message within the queue and make it available to be received again, either by the same consuming application or by another consuming application.</source>
          <target state="new">This will cause Service Bus to unlock the message within the queue and make it available to be received again, either by the same consuming application or by another consuming application.</target>
        </trans-unit>
        <trans-unit id="73d5e4f5-35e8-4c3c-a251-4911a50ff9e4" xml:space="preserve">
          <source>There is also a timeout associated with a message locked within the queue, and if the application fails to process the message before the lock timeout expires (for example, if the application crashes), then Service Bus will unlock the message automatically and make it available to be received again.</source>
          <target state="new">There is also a timeout associated with a message locked within the queue, and if the application fails to process the message before the lock timeout expires (for example, if the application crashes), then Service Bus will unlock the message automatically and make it available to be received again.</target>
        </trans-unit>
        <trans-unit id="7e778f3a-57c1-45f7-ba34-06557bf282ae" xml:space="preserve">
          <source>In the event that the application crashes after processing the message but before the <bpt id="647ccbb2-ef9a-4134-83b5-04dfa81d5666">&lt;strong&gt;</bpt>deleteMessage<ept id="647ccbb2-ef9a-4134-83b5-04dfa81d5666">&lt;/strong&gt;</ept> request is issued, then the message will be redelivered to the application when it restarts.</source>
          <target state="new">In the event that the application crashes after processing the message but before the <bpt id="647ccbb2-ef9a-4134-83b5-04dfa81d5666">&lt;strong&gt;</bpt>deleteMessage<ept id="647ccbb2-ef9a-4134-83b5-04dfa81d5666">&lt;/strong&gt;</ept> request is issued, then the message will be redelivered to the application when it restarts.</target>
        </trans-unit>
        <trans-unit id="bf805465-e74c-49ac-9a53-10bac58f5224" xml:space="preserve">
          <source>This is often called <bpt id="cae965cb-7622-4d64-89e8-304063f5234e">&lt;strong&gt;</bpt>At Least Once Processing<ept id="cae965cb-7622-4d64-89e8-304063f5234e">&lt;/strong&gt;</ept>; that is, each message is processed at least once but in certain situations the same message may be redelivered.</source>
          <target state="new">This is often called <bpt id="cae965cb-7622-4d64-89e8-304063f5234e">&lt;strong&gt;</bpt>At Least Once Processing<ept id="cae965cb-7622-4d64-89e8-304063f5234e">&lt;/strong&gt;</ept>; that is, each message is processed at least once but in certain situations the same message may be redelivered.</target>
        </trans-unit>
        <trans-unit id="782312c2-5c5c-4b65-ac45-4ff2a2458cd3" xml:space="preserve">
          <source>If the scenario cannot tolerate duplicate processing, then adding additional logic to applications to handle duplicate message delivery is recommended.</source>
          <target state="new">If the scenario cannot tolerate duplicate processing, then adding additional logic to applications to handle duplicate message delivery is recommended.</target>
        </trans-unit>
        <trans-unit id="720d6980-a577-41d4-8f46-71126117fa1c" xml:space="preserve">
          <source>This is often achieved using the <bpt id="bd865647-13c9-45a4-a2f1-d486455354a4">&lt;strong&gt;</bpt>getMessageId<ept id="bd865647-13c9-45a4-a2f1-d486455354a4">&lt;/strong&gt;</ept> method of the message, which remains constant across delivery attempts.</source>
          <target state="new">This is often achieved using the <bpt id="bd865647-13c9-45a4-a2f1-d486455354a4">&lt;strong&gt;</bpt>getMessageId<ept id="bd865647-13c9-45a4-a2f1-d486455354a4">&lt;/strong&gt;</ept> method of the message, which remains constant across delivery attempts.</target>
        </trans-unit>
        <trans-unit id="a6a6dbe2-c612-442d-916b-2c7be2f6d70c" xml:space="preserve">
          <source>Now that you've learned the basics of Service Bus queues, see the MSDN topic <bpt id="4baa7b2e-8994-4070-8d05-3a5c5472922b">&lt;linkText&gt;</bpt>Queues, Topics, and Subscriptions<ept id="4baa7b2e-8994-4070-8d05-3a5c5472922b">&lt;/linkText&gt;</ept><bpt id="4baa7b2e-8994-4070-8d05-3a5c5472922b">&lt;title&gt;</bpt><ept id="4baa7b2e-8994-4070-8d05-3a5c5472922b">&lt;/title&gt;</ept> for more information.</source>
          <target state="new">Now that you've learned the basics of Service Bus queues, see the MSDN topic <bpt id="4baa7b2e-8994-4070-8d05-3a5c5472922b">&lt;linkText&gt;</bpt>Queues, Topics, and Subscriptions<ept id="4baa7b2e-8994-4070-8d05-3a5c5472922b">&lt;/linkText&gt;</ept><bpt id="4baa7b2e-8994-4070-8d05-3a5c5472922b">&lt;title&gt;</bpt><ept id="4baa7b2e-8994-4070-8d05-3a5c5472922b">&lt;/title&gt;</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="a615b3be-e9ed-434a-89b8-45fa389bdca4" xml:space="preserve">
          <source>../../../DevCenter/Java/Media/SvcBusQueues_01_FlowDiagram.jpg</source>
          <target state="new">../../../DevCenter/Java/Media/SvcBusQueues_01_FlowDiagram.jpg</target>
        </trans-unit>
        <trans-unit id="afcc9d9a-d934-4e3c-848f-e649b732f6f8" xml:space="preserve">
          <source>http://manage.windowsazure.com/</source>
          <target state="new">http://manage.windowsazure.com/</target>
        </trans-unit>
        <trans-unit id="52cde10f-e517-4f9b-9a18-6ae2863f5850" xml:space="preserve">
          <source>../../../DevCenter/Java/Media/SvcBusQueues_02_SvcBusNode.jpg</source>
          <target state="new">../../../DevCenter/Java/Media/SvcBusQueues_02_SvcBusNode.jpg</target>
        </trans-unit>
        <trans-unit id="bb46af7f-e6ad-44d1-910e-0e6a1daf33f7" xml:space="preserve">
          <source>../../../DevCenter/Java/Media/SvcBusQueues_03_CreateNewSvcNamespace.jpg</source>
          <target state="new">../../../DevCenter/Java/Media/SvcBusQueues_03_CreateNewSvcNamespace.jpg</target>
        </trans-unit>
        <trans-unit id="8909b710-74b6-49d6-a242-1fa19b15914b" xml:space="preserve">
          <source>../../../DevCenter/Java/Media/SvcBusQueues_04_SvcBusNode_AvailNamespaces.jpg</source>
          <target state="new">../../../DevCenter/Java/Media/SvcBusQueues_04_SvcBusNode_AvailNamespaces.jpg</target>
        </trans-unit>
        <trans-unit id="bff28f4e-4fb4-43db-9277-fbc379e9f6fc" xml:space="preserve">
          <source>../../../DevCenter/Java/Media/SvcBusQueues_05_NamespaceList.jpg</source>
          <target state="new">../../../DevCenter/Java/Media/SvcBusQueues_05_NamespaceList.jpg</target>
        </trans-unit>
        <trans-unit id="675d1478-e61f-41f1-9809-493fb6d54fb2" xml:space="preserve">
          <source>../../../DevCenter/Java/Media/SvcBusQueues_06_PropertiesPane.jpg</source>
          <target state="new">../../../DevCenter/Java/Media/SvcBusQueues_06_PropertiesPane.jpg</target>
        </trans-unit>
        <trans-unit id="6d8eba7f-3741-4d29-bbd0-89fde1823021" xml:space="preserve">
          <source>../../../DevCenter/Java/Media/SvcBusQueues_07_DefaultKey.jpg</source>
          <target state="new">../../../DevCenter/Java/Media/SvcBusQueues_07_DefaultKey.jpg</target>
        </trans-unit>
        <trans-unit id="5e0f9911-0ef2-4ff7-ab77-2c8980bb9ed4" xml:space="preserve">
          <source>http://msdn.microsoft.com/library/azure/hh367516.aspx</source>
          <target state="new">http://msdn.microsoft.com/library/azure/hh367516.aspx</target>
        </trans-unit>
        <trans-unit id="25909ba2-e413-4533-a0bf-4ff77c6b0d6f" xml:space="preserve">
          <source>http://php.net/require_once</source>
          <target state="new">http://php.net/require_once</target>
        </trans-unit>
      </group>
      <group id="5043f82c-ec35-422d-aad6-3ff70d761960" />
    </body>
  </file>
</xliff>