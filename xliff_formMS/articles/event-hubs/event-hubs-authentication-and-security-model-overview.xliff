<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="391d752c-21e8-4289-8e72-91ea6c40d126" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="391d752c-21e8-4289-8e72-91ea6c40d126" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="60b02c22-b642-4ab7-aeb3-3d77b929c259">
        <trans-unit id="bec96ac9-f6e6-4d13-a997-679319fb2b27" xml:space="preserve">
          <source>Event Hubs Authentication and Security Model Overview</source>
          <target state="new">Event Hubs Authentication and Security Model Overview</target>
        </trans-unit>
        <trans-unit id="57dbdc37-fbb4-418e-9079-53e9f5223d6d" xml:space="preserve">
          <source>Event Hubs FAQ</source>
          <target state="new">Event Hubs FAQ</target>
        </trans-unit>
        <trans-unit id="996a25f4-54ed-4dea-949f-cf7ad296ef2f" xml:space="preserve">
          <source>The Event Hubs security model meets the following requirements:</source>
          <target state="new">The Event Hubs security model meets the following requirements:</target>
        </trans-unit>
        <trans-unit id="9d8a507a-5e70-4e11-b1b3-09a05b2e255c" xml:space="preserve">
          <source>Only devices that present valid credentials can send data to an Event Hub.</source>
          <target state="new">Only devices that present valid credentials can send data to an Event Hub.</target>
        </trans-unit>
        <trans-unit id="25bfb1f3-a581-42dd-9bab-c227fb2a8aba" xml:space="preserve">
          <source>A device cannot impersonate another device.</source>
          <target state="new">A device cannot impersonate another device.</target>
        </trans-unit>
        <trans-unit id="be481578-1145-4982-89ae-6a2a0d1abf20" xml:space="preserve">
          <source>A rogue device can be blocked from sending data to an Event Hub.</source>
          <target state="new">A rogue device can be blocked from sending data to an Event Hub.</target>
        </trans-unit>
        <trans-unit id="8dd82754-d9f9-4b9a-ac88-ee19141e3503" xml:space="preserve">
          <source>The Event Hubs security model is based on a combination of <bpt id="c4a7182e-3a3b-4a73-abac-8d8c6f73f60f">&lt;linkText&gt;</bpt>Shared Access Signature (SAS)<ept id="c4a7182e-3a3b-4a73-abac-8d8c6f73f60f">&lt;/linkText&gt;</ept><bpt id="c4a7182e-3a3b-4a73-abac-8d8c6f73f60f">&lt;title&gt;</bpt><ept id="c4a7182e-3a3b-4a73-abac-8d8c6f73f60f">&lt;/title&gt;</ept> tokens and event publishers.</source>
          <target state="new">The Event Hubs security model is based on a combination of <bpt id="c4a7182e-3a3b-4a73-abac-8d8c6f73f60f">&lt;linkText&gt;</bpt>Shared Access Signature (SAS)<ept id="c4a7182e-3a3b-4a73-abac-8d8c6f73f60f">&lt;/linkText&gt;</ept><bpt id="c4a7182e-3a3b-4a73-abac-8d8c6f73f60f">&lt;title&gt;</bpt><ept id="c4a7182e-3a3b-4a73-abac-8d8c6f73f60f">&lt;/title&gt;</ept> tokens and event publishers.</target>
        </trans-unit>
        <trans-unit id="4de01046-40c4-4d7d-8b7d-5bcf6cb792d8" xml:space="preserve">
          <source>An event publisher defines a virtual endpoint for an Event Hub.</source>
          <target state="new">An event publisher defines a virtual endpoint for an Event Hub.</target>
        </trans-unit>
        <trans-unit id="235e282e-0897-4054-8976-b90ab102560b" xml:space="preserve">
          <source>The publisher can only be used to send messages to an Event Hub.</source>
          <target state="new">The publisher can only be used to send messages to an Event Hub.</target>
        </trans-unit>
        <trans-unit id="d4a86418-3c35-4572-89c4-95132cb0bc58" xml:space="preserve">
          <source>It is not possible to receive messages from a publisher.</source>
          <target state="new">It is not possible to receive messages from a publisher.</target>
        </trans-unit>
        <trans-unit id="f0f8285f-49cf-4765-9982-31a7a833d51e" xml:space="preserve">
          <source>Typically, an Event Hub employs one publisher per device.</source>
          <target state="new">Typically, an Event Hub employs one publisher per device.</target>
        </trans-unit>
        <trans-unit id="4270f846-9796-4ca9-bbb0-b40ea9bc131a" xml:space="preserve">
          <source>All messages that are sent to any of the publishers of an Event Hub are enqueued within that Event Hub.</source>
          <target state="new">All messages that are sent to any of the publishers of an Event Hub are enqueued within that Event Hub.</target>
        </trans-unit>
        <trans-unit id="3ecfa784-c991-4ed3-a7f7-f2dbfd25626c" xml:space="preserve">
          <source>Publishers allow fine-grained access control and throttling.</source>
          <target state="new">Publishers allow fine-grained access control and throttling.</target>
        </trans-unit>
        <trans-unit id="bf188cf7-3f22-4116-9a1d-892965c02e92" xml:space="preserve">
          <source>Each device is assigned a unique token, which is uploaded to the device.</source>
          <target state="new">Each device is assigned a unique token, which is uploaded to the device.</target>
        </trans-unit>
        <trans-unit id="1fb30acf-560f-49d0-8f90-39e7e5c51402" xml:space="preserve">
          <source>The tokens are produced such that each unique token grants access to a different unique publisher.</source>
          <target state="new">The tokens are produced such that each unique token grants access to a different unique publisher.</target>
        </trans-unit>
        <trans-unit id="416cf48a-ad99-471d-8364-89d70042ee92" xml:space="preserve">
          <source>A device that possesses a token can only send to one publisher, but no other publisher.</source>
          <target state="new">A device that possesses a token can only send to one publisher, but no other publisher.</target>
        </trans-unit>
        <trans-unit id="9a0406a0-d16b-412c-aedf-b7f97be71264" xml:space="preserve">
          <source>If multiple devices share the same token, then each of these devices shares a publisher.</source>
          <target state="new">If multiple devices share the same token, then each of these devices shares a publisher.</target>
        </trans-unit>
        <trans-unit id="9483b0f9-a299-441d-a193-323fc5e8e858" xml:space="preserve">
          <source>Although not recommended, it is possible to equip devices with tokens that grant direct access to an Event Hub.</source>
          <target state="new">Although not recommended, it is possible to equip devices with tokens that grant direct access to an Event Hub.</target>
        </trans-unit>
        <trans-unit id="9abf56a0-46a3-4be7-8956-f56ebd6c5006" xml:space="preserve">
          <source>Any device that holds such a token can send messages directly into that Event Hub.</source>
          <target state="new">Any device that holds such a token can send messages directly into that Event Hub.</target>
        </trans-unit>
        <trans-unit id="044d118e-3422-4aa0-84df-3493c7421e27" xml:space="preserve">
          <source>Such a device will not be subject to throttling.</source>
          <target state="new">Such a device will not be subject to throttling.</target>
        </trans-unit>
        <trans-unit id="3f2622b4-b9b7-476e-a0fc-deba5c4d7eb1" xml:space="preserve">
          <source>Furthermore, the device cannot be blacklisted from sending to that Event Hub.</source>
          <target state="new">Furthermore, the device cannot be blacklisted from sending to that Event Hub.</target>
        </trans-unit>
        <trans-unit id="a56b9a57-1d62-48cc-8207-8d9572e5d4ea" xml:space="preserve">
          <source>All tokens are signed with a SAS key.</source>
          <target state="new">All tokens are signed with a SAS key.</target>
        </trans-unit>
        <trans-unit id="f3d2edea-49b1-4c09-8075-ea7ecccd751f" xml:space="preserve">
          <source>Typically, all tokens are signed with the same key.</source>
          <target state="new">Typically, all tokens are signed with the same key.</target>
        </trans-unit>
        <trans-unit id="3ddcf50f-2879-4136-8e5b-7cc194f22685" xml:space="preserve">
          <source>Devices are not aware of the key; this prevents devices from manufacturing tokens.</source>
          <target state="new">Devices are not aware of the key; this prevents devices from manufacturing tokens.</target>
        </trans-unit>
        <trans-unit id="35ed5a2e-a93d-4f1b-86af-23e8cfaa432a" xml:space="preserve">
          <source>When creating a namespace, Service Bus generates a 256-bit SAS key named <bpt id="04a4a624-cf7a-4245-a542-02e7df87eb29">&lt;strong&gt;</bpt>RootManageSharedAccessKey<ept id="04a4a624-cf7a-4245-a542-02e7df87eb29">&lt;/strong&gt;</ept>.</source>
          <target state="new">When creating a namespace, Service Bus generates a 256-bit SAS key named <bpt id="04a4a624-cf7a-4245-a542-02e7df87eb29">&lt;strong&gt;</bpt>RootManageSharedAccessKey<ept id="04a4a624-cf7a-4245-a542-02e7df87eb29">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="4133d948-72ce-4e1f-83f9-5018795d0f84" xml:space="preserve">
          <source>This key grants send, listen, and manage rights to the namespace.</source>
          <target state="new">This key grants send, listen, and manage rights to the namespace.</target>
        </trans-unit>
        <trans-unit id="5d00a6ed-0a57-490b-b5f8-e8a23e722a2a" xml:space="preserve">
          <source>You can create additional keys.</source>
          <target state="new">You can create additional keys.</target>
        </trans-unit>
        <trans-unit id="84c1b0c7-6feb-40c8-8bfc-8f8a58927ef3" xml:space="preserve">
          <source>It is recommended that you produce a key that grants send permissions to the specific Event Hub.</source>
          <target state="new">It is recommended that you produce a key that grants send permissions to the specific Event Hub.</target>
        </trans-unit>
        <trans-unit id="f3d196d9-756a-4e3a-9d41-f302c106e833" xml:space="preserve">
          <source>For the remainder of this topic, it is assumed that you named this key <bpt id="312b1ba7-d813-4032-a997-b8ce5589de32">&lt;code&gt;</bpt>EventHubSendKey<ept id="312b1ba7-d813-4032-a997-b8ce5589de32">&lt;/code&gt;</ept>.</source>
          <target state="new">For the remainder of this topic, it is assumed that you named this key <bpt id="312b1ba7-d813-4032-a997-b8ce5589de32">&lt;code&gt;</bpt>EventHubSendKey<ept id="312b1ba7-d813-4032-a997-b8ce5589de32">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="5e5cdb9f-eda8-4622-a34d-4788e079108d" xml:space="preserve">
          <source>The following example creates a send-only key when creating the Event Hub:</source>
          <target state="new">The following example creates a send-only key when creating the Event Hub:</target>
        </trans-unit>
        <trans-unit id="08a062bd-df95-4b69-bd93-4007095683a2" xml:space="preserve">
          <source>You can generate tokens using the SAS key.</source>
          <target state="new">You can generate tokens using the SAS key.</target>
        </trans-unit>
        <trans-unit id="26efe194-5cfe-4547-b55c-8f0b390e76d0" xml:space="preserve">
          <source>You must produce only one token per device.</source>
          <target state="new">You must produce only one token per device.</target>
        </trans-unit>
        <trans-unit id="ba66500c-9c17-4d69-8a40-4314bf60749e" xml:space="preserve">
          <source>Tokens can then be produced using the following method.</source>
          <target state="new">Tokens can then be produced using the following method.</target>
        </trans-unit>
        <trans-unit id="dafbc3e6-99a2-49cf-b60f-d271ad0017b9" xml:space="preserve">
          <source>All tokens are generated using the <bpt id="722f9da4-0344-4918-9428-f97f72812ec7">&lt;strong&gt;</bpt>EventHubSendKey<ept id="722f9da4-0344-4918-9428-f97f72812ec7">&lt;/strong&gt;</ept> key.</source>
          <target state="new">All tokens are generated using the <bpt id="722f9da4-0344-4918-9428-f97f72812ec7">&lt;strong&gt;</bpt>EventHubSendKey<ept id="722f9da4-0344-4918-9428-f97f72812ec7">&lt;/strong&gt;</ept> key.</target>
        </trans-unit>
        <trans-unit id="2a668a05-25f8-4fb5-8d45-acb841f31acc" xml:space="preserve">
          <source>Each token is assigned a unique URI.</source>
          <target state="new">Each token is assigned a unique URI.</target>
        </trans-unit>
        <trans-unit id="a87b91b6-d785-435b-a986-386e45342613" xml:space="preserve">
          <source>When calling this method, the URI should be specified as <bpt id="37f6ade5-fa54-46b1-a541-da8aff55780c">&lt;code&gt;</bpt>//&lt;NAMESPACE&gt;.servicebus.windows.net/&lt;EVENT_HUB_NAME&gt;/publishers/&lt;PUBLISHER_NAME&gt;<ept id="37f6ade5-fa54-46b1-a541-da8aff55780c">&lt;/code&gt;</ept>. For all tokens, the URI is identical, with the exception of <bpt id="7a60b5fa-eb77-456b-8f7f-96615487def1">&lt;code&gt;</bpt>PUBLISHER_NAME<ept id="7a60b5fa-eb77-456b-8f7f-96615487def1">&lt;/code&gt;</ept>, which should be different for each token. Ideally, <bpt id="297cf5bd-ff08-456e-8a70-a8f2dc288258">&lt;code&gt;</bpt>PUBLISHER_NAME<ept id="297cf5bd-ff08-456e-8a70-a8f2dc288258">&lt;/code&gt;</ept> represents the ID of the device that receives that token.</source>
          <target state="new">When calling this method, the URI should be specified as <bpt id="37f6ade5-fa54-46b1-a541-da8aff55780c">&lt;code&gt;</bpt>//&lt;NAMESPACE&gt;.servicebus.windows.net/&lt;EVENT_HUB_NAME&gt;/publishers/&lt;PUBLISHER_NAME&gt;<ept id="37f6ade5-fa54-46b1-a541-da8aff55780c">&lt;/code&gt;</ept>. For all tokens, the URI is identical, with the exception of <bpt id="7a60b5fa-eb77-456b-8f7f-96615487def1">&lt;code&gt;</bpt>PUBLISHER_NAME<ept id="7a60b5fa-eb77-456b-8f7f-96615487def1">&lt;/code&gt;</ept>, which should be different for each token. Ideally, <bpt id="297cf5bd-ff08-456e-8a70-a8f2dc288258">&lt;code&gt;</bpt>PUBLISHER_NAME<ept id="297cf5bd-ff08-456e-8a70-a8f2dc288258">&lt;/code&gt;</ept> represents the ID of the device that receives that token.</target>
        </trans-unit>
        <trans-unit id="b823afa5-be6b-4884-94d6-12fce1b07d41" xml:space="preserve">
          <source>This method generates a token with the following structure:</source>
          <target state="new">This method generates a token with the following structure:</target>
        </trans-unit>
        <trans-unit id="d848d61b-0a18-4e67-860f-2bfd922fafcd" xml:space="preserve">
          <source>The token expiration time is specified in seconds from Jan 1, 1970.</source>
          <target state="new">The token expiration time is specified in seconds from Jan 1, 1970.</target>
        </trans-unit>
        <trans-unit id="7ea0a249-8fd3-4d63-a11e-0f969145bf6e" xml:space="preserve">
          <source>The following is an example of a token:</source>
          <target state="new">The following is an example of a token:</target>
        </trans-unit>
        <trans-unit id="d235e224-7401-4c14-8839-563b18997136" xml:space="preserve">
          <source>Typically, the tokens have a lifespan that resembles or exceeds the lifespan of the device.</source>
          <target state="new">Typically, the tokens have a lifespan that resembles or exceeds the lifespan of the device.</target>
        </trans-unit>
        <trans-unit id="1bed7cf9-5d96-4afd-aaf2-d8dee715e10d" xml:space="preserve">
          <source>If the device has the capability to obtain a new token, tokens with a shorter lifespan can be used.</source>
          <target state="new">If the device has the capability to obtain a new token, tokens with a shorter lifespan can be used.</target>
        </trans-unit>
        <trans-unit id="6bf73a35-fbc3-42d1-86f6-27dea1de80b7" xml:space="preserve">
          <source>Once the tokens have been created, each device is provisioned with its own unique token.</source>
          <target state="new">Once the tokens have been created, each device is provisioned with its own unique token.</target>
        </trans-unit>
        <trans-unit id="b9d3b81c-d01d-4179-b6cc-ae00fc8edbcc" xml:space="preserve">
          <source>When the device sends data into an Event Hub, the device tags its token with the send request.</source>
          <target state="new">When the device sends data into an Event Hub, the device tags its token with the send request.</target>
        </trans-unit>
        <trans-unit id="7ac48b69-95a2-4261-a9c3-f8637603170c" xml:space="preserve">
          <source>To prevent an attacker from eavesdropping and stealing the token, the communication between the device and the Event Hub must occur over an encrypted channel.</source>
          <target state="new">To prevent an attacker from eavesdropping and stealing the token, the communication between the device and the Event Hub must occur over an encrypted channel.</target>
        </trans-unit>
        <trans-unit id="c6fc5290-70b6-4edc-87f2-628272b61653" xml:space="preserve">
          <source>If a token is stolen by an attacker, the attacker can impersonate the device whose token has been stolen.</source>
          <target state="new">If a token is stolen by an attacker, the attacker can impersonate the device whose token has been stolen.</target>
        </trans-unit>
        <trans-unit id="dcaa2057-d768-4377-873e-35d5705626e9" xml:space="preserve">
          <source>Blacklisting a device renders the device unusable until the device is given a new token that uses a different publisher.</source>
          <target state="new">Blacklisting a device renders the device unusable until the device is given a new token that uses a different publisher.</target>
        </trans-unit>
        <trans-unit id="c984ba0d-ad3e-426e-bfae-c8b46b69c3e7" xml:space="preserve">
          <source>To authenticate backend applications that consume the data generated by devices, Event Hubs employs a security model that is similar to the model that is used for Service Bus topics.</source>
          <target state="new">To authenticate backend applications that consume the data generated by devices, Event Hubs employs a security model that is similar to the model that is used for Service Bus topics.</target>
        </trans-unit>
        <trans-unit id="db349d4e-cf6a-49fc-9652-05acfb233877" xml:space="preserve">
          <source>An Event Hubs consumer group is equivalent to a subscription to a Service Bus topic.</source>
          <target state="new">An Event Hubs consumer group is equivalent to a subscription to a Service Bus topic.</target>
        </trans-unit>
        <trans-unit id="719aec12-bfb5-4ea5-8873-d9d6be2bf968" xml:space="preserve">
          <source>A client can create a consumer group if the request to create the consumer group is accompanied by a token that grants manage privileges for the Event Hub, or for the namespace to which the Event Hub belongs.</source>
          <target state="new">A client can create a consumer group if the request to create the consumer group is accompanied by a token that grants manage privileges for the Event Hub, or for the namespace to which the Event Hub belongs.</target>
        </trans-unit>
        <trans-unit id="798e4a49-ce54-40c9-9b3b-2807f4952129" xml:space="preserve">
          <source>A client is allowed to consume data from a consumer group if the receive request is accompanied by a token that grants receive rights on that consumer group, the Event Hub, or the namespace to which the Event Hub belongs.</source>
          <target state="new">A client is allowed to consume data from a consumer group if the receive request is accompanied by a token that grants receive rights on that consumer group, the Event Hub, or the namespace to which the Event Hub belongs.</target>
        </trans-unit>
        <trans-unit id="f274888d-19c6-45ac-8f9b-84e73047483e" xml:space="preserve">
          <source>The current version of Service Bus does not support SAS rules for individual subscriptions.</source>
          <target state="new">The current version of Service Bus does not support SAS rules for individual subscriptions.</target>
        </trans-unit>
        <trans-unit id="e313ef5d-9381-40b3-9e28-7268e7eb48ff" xml:space="preserve">
          <source>The same holds true for Event Hubs consumer groups.</source>
          <target state="new">The same holds true for Event Hubs consumer groups.</target>
        </trans-unit>
        <trans-unit id="5246f591-810b-4a2d-8044-be93959c0e78" xml:space="preserve">
          <source>SAS support will be added for both features in the future.</source>
          <target state="new">SAS support will be added for both features in the future.</target>
        </trans-unit>
        <trans-unit id="ef39c2c8-7531-45be-9fa3-860d8e4798bd" xml:space="preserve">
          <source>In the absence of SAS authentication for individual consumer groups, you can use SAS keys to secure all consumer groups with a common key.</source>
          <target state="new">In the absence of SAS authentication for individual consumer groups, you can use SAS keys to secure all consumer groups with a common key.</target>
        </trans-unit>
        <trans-unit id="b990a0b5-4f4e-4861-9fe1-30c490680d43" xml:space="preserve">
          <source>This approach enables an application to consume data from any of the consumer groups of an Event Hub.</source>
          <target state="new">This approach enables an application to consume data from any of the consumer groups of an Event Hub.</target>
        </trans-unit>
        <trans-unit id="4a7c649f-3691-4b8f-8e59-856aed443f2a" xml:space="preserve">
          <source>ACS supports multiple ways to create service identities, relying parties, and rules, but the easiest way to do this is by using the <bpt id="51fae57c-f0ae-47dd-add2-a6533876cdd4">&lt;linkText&gt;</bpt>SBAZTool<ept id="51fae57c-f0ae-47dd-add2-a6533876cdd4">&lt;/linkText&gt;</ept><bpt id="51fae57c-f0ae-47dd-add2-a6533876cdd4">&lt;title&gt;</bpt><ept id="51fae57c-f0ae-47dd-add2-a6533876cdd4">&lt;/title&gt;</ept>.</source>
          <target state="new">ACS supports multiple ways to create service identities, relying parties, and rules, but the easiest way to do this is by using the <bpt id="51fae57c-f0ae-47dd-add2-a6533876cdd4">&lt;linkText&gt;</bpt>SBAZTool<ept id="51fae57c-f0ae-47dd-add2-a6533876cdd4">&lt;/linkText&gt;</ept><bpt id="51fae57c-f0ae-47dd-add2-a6533876cdd4">&lt;title&gt;</bpt><ept id="51fae57c-f0ae-47dd-add2-a6533876cdd4">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="7ff27e82-a1d7-40dd-b605-a0c9a5de0223" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="6d7ff2e1-63dd-4d9e-8187-088ee0f72f82" xml:space="preserve">
          <source>Create a service identity for an <bpt id="f11418ef-0ed7-41a5-bc3b-10071859f6d7">&lt;strong&gt;</bpt>EventHubSender<ept id="f11418ef-0ed7-41a5-bc3b-10071859f6d7">&lt;/strong&gt;</ept>.</source>
          <target state="new">Create a service identity for an <bpt id="f11418ef-0ed7-41a5-bc3b-10071859f6d7">&lt;strong&gt;</bpt>EventHubSender<ept id="f11418ef-0ed7-41a5-bc3b-10071859f6d7">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="b53594af-723a-49fb-a41d-e338c9fcdce8" xml:space="preserve">
          <source>This returns the name of the service identity that was created and its key:</source>
          <target state="new">This returns the name of the service identity that was created and its key:</target>
        </trans-unit>
        <trans-unit id="576edb1d-2400-4f21-aa37-ca3ee009c12b" xml:space="preserve">
          <source>Grant <bpt id="d184bf88-555b-418f-95c1-067579826b7f">&lt;strong&gt;</bpt>EventHubSender<ept id="d184bf88-555b-418f-95c1-067579826b7f">&lt;/strong&gt;</ept> "Send Claims" to the Event Hub:</source>
          <target state="new">Grant <bpt id="d184bf88-555b-418f-95c1-067579826b7f">&lt;strong&gt;</bpt>EventHubSender<ept id="d184bf88-555b-418f-95c1-067579826b7f">&lt;/strong&gt;</ept> "Send Claims" to the Event Hub:</target>
        </trans-unit>
        <trans-unit id="d2c05ee1-0f34-481a-9c31-947bfe4a760c" xml:space="preserve">
          <source>Create a service identity for a receiver to Consumer Group 1:</source>
          <target state="new">Create a service identity for a receiver to Consumer Group 1:</target>
        </trans-unit>
        <trans-unit id="d4202a83-c18c-4f39-9467-8c522d26fd80" xml:space="preserve">
          <source>Grant <bpt id="ebcff2ad-9487-41b5-98ae-7adf0e54d44e">&lt;code&gt;</bpt>consumergroup1receiver<ept id="ebcff2ad-9487-41b5-98ae-7adf0e54d44e">&lt;/code&gt;</ept> "Listen Claims" to <bpt id="a4e41d40-b030-4b04-9741-6127e172acfc">&lt;strong&gt;</bpt>ConsumerGroup1<ept id="a4e41d40-b030-4b04-9741-6127e172acfc">&lt;/strong&gt;</ept>:</source>
          <target state="new">Grant <bpt id="ebcff2ad-9487-41b5-98ae-7adf0e54d44e">&lt;code&gt;</bpt>consumergroup1receiver<ept id="ebcff2ad-9487-41b5-98ae-7adf0e54d44e">&lt;/code&gt;</ept> "Listen Claims" to <bpt id="a4e41d40-b030-4b04-9741-6127e172acfc">&lt;strong&gt;</bpt>ConsumerGroup1<ept id="a4e41d40-b030-4b04-9741-6127e172acfc">&lt;/strong&gt;</ept>:</target>
        </trans-unit>
        <trans-unit id="7fbf1ada-4968-4b01-af71-00811d832c69" xml:space="preserve">
          <source>Create a service identity for a receiver to <bpt id="b760ec0c-54cb-4af7-b543-994d360c3d33">&lt;strong&gt;</bpt>Consumer Group 2<ept id="b760ec0c-54cb-4af7-b543-994d360c3d33">&lt;/strong&gt;</ept>:</source>
          <target state="new">Create a service identity for a receiver to <bpt id="b760ec0c-54cb-4af7-b543-994d360c3d33">&lt;strong&gt;</bpt>Consumer Group 2<ept id="b760ec0c-54cb-4af7-b543-994d360c3d33">&lt;/strong&gt;</ept>:</target>
        </trans-unit>
        <trans-unit id="a223fa8a-7f9f-4df3-a992-6b7344c7cf6a" xml:space="preserve">
          <source>Grant <bpt id="f67fd69f-27bd-4f04-bbeb-db03325f213b">&lt;code&gt;</bpt>consumergroup2receiver<ept id="f67fd69f-27bd-4f04-bbeb-db03325f213b">&lt;/code&gt;</ept> "Listen Claims" to <bpt id="209ed968-2945-43c8-80dd-39ff84790e19">&lt;strong&gt;</bpt>ConsumerGroup2<ept id="209ed968-2945-43c8-80dd-39ff84790e19">&lt;/strong&gt;</ept>:</source>
          <target state="new">Grant <bpt id="f67fd69f-27bd-4f04-bbeb-db03325f213b">&lt;code&gt;</bpt>consumergroup2receiver<ept id="f67fd69f-27bd-4f04-bbeb-db03325f213b">&lt;/code&gt;</ept> "Listen Claims" to <bpt id="209ed968-2945-43c8-80dd-39ff84790e19">&lt;strong&gt;</bpt>ConsumerGroup2<ept id="209ed968-2945-43c8-80dd-39ff84790e19">&lt;/strong&gt;</ept>:</target>
        </trans-unit>
        <trans-unit id="6ba79821-ab9d-415f-a187-3591565e6aa2" xml:space="preserve">
          <source>To learn more about Event Hubs, visit the following topics:</source>
          <target state="new">To learn more about Event Hubs, visit the following topics:</target>
        </trans-unit>
        <trans-unit id="099db600-b7cf-4963-bf2e-298e1d823464" xml:space="preserve">
          <source>[Event Hubs Overview]</source>
          <target state="new">[Event Hubs Overview]</target>
        </trans-unit>
        <trans-unit id="cda29daf-0a99-4b67-8564-d7c82dbbe9dc" xml:space="preserve">
          <source>A complete [sample application that uses Event Hubs].</source>
          <target state="new">A complete [sample application that uses Event Hubs].</target>
        </trans-unit>
        <trans-unit id="972fe701-fe64-44fe-bc1a-1f2b7e85c007" xml:space="preserve">
          <source>A [queued messaging solution] using Service Bus queues.</source>
          <target state="new">A [queued messaging solution] using Service Bus queues.</target>
        </trans-unit>
        <trans-unit id="68b69fcb-a381-44ef-9572-e30118991915" xml:space="preserve">
          <source>event-hubs-overview.md</source>
          <target state="new">event-hubs-overview.md</target>
        </trans-unit>
        <trans-unit id="df3c4eba-f24b-4080-905c-67a6abfb505f" xml:space="preserve">
          <source>https://code.msdn.microsoft.com/windowsazure/Service-Bus-Event-Hub-286fd097</source>
          <target state="new">https://code.msdn.microsoft.com/windowsazure/Service-Bus-Event-Hub-286fd097</target>
        </trans-unit>
        <trans-unit id="902d9089-e9ef-4626-919a-54ab3a6b70a3" xml:space="preserve">
          <source>../cloud-services-dotnet-multi-tier-app-using-service-bus-queues.md</source>
          <target state="new">../cloud-services-dotnet-multi-tier-app-using-service-bus-queues.md</target>
        </trans-unit>
      </group>
      <group id="e8a3968c-4a5a-48ed-8edb-e818d48c0dbe" />
    </body>
  </file>
</xliff>