<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="49e30f6f-f49c-49c5-8249-5e5665b8076f" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="49e30f6f-f49c-49c5-8249-5e5665b8076f" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="1c05f7bc-f283-461c-83e7-9dc2c8a42fd7">
        <trans-unit id="c384f544-0793-4131-9f03-d46cb917d9b9" xml:space="preserve">
          <source>Multi-tenant applications with elastic database tools and row-level security</source>
          <target state="new">Multi-tenant applications with elastic database tools and row-level security</target>
        </trans-unit>
        <trans-unit id="b63f0b7c-ec42-4d2c-8714-53680d49338c" xml:space="preserve">
          <source>Learn how to use elastic database tools together with row-level security to build an application with a highly scalable data tier on Azure SQL Database that supports multi-tenant shards.</source>
          <target state="new">Learn how to use elastic database tools together with row-level security to build an application with a highly scalable data tier on Azure SQL Database that supports multi-tenant shards.</target>
        </trans-unit>
        <trans-unit id="2daa65ce-d8f1-4e17-811b-0196702bd360" xml:space="preserve">
          <source><bpt id="5070f3fb-7bf9-4470-8394-91979d3052ad">&lt;linkText&gt;</bpt>Elastic database tools<ept id="5070f3fb-7bf9-4470-8394-91979d3052ad">&lt;/linkText&gt;</ept><bpt id="5070f3fb-7bf9-4470-8394-91979d3052ad">&lt;title&gt;</bpt><ept id="5070f3fb-7bf9-4470-8394-91979d3052ad">&lt;/title&gt;</ept> and <bpt id="b686a399-f9d2-4e98-99e7-f4e409b809da">&lt;linkText&gt;</bpt>row-level security (RLS)<ept id="b686a399-f9d2-4e98-99e7-f4e409b809da">&lt;/linkText&gt;</ept><bpt id="b686a399-f9d2-4e98-99e7-f4e409b809da">&lt;title&gt;</bpt><ept id="b686a399-f9d2-4e98-99e7-f4e409b809da">&lt;/title&gt;</ept> offer a powerful set of capabilities for flexibly and efficiently scaling the data tier of a multi-tenant application with Azure SQL Database.</source>
          <target state="new"><bpt id="5070f3fb-7bf9-4470-8394-91979d3052ad">&lt;linkText&gt;</bpt>Elastic database tools<ept id="5070f3fb-7bf9-4470-8394-91979d3052ad">&lt;/linkText&gt;</ept><bpt id="5070f3fb-7bf9-4470-8394-91979d3052ad">&lt;title&gt;</bpt><ept id="5070f3fb-7bf9-4470-8394-91979d3052ad">&lt;/title&gt;</ept> and <bpt id="b686a399-f9d2-4e98-99e7-f4e409b809da">&lt;linkText&gt;</bpt>row-level security (RLS)<ept id="b686a399-f9d2-4e98-99e7-f4e409b809da">&lt;/linkText&gt;</ept><bpt id="b686a399-f9d2-4e98-99e7-f4e409b809da">&lt;title&gt;</bpt><ept id="b686a399-f9d2-4e98-99e7-f4e409b809da">&lt;/title&gt;</ept> offer a powerful set of capabilities for flexibly and efficiently scaling the data tier of a multi-tenant application with Azure SQL Database.</target>
        </trans-unit>
        <trans-unit id="3d353c0b-660c-4a73-bd85-4312910f0b98" xml:space="preserve">
          <source>This article illustrates how to use these technologies together to build an application with a highly scalable data tier that supports multi-tenant shards, using <bpt id="71369b69-3811-4748-b3f5-9b38c9f3f4d8">&lt;strong&gt;</bpt>ADO.NET SqlClient<ept id="71369b69-3811-4748-b3f5-9b38c9f3f4d8">&lt;/strong&gt;</ept> and/or <bpt id="e167f3a2-75a1-4d67-a5cd-c600a1ed7249">&lt;strong&gt;</bpt>Entity Framework<ept id="e167f3a2-75a1-4d67-a5cd-c600a1ed7249">&lt;/strong&gt;</ept>.</source>
          <target state="new">This article illustrates how to use these technologies together to build an application with a highly scalable data tier that supports multi-tenant shards, using <bpt id="71369b69-3811-4748-b3f5-9b38c9f3f4d8">&lt;strong&gt;</bpt>ADO.NET SqlClient<ept id="71369b69-3811-4748-b3f5-9b38c9f3f4d8">&lt;/strong&gt;</ept> and/or <bpt id="e167f3a2-75a1-4d67-a5cd-c600a1ed7249">&lt;strong&gt;</bpt>Entity Framework<ept id="e167f3a2-75a1-4d67-a5cd-c600a1ed7249">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="69956a73-63f1-4ee3-bc85-d4f1e85896b8" xml:space="preserve">
          <source><bpt id="b4229c2d-2b4c-4bb5-aa5b-fe5e98c74295">&lt;strong&gt;</bpt>Elastic database tools<ept id="b4229c2d-2b4c-4bb5-aa5b-fe5e98c74295">&lt;/strong&gt;</ept> enables developers to scale out the data tier of an application via industry-standard sharding practices using a set of .NET libraries and Azure service templates.</source>
          <target state="new"><bpt id="b4229c2d-2b4c-4bb5-aa5b-fe5e98c74295">&lt;strong&gt;</bpt>Elastic database tools<ept id="b4229c2d-2b4c-4bb5-aa5b-fe5e98c74295">&lt;/strong&gt;</ept> enables developers to scale out the data tier of an application via industry-standard sharding practices using a set of .NET libraries and Azure service templates.</target>
        </trans-unit>
        <trans-unit id="285eff32-9bc9-4dbe-a03f-76673c37bab0" xml:space="preserve">
          <source>Managing shards with using the Elastic Database Client Library helps automate and streamline many of the infrastructural tasks typically associated with sharding.</source>
          <target state="new">Managing shards with using the Elastic Database Client Library helps automate and streamline many of the infrastructural tasks typically associated with sharding.</target>
        </trans-unit>
        <trans-unit id="88c8770c-633c-44b0-9b62-ecfeda484de3" xml:space="preserve">
          <source><bpt id="624b5692-96f9-431f-aefa-22459de4dec2">&lt;strong&gt;</bpt>Row-level security<ept id="624b5692-96f9-431f-aefa-22459de4dec2">&lt;/strong&gt;</ept> enables developers to store data for multiple tenants in the same database using security policies to filter out rows that do not belong to the tenant executing a query.</source>
          <target state="new"><bpt id="624b5692-96f9-431f-aefa-22459de4dec2">&lt;strong&gt;</bpt>Row-level security<ept id="624b5692-96f9-431f-aefa-22459de4dec2">&lt;/strong&gt;</ept> enables developers to store data for multiple tenants in the same database using security policies to filter out rows that do not belong to the tenant executing a query.</target>
        </trans-unit>
        <trans-unit id="a297707f-be4a-4f3c-b0fc-9e31341a5b52" xml:space="preserve">
          <source>Centralizing access logic with RLS inside the database, rather than in the application, simplifies maintenance and reduces the risk of error as an application’s codebase grows.</source>
          <target state="new">Centralizing access logic with RLS inside the database, rather than in the application, simplifies maintenance and reduces the risk of error as an application’s codebase grows.</target>
        </trans-unit>
        <trans-unit id="5e0f3b71-b6d7-4e75-a7bf-12a5661eab74" xml:space="preserve">
          <source>RLS requires the latest <bpt id="14214569-e66c-4972-8a49-eec09c5e41ef">&lt;linkText&gt;</bpt>Azure SQL Database update (V12)<ept id="14214569-e66c-4972-8a49-eec09c5e41ef">&lt;/linkText&gt;</ept><bpt id="14214569-e66c-4972-8a49-eec09c5e41ef">&lt;title&gt;</bpt><ept id="14214569-e66c-4972-8a49-eec09c5e41ef">&lt;/title&gt;</ept>.</source>
          <target state="new">RLS requires the latest <bpt id="14214569-e66c-4972-8a49-eec09c5e41ef">&lt;linkText&gt;</bpt>Azure SQL Database update (V12)<ept id="14214569-e66c-4972-8a49-eec09c5e41ef">&lt;/linkText&gt;</ept><bpt id="14214569-e66c-4972-8a49-eec09c5e41ef">&lt;title&gt;</bpt><ept id="14214569-e66c-4972-8a49-eec09c5e41ef">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="8baf1bf8-7241-43f3-87b8-9ff2cd44c7dc" xml:space="preserve">
          <source>Using these features together, an application can benefit from cost savings and efficiency gains by storing data for multiple tenants in the same shard database.</source>
          <target state="new">Using these features together, an application can benefit from cost savings and efficiency gains by storing data for multiple tenants in the same shard database.</target>
        </trans-unit>
        <trans-unit id="c887cf88-3087-4b06-9169-9a8c991e0d5e" xml:space="preserve">
          <source>At the same time, an application still has the flexibility to offer isolated, single-tenant shards for “premium” tenants who require stricter performance guarantees since multi-tenant shards do not guarantee equal resource distribution among tenants.</source>
          <target state="new">At the same time, an application still has the flexibility to offer isolated, single-tenant shards for “premium” tenants who require stricter performance guarantees since multi-tenant shards do not guarantee equal resource distribution among tenants.</target>
        </trans-unit>
        <trans-unit id="898c57cb-bd3c-4f62-9ba6-c7038a041cae" xml:space="preserve">
          <source>In short, the elastic database client library’s <bpt id="71517906-15d1-4a26-a3ba-9eef3238ed77">&lt;linkText&gt;</bpt>data dependent routing<ept id="71517906-15d1-4a26-a3ba-9eef3238ed77">&lt;/linkText&gt;</ept><bpt id="71517906-15d1-4a26-a3ba-9eef3238ed77">&lt;title&gt;</bpt><ept id="71517906-15d1-4a26-a3ba-9eef3238ed77">&lt;/title&gt;</ept> APIs automatically connect tenants to the correct shard database containing their sharding key (generally a “TenantId”).</source>
          <target state="new">In short, the elastic database client library’s <bpt id="71517906-15d1-4a26-a3ba-9eef3238ed77">&lt;linkText&gt;</bpt>data dependent routing<ept id="71517906-15d1-4a26-a3ba-9eef3238ed77">&lt;/linkText&gt;</ept><bpt id="71517906-15d1-4a26-a3ba-9eef3238ed77">&lt;title&gt;</bpt><ept id="71517906-15d1-4a26-a3ba-9eef3238ed77">&lt;/title&gt;</ept> APIs automatically connect tenants to the correct shard database containing their sharding key (generally a “TenantId”).</target>
        </trans-unit>
        <trans-unit id="b9acdb08-e0ab-4c08-b8ce-3fdd45c81f8c" xml:space="preserve">
          <source>Once connected, an RLS security policy within the database ensures that tenants can only access rows that contain their TenantId.</source>
          <target state="new">Once connected, an RLS security policy within the database ensures that tenants can only access rows that contain their TenantId.</target>
        </trans-unit>
        <trans-unit id="df46b76e-c366-4bd5-b114-3671ff3a8b65" xml:space="preserve">
          <source>It is assumed that all tables contain a TenantId column to indicate which rows belong to each tenant.</source>
          <target state="new">It is assumed that all tables contain a TenantId column to indicate which rows belong to each tenant.</target>
        </trans-unit>
        <trans-unit id="8b73c9fa-1868-4764-8d31-d00100c725a7" xml:space="preserve">
          <source><bpt id="4b16915e-754a-4210-b267-d8e8fd095fb0">&lt;linkText&gt;</bpt>Blogging app architecture<ept id="4b16915e-754a-4210-b267-d8e8fd095fb0">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="4b16915e-754a-4210-b267-d8e8fd095fb0">&lt;linkText&gt;</bpt>Blogging app architecture<ept id="4b16915e-754a-4210-b267-d8e8fd095fb0">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d4de4513-2b84-4f27-8f6c-df83c3c1d70d" xml:space="preserve">
          <source>Use Visual Studio (2012 or higher) </source>
          <target state="new">Use Visual Studio (2012 or higher) </target>
        </trans-unit>
        <trans-unit id="a4f576e2-3887-4d61-9c44-1cf4d307c000" xml:space="preserve">
          <source>Create three Azure SQL Databases </source>
          <target state="new">Create three Azure SQL Databases </target>
        </trans-unit>
        <trans-unit id="099f7acf-8729-4b01-99b5-beee17bd73a8" xml:space="preserve">
          <source>Download sample project: <bpt id="112cc4fb-7abe-4d2f-b190-61267b57ea1f">&lt;linkText&gt;</bpt>Elastic DB Tools for Azure SQL - Multi-Tenant Shards<ept id="112cc4fb-7abe-4d2f-b190-61267b57ea1f">&lt;/linkText&gt;</ept><bpt id="112cc4fb-7abe-4d2f-b190-61267b57ea1f">&lt;title&gt;</bpt><ept id="112cc4fb-7abe-4d2f-b190-61267b57ea1f">&lt;/title&gt;</ept></source>
          <target state="new">Download sample project: <bpt id="112cc4fb-7abe-4d2f-b190-61267b57ea1f">&lt;linkText&gt;</bpt>Elastic DB Tools for Azure SQL - Multi-Tenant Shards<ept id="112cc4fb-7abe-4d2f-b190-61267b57ea1f">&lt;/linkText&gt;</ept><bpt id="112cc4fb-7abe-4d2f-b190-61267b57ea1f">&lt;title&gt;</bpt><ept id="112cc4fb-7abe-4d2f-b190-61267b57ea1f">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="c9249698-d2f2-4732-8221-a0f8b56c489f" xml:space="preserve">
          <source>Fill in the information for your databases at the beginning of <bpt id="0734c018-8c23-4738-ba15-c2a709ca1fbc">&lt;strong&gt;</bpt>Program.cs<ept id="0734c018-8c23-4738-ba15-c2a709ca1fbc">&lt;/strong&gt;</ept> </source>
          <target state="new">Fill in the information for your databases at the beginning of <bpt id="0734c018-8c23-4738-ba15-c2a709ca1fbc">&lt;strong&gt;</bpt>Program.cs<ept id="0734c018-8c23-4738-ba15-c2a709ca1fbc">&lt;/strong&gt;</ept> </target>
        </trans-unit>
        <trans-unit id="ce2dbf52-76c0-4388-9d07-b900da7b9a50" xml:space="preserve">
          <source>This project extends the one described in <bpt id="0d017053-06c4-49aa-aaac-d4ba643950ae">&lt;linkText&gt;</bpt>Elastic DB Tools for Azure SQL - Entity Framework Integration<ept id="0d017053-06c4-49aa-aaac-d4ba643950ae">&lt;/linkText&gt;</ept><bpt id="0d017053-06c4-49aa-aaac-d4ba643950ae">&lt;title&gt;</bpt><ept id="0d017053-06c4-49aa-aaac-d4ba643950ae">&lt;/title&gt;</ept> by adding support for multi-tenant shard databases.</source>
          <target state="new">This project extends the one described in <bpt id="0d017053-06c4-49aa-aaac-d4ba643950ae">&lt;linkText&gt;</bpt>Elastic DB Tools for Azure SQL - Entity Framework Integration<ept id="0d017053-06c4-49aa-aaac-d4ba643950ae">&lt;/linkText&gt;</ept><bpt id="0d017053-06c4-49aa-aaac-d4ba643950ae">&lt;title&gt;</bpt><ept id="0d017053-06c4-49aa-aaac-d4ba643950ae">&lt;/title&gt;</ept> by adding support for multi-tenant shard databases.</target>
        </trans-unit>
        <trans-unit id="4aa8782b-9ce9-454e-9a02-0265a6a9e6a8" xml:space="preserve">
          <source>It builds a simple console application for creating blogs and posts, with four tenants and two multi-tenant shard databases as illustrated in the above diagram.</source>
          <target state="new">It builds a simple console application for creating blogs and posts, with four tenants and two multi-tenant shard databases as illustrated in the above diagram.</target>
        </trans-unit>
        <trans-unit id="35d88ef7-d8a2-4d1c-b8cb-dd195381ee5d" xml:space="preserve">
          <source>Build and run the application.</source>
          <target state="new">Build and run the application.</target>
        </trans-unit>
        <trans-unit id="dc732829-a6de-4ed1-8992-4c1edb9d2f03" xml:space="preserve">
          <source>This will bootstrap the elastic database tools’ shard map manager and run the following tests:</source>
          <target state="new">This will bootstrap the elastic database tools’ shard map manager and run the following tests:</target>
        </trans-unit>
        <trans-unit id="5e698144-c0fc-401e-bf84-15ace275a618" xml:space="preserve">
          <source>Using Entity Framework and LINQ, create a new blog and then display all blogs for each tenant</source>
          <target state="new">Using Entity Framework and LINQ, create a new blog and then display all blogs for each tenant</target>
        </trans-unit>
        <trans-unit id="0e708844-e915-4189-8b70-1d19cc193514" xml:space="preserve">
          <source>Using ADO.NET SqlClient, display all blogs for a tenant</source>
          <target state="new">Using ADO.NET SqlClient, display all blogs for a tenant</target>
        </trans-unit>
        <trans-unit id="6c80c2b6-5c4f-4d60-85a1-3735e939ef36" xml:space="preserve">
          <source>Try to insert a blog for the wrong tenant to verify that an error is thrown  </source>
          <target state="new">Try to insert a blog for the wrong tenant to verify that an error is thrown  </target>
        </trans-unit>
        <trans-unit id="36fe8632-827d-4914-abbf-362f198270ba" xml:space="preserve">
          <source>Notice that because RLS has not yet been enabled in the shard databases, each of these tests reveals a problem: tenants are able to see blogs that do not belong to them, and the application is not prevented from inserting a blog for the wrong tenant.</source>
          <target state="new">Notice that because RLS has not yet been enabled in the shard databases, each of these tests reveals a problem: tenants are able to see blogs that do not belong to them, and the application is not prevented from inserting a blog for the wrong tenant.</target>
        </trans-unit>
        <trans-unit id="d85e9e23-56dd-4965-b83a-8d4a22a83a3b" xml:space="preserve">
          <source>The remainder of this article describes how to resolve these problems by enforcing tenant isolation with RLS.</source>
          <target state="new">The remainder of this article describes how to resolve these problems by enforcing tenant isolation with RLS.</target>
        </trans-unit>
        <trans-unit id="4025d44b-b299-4d81-9224-b42d10dd516b" xml:space="preserve">
          <source>There are two steps:</source>
          <target state="new">There are two steps:</target>
        </trans-unit>
        <trans-unit id="2831bea3-a0e2-4013-8403-ca9cb2617031" xml:space="preserve">
          <source><bpt id="09ba51dd-a331-4942-b643-748a7d86d8a0">&lt;strong&gt;</bpt>Application tier<ept id="09ba51dd-a331-4942-b643-748a7d86d8a0">&lt;/strong&gt;</ept>: Modify the application code to always set CONTEXT_INFO to the current TenantId after opening a connection.</source>
          <target state="new"><bpt id="09ba51dd-a331-4942-b643-748a7d86d8a0">&lt;strong&gt;</bpt>Application tier<ept id="09ba51dd-a331-4942-b643-748a7d86d8a0">&lt;/strong&gt;</ept>: Modify the application code to always set CONTEXT_INFO to the current TenantId after opening a connection.</target>
        </trans-unit>
        <trans-unit id="2acaa70a-4600-4de5-be4f-ace9c365f299" xml:space="preserve">
          <source>The sample project has already done this.</source>
          <target state="new">The sample project has already done this.</target>
        </trans-unit>
        <trans-unit id="55f2e4bb-ee41-44eb-a2c9-ac301274ef77" xml:space="preserve">
          <source><bpt id="0ef92741-1189-4d74-b9e0-3c840452b13f">&lt;strong&gt;</bpt>Data tier<ept id="0ef92741-1189-4d74-b9e0-3c840452b13f">&lt;/strong&gt;</ept>: Create an RLS security policy in each shard database to filter rows based on the value of CONTEXT_INFO.</source>
          <target state="new"><bpt id="0ef92741-1189-4d74-b9e0-3c840452b13f">&lt;strong&gt;</bpt>Data tier<ept id="0ef92741-1189-4d74-b9e0-3c840452b13f">&lt;/strong&gt;</ept>: Create an RLS security policy in each shard database to filter rows based on the value of CONTEXT_INFO.</target>
        </trans-unit>
        <trans-unit id="07d2cd7e-4caa-43a4-a6d3-2d4affa08330" xml:space="preserve">
          <source>You will need to do this for each of your shard databases, otherwise rows in multi-tenant shards will not be filtered.</source>
          <target state="new">You will need to do this for each of your shard databases, otherwise rows in multi-tenant shards will not be filtered.</target>
        </trans-unit>
        <trans-unit id="bd78a613-aad8-403d-ac5c-549ba5e9e474" xml:space="preserve">
          <source>After connecting to a shard database using the elastic database client library’s data dependent routing APIs, the application still needs to tell the database which TenantId is using that connection so that an RLS security policy can filter out rows belonging to other tenants.</source>
          <target state="new">After connecting to a shard database using the elastic database client library’s data dependent routing APIs, the application still needs to tell the database which TenantId is using that connection so that an RLS security policy can filter out rows belonging to other tenants.</target>
        </trans-unit>
        <trans-unit id="fd4e0f40-9adf-410e-9565-3a3cab66e2a8" xml:space="preserve">
          <source>The recommended way to pass this information is to set <bpt id="3ada7320-dacf-4084-a3b2-f17dbf9226b2">&lt;linkText&gt;</bpt>CONTEXT_INFO<ept id="3ada7320-dacf-4084-a3b2-f17dbf9226b2">&lt;/linkText&gt;</ept><bpt id="3ada7320-dacf-4084-a3b2-f17dbf9226b2">&lt;title&gt;</bpt><ept id="3ada7320-dacf-4084-a3b2-f17dbf9226b2">&lt;/title&gt;</ept> to the current TenantId for that connection.</source>
          <target state="new">The recommended way to pass this information is to set <bpt id="3ada7320-dacf-4084-a3b2-f17dbf9226b2">&lt;linkText&gt;</bpt>CONTEXT_INFO<ept id="3ada7320-dacf-4084-a3b2-f17dbf9226b2">&lt;/linkText&gt;</ept><bpt id="3ada7320-dacf-4084-a3b2-f17dbf9226b2">&lt;title&gt;</bpt><ept id="3ada7320-dacf-4084-a3b2-f17dbf9226b2">&lt;/title&gt;</ept> to the current TenantId for that connection.</target>
        </trans-unit>
        <trans-unit id="1a492a07-3381-4716-88b8-10a7011d071f" xml:space="preserve">
          <source>Note that on Azure SQL Database, CONTEXT<bpt id="0a57164d-906f-47d0-af82-65272bd229b7">&lt;em&gt;</bpt>INFO is pre-populated with a session-specific GUID, so you *must* set CONTEXT<ept id="0a57164d-906f-47d0-af82-65272bd229b7">&lt;/em&gt;</ept>INFO to the correct TenantId before executing any queries on a new connection to ensure that no rows are inadvertently leaked.</source>
          <target state="new">Note that on Azure SQL Database, CONTEXT<bpt id="0a57164d-906f-47d0-af82-65272bd229b7">&lt;em&gt;</bpt>INFO is pre-populated with a session-specific GUID, so you *must* set CONTEXT<ept id="0a57164d-906f-47d0-af82-65272bd229b7">&lt;/em&gt;</ept>INFO to the correct TenantId before executing any queries on a new connection to ensure that no rows are inadvertently leaked.</target>
        </trans-unit>
        <trans-unit id="34cbdcc4-6980-4a2e-96d4-b03c98c91c77" xml:space="preserve">
          <source>For applications using Entity Framework, the easiest approach is to set CONTEXT_INFO within the ElasticScaleContext override described in <bpt id="fe6c12b5-6b65-4fad-81d8-b3164c874245">&lt;linkText&gt;</bpt>Data Dependent Routing using EF DbContext<ept id="fe6c12b5-6b65-4fad-81d8-b3164c874245">&lt;/linkText&gt;</ept><bpt id="fe6c12b5-6b65-4fad-81d8-b3164c874245">&lt;title&gt;</bpt><ept id="fe6c12b5-6b65-4fad-81d8-b3164c874245">&lt;/title&gt;</ept>.</source>
          <target state="new">For applications using Entity Framework, the easiest approach is to set CONTEXT_INFO within the ElasticScaleContext override described in <bpt id="fe6c12b5-6b65-4fad-81d8-b3164c874245">&lt;linkText&gt;</bpt>Data Dependent Routing using EF DbContext<ept id="fe6c12b5-6b65-4fad-81d8-b3164c874245">&lt;/linkText&gt;</ept><bpt id="fe6c12b5-6b65-4fad-81d8-b3164c874245">&lt;title&gt;</bpt><ept id="fe6c12b5-6b65-4fad-81d8-b3164c874245">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="b053f1cd-97e9-4941-bf3a-1e779f5c4e93" xml:space="preserve">
          <source>Before returning the connection brokered through data dependent routing, simply create and execute a SqlCommand that sets CONTEXT_INFO to the shardingKey (TenantId) specified for that connection.</source>
          <target state="new">Before returning the connection brokered through data dependent routing, simply create and execute a SqlCommand that sets CONTEXT_INFO to the shardingKey (TenantId) specified for that connection.</target>
        </trans-unit>
        <trans-unit id="e268e020-f952-4a8d-94d2-8e5217c3b6d6" xml:space="preserve">
          <source>This way, you only need to write code once to set CONTEXT_INFO.</source>
          <target state="new">This way, you only need to write code once to set CONTEXT_INFO.</target>
        </trans-unit>
        <trans-unit id="9a5a12a2-86bd-4c89-897e-8ffff18cd60d" xml:space="preserve">
          <source>Now CONTEXT_INFO is automatically set to the specified TenantId whenever ElasticScaleContext is invoked: </source>
          <target state="new">Now CONTEXT_INFO is automatically set to the specified TenantId whenever ElasticScaleContext is invoked: </target>
        </trans-unit>
        <trans-unit id="d9b36e49-9a4c-4e91-b2af-edfc458604f2" xml:space="preserve">
          <source>For applications using ADO.NET SqlClient, the recommended approach is to create a wrapper function around ShardMap.OpenConnectionForKey() that automatically sets CONTEXT_INFO to the correct TenantId before returning a connection.</source>
          <target state="new">For applications using ADO.NET SqlClient, the recommended approach is to create a wrapper function around ShardMap.OpenConnectionForKey() that automatically sets CONTEXT_INFO to the correct TenantId before returning a connection.</target>
        </trans-unit>
        <trans-unit id="dcaca68a-004b-43c1-9372-e2e14564e953" xml:space="preserve">
          <source>To ensure that CONTEXT_INFO is always set properly, you should only open connections using this wrapper function.</source>
          <target state="new">To ensure that CONTEXT_INFO is always set properly, you should only open connections using this wrapper function.</target>
        </trans-unit>
        <trans-unit id="65af7e72-38bf-4ab9-aa5c-09f48c4ae7ff" xml:space="preserve">
          <source>Now that the application is setting CONTEXT_INFO to the current TenantId before querying, an RLS security policy can filter queries and exclude rows that have a different TenantId.</source>
          <target state="new">Now that the application is setting CONTEXT_INFO to the current TenantId before querying, an RLS security policy can filter queries and exclude rows that have a different TenantId.</target>
        </trans-unit>
        <trans-unit id="7aa308ae-b0a0-435c-aea8-1a5e72cbdef5" xml:space="preserve">
          <source>RLS is implemented in T-SQL: a user-defined predicate function defines the filtering logic, and a security policy binds this function to any number of tables.</source>
          <target state="new">RLS is implemented in T-SQL: a user-defined predicate function defines the filtering logic, and a security policy binds this function to any number of tables.</target>
        </trans-unit>
        <trans-unit id="fba1053e-81b3-4c35-b1ff-4c8fd96506b3" xml:space="preserve">
          <source>For this project, the predicate function will simply verify that the application (rather than some other SQL user) is connected to the database, and that the value of CONTEXT_INFO matches the TenantId of a given row.</source>
          <target state="new">For this project, the predicate function will simply verify that the application (rather than some other SQL user) is connected to the database, and that the value of CONTEXT_INFO matches the TenantId of a given row.</target>
        </trans-unit>
        <trans-unit id="43e26053-c3b3-4c4d-b313-1a0e1d4b01a2" xml:space="preserve">
          <source>Rows that meet these conditions will be allowed through the filter for SELECT, UPDATE, and DELETE queries.</source>
          <target state="new">Rows that meet these conditions will be allowed through the filter for SELECT, UPDATE, and DELETE queries.</target>
        </trans-unit>
        <trans-unit id="ce0215c3-7c3e-4e04-8447-895b41e409fc" xml:space="preserve">
          <source>If CONTEXT_INFO has not been set, no rows will be returned.</source>
          <target state="new">If CONTEXT_INFO has not been set, no rows will be returned.</target>
        </trans-unit>
        <trans-unit id="dc2f6213-0740-4c52-8b50-968930e88857" xml:space="preserve">
          <source>To enable RLS, execute the following T-SQL on all shards using either Visual Studio (SSDT), SSMS, or the PowerShell script included in the project (or if you are using <bpt id="a07b9f68-4454-4066-814a-20225abfb709">&lt;linkText&gt;</bpt>Elastic Database Jobs<ept id="a07b9f68-4454-4066-814a-20225abfb709">&lt;/linkText&gt;</ept><bpt id="a07b9f68-4454-4066-814a-20225abfb709">&lt;title&gt;</bpt><ept id="a07b9f68-4454-4066-814a-20225abfb709">&lt;/title&gt;</ept>, you can use it to automate execution of this T-SQL on all shards): </source>
          <target state="new">To enable RLS, execute the following T-SQL on all shards using either Visual Studio (SSDT), SSMS, or the PowerShell script included in the project (or if you are using <bpt id="a07b9f68-4454-4066-814a-20225abfb709">&lt;linkText&gt;</bpt>Elastic Database Jobs<ept id="a07b9f68-4454-4066-814a-20225abfb709">&lt;/linkText&gt;</ept><bpt id="a07b9f68-4454-4066-814a-20225abfb709">&lt;title&gt;</bpt><ept id="a07b9f68-4454-4066-814a-20225abfb709">&lt;/title&gt;</ept>, you can use it to automate execution of this T-SQL on all shards): </target>
        </trans-unit>
        <trans-unit id="7afb8cfe-8e88-4ff4-9ccb-9b32512aaeac" xml:space="preserve">
          <source>For more complex projects that need to add the predicate function on hundreds of tables, you can use a helper stored procedure that automatically generates a security policy adding a predicate on all tables in a schema.</source>
          <target state="new">For more complex projects that need to add the predicate function on hundreds of tables, you can use a helper stored procedure that automatically generates a security policy adding a predicate on all tables in a schema.</target>
        </trans-unit>
        <trans-unit id="234ab6a8-a585-4692-8ce4-0739e1776219" xml:space="preserve">
          <source>See <bpt id="4ee4a243-0b9b-47fe-9d36-0cfdc536f4e6">&lt;linkText&gt;</bpt>Apply Row-Level Security to all tables – helper script (blog)<ept id="4ee4a243-0b9b-47fe-9d36-0cfdc536f4e6">&lt;/linkText&gt;</ept><bpt id="4ee4a243-0b9b-47fe-9d36-0cfdc536f4e6">&lt;title&gt;</bpt><ept id="4ee4a243-0b9b-47fe-9d36-0cfdc536f4e6">&lt;/title&gt;</ept>.</source>
          <target state="new">See <bpt id="4ee4a243-0b9b-47fe-9d36-0cfdc536f4e6">&lt;linkText&gt;</bpt>Apply Row-Level Security to all tables – helper script (blog)<ept id="4ee4a243-0b9b-47fe-9d36-0cfdc536f4e6">&lt;/linkText&gt;</ept><bpt id="4ee4a243-0b9b-47fe-9d36-0cfdc536f4e6">&lt;title&gt;</bpt><ept id="4ee4a243-0b9b-47fe-9d36-0cfdc536f4e6">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="5fbe163a-dd47-43c3-bccd-d30ae916363d" xml:space="preserve">
          <source>If you add a new table later on, simply ALTER the security policy and add a filter predicate on the new table: </source>
          <target state="new">If you add a new table later on, simply ALTER the security policy and add a filter predicate on the new table: </target>
        </trans-unit>
        <trans-unit id="6421cd22-6ed4-4654-800f-c89e0ab9b36e" xml:space="preserve">
          <source>Now if you run the sample application again, tenants will not be able to see rows that do not belong to them.</source>
          <target state="new">Now if you run the sample application again, tenants will not be able to see rows that do not belong to them.</target>
        </trans-unit>
        <trans-unit id="8b68cf3a-84e0-45b8-b9ad-90d786730920" xml:space="preserve">
          <source>At present, RLS security policies will not prevent the application from accidentally inserting rows for the wrong TenantId, or updating the TenantId of a visible row to be a new value.</source>
          <target state="new">At present, RLS security policies will not prevent the application from accidentally inserting rows for the wrong TenantId, or updating the TenantId of a visible row to be a new value.</target>
        </trans-unit>
        <trans-unit id="9ade5192-689b-4b35-ad74-d480ccad4dce" xml:space="preserve">
          <source>For some applications, such as read-only reporting apps, this is not a problem.</source>
          <target state="new">For some applications, such as read-only reporting apps, this is not a problem.</target>
        </trans-unit>
        <trans-unit id="f6c9ad49-3660-462d-b548-7f3f93c98bea" xml:space="preserve">
          <source>However, since this application allows tenants to insert new blogs, it is worthwhile to create an additional safeguard that throws an error if the application code mistakenly tries to insert or update rows such that violate the filter predicate.</source>
          <target state="new">However, since this application allows tenants to insert new blogs, it is worthwhile to create an additional safeguard that throws an error if the application code mistakenly tries to insert or update rows such that violate the filter predicate.</target>
        </trans-unit>
        <trans-unit id="44c47525-f167-4c95-8eb6-b449581538aa" xml:space="preserve">
          <source>As described in <bpt id="2c1fcf0d-42cd-47dd-aaf6-bb8de612599f">&lt;linkText&gt;</bpt>Row-Level Security: Blocking unauthorized INSERTs (blog)<ept id="2c1fcf0d-42cd-47dd-aaf6-bb8de612599f">&lt;/linkText&gt;</ept><bpt id="2c1fcf0d-42cd-47dd-aaf6-bb8de612599f">&lt;title&gt;</bpt><ept id="2c1fcf0d-42cd-47dd-aaf6-bb8de612599f">&lt;/title&gt;</ept>, the recommended solution is to create a check constraint on each table to enforce the same RLS filter predicate for insert and update operations.</source>
          <target state="new">As described in <bpt id="2c1fcf0d-42cd-47dd-aaf6-bb8de612599f">&lt;linkText&gt;</bpt>Row-Level Security: Blocking unauthorized INSERTs (blog)<ept id="2c1fcf0d-42cd-47dd-aaf6-bb8de612599f">&lt;/linkText&gt;</ept><bpt id="2c1fcf0d-42cd-47dd-aaf6-bb8de612599f">&lt;title&gt;</bpt><ept id="2c1fcf0d-42cd-47dd-aaf6-bb8de612599f">&lt;/title&gt;</ept>, the recommended solution is to create a check constraint on each table to enforce the same RLS filter predicate for insert and update operations.</target>
        </trans-unit>
        <trans-unit id="52f3fc92-1fc8-4904-8dc4-c9a7eb7dc5aa" xml:space="preserve">
          <source>To add check constraints, execute the following T-SQL on all shards, using SSMS, SSDT, or the included PowerShell script (or Elastic Database Jobs) as described above: </source>
          <target state="new">To add check constraints, execute the following T-SQL on all shards, using SSMS, SSDT, or the included PowerShell script (or Elastic Database Jobs) as described above: </target>
        </trans-unit>
        <trans-unit id="4d16960f-b1e2-42ee-8e80-edefd0f75f8a" xml:space="preserve">
          <source>Now the application cannot insert rows that belong to tenants other than the one currently connected to the shard database.</source>
          <target state="new">Now the application cannot insert rows that belong to tenants other than the one currently connected to the shard database.</target>
        </trans-unit>
        <trans-unit id="6677ac20-276e-40d7-b907-acd5c65bde3e" xml:space="preserve">
          <source>Likewise the application cannot update visible rows to have a different TenantId.</source>
          <target state="new">Likewise the application cannot update visible rows to have a different TenantId.</target>
        </trans-unit>
        <trans-unit id="51042d2e-483f-4896-a844-70f50ac1793e" xml:space="preserve">
          <source>If the application attempts to do either, a DbUpdateException will be raised.</source>
          <target state="new">If the application attempts to do either, a DbUpdateException will be raised.</target>
        </trans-unit>
        <trans-unit id="1202fec5-2272-45c9-ae99-f4a7f76d961d" xml:space="preserve">
          <source>In addition to using check constraints to block wrong-tenant inserts, you can put a default constraint on each table to automatically populate the TenantId with the current value of CONTEXT_INFO when inserting rows.</source>
          <target state="new">In addition to using check constraints to block wrong-tenant inserts, you can put a default constraint on each table to automatically populate the TenantId with the current value of CONTEXT_INFO when inserting rows.</target>
        </trans-unit>
        <trans-unit id="b50e2810-5c54-4e43-b203-d4eb4c048d4b" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="747ba528-44ee-42f4-b884-7eada56d4944" xml:space="preserve">
          <source>Now the application does not need to specify a TenantId when inserting rows: </source>
          <target state="new">Now the application does not need to specify a TenantId when inserting rows: </target>
        </trans-unit>
        <trans-unit id="90de2d24-373b-4ceb-8a0a-06007cb48927" xml:space="preserve">
          <source>If you use default constraints for an Entity Framework project, it is recommended that you do NOT include the TenantId column in your EF data model.</source>
          <target state="new">If you use default constraints for an Entity Framework project, it is recommended that you do NOT include the TenantId column in your EF data model.</target>
        </trans-unit>
        <trans-unit id="152ce6e4-c094-4d52-813c-3972ae73a638" xml:space="preserve">
          <source>This is because Entity Framework queries automatically supply default values that will override the default constraints created in T-SQL that use CONTEXT_INFO.</source>
          <target state="new">This is because Entity Framework queries automatically supply default values that will override the default constraints created in T-SQL that use CONTEXT_INFO.</target>
        </trans-unit>
        <trans-unit id="36786557-1d9c-4de5-9072-20c2484b302f" xml:space="preserve">
          <source>To use default constraints in the sample project, for instance, you should remove TenantId from DataClasses.cs (and run Add-Migration in the Package Manager Console) and use T-SQL to ensure that the field only exists in the database tables.</source>
          <target state="new">To use default constraints in the sample project, for instance, you should remove TenantId from DataClasses.cs (and run Add-Migration in the Package Manager Console) and use T-SQL to ensure that the field only exists in the database tables.</target>
        </trans-unit>
        <trans-unit id="f1d02f14-4136-4839-a3d9-3ac46ec2d59c" xml:space="preserve">
          <source>This way, EF will not automatically supply incorrect default values when inserting data.</source>
          <target state="new">This way, EF will not automatically supply incorrect default values when inserting data.</target>
        </trans-unit>
        <trans-unit id="166b4916-0395-456b-8788-5d3b3f75a57d" xml:space="preserve">
          <source>Some applications may want to create a "superuser" who can access all rows, for instance, in order to enable reporting across all tenants on all shards, or to perform Split/Merge operations on shards that involve moving tenant rows between databases.</source>
          <target state="new">Some applications may want to create a "superuser" who can access all rows, for instance, in order to enable reporting across all tenants on all shards, or to perform Split/Merge operations on shards that involve moving tenant rows between databases.</target>
        </trans-unit>
        <trans-unit id="13a0953c-785e-4568-9f89-0537a41b20e6" xml:space="preserve">
          <source>To enable this, you should create a new SQL user ("superuser" in this example) in each shard database.</source>
          <target state="new">To enable this, you should create a new SQL user ("superuser" in this example) in each shard database.</target>
        </trans-unit>
        <trans-unit id="9426a192-8313-4263-b556-9f7d8bfac6b4" xml:space="preserve">
          <source>Then alter the security policy with a new predicate function that allows this user to access all rows:</source>
          <target state="new">Then alter the security policy with a new predicate function that allows this user to access all rows:</target>
        </trans-unit>
        <trans-unit id="a8f6ee49-9c57-47fe-bd25-201759eacadc" xml:space="preserve">
          <source><bpt id="b3e61928-10c9-4894-b9a8-6c60db58c04e">&lt;strong&gt;</bpt>Adding new shards<ept id="b3e61928-10c9-4894-b9a8-6c60db58c04e">&lt;/strong&gt;</ept>: You must execute the T-SQL script to enable RLS (and add check constraints) on any new shards, otherwise queries on these shards will not be filtered.</source>
          <target state="new"><bpt id="b3e61928-10c9-4894-b9a8-6c60db58c04e">&lt;strong&gt;</bpt>Adding new shards<ept id="b3e61928-10c9-4894-b9a8-6c60db58c04e">&lt;/strong&gt;</ept>: You must execute the T-SQL script to enable RLS (and add check constraints) on any new shards, otherwise queries on these shards will not be filtered.</target>
        </trans-unit>
        <trans-unit id="039684b2-54e6-487b-acf5-625b813dfc28" xml:space="preserve">
          <source><bpt id="b9b1a4dc-207e-4905-ae73-8e09bf46ecbe">&lt;strong&gt;</bpt>Adding new tables<ept id="b9b1a4dc-207e-4905-ae73-8e09bf46ecbe">&lt;/strong&gt;</ept>: You must add a filter predicate to the security policy on all shards whenever a new table is created, otherwise queries on the new table will not be filtered.</source>
          <target state="new"><bpt id="b9b1a4dc-207e-4905-ae73-8e09bf46ecbe">&lt;strong&gt;</bpt>Adding new tables<ept id="b9b1a4dc-207e-4905-ae73-8e09bf46ecbe">&lt;/strong&gt;</ept>: You must add a filter predicate to the security policy on all shards whenever a new table is created, otherwise queries on the new table will not be filtered.</target>
        </trans-unit>
        <trans-unit id="eb3daa5e-0c8c-4fb1-80b5-88f1ff3dd322" xml:space="preserve">
          <source>This can be automated using a DDL trigger, as described in <bpt id="cb5d8ab5-fc6c-43e9-886b-7dc427e6587f">&lt;linkText&gt;</bpt>Apply Row-Level Security automatically to newly created tables (blog)<ept id="cb5d8ab5-fc6c-43e9-886b-7dc427e6587f">&lt;/linkText&gt;</ept><bpt id="cb5d8ab5-fc6c-43e9-886b-7dc427e6587f">&lt;title&gt;</bpt><ept id="cb5d8ab5-fc6c-43e9-886b-7dc427e6587f">&lt;/title&gt;</ept>.</source>
          <target state="new">This can be automated using a DDL trigger, as described in <bpt id="cb5d8ab5-fc6c-43e9-886b-7dc427e6587f">&lt;linkText&gt;</bpt>Apply Row-Level Security automatically to newly created tables (blog)<ept id="cb5d8ab5-fc6c-43e9-886b-7dc427e6587f">&lt;/linkText&gt;</ept><bpt id="cb5d8ab5-fc6c-43e9-886b-7dc427e6587f">&lt;title&gt;</bpt><ept id="cb5d8ab5-fc6c-43e9-886b-7dc427e6587f">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="07f84185-a5f1-47fc-a4ad-f1aa7339f4b9" xml:space="preserve">
          <source>Elastic database tools and row-level security can be used together to scale out an application’s data tier with support for both multi-tenant and single-tenant shards.</source>
          <target state="new">Elastic database tools and row-level security can be used together to scale out an application’s data tier with support for both multi-tenant and single-tenant shards.</target>
        </trans-unit>
        <trans-unit id="54b14c49-ed2f-428d-94a8-a9e069c3cdf1" xml:space="preserve">
          <source>Multi-tenant shards can be used to store data more efficiently (particularly in cases where a large number of tenants have only a few rows of data), while single-tenant shards can be used to support premium tenants with stricter performance and isolation requirements.</source>
          <target state="new">Multi-tenant shards can be used to store data more efficiently (particularly in cases where a large number of tenants have only a few rows of data), while single-tenant shards can be used to support premium tenants with stricter performance and isolation requirements.</target>
        </trans-unit>
        <trans-unit id="27745065-ba04-449b-9291-d053c208ec4f" xml:space="preserve">
          <source>For more information, see the <bpt id="c22a160a-9c6f-4de1-958e-8a0627fc478b">&lt;linkText&gt;</bpt>Elastic Database Tools Documentation Map<ept id="c22a160a-9c6f-4de1-958e-8a0627fc478b">&lt;/linkText&gt;</ept><bpt id="c22a160a-9c6f-4de1-958e-8a0627fc478b">&lt;title&gt;</bpt><ept id="c22a160a-9c6f-4de1-958e-8a0627fc478b">&lt;/title&gt;</ept> or the <bpt id="45c713f2-8b6a-43ae-82be-b3050a7955eb">&lt;linkText&gt;</bpt>Row-Level Security reference<ept id="45c713f2-8b6a-43ae-82be-b3050a7955eb">&lt;/linkText&gt;</ept><bpt id="45c713f2-8b6a-43ae-82be-b3050a7955eb">&lt;title&gt;</bpt><ept id="45c713f2-8b6a-43ae-82be-b3050a7955eb">&lt;/title&gt;</ept> on MSDN.</source>
          <target state="new">For more information, see the <bpt id="c22a160a-9c6f-4de1-958e-8a0627fc478b">&lt;linkText&gt;</bpt>Elastic Database Tools Documentation Map<ept id="c22a160a-9c6f-4de1-958e-8a0627fc478b">&lt;/linkText&gt;</ept><bpt id="c22a160a-9c6f-4de1-958e-8a0627fc478b">&lt;title&gt;</bpt><ept id="c22a160a-9c6f-4de1-958e-8a0627fc478b">&lt;/title&gt;</ept> or the <bpt id="45c713f2-8b6a-43ae-82be-b3050a7955eb">&lt;linkText&gt;</bpt>Row-Level Security reference<ept id="45c713f2-8b6a-43ae-82be-b3050a7955eb">&lt;/linkText&gt;</ept><bpt id="45c713f2-8b6a-43ae-82be-b3050a7955eb">&lt;title&gt;</bpt><ept id="45c713f2-8b6a-43ae-82be-b3050a7955eb">&lt;/title&gt;</ept> on MSDN.</target>
        </trans-unit>
        <trans-unit id="a3b43468-def7-420a-8aca-b8a2c75afd8c" xml:space="preserve">
          <source><bpt id="409e1ea4-6d74-40f9-b56c-86ddcb39504e">&lt;token href="../../includes/elastic-scale-include.md"&gt;</bpt><ept id="409e1ea4-6d74-40f9-b56c-86ddcb39504e">&lt;/token&gt;</ept></source>
          <target state="new"><bpt id="409e1ea4-6d74-40f9-b56c-86ddcb39504e">&lt;token href="../../includes/elastic-scale-include.md"&gt;</bpt><ept id="409e1ea4-6d74-40f9-b56c-86ddcb39504e">&lt;/token&gt;</ept></target>
        </trans-unit>
        <trans-unit id="c99c0552-fe33-47cf-a0b2-370e4161acd4" xml:space="preserve">
          <source>./media/sql-database-elastic-tools-multi-tenant-row-level-security/blogging-app.png</source>
          <target state="new">./media/sql-database-elastic-tools-multi-tenant-row-level-security/blogging-app.png</target>
        </trans-unit>
      </group>
      <group id="f90a1cd2-da4e-40ce-8d79-68b8bf6ccd90" />
    </body>
  </file>
</xliff>