<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="b6961d21-fd81-4aed-bc40-14214cb5cea4" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="b6961d21-fd81-4aed-bc40-14214cb5cea4" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="194181ac-3f47-4711-a444-bfd414bb6b33">
        <trans-unit id="5129d04f-fe5f-467c-af6f-4223197de930" xml:space="preserve">
          <source>List Azure Storage Resources with the Microsoft Azure Storage Client Library for C++ | Microsoft Azure</source>
          <target state="new">List Azure Storage Resources with the Microsoft Azure Storage Client Library for C++ | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="d7d4ee3b-d44e-4918-bd78-dfbf5b22c614" xml:space="preserve">
          <source>Learn how to use the listing APIs in Microsoft Azure Storage Client Library for C++ to enumerate containers, blobs, queues, tables, and entities.</source>
          <target state="new">Learn how to use the listing APIs in Microsoft Azure Storage Client Library for C++ to enumerate containers, blobs, queues, tables, and entities.</target>
        </trans-unit>
        <trans-unit id="ffaa5aec-5ad2-491a-9114-a64f0f096b87" xml:space="preserve">
          <source>Listing operations are key to many development scenarios with Azure Storage.</source>
          <target state="new">Listing operations are key to many development scenarios with Azure Storage.</target>
        </trans-unit>
        <trans-unit id="37bb9891-7de0-4859-a87a-1ba0d76df4ff" xml:space="preserve">
          <source>This article describes how to most efficiently enumerate objects in Azure Storage using the listing APIs provided in the Microsoft Azure Storage Client Library for C++.</source>
          <target state="new">This article describes how to most efficiently enumerate objects in Azure Storage using the listing APIs provided in the Microsoft Azure Storage Client Library for C++.</target>
        </trans-unit>
        <trans-unit id="d7c792a8-1267-4047-b915-60b337d92a56" xml:space="preserve">
          <source>This guide targets the Azure Storage Client Library for C++ version 1.x, which is available via <bpt id="dbe41652-1f1f-4206-be83-a185ffbd4563">&lt;linkText&gt;</bpt>NuGet<ept id="dbe41652-1f1f-4206-be83-a185ffbd4563">&lt;/linkText&gt;</ept><bpt id="dbe41652-1f1f-4206-be83-a185ffbd4563">&lt;title&gt;</bpt><ept id="dbe41652-1f1f-4206-be83-a185ffbd4563">&lt;/title&gt;</ept> or <bpt id="f2794147-3ecc-4a2a-8950-d32ee21b44c3">&lt;linkText&gt;</bpt>GitHub<ept id="f2794147-3ecc-4a2a-8950-d32ee21b44c3">&lt;/linkText&gt;</ept><bpt id="f2794147-3ecc-4a2a-8950-d32ee21b44c3">&lt;title&gt;</bpt><ept id="f2794147-3ecc-4a2a-8950-d32ee21b44c3">&lt;/title&gt;</ept>.</source>
          <target state="new">This guide targets the Azure Storage Client Library for C++ version 1.x, which is available via <bpt id="dbe41652-1f1f-4206-be83-a185ffbd4563">&lt;linkText&gt;</bpt>NuGet<ept id="dbe41652-1f1f-4206-be83-a185ffbd4563">&lt;/linkText&gt;</ept><bpt id="dbe41652-1f1f-4206-be83-a185ffbd4563">&lt;title&gt;</bpt><ept id="dbe41652-1f1f-4206-be83-a185ffbd4563">&lt;/title&gt;</ept> or <bpt id="f2794147-3ecc-4a2a-8950-d32ee21b44c3">&lt;linkText&gt;</bpt>GitHub<ept id="f2794147-3ecc-4a2a-8950-d32ee21b44c3">&lt;/linkText&gt;</ept><bpt id="f2794147-3ecc-4a2a-8950-d32ee21b44c3">&lt;title&gt;</bpt><ept id="f2794147-3ecc-4a2a-8950-d32ee21b44c3">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="f4a0c0a8-e46a-4fa4-9940-db787bff4c56" xml:space="preserve">
          <source>The Storage Client Library provides a variety of methods to list or query objects in Azure Storage.</source>
          <target state="new">The Storage Client Library provides a variety of methods to list or query objects in Azure Storage.</target>
        </trans-unit>
        <trans-unit id="be15158b-937b-4738-96f1-633ffc00436d" xml:space="preserve">
          <source>This article addresses the following scenarios:</source>
          <target state="new">This article addresses the following scenarios:</target>
        </trans-unit>
        <trans-unit id="d66349b1-76e4-4f65-8beb-e51fcded0d52" xml:space="preserve">
          <source>List containers in an account</source>
          <target state="new">List containers in an account</target>
        </trans-unit>
        <trans-unit id="4ed99f68-9299-42ed-8133-fef4f91fc179" xml:space="preserve">
          <source>List blobs in a container or virtual blob directory</source>
          <target state="new">List blobs in a container or virtual blob directory</target>
        </trans-unit>
        <trans-unit id="dee508bc-f296-46fc-bf5a-195088362ebf" xml:space="preserve">
          <source>List queues in an account</source>
          <target state="new">List queues in an account</target>
        </trans-unit>
        <trans-unit id="96d45e07-e3d1-462f-a09d-b3b1066c9693" xml:space="preserve">
          <source>List tables in an account</source>
          <target state="new">List tables in an account</target>
        </trans-unit>
        <trans-unit id="995aea8e-912c-440a-a240-37f4966dd4b1" xml:space="preserve">
          <source>Query entities in a table</source>
          <target state="new">Query entities in a table</target>
        </trans-unit>
        <trans-unit id="ffb3f204-04a6-4d45-b92a-e2dd0dbfb33d" xml:space="preserve">
          <source>Each of these methods is shown using different overloads for different scenarios.</source>
          <target state="new">Each of these methods is shown using different overloads for different scenarios.</target>
        </trans-unit>
        <trans-unit id="1a81f35d-46b8-40d1-ab0f-ac286ff1b9b5" xml:space="preserve">
          <source>Because the Storage Client Library for C++ is built on top of the <bpt id="0ce37a19-58c7-4ecb-a77d-903e10852b39">&lt;linkText&gt;</bpt>C++ REST library (Project Casablanca)<ept id="0ce37a19-58c7-4ecb-a77d-903e10852b39">&lt;/linkText&gt;</ept><bpt id="0ce37a19-58c7-4ecb-a77d-903e10852b39">&lt;title&gt;</bpt><ept id="0ce37a19-58c7-4ecb-a77d-903e10852b39">&lt;/title&gt;</ept>, we inherently support asynchronous operations by using [pplx::task](http://microsoft.github.io/cpprestsdk/classpplx<bpt id="dfb6cd92-b96f-47dd-a861-8d14ec9ae69f">&lt;em&gt;</bpt>1<ept id="dfb6cd92-b96f-47dd-a861-8d14ec9ae69f">&lt;/em&gt;</ept>1task.html).</source>
          <target state="new">Because the Storage Client Library for C++ is built on top of the <bpt id="0ce37a19-58c7-4ecb-a77d-903e10852b39">&lt;linkText&gt;</bpt>C++ REST library (Project Casablanca)<ept id="0ce37a19-58c7-4ecb-a77d-903e10852b39">&lt;/linkText&gt;</ept><bpt id="0ce37a19-58c7-4ecb-a77d-903e10852b39">&lt;title&gt;</bpt><ept id="0ce37a19-58c7-4ecb-a77d-903e10852b39">&lt;/title&gt;</ept>, we inherently support asynchronous operations by using [pplx::task](http://microsoft.github.io/cpprestsdk/classpplx<bpt id="dfb6cd92-b96f-47dd-a861-8d14ec9ae69f">&lt;em&gt;</bpt>1<ept id="dfb6cd92-b96f-47dd-a861-8d14ec9ae69f">&lt;/em&gt;</ept>1task.html).</target>
        </trans-unit>
        <trans-unit id="7200a63c-d214-41c6-a84d-cc61dbb0a983" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="48725437-4483-4111-b5aa-c9d53eb02705" xml:space="preserve">
          <source>Synchronous operations wrap the corresponding asynchronous operations:</source>
          <target state="new">Synchronous operations wrap the corresponding asynchronous operations:</target>
        </trans-unit>
        <trans-unit id="8a4b2452-4360-4bbf-98e2-ccfcbc5b44b9" xml:space="preserve">
          <source>If you are working with multiple threading applications or services, we recommend that you use the async APIs directly instead of creating a thread to call the sync APIs, which significantly impacts your performance.</source>
          <target state="new">If you are working with multiple threading applications or services, we recommend that you use the async APIs directly instead of creating a thread to call the sync APIs, which significantly impacts your performance.</target>
        </trans-unit>
        <trans-unit id="988dcf7d-c8d2-4e59-94b8-92835660aaf3" xml:space="preserve">
          <source>The scale of cloud storage requires segmented listing.</source>
          <target state="new">The scale of cloud storage requires segmented listing.</target>
        </trans-unit>
        <trans-unit id="81655e6b-97b5-45ea-85b9-481a15d10085" xml:space="preserve">
          <source>For example, you can have over a million blobs in an Azure blob container or over a billion entities in an Azure Table.</source>
          <target state="new">For example, you can have over a million blobs in an Azure blob container or over a billion entities in an Azure Table.</target>
        </trans-unit>
        <trans-unit id="34affed9-c42f-4fdf-98eb-0ac12990468f" xml:space="preserve">
          <source>These are not theoretical numbers, but real customer usage cases.</source>
          <target state="new">These are not theoretical numbers, but real customer usage cases.</target>
        </trans-unit>
        <trans-unit id="5f5955a3-5712-480a-9f14-0027677445c2" xml:space="preserve">
          <source>It is therefore impractical to list all objects in a single response.</source>
          <target state="new">It is therefore impractical to list all objects in a single response.</target>
        </trans-unit>
        <trans-unit id="7cb23288-1800-4a2c-bb22-432351197743" xml:space="preserve">
          <source>Instead, you can list objects using paging.</source>
          <target state="new">Instead, you can list objects using paging.</target>
        </trans-unit>
        <trans-unit id="12b65922-e669-4161-a90b-58ad89d67bc9" xml:space="preserve">
          <source>Each of the listing APIs has a <bpt id="c6251bec-3678-49bc-9cf6-0eb6fa8294b6">&lt;em&gt;</bpt>segmented<ept id="c6251bec-3678-49bc-9cf6-0eb6fa8294b6">&lt;/em&gt;</ept> overload.</source>
          <target state="new">Each of the listing APIs has a <bpt id="c6251bec-3678-49bc-9cf6-0eb6fa8294b6">&lt;em&gt;</bpt>segmented<ept id="c6251bec-3678-49bc-9cf6-0eb6fa8294b6">&lt;/em&gt;</ept> overload.</target>
        </trans-unit>
        <trans-unit id="c8087d63-2783-41aa-98a2-6963bf94b070" xml:space="preserve">
          <source>The response for a segmented listing operation includes:</source>
          <target state="new">The response for a segmented listing operation includes:</target>
        </trans-unit>
        <trans-unit id="42b6d6fb-59fd-483f-9b84-1a052070c371" xml:space="preserve">
          <source>&lt;i&gt;_segment&lt;/i&gt;, which contains the set of results returned for a single call to the listing API.</source>
          <target state="new">&lt;i&gt;_segment&lt;/i&gt;, which contains the set of results returned for a single call to the listing API.</target>
        </trans-unit>
        <trans-unit id="68c8afa1-c226-4586-950b-178f39fa149e" xml:space="preserve">
          <source><bpt id="f53f159d-907f-48d2-9f04-05282c7ad827">&lt;em&gt;</bpt>continuation_token<ept id="f53f159d-907f-48d2-9f04-05282c7ad827">&lt;/em&gt;</ept>, which is passed to the next call in order to get the next page of results.</source>
          <target state="new"><bpt id="f53f159d-907f-48d2-9f04-05282c7ad827">&lt;em&gt;</bpt>continuation_token<ept id="f53f159d-907f-48d2-9f04-05282c7ad827">&lt;/em&gt;</ept>, which is passed to the next call in order to get the next page of results.</target>
        </trans-unit>
        <trans-unit id="daa84875-7874-44a2-9724-51904e065125" xml:space="preserve">
          <source>When there are no more results to return, the continuation token is null.</source>
          <target state="new">When there are no more results to return, the continuation token is null.</target>
        </trans-unit>
        <trans-unit id="64edd49d-7893-4e99-8492-a9c4d9049391" xml:space="preserve">
          <source>For example, a typical call to list all blobs in a container may look like the following code snippet.</source>
          <target state="new">For example, a typical call to list all blobs in a container may look like the following code snippet.</target>
        </trans-unit>
        <trans-unit id="86df4fe0-47f5-4f9b-a3eb-a78e6f7732c6" xml:space="preserve">
          <source>The code is available in our <bpt id="040edae0-7335-4ea9-9112-516b53a38f49">&lt;linkText&gt;</bpt>samples<ept id="040edae0-7335-4ea9-9112-516b53a38f49">&lt;/linkText&gt;</ept><bpt id="040edae0-7335-4ea9-9112-516b53a38f49">&lt;title&gt;</bpt><ept id="040edae0-7335-4ea9-9112-516b53a38f49">&lt;/title&gt;</ept>:</source>
          <target state="new">The code is available in our <bpt id="040edae0-7335-4ea9-9112-516b53a38f49">&lt;linkText&gt;</bpt>samples<ept id="040edae0-7335-4ea9-9112-516b53a38f49">&lt;/linkText&gt;</ept><bpt id="040edae0-7335-4ea9-9112-516b53a38f49">&lt;title&gt;</bpt><ept id="040edae0-7335-4ea9-9112-516b53a38f49">&lt;/title&gt;</ept>:</target>
        </trans-unit>
        <trans-unit id="f1c04856-acac-4352-aba2-167e2e133d4f" xml:space="preserve">
          <source>Note that the number of results returned in a page can be controlled by the parameter <bpt id="a96926cb-31a7-4c7c-a127-a3f6938fe61e">&lt;em&gt;</bpt>max_results<ept id="a96926cb-31a7-4c7c-a127-a3f6938fe61e">&lt;/em&gt;</ept> in the overload of each API, for example:</source>
          <target state="new">Note that the number of results returned in a page can be controlled by the parameter <bpt id="a96926cb-31a7-4c7c-a127-a3f6938fe61e">&lt;em&gt;</bpt>max_results<ept id="a96926cb-31a7-4c7c-a127-a3f6938fe61e">&lt;/em&gt;</ept> in the overload of each API, for example:</target>
        </trans-unit>
        <trans-unit id="f911e39d-31f1-4b9e-a97e-9d65d9ad29ec" xml:space="preserve">
          <source>If you do not specify the <bpt id="28d4c42f-38c7-49e9-bc2a-cdb21bff8316">&lt;em&gt;</bpt>max_results<ept id="28d4c42f-38c7-49e9-bc2a-cdb21bff8316">&lt;/em&gt;</ept> parameter, the default maximum value of up to 5000 results is returned in a single page.</source>
          <target state="new">If you do not specify the <bpt id="28d4c42f-38c7-49e9-bc2a-cdb21bff8316">&lt;em&gt;</bpt>max_results<ept id="28d4c42f-38c7-49e9-bc2a-cdb21bff8316">&lt;/em&gt;</ept> parameter, the default maximum value of up to 5000 results is returned in a single page.</target>
        </trans-unit>
        <trans-unit id="b1dedfa6-12cf-4534-9b2a-6a62e37fa3f4" xml:space="preserve">
          <source>Also note that a query against Azure Table storage may return no records, or fewer records than the value of the <bpt id="5723c5f6-c282-4698-be24-ed9db538510d">&lt;em&gt;</bpt>max_results<ept id="5723c5f6-c282-4698-be24-ed9db538510d">&lt;/em&gt;</ept> parameter that you specified, even if the continuation token is not empty.</source>
          <target state="new">Also note that a query against Azure Table storage may return no records, or fewer records than the value of the <bpt id="5723c5f6-c282-4698-be24-ed9db538510d">&lt;em&gt;</bpt>max_results<ept id="5723c5f6-c282-4698-be24-ed9db538510d">&lt;/em&gt;</ept> parameter that you specified, even if the continuation token is not empty.</target>
        </trans-unit>
        <trans-unit id="3614810f-083a-42d2-b57a-238000685aaf" xml:space="preserve">
          <source>One reason might be that the query could not complete in five seconds.</source>
          <target state="new">One reason might be that the query could not complete in five seconds.</target>
        </trans-unit>
        <trans-unit id="9a22a0c5-88b7-47c8-8539-cadb99024c62" xml:space="preserve">
          <source>As long as the continuation token is not empty, the query should continue, and your code should not assume the size of segment results.</source>
          <target state="new">As long as the continuation token is not empty, the query should continue, and your code should not assume the size of segment results.</target>
        </trans-unit>
        <trans-unit id="76845db3-0dd3-474d-bbb2-9961dffc21bf" xml:space="preserve">
          <source>The recommended coding pattern for most scenarios is segmented listing, which provides explicit progress of listing or querying, and how the service responds to each request.</source>
          <target state="new">The recommended coding pattern for most scenarios is segmented listing, which provides explicit progress of listing or querying, and how the service responds to each request.</target>
        </trans-unit>
        <trans-unit id="4cdb2c18-3bfc-47ff-8e0a-4de6fd2ab954" xml:space="preserve">
          <source>Particularly for C++ applications or services, lower-level control of the listing progress may help control memory and performance.</source>
          <target state="new">Particularly for C++ applications or services, lower-level control of the listing progress may help control memory and performance.</target>
        </trans-unit>
        <trans-unit id="3ed81629-d276-4271-a28d-0df358b763fd" xml:space="preserve">
          <source>Earlier versions of the Storage Client Library for C++ (versions 0.5.0 Preview and earlier) included non-segmented listing APIs for tables and queues, as in the following example:</source>
          <target state="new">Earlier versions of the Storage Client Library for C++ (versions 0.5.0 Preview and earlier) included non-segmented listing APIs for tables and queues, as in the following example:</target>
        </trans-unit>
        <trans-unit id="a3647ee6-1fb1-4724-9e5d-95e29ce5d759" xml:space="preserve">
          <source>These methods were implemented as wrappers of segmented APIs.</source>
          <target state="new">These methods were implemented as wrappers of segmented APIs.</target>
        </trans-unit>
        <trans-unit id="ccece596-cf37-4769-b404-230cad123407" xml:space="preserve">
          <source>For each response of segmented listing, the code appended the results to a vector and returned all results after the full containers were scanned.</source>
          <target state="new">For each response of segmented listing, the code appended the results to a vector and returned all results after the full containers were scanned.</target>
        </trans-unit>
        <trans-unit id="624d4bb6-ea5d-4a9d-b497-e75401909e08" xml:space="preserve">
          <source>This approach might work when the storage account or table contains a small number of objects.</source>
          <target state="new">This approach might work when the storage account or table contains a small number of objects.</target>
        </trans-unit>
        <trans-unit id="8edfc88d-04df-4888-b13b-cfc71995fa6c" xml:space="preserve">
          <source>However, with an increase in the number of objects, the memory required could increase without limit, because all results remained in memory.</source>
          <target state="new">However, with an increase in the number of objects, the memory required could increase without limit, because all results remained in memory.</target>
        </trans-unit>
        <trans-unit id="f5407c50-3b1c-449e-850e-124434909abb" xml:space="preserve">
          <source>One listing operation can take a very long time, during which the caller had no information about its progress.</source>
          <target state="new">One listing operation can take a very long time, during which the caller had no information about its progress.</target>
        </trans-unit>
        <trans-unit id="d0d0af13-12d8-414d-89c0-2a1ba19525e2" xml:space="preserve">
          <source>These greedy listing APIs in the SDK do not exist in C#, Java, or the JavaScript Node.js environment.</source>
          <target state="new">These greedy listing APIs in the SDK do not exist in C#, Java, or the JavaScript Node.js environment.</target>
        </trans-unit>
        <trans-unit id="b48317e1-857b-4e2e-b586-c287decb75e1" xml:space="preserve">
          <source>To avoid the potential issues of using these greedy APIs, we removed them in version 0.6.0 Preview.</source>
          <target state="new">To avoid the potential issues of using these greedy APIs, we removed them in version 0.6.0 Preview.</target>
        </trans-unit>
        <trans-unit id="1aa9beee-2cbd-4f86-a884-a27814aa05cc" xml:space="preserve">
          <source>If your code is calling these greedy APIs:</source>
          <target state="new">If your code is calling these greedy APIs:</target>
        </trans-unit>
        <trans-unit id="04bf013c-1492-4774-b22d-63213098cec5" xml:space="preserve">
          <source>Then you should modify your code to use the segmented listing APIs:</source>
          <target state="new">Then you should modify your code to use the segmented listing APIs:</target>
        </trans-unit>
        <trans-unit id="6df25938-7ab0-4326-b6f6-d67c05a341d0" xml:space="preserve">
          <source>By specifying the <bpt id="306b0264-c301-4fc1-abbb-3dbbd35d0c9a">&lt;em&gt;</bpt>max_results<ept id="306b0264-c301-4fc1-abbb-3dbbd35d0c9a">&lt;/em&gt;</ept> parameter of the segment, you can balance between the numbers of requests and memory usage to meet performance considerations for your application.</source>
          <target state="new">By specifying the <bpt id="306b0264-c301-4fc1-abbb-3dbbd35d0c9a">&lt;em&gt;</bpt>max_results<ept id="306b0264-c301-4fc1-abbb-3dbbd35d0c9a">&lt;/em&gt;</ept> parameter of the segment, you can balance between the numbers of requests and memory usage to meet performance considerations for your application.</target>
        </trans-unit>
        <trans-unit id="b2e0fb59-3496-4d4d-9a06-f4a23d4f47e2" xml:space="preserve">
          <source>Additionally, if you’re using segmented listing APIs, but store the data in a local collection in a "greedy" style, we also strongly recommend that you refactor your code to handle storing data in a local collection carefully at scale.</source>
          <target state="new">Additionally, if you’re using segmented listing APIs, but store the data in a local collection in a "greedy" style, we also strongly recommend that you refactor your code to handle storing data in a local collection carefully at scale.</target>
        </trans-unit>
        <trans-unit id="f8391d6f-98c2-4fc4-acfc-f63bf6839fa4" xml:space="preserve">
          <source>Although greedy listing raised potential issues, it is convenient if there are not too many objects in the container.</source>
          <target state="new">Although greedy listing raised potential issues, it is convenient if there are not too many objects in the container.</target>
        </trans-unit>
        <trans-unit id="ff8d42e7-cc6a-4aa1-a644-286213a6c644" xml:space="preserve">
          <source>If you’re also using C# or Oracle Java SDKs, you should be familiar with the Enumerable programming model, which offers a lazy-style listing, where the data at a certain offset is only fetched if it is required.</source>
          <target state="new">If you’re also using C# or Oracle Java SDKs, you should be familiar with the Enumerable programming model, which offers a lazy-style listing, where the data at a certain offset is only fetched if it is required.</target>
        </trans-unit>
        <trans-unit id="8555a080-6c74-4b5d-9300-ba5b44d3449c" xml:space="preserve">
          <source>In C++, the iterator-based template also provides a similar approach.</source>
          <target state="new">In C++, the iterator-based template also provides a similar approach.</target>
        </trans-unit>
        <trans-unit id="0124e48c-4019-45a5-a957-6e2f154ff4d0" xml:space="preserve">
          <source>A typical lazy listing API, using <bpt id="61713c45-f91d-41dc-afbb-200332e6b274">&lt;strong&gt;</bpt>list_blobs<ept id="61713c45-f91d-41dc-afbb-200332e6b274">&lt;/strong&gt;</ept> as an example, looks like this:</source>
          <target state="new">A typical lazy listing API, using <bpt id="61713c45-f91d-41dc-afbb-200332e6b274">&lt;strong&gt;</bpt>list_blobs<ept id="61713c45-f91d-41dc-afbb-200332e6b274">&lt;/strong&gt;</ept> as an example, looks like this:</target>
        </trans-unit>
        <trans-unit id="8cdc7d84-ee49-4db1-85a5-b607e0333934" xml:space="preserve">
          <source>A typical code snippet that uses the lazy listing pattern might look like this:</source>
          <target state="new">A typical code snippet that uses the lazy listing pattern might look like this:</target>
        </trans-unit>
        <trans-unit id="aa60c030-2851-4d58-a440-c5e7ee4a4ef1" xml:space="preserve">
          <source>Note that lazy listing is only available in synchronous mode.</source>
          <target state="new">Note that lazy listing is only available in synchronous mode.</target>
        </trans-unit>
        <trans-unit id="24b5a0a6-d813-4e6c-8919-b406a264add6" xml:space="preserve">
          <source>Compared with greedy listing, lazy listing fetches data only when necessary.</source>
          <target state="new">Compared with greedy listing, lazy listing fetches data only when necessary.</target>
        </trans-unit>
        <trans-unit id="216b6d9e-39c5-4f03-9f36-5d176f787484" xml:space="preserve">
          <source>Under the covers, it fetches data from Azure Storage only when the next iterator moves into next segment.</source>
          <target state="new">Under the covers, it fetches data from Azure Storage only when the next iterator moves into next segment.</target>
        </trans-unit>
        <trans-unit id="51ebfde2-328b-481d-9d91-c02b2945ee3d" xml:space="preserve">
          <source>Therefore, memory usage is controlled with a bounded size, and the operation is fast.</source>
          <target state="new">Therefore, memory usage is controlled with a bounded size, and the operation is fast.</target>
        </trans-unit>
        <trans-unit id="0ee6b3ea-4996-4c92-a480-2ab56e1e7ac1" xml:space="preserve">
          <source>Lazy listing APIs are included in the Storage Client Library for C++ in version 1.0.0.</source>
          <target state="new">Lazy listing APIs are included in the Storage Client Library for C++ in version 1.0.0.</target>
        </trans-unit>
        <trans-unit id="a7950c9f-48de-41e8-ba49-601e97304360" xml:space="preserve">
          <source>In this article, we discussed different overloads for listing APIs for various objects in the Storage Client Library for C++ .</source>
          <target state="new">In this article, we discussed different overloads for listing APIs for various objects in the Storage Client Library for C++ .</target>
        </trans-unit>
        <trans-unit id="995dc58c-be02-4ac4-bd3f-7b9bd0b2ac4c" xml:space="preserve">
          <source>To summarize:</source>
          <target state="new">To summarize:</target>
        </trans-unit>
        <trans-unit id="ed12ce74-2e0d-49d1-8e6b-f2dc5657fd95" xml:space="preserve">
          <source>Async APIs are strongly recommended under multiple threading scenarios.</source>
          <target state="new">Async APIs are strongly recommended under multiple threading scenarios.</target>
        </trans-unit>
        <trans-unit id="6590480b-934c-4b85-bac8-8adda2c96e50" xml:space="preserve">
          <source>Segmented listing is recommended for most scenarios.</source>
          <target state="new">Segmented listing is recommended for most scenarios.</target>
        </trans-unit>
        <trans-unit id="b04ca100-d921-4647-a2cc-81e0e425baff" xml:space="preserve">
          <source>Lazy listing is provided in the library as a convenient wrapper in synchronous scenarios.</source>
          <target state="new">Lazy listing is provided in the library as a convenient wrapper in synchronous scenarios.</target>
        </trans-unit>
        <trans-unit id="c780f914-ee11-47d7-9fce-08ba3cd14b45" xml:space="preserve">
          <source>Greedy listing is not recommended and has been removed from the library.</source>
          <target state="new">Greedy listing is not recommended and has been removed from the library.</target>
        </trans-unit>
        <trans-unit id="cde2e222-d9b7-4aa5-9c6f-d1b9c5f2fadd" xml:space="preserve">
          <source>For more information about Azure Storage and Client Library for C++, see the following resources.</source>
          <target state="new">For more information about Azure Storage and Client Library for C++, see the following resources.</target>
        </trans-unit>
        <trans-unit id="29070b50-7564-4c41-bbdc-5fab0123f399" xml:space="preserve">
          <source><bpt id="b42687c2-ab0c-4861-87b6-7dbed055ea7d">&lt;linkText&gt;</bpt>How to use Blob Storage from C++<ept id="b42687c2-ab0c-4861-87b6-7dbed055ea7d">&lt;/linkText&gt;</ept><bpt id="b42687c2-ab0c-4861-87b6-7dbed055ea7d">&lt;title&gt;</bpt><ept id="b42687c2-ab0c-4861-87b6-7dbed055ea7d">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="b42687c2-ab0c-4861-87b6-7dbed055ea7d">&lt;linkText&gt;</bpt>How to use Blob Storage from C++<ept id="b42687c2-ab0c-4861-87b6-7dbed055ea7d">&lt;/linkText&gt;</ept><bpt id="b42687c2-ab0c-4861-87b6-7dbed055ea7d">&lt;title&gt;</bpt><ept id="b42687c2-ab0c-4861-87b6-7dbed055ea7d">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="2b713874-7cf4-4475-a274-1397053ee62d" xml:space="preserve">
          <source><bpt id="3a62e776-73e2-4f3e-a2a4-b1be9b43b539">&lt;linkText&gt;</bpt>How to use Table Storage from C++<ept id="3a62e776-73e2-4f3e-a2a4-b1be9b43b539">&lt;/linkText&gt;</ept><bpt id="3a62e776-73e2-4f3e-a2a4-b1be9b43b539">&lt;title&gt;</bpt><ept id="3a62e776-73e2-4f3e-a2a4-b1be9b43b539">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="3a62e776-73e2-4f3e-a2a4-b1be9b43b539">&lt;linkText&gt;</bpt>How to use Table Storage from C++<ept id="3a62e776-73e2-4f3e-a2a4-b1be9b43b539">&lt;/linkText&gt;</ept><bpt id="3a62e776-73e2-4f3e-a2a4-b1be9b43b539">&lt;title&gt;</bpt><ept id="3a62e776-73e2-4f3e-a2a4-b1be9b43b539">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="e851209c-ca90-4eba-85ae-ae5c9519ea9d" xml:space="preserve">
          <source><bpt id="bd0bd526-1670-4ed6-b015-2d8c0ce5cb0e">&lt;linkText&gt;</bpt>How to use Queue Storage from C++<ept id="bd0bd526-1670-4ed6-b015-2d8c0ce5cb0e">&lt;/linkText&gt;</ept><bpt id="bd0bd526-1670-4ed6-b015-2d8c0ce5cb0e">&lt;title&gt;</bpt><ept id="bd0bd526-1670-4ed6-b015-2d8c0ce5cb0e">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="bd0bd526-1670-4ed6-b015-2d8c0ce5cb0e">&lt;linkText&gt;</bpt>How to use Queue Storage from C++<ept id="bd0bd526-1670-4ed6-b015-2d8c0ce5cb0e">&lt;/linkText&gt;</ept><bpt id="bd0bd526-1670-4ed6-b015-2d8c0ce5cb0e">&lt;title&gt;</bpt><ept id="bd0bd526-1670-4ed6-b015-2d8c0ce5cb0e">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="08c1abd6-56c5-439c-84b6-52e58200e7f2" xml:space="preserve">
          <source><bpt id="2289084f-6805-404d-b014-caa5c748dc94">&lt;linkText&gt;</bpt>Azure Storage Client Library for C++ API documentation.<ept id="2289084f-6805-404d-b014-caa5c748dc94">&lt;/linkText&gt;</ept><bpt id="2289084f-6805-404d-b014-caa5c748dc94">&lt;title&gt;</bpt><ept id="2289084f-6805-404d-b014-caa5c748dc94">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="2289084f-6805-404d-b014-caa5c748dc94">&lt;linkText&gt;</bpt>Azure Storage Client Library for C++ API documentation.<ept id="2289084f-6805-404d-b014-caa5c748dc94">&lt;/linkText&gt;</ept><bpt id="2289084f-6805-404d-b014-caa5c748dc94">&lt;title&gt;</bpt><ept id="2289084f-6805-404d-b014-caa5c748dc94">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0be55d06-d9d8-4739-9228-18e2a4f78721" xml:space="preserve">
          <source><bpt id="62d8b7e6-0844-4f18-afdc-2bbec70a653a">&lt;linkText&gt;</bpt>Azure Storage Team Blog<ept id="62d8b7e6-0844-4f18-afdc-2bbec70a653a">&lt;/linkText&gt;</ept><bpt id="62d8b7e6-0844-4f18-afdc-2bbec70a653a">&lt;title&gt;</bpt><ept id="62d8b7e6-0844-4f18-afdc-2bbec70a653a">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="62d8b7e6-0844-4f18-afdc-2bbec70a653a">&lt;linkText&gt;</bpt>Azure Storage Team Blog<ept id="62d8b7e6-0844-4f18-afdc-2bbec70a653a">&lt;/linkText&gt;</ept><bpt id="62d8b7e6-0844-4f18-afdc-2bbec70a653a">&lt;title&gt;</bpt><ept id="62d8b7e6-0844-4f18-afdc-2bbec70a653a">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0fe51764-2fd4-4b55-b1d7-c728e3c613dd" xml:space="preserve">
          <source><bpt id="860d321c-95d1-49ac-b9e9-4e469e63193d">&lt;linkText&gt;</bpt>Azure Storage Documentation<ept id="860d321c-95d1-49ac-b9e9-4e469e63193d">&lt;/linkText&gt;</ept><bpt id="860d321c-95d1-49ac-b9e9-4e469e63193d">&lt;title&gt;</bpt><ept id="860d321c-95d1-49ac-b9e9-4e469e63193d">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="860d321c-95d1-49ac-b9e9-4e469e63193d">&lt;linkText&gt;</bpt>Azure Storage Documentation<ept id="860d321c-95d1-49ac-b9e9-4e469e63193d">&lt;/linkText&gt;</ept><bpt id="860d321c-95d1-49ac-b9e9-4e469e63193d">&lt;title&gt;</bpt><ept id="860d321c-95d1-49ac-b9e9-4e469e63193d">&lt;/title&gt;</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>