<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="f8ea8a1e-b092-48c9-8d4d-90f2109f1c6f" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="f8ea8a1e-b092-48c9-8d4d-90f2109f1c6f" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="1ccf0267-360b-4b78-9c42-8a098ac1562c">
        <trans-unit id="5ef69c4c-c107-4deb-93b2-bdbce1d95244" xml:space="preserve">
          <source>How to get started with Azure Table storage and Visual Studio connected services | Microsoft Azure</source>
          <target state="new">How to get started with Azure Table storage and Visual Studio connected services | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="92c2191a-9a42-4ee3-b608-d6bb0ba8a5a3" xml:space="preserve">
          <source>How to get started using Azure Table storage in an ASP.NET 5 project in Visual Studio</source>
          <target state="new">How to get started using Azure Table storage in an ASP.NET 5 project in Visual Studio</target>
        </trans-unit>
        <trans-unit id="1e885f8d-cc71-4b53-b8fe-a21674057151" xml:space="preserve">
          <source>This article describes how get started using Azure Table storage in Visual Studio after you have created or referenced an Azure storage account in an ASP.NET 5 project by using the Visual Studio <bpt id="1c587325-de14-4046-aeb7-dc61781a4410">&lt;strong&gt;</bpt>Add Connected Services<ept id="1c587325-de14-4046-aeb7-dc61781a4410">&lt;/strong&gt;</ept> dialog.</source>
          <target state="new">This article describes how get started using Azure Table storage in Visual Studio after you have created or referenced an Azure storage account in an ASP.NET 5 project by using the Visual Studio <bpt id="1c587325-de14-4046-aeb7-dc61781a4410">&lt;strong&gt;</bpt>Add Connected Services<ept id="1c587325-de14-4046-aeb7-dc61781a4410">&lt;/strong&gt;</ept> dialog.</target>
        </trans-unit>
        <trans-unit id="543d24e4-e82f-4e22-8fdf-2592e180f37d" xml:space="preserve">
          <source>The Azure Table storage service enables you to store large amounts of structured data.</source>
          <target state="new">The Azure Table storage service enables you to store large amounts of structured data.</target>
        </trans-unit>
        <trans-unit id="83029abf-f78a-46c6-9607-f8c46ab9678b" xml:space="preserve">
          <source>The service is a NoSQL data store that accepts authenticated calls from inside and outside the Azure cloud.</source>
          <target state="new">The service is a NoSQL data store that accepts authenticated calls from inside and outside the Azure cloud.</target>
        </trans-unit>
        <trans-unit id="2bea3931-7ed6-4770-a3cb-61b7fc8614a5" xml:space="preserve">
          <source>Azure tables are ideal for storing structured, non-relational data.</source>
          <target state="new">Azure tables are ideal for storing structured, non-relational data.</target>
        </trans-unit>
        <trans-unit id="ace45e4c-07a9-4ee2-b32b-9e1c64b6cb32" xml:space="preserve">
          <source>The <bpt id="08ea934f-c163-469b-9887-8ac06524e44b">&lt;strong&gt;</bpt>Add Connected Services<ept id="08ea934f-c163-469b-9887-8ac06524e44b">&lt;/strong&gt;</ept> operation installs the appropriate NuGet packages to access Azure storage in your project and adds the connection string for the storage account to your project configuration files.</source>
          <target state="new">The <bpt id="08ea934f-c163-469b-9887-8ac06524e44b">&lt;strong&gt;</bpt>Add Connected Services<ept id="08ea934f-c163-469b-9887-8ac06524e44b">&lt;/strong&gt;</ept> operation installs the appropriate NuGet packages to access Azure storage in your project and adds the connection string for the storage account to your project configuration files.</target>
        </trans-unit>
        <trans-unit id="1dbb82d1-780b-48a9-826b-d53d1862d96f" xml:space="preserve">
          <source>For more general information about using Azure Table storage, see <bpt id="9955493a-0aec-445b-94f6-edeebaf9b067">&lt;linkText&gt;</bpt>How to use Table storage from .NET<ept id="9955493a-0aec-445b-94f6-edeebaf9b067">&lt;/linkText&gt;</ept><bpt id="9955493a-0aec-445b-94f6-edeebaf9b067">&lt;title&gt;</bpt><ept id="9955493a-0aec-445b-94f6-edeebaf9b067">&lt;/title&gt;</ept>.</source>
          <target state="new">For more general information about using Azure Table storage, see <bpt id="9955493a-0aec-445b-94f6-edeebaf9b067">&lt;linkText&gt;</bpt>How to use Table storage from .NET<ept id="9955493a-0aec-445b-94f6-edeebaf9b067">&lt;/linkText&gt;</ept><bpt id="9955493a-0aec-445b-94f6-edeebaf9b067">&lt;title&gt;</bpt><ept id="9955493a-0aec-445b-94f6-edeebaf9b067">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="d3912314-b4be-4e96-b26f-4256fc9d8852" xml:space="preserve">
          <source>To get started, you first need to create a table in your storage account.</source>
          <target state="new">To get started, you first need to create a table in your storage account.</target>
        </trans-unit>
        <trans-unit id="2cd9f53b-088f-4182-b35e-155b2fe0fdcf" xml:space="preserve">
          <source>We'll show you how to create an Azure table in code.</source>
          <target state="new">We'll show you how to create an Azure table in code.</target>
        </trans-unit>
        <trans-unit id="21f7d1c8-ca22-4b96-8e3f-8726f229b443" xml:space="preserve">
          <source>We'll also show you how to perform basic table and entity operations, such as adding, modifying, reading and reading table entities.</source>
          <target state="new">We'll also show you how to perform basic table and entity operations, such as adding, modifying, reading and reading table entities.</target>
        </trans-unit>
        <trans-unit id="de1aec4b-7d5b-425e-a05d-c82786a565cd" xml:space="preserve">
          <source>The samples are written in C\# code and use the Azure Storage Client Library for .NET.</source>
          <target state="new">The samples are written in C\# code and use the Azure Storage Client Library for .NET.</target>
        </trans-unit>
        <trans-unit id="4d4d6dca-963b-4f61-b947-35a6c8325cb4" xml:space="preserve">
          <source><bpt id="f046c1d8-c4e2-4c80-a0f2-7d0477fa730f">&lt;strong&gt;</bpt>NOTE<ept id="f046c1d8-c4e2-4c80-a0f2-7d0477fa730f">&lt;/strong&gt;</ept> - Some of the APIs that perform calls out to Azure storage in ASP.NET 5 are asynchronous.</source>
          <target state="new"><bpt id="f046c1d8-c4e2-4c80-a0f2-7d0477fa730f">&lt;strong&gt;</bpt>NOTE<ept id="f046c1d8-c4e2-4c80-a0f2-7d0477fa730f">&lt;/strong&gt;</ept> - Some of the APIs that perform calls out to Azure storage in ASP.NET 5 are asynchronous.</target>
        </trans-unit>
        <trans-unit id="be825612-35b1-4911-a534-860734779b71" xml:space="preserve">
          <source>See <bpt id="bf08abbc-e4bf-424b-be56-025e797d3344">&lt;linkText&gt;</bpt>Asynchronous Programming with Async and Await<ept id="bf08abbc-e4bf-424b-be56-025e797d3344">&lt;/linkText&gt;</ept><bpt id="bf08abbc-e4bf-424b-be56-025e797d3344">&lt;title&gt;</bpt><ept id="bf08abbc-e4bf-424b-be56-025e797d3344">&lt;/title&gt;</ept> for more information.</source>
          <target state="new">See <bpt id="bf08abbc-e4bf-424b-be56-025e797d3344">&lt;linkText&gt;</bpt>Asynchronous Programming with Async and Await<ept id="bf08abbc-e4bf-424b-be56-025e797d3344">&lt;/linkText&gt;</ept><bpt id="bf08abbc-e4bf-424b-be56-025e797d3344">&lt;title&gt;</bpt><ept id="bf08abbc-e4bf-424b-be56-025e797d3344">&lt;/title&gt;</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="beb91a32-fc8a-418f-ba13-7afe02575f59" xml:space="preserve">
          <source>The code below assumes Async programming methods are being used.</source>
          <target state="new">The code below assumes Async programming methods are being used.</target>
        </trans-unit>
        <trans-unit id="cc1a9f93-6e3f-457c-961c-2ae4fd0d23bf" xml:space="preserve">
          <source>To access tables in ASP.NET 5 projects, you need to include the following items to any C# source files that access Azure table storage.</source>
          <target state="new">To access tables in ASP.NET 5 projects, you need to include the following items to any C# source files that access Azure table storage.</target>
        </trans-unit>
        <trans-unit id="3ee439e7-5237-4951-b39d-154bbc761341" xml:space="preserve">
          <source>Make sure the namespace declarations at the top of the C# file include these <bpt id="8f9f66bd-9332-4306-b9d9-9143b3437a90">&lt;code&gt;</bpt>using<ept id="8f9f66bd-9332-4306-b9d9-9143b3437a90">&lt;/code&gt;</ept> statements.</source>
          <target state="new">Make sure the namespace declarations at the top of the C# file include these <bpt id="8f9f66bd-9332-4306-b9d9-9143b3437a90">&lt;code&gt;</bpt>using<ept id="8f9f66bd-9332-4306-b9d9-9143b3437a90">&lt;/code&gt;</ept> statements.</target>
        </trans-unit>
        <trans-unit id="552b0fe6-bf9c-414d-ad4b-e67a84552b03" xml:space="preserve">
          <source>Get a <bpt id="0cb713e1-fb10-414c-bc5b-b10475b0fc0c">&lt;code&gt;</bpt>CloudStorageAccount<ept id="0cb713e1-fb10-414c-bc5b-b10475b0fc0c">&lt;/code&gt;</ept> object that represents your storage account information.</source>
          <target state="new">Get a <bpt id="0cb713e1-fb10-414c-bc5b-b10475b0fc0c">&lt;code&gt;</bpt>CloudStorageAccount<ept id="0cb713e1-fb10-414c-bc5b-b10475b0fc0c">&lt;/code&gt;</ept> object that represents your storage account information.</target>
        </trans-unit>
        <trans-unit id="411a3443-c5bc-4fa7-9af5-c5bcdcac4dee" xml:space="preserve">
          <source>Use the following code to get the your storage connection string and storage account information from the Azure service configuration.</source>
          <target state="new">Use the following code to get the your storage connection string and storage account information from the Azure service configuration.</target>
        </trans-unit>
        <trans-unit id="73813115-d5a9-436c-ad1e-582f8fb74895" xml:space="preserve">
          <source><bpt id="0e395b61-29f0-4be5-a92d-411e5218e09a">&lt;strong&gt;</bpt>NOTE<ept id="0e395b61-29f0-4be5-a92d-411e5218e09a">&lt;/strong&gt;</ept> - Use all of the above code in front of the code in the following samples.</source>
          <target state="new"><bpt id="0e395b61-29f0-4be5-a92d-411e5218e09a">&lt;strong&gt;</bpt>NOTE<ept id="0e395b61-29f0-4be5-a92d-411e5218e09a">&lt;/strong&gt;</ept> - Use all of the above code in front of the code in the following samples.</target>
        </trans-unit>
        <trans-unit id="e88d7d77-9dc6-457d-b87d-8fe807e4506b" xml:space="preserve">
          <source>Get a <bpt id="c480c270-d9c8-48df-84f0-54cbe227e78f">&lt;code&gt;</bpt>CloudTableClient<ept id="c480c270-d9c8-48df-84f0-54cbe227e78f">&lt;/code&gt;</ept> object to reference the table objects in your storage account.</source>
          <target state="new">Get a <bpt id="c480c270-d9c8-48df-84f0-54cbe227e78f">&lt;code&gt;</bpt>CloudTableClient<ept id="c480c270-d9c8-48df-84f0-54cbe227e78f">&lt;/code&gt;</ept> object to reference the table objects in your storage account.</target>
        </trans-unit>
        <trans-unit id="2b433a0e-84cd-4e02-8ebe-aaf4c31a6050" xml:space="preserve">
          <source>Get a <bpt id="2c29e917-8924-412b-aa73-8e1f4caf3c96">&lt;code&gt;</bpt>CloudTable<ept id="2c29e917-8924-412b-aa73-8e1f4caf3c96">&lt;/code&gt;</ept> reference object to reference a specific table and entities.</source>
          <target state="new">Get a <bpt id="2c29e917-8924-412b-aa73-8e1f4caf3c96">&lt;code&gt;</bpt>CloudTable<ept id="2c29e917-8924-412b-aa73-8e1f4caf3c96">&lt;/code&gt;</ept> reference object to reference a specific table and entities.</target>
        </trans-unit>
        <trans-unit id="73ddf708-07ad-4d52-b0c6-a451cca65341" xml:space="preserve">
          <source>To create the Azure table, just add a call to <bpt id="2dca76c7-cca6-4457-b006-4e8e7f0ba4fb">&lt;code&gt;</bpt>CreateIfNotExistsAsync()<ept id="2dca76c7-cca6-4457-b006-4e8e7f0ba4fb">&lt;/code&gt;</ept>.</source>
          <target state="new">To create the Azure table, just add a call to <bpt id="2dca76c7-cca6-4457-b006-4e8e7f0ba4fb">&lt;code&gt;</bpt>CreateIfNotExistsAsync()<ept id="2dca76c7-cca6-4457-b006-4e8e7f0ba4fb">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="40170e5e-93b1-44d3-af72-88ed90b7977e" xml:space="preserve">
          <source>To add an entity to a table you create a class that defines the properties of your entity.</source>
          <target state="new">To add an entity to a table you create a class that defines the properties of your entity.</target>
        </trans-unit>
        <trans-unit id="26800d9f-836b-4629-9607-8df765c94abb" xml:space="preserve">
          <source>The following code defines an entity class called <bpt id="c7f15e1c-798f-45c7-889b-4c7521f32a9e">&lt;strong&gt;</bpt>CustomerEntity<ept id="c7f15e1c-798f-45c7-889b-4c7521f32a9e">&lt;/strong&gt;</ept> that uses the customer's first name as the row key and last name as the partition key.</source>
          <target state="new">The following code defines an entity class called <bpt id="c7f15e1c-798f-45c7-889b-4c7521f32a9e">&lt;strong&gt;</bpt>CustomerEntity<ept id="c7f15e1c-798f-45c7-889b-4c7521f32a9e">&lt;/strong&gt;</ept> that uses the customer's first name as the row key and last name as the partition key.</target>
        </trans-unit>
        <trans-unit id="0bb658d4-dffa-4272-ba31-5d7e50b2f03b" xml:space="preserve">
          <source>Table operations involving entities are done using the <bpt id="f7b382b4-e5b6-470d-8fc0-f2c6d632cebe">&lt;code&gt;</bpt>CloudTable<ept id="f7b382b4-e5b6-470d-8fc0-f2c6d632cebe">&lt;/code&gt;</ept> object you created earlier in "Access tables in code."</source>
          <target state="new">Table operations involving entities are done using the <bpt id="f7b382b4-e5b6-470d-8fc0-f2c6d632cebe">&lt;code&gt;</bpt>CloudTable<ept id="f7b382b4-e5b6-470d-8fc0-f2c6d632cebe">&lt;/code&gt;</ept> object you created earlier in "Access tables in code."</target>
        </trans-unit>
        <trans-unit id="538bab73-aded-41f4-9811-4802a656af24" xml:space="preserve">
          <source>The <bpt id="f68d08f2-dafe-46c7-abe7-7f74fe478a32">&lt;code&gt;</bpt>TableOperation<ept id="f68d08f2-dafe-46c7-abe7-7f74fe478a32">&lt;/code&gt;</ept> object represents the operation to be done.</source>
          <target state="new">The <bpt id="f68d08f2-dafe-46c7-abe7-7f74fe478a32">&lt;code&gt;</bpt>TableOperation<ept id="f68d08f2-dafe-46c7-abe7-7f74fe478a32">&lt;/code&gt;</ept> object represents the operation to be done.</target>
        </trans-unit>
        <trans-unit id="66d40e01-438d-4f99-bf80-d71ace046caf" xml:space="preserve">
          <source>The following code example shows how to create a <bpt id="e4f141df-7bf0-4456-b781-8f866e619383">&lt;code&gt;</bpt>CloudTable<ept id="e4f141df-7bf0-4456-b781-8f866e619383">&lt;/code&gt;</ept> object and a <bpt id="fbe1239c-f605-44dd-b951-db5688fb8df7">&lt;code&gt;</bpt>CustomerEntity<ept id="fbe1239c-f605-44dd-b951-db5688fb8df7">&lt;/code&gt;</ept> object.</source>
          <target state="new">The following code example shows how to create a <bpt id="e4f141df-7bf0-4456-b781-8f866e619383">&lt;code&gt;</bpt>CloudTable<ept id="e4f141df-7bf0-4456-b781-8f866e619383">&lt;/code&gt;</ept> object and a <bpt id="fbe1239c-f605-44dd-b951-db5688fb8df7">&lt;code&gt;</bpt>CustomerEntity<ept id="fbe1239c-f605-44dd-b951-db5688fb8df7">&lt;/code&gt;</ept> object.</target>
        </trans-unit>
        <trans-unit id="e8ae6ab1-19d8-4b91-bfb6-a1c633448899" xml:space="preserve">
          <source>To prepare the operation, a <bpt id="aec9cd00-5b12-4525-82d1-d25b9c9f7eb2">&lt;code&gt;</bpt>TableOperation<ept id="aec9cd00-5b12-4525-82d1-d25b9c9f7eb2">&lt;/code&gt;</ept> is created to insert the customer entity into the table.</source>
          <target state="new">To prepare the operation, a <bpt id="aec9cd00-5b12-4525-82d1-d25b9c9f7eb2">&lt;code&gt;</bpt>TableOperation<ept id="aec9cd00-5b12-4525-82d1-d25b9c9f7eb2">&lt;/code&gt;</ept> is created to insert the customer entity into the table.</target>
        </trans-unit>
        <trans-unit id="4eac0141-89ce-472b-8ea6-3bc3e1c15ef1" xml:space="preserve">
          <source>Finally, the operation is executed by calling CloudTable.ExecuteAsync.</source>
          <target state="new">Finally, the operation is executed by calling CloudTable.ExecuteAsync.</target>
        </trans-unit>
        <trans-unit id="f38ecd2a-1d42-4e5a-a472-abc208a3e38d" xml:space="preserve">
          <source>You can insert multiple entities into a table in a single write operation.</source>
          <target state="new">You can insert multiple entities into a table in a single write operation.</target>
        </trans-unit>
        <trans-unit id="117cb522-edc5-4681-84a2-eb8caa4d9c96" xml:space="preserve">
          <source>The following code example creates two entity objects ("Jeff Smith" and "Ben Smith"), adds them to a <bpt id="70b777b5-1733-4902-ba3a-820c50a1ac08">&lt;code&gt;</bpt>TableBatchOperation<ept id="70b777b5-1733-4902-ba3a-820c50a1ac08">&lt;/code&gt;</ept> object using the <bpt id="9db702f1-54ba-44ab-8413-c92a33270358">&lt;strong&gt;</bpt>Insert<ept id="9db702f1-54ba-44ab-8413-c92a33270358">&lt;/strong&gt;</ept> method, and then starts the operation by calling CloudTable.ExecuteBatchAsync.</source>
          <target state="new">The following code example creates two entity objects ("Jeff Smith" and "Ben Smith"), adds them to a <bpt id="70b777b5-1733-4902-ba3a-820c50a1ac08">&lt;code&gt;</bpt>TableBatchOperation<ept id="70b777b5-1733-4902-ba3a-820c50a1ac08">&lt;/code&gt;</ept> object using the <bpt id="9db702f1-54ba-44ab-8413-c92a33270358">&lt;strong&gt;</bpt>Insert<ept id="9db702f1-54ba-44ab-8413-c92a33270358">&lt;/strong&gt;</ept> method, and then starts the operation by calling CloudTable.ExecuteBatchAsync.</target>
        </trans-unit>
        <trans-unit id="f919e96d-7304-4956-8c0e-53256376b2b1" xml:space="preserve">
          <source>To query a table for all of the entities in a partition, use a <bpt id="8096a884-3160-49e7-8b51-daa394132613">&lt;code&gt;</bpt>TableQuery<ept id="8096a884-3160-49e7-8b51-daa394132613">&lt;/code&gt;</ept> object.</source>
          <target state="new">To query a table for all of the entities in a partition, use a <bpt id="8096a884-3160-49e7-8b51-daa394132613">&lt;code&gt;</bpt>TableQuery<ept id="8096a884-3160-49e7-8b51-daa394132613">&lt;/code&gt;</ept> object.</target>
        </trans-unit>
        <trans-unit id="0513cc10-7a33-4f8d-b159-fc8efc7148ee" xml:space="preserve">
          <source>The following code example specifies a filter for entities where 'Smith' is the partition key.</source>
          <target state="new">The following code example specifies a filter for entities where 'Smith' is the partition key.</target>
        </trans-unit>
        <trans-unit id="02b08987-7262-4910-8e7d-463bea427c2f" xml:space="preserve">
          <source>This example prints the fields of each entity in the query results to the console.</source>
          <target state="new">This example prints the fields of each entity in the query results to the console.</target>
        </trans-unit>
        <trans-unit id="70180979-a28c-480e-8d5d-cd5d65cf249f" xml:space="preserve">
          <source>You can write a query to get a single, specific entity.</source>
          <target state="new">You can write a query to get a single, specific entity.</target>
        </trans-unit>
        <trans-unit id="f210bca0-3991-4720-8a82-4d1d30173302" xml:space="preserve">
          <source>The following code uses a <bpt id="cf9c21d7-feb7-4b8b-97ef-f9e70f1f130c">&lt;code&gt;</bpt>TableOperation<ept id="cf9c21d7-feb7-4b8b-97ef-f9e70f1f130c">&lt;/code&gt;</ept> object to specify a customer named 'Ben Smith'.</source>
          <target state="new">The following code uses a <bpt id="cf9c21d7-feb7-4b8b-97ef-f9e70f1f130c">&lt;code&gt;</bpt>TableOperation<ept id="cf9c21d7-feb7-4b8b-97ef-f9e70f1f130c">&lt;/code&gt;</ept> object to specify a customer named 'Ben Smith'.</target>
        </trans-unit>
        <trans-unit id="1d2f9b06-6a26-4606-9384-71e372552afb" xml:space="preserve">
          <source>This method returns just one entity, rather than a collection, and the returned value in <bpt id="7241a1a7-315d-446a-815c-57886dd1af73">&lt;code&gt;</bpt>TableResult.Result<ept id="7241a1a7-315d-446a-815c-57886dd1af73">&lt;/code&gt;</ept> is a <bpt id="53d3bda5-69db-4472-974c-b73255edab09">&lt;code&gt;</bpt>CustomerEntity<ept id="53d3bda5-69db-4472-974c-b73255edab09">&lt;/code&gt;</ept> object.</source>
          <target state="new">This method returns just one entity, rather than a collection, and the returned value in <bpt id="7241a1a7-315d-446a-815c-57886dd1af73">&lt;code&gt;</bpt>TableResult.Result<ept id="7241a1a7-315d-446a-815c-57886dd1af73">&lt;/code&gt;</ept> is a <bpt id="53d3bda5-69db-4472-974c-b73255edab09">&lt;code&gt;</bpt>CustomerEntity<ept id="53d3bda5-69db-4472-974c-b73255edab09">&lt;/code&gt;</ept> object.</target>
        </trans-unit>
        <trans-unit id="24791e94-f003-4050-88ef-a0140a36ac2d" xml:space="preserve">
          <source>Specifying both partition and row keys in a query is the fastest way to retrieve a single entity from the <bpt id="6eda621d-cbe5-46c9-be86-6d54399b31ec">&lt;strong&gt;</bpt>Table<ept id="6eda621d-cbe5-46c9-be86-6d54399b31ec">&lt;/strong&gt;</ept> service.</source>
          <target state="new">Specifying both partition and row keys in a query is the fastest way to retrieve a single entity from the <bpt id="6eda621d-cbe5-46c9-be86-6d54399b31ec">&lt;strong&gt;</bpt>Table<ept id="6eda621d-cbe5-46c9-be86-6d54399b31ec">&lt;/strong&gt;</ept> service.</target>
        </trans-unit>
        <trans-unit id="a5ce98b6-3f9e-4186-b8b8-268cb349b215" xml:space="preserve">
          <source>You can delete an entity after you find it.</source>
          <target state="new">You can delete an entity after you find it.</target>
        </trans-unit>
        <trans-unit id="855a6a95-10d8-40a3-afcf-75c8de1a1a24" xml:space="preserve">
          <source>The following code looks for a customer entity named "Ben Smith" and if it finds it, it deletes it.</source>
          <target state="new">The following code looks for a customer entity named "Ben Smith" and if it finds it, it deletes it.</target>
        </trans-unit>
        <trans-unit id="1ac0fdb8-ee79-49be-925e-d4853078558c" xml:space="preserve">
          <source><bpt id="cec93b0e-b01d-433f-b282-95581335b369">&lt;token href="../../includes/vs-storage-dotnet-blobs-next-steps.md"&gt;</bpt><ept id="cec93b0e-b01d-433f-b282-95581335b369">&lt;/token&gt;</ept></source>
          <target state="new"><bpt id="cec93b0e-b01d-433f-b282-95581335b369">&lt;token href="../../includes/vs-storage-dotnet-blobs-next-steps.md"&gt;</bpt><ept id="cec93b0e-b01d-433f-b282-95581335b369">&lt;/token&gt;</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>