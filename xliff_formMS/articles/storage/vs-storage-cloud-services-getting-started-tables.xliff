<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="09bb33f3-6d77-4d93-acc8-0ff57448b212" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="09bb33f3-6d77-4d93-acc8-0ff57448b212" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="14ff3c97-a605-4edf-a87e-9a412295cb15">
        <trans-unit id="1deb9713-17de-475a-a9c6-2fb8dee8fac9" xml:space="preserve">
          <source>Getting started with Azure table storage and Visual Studio connected services</source>
          <target state="new">Getting started with Azure table storage and Visual Studio connected services</target>
        </trans-unit>
        <trans-unit id="e3d33596-ae32-45a4-8a85-21d8e4ede813" xml:space="preserve">
          <source>How to get started using Azure table storage in a cloud service project in Visual Studio.</source>
          <target state="new">How to get started using Azure table storage in a cloud service project in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="34ec9db8-6c85-485c-b86b-235f44a68e49" xml:space="preserve">
          <source>This article describes how to get started using Azure table storage in Visual Studio after you have created or referenced an Azure storage account in a cloud services project by using the Visual Studio <bpt id="fb25b900-47d1-4760-8837-a6dd1c856e4e">&lt;strong&gt;</bpt>Add Connected Services<ept id="fb25b900-47d1-4760-8837-a6dd1c856e4e">&lt;/strong&gt;</ept> dialog.</source>
          <target state="new">This article describes how to get started using Azure table storage in Visual Studio after you have created or referenced an Azure storage account in a cloud services project by using the Visual Studio <bpt id="fb25b900-47d1-4760-8837-a6dd1c856e4e">&lt;strong&gt;</bpt>Add Connected Services<ept id="fb25b900-47d1-4760-8837-a6dd1c856e4e">&lt;/strong&gt;</ept> dialog.</target>
        </trans-unit>
        <trans-unit id="0d370469-85f1-4af9-b048-e545461df6cc" xml:space="preserve">
          <source>The <bpt id="d2b7b766-5f35-4b1c-be4f-9ee15e0ecba4">&lt;strong&gt;</bpt>Add Connected Services<ept id="d2b7b766-5f35-4b1c-be4f-9ee15e0ecba4">&lt;/strong&gt;</ept> operation installs the appropriate NuGet packages to access Azure storage in your project and adds the connection string for the storage account to your project configuration files.</source>
          <target state="new">The <bpt id="d2b7b766-5f35-4b1c-be4f-9ee15e0ecba4">&lt;strong&gt;</bpt>Add Connected Services<ept id="d2b7b766-5f35-4b1c-be4f-9ee15e0ecba4">&lt;/strong&gt;</ept> operation installs the appropriate NuGet packages to access Azure storage in your project and adds the connection string for the storage account to your project configuration files.</target>
        </trans-unit>
        <trans-unit id="bcb62754-b17d-4d61-9229-ebc66d81c78a" xml:space="preserve">
          <source>The Azure Table storage service enables you to store large amounts of structured data.</source>
          <target state="new">The Azure Table storage service enables you to store large amounts of structured data.</target>
        </trans-unit>
        <trans-unit id="d17e111f-5c6a-4e5f-854f-3158eecb4c97" xml:space="preserve">
          <source>The service is a NoSQL datastore that accepts authenticated calls from inside and outside the Azure cloud.</source>
          <target state="new">The service is a NoSQL datastore that accepts authenticated calls from inside and outside the Azure cloud.</target>
        </trans-unit>
        <trans-unit id="ee5fa66b-322b-4879-981b-ef4703a796ce" xml:space="preserve">
          <source>Azure tables are ideal for storing structured, non-relational data.</source>
          <target state="new">Azure tables are ideal for storing structured, non-relational data.</target>
        </trans-unit>
        <trans-unit id="fc92b3ee-9108-4572-8af6-d533837781eb" xml:space="preserve">
          <source>To get started, you first need to create a table in your storage account.</source>
          <target state="new">To get started, you first need to create a table in your storage account.</target>
        </trans-unit>
        <trans-unit id="bbca2ff9-54d2-42e8-97ae-f37aa215031f" xml:space="preserve">
          <source>We'll show you how to create an Azure table in code, and also how to perform basic table and entity operations, such as adding, modifying, reading and reading table entities.</source>
          <target state="new">We'll show you how to create an Azure table in code, and also how to perform basic table and entity operations, such as adding, modifying, reading and reading table entities.</target>
        </trans-unit>
        <trans-unit id="93ebc96c-57a0-4af6-878a-7af255ded93d" xml:space="preserve">
          <source>The samples are written in C\# code and use the <bpt id="979d950c-f2ad-44ae-b227-1291f89489e4">&lt;linkText&gt;</bpt>Azure Storage client library for .NET<ept id="979d950c-f2ad-44ae-b227-1291f89489e4">&lt;/linkText&gt;</ept><bpt id="979d950c-f2ad-44ae-b227-1291f89489e4">&lt;title&gt;</bpt><ept id="979d950c-f2ad-44ae-b227-1291f89489e4">&lt;/title&gt;</ept>.</source>
          <target state="new">The samples are written in C\# code and use the <bpt id="979d950c-f2ad-44ae-b227-1291f89489e4">&lt;linkText&gt;</bpt>Azure Storage client library for .NET<ept id="979d950c-f2ad-44ae-b227-1291f89489e4">&lt;/linkText&gt;</ept><bpt id="979d950c-f2ad-44ae-b227-1291f89489e4">&lt;title&gt;</bpt><ept id="979d950c-f2ad-44ae-b227-1291f89489e4">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="9983f304-d169-433b-8a99-c8b4c9637e93" xml:space="preserve">
          <source><bpt id="152bad8a-7662-4576-9a1f-7e4356731053">&lt;strong&gt;</bpt>NOTE:<ept id="152bad8a-7662-4576-9a1f-7e4356731053">&lt;/strong&gt;</ept> Some of the APIs that perform calls out to Azure storage are asynchronous.</source>
          <target state="new"><bpt id="152bad8a-7662-4576-9a1f-7e4356731053">&lt;strong&gt;</bpt>NOTE:<ept id="152bad8a-7662-4576-9a1f-7e4356731053">&lt;/strong&gt;</ept> Some of the APIs that perform calls out to Azure storage are asynchronous.</target>
        </trans-unit>
        <trans-unit id="9c255e24-6547-4e3c-bbf4-abfb471c66ea" xml:space="preserve">
          <source>See <bpt id="9f4f9f83-99c4-40ff-ba6d-2048ebf727d7">&lt;linkText&gt;</bpt>Asynchronous programming with Async and Await<ept id="9f4f9f83-99c4-40ff-ba6d-2048ebf727d7">&lt;/linkText&gt;</ept><bpt id="9f4f9f83-99c4-40ff-ba6d-2048ebf727d7">&lt;title&gt;</bpt><ept id="9f4f9f83-99c4-40ff-ba6d-2048ebf727d7">&lt;/title&gt;</ept> for more information.</source>
          <target state="new">See <bpt id="9f4f9f83-99c4-40ff-ba6d-2048ebf727d7">&lt;linkText&gt;</bpt>Asynchronous programming with Async and Await<ept id="9f4f9f83-99c4-40ff-ba6d-2048ebf727d7">&lt;/linkText&gt;</ept><bpt id="9f4f9f83-99c4-40ff-ba6d-2048ebf727d7">&lt;title&gt;</bpt><ept id="9f4f9f83-99c4-40ff-ba6d-2048ebf727d7">&lt;/title&gt;</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="a05a4bf6-ff4d-424b-8d79-d77681db1c0a" xml:space="preserve">
          <source>The code below assumes async programming methods are being used.</source>
          <target state="new">The code below assumes async programming methods are being used.</target>
        </trans-unit>
        <trans-unit id="5fa4756d-9f46-4e5b-a3af-aefa7fe2abfa" xml:space="preserve">
          <source>See <bpt id="258718a9-6a6e-42b1-b6e3-f3f4ec985f6a">&lt;linkText&gt;</bpt>How to use Table storage from .NET<ept id="258718a9-6a6e-42b1-b6e3-f3f4ec985f6a">&lt;/linkText&gt;</ept><bpt id="258718a9-6a6e-42b1-b6e3-f3f4ec985f6a">&lt;title&gt;</bpt><ept id="258718a9-6a6e-42b1-b6e3-f3f4ec985f6a">&lt;/title&gt;</ept> for more information on programmatically manipulating tables.</source>
          <target state="new">See <bpt id="258718a9-6a6e-42b1-b6e3-f3f4ec985f6a">&lt;linkText&gt;</bpt>How to use Table storage from .NET<ept id="258718a9-6a6e-42b1-b6e3-f3f4ec985f6a">&lt;/linkText&gt;</ept><bpt id="258718a9-6a6e-42b1-b6e3-f3f4ec985f6a">&lt;title&gt;</bpt><ept id="258718a9-6a6e-42b1-b6e3-f3f4ec985f6a">&lt;/title&gt;</ept> for more information on programmatically manipulating tables.</target>
        </trans-unit>
        <trans-unit id="16f3b85c-40a0-41f9-b776-01ef49aeb059" xml:space="preserve">
          <source>See <bpt id="d77337f9-ff17-4ad7-8eb5-80aec29e5288">&lt;linkText&gt;</bpt>Storage documentation<ept id="d77337f9-ff17-4ad7-8eb5-80aec29e5288">&lt;/linkText&gt;</ept><bpt id="d77337f9-ff17-4ad7-8eb5-80aec29e5288">&lt;title&gt;</bpt><ept id="d77337f9-ff17-4ad7-8eb5-80aec29e5288">&lt;/title&gt;</ept> for general information about Azure Storage.</source>
          <target state="new">See <bpt id="d77337f9-ff17-4ad7-8eb5-80aec29e5288">&lt;linkText&gt;</bpt>Storage documentation<ept id="d77337f9-ff17-4ad7-8eb5-80aec29e5288">&lt;/linkText&gt;</ept><bpt id="d77337f9-ff17-4ad7-8eb5-80aec29e5288">&lt;title&gt;</bpt><ept id="d77337f9-ff17-4ad7-8eb5-80aec29e5288">&lt;/title&gt;</ept> for general information about Azure Storage.</target>
        </trans-unit>
        <trans-unit id="724d91c2-8c71-46f7-9ff2-565bd03305af" xml:space="preserve">
          <source>See <bpt id="eb882170-e685-4b0a-a5fe-e4679a39a789">&lt;linkText&gt;</bpt>Cloud Services documentation<ept id="eb882170-e685-4b0a-a5fe-e4679a39a789">&lt;/linkText&gt;</ept><bpt id="eb882170-e685-4b0a-a5fe-e4679a39a789">&lt;title&gt;</bpt><ept id="eb882170-e685-4b0a-a5fe-e4679a39a789">&lt;/title&gt;</ept> for general information about Azure cloud services.</source>
          <target state="new">See <bpt id="eb882170-e685-4b0a-a5fe-e4679a39a789">&lt;linkText&gt;</bpt>Cloud Services documentation<ept id="eb882170-e685-4b0a-a5fe-e4679a39a789">&lt;/linkText&gt;</ept><bpt id="eb882170-e685-4b0a-a5fe-e4679a39a789">&lt;title&gt;</bpt><ept id="eb882170-e685-4b0a-a5fe-e4679a39a789">&lt;/title&gt;</ept> for general information about Azure cloud services.</target>
        </trans-unit>
        <trans-unit id="8b25dcb5-bc7b-428e-af05-1753a52b7e84" xml:space="preserve">
          <source>See <bpt id="b33fdf0c-90d3-4d6b-abf4-c0fb3d8b7808">&lt;linkText&gt;</bpt>ASP.NET<ept id="b33fdf0c-90d3-4d6b-abf4-c0fb3d8b7808">&lt;/linkText&gt;</ept><bpt id="b33fdf0c-90d3-4d6b-abf4-c0fb3d8b7808">&lt;title&gt;</bpt><ept id="b33fdf0c-90d3-4d6b-abf4-c0fb3d8b7808">&lt;/title&gt;</ept> for more information about programming ASP.NET applications.</source>
          <target state="new">See <bpt id="b33fdf0c-90d3-4d6b-abf4-c0fb3d8b7808">&lt;linkText&gt;</bpt>ASP.NET<ept id="b33fdf0c-90d3-4d6b-abf4-c0fb3d8b7808">&lt;/linkText&gt;</ept><bpt id="b33fdf0c-90d3-4d6b-abf4-c0fb3d8b7808">&lt;title&gt;</bpt><ept id="b33fdf0c-90d3-4d6b-abf4-c0fb3d8b7808">&lt;/title&gt;</ept> for more information about programming ASP.NET applications.</target>
        </trans-unit>
        <trans-unit id="243478b0-a807-4720-a202-87b1757fbc8c" xml:space="preserve">
          <source>To access tables in cloud service projects, you need to include the following items to any C# source files that access Azure table storage.</source>
          <target state="new">To access tables in cloud service projects, you need to include the following items to any C# source files that access Azure table storage.</target>
        </trans-unit>
        <trans-unit id="dc227235-8509-45e3-a291-d6bee11a14f7" xml:space="preserve">
          <source>Make sure the namespace declarations at the top of the C# file include these <bpt id="8e57ce57-b9fa-4394-ae3a-b7377800b497">&lt;code&gt;</bpt>using<ept id="8e57ce57-b9fa-4394-ae3a-b7377800b497">&lt;/code&gt;</ept> statements.</source>
          <target state="new">Make sure the namespace declarations at the top of the C# file include these <bpt id="8e57ce57-b9fa-4394-ae3a-b7377800b497">&lt;code&gt;</bpt>using<ept id="8e57ce57-b9fa-4394-ae3a-b7377800b497">&lt;/code&gt;</ept> statements.</target>
        </trans-unit>
        <trans-unit id="a1a2a3b8-e4a6-480a-9573-8551e303a6cb" xml:space="preserve">
          <source>Get a <bpt id="4fbc9ff3-9b08-40f8-8d48-201718a2ca02">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="4fbc9ff3-9b08-40f8-8d48-201718a2ca02">&lt;/strong&gt;</ept> object that represents your storage account information.</source>
          <target state="new">Get a <bpt id="4fbc9ff3-9b08-40f8-8d48-201718a2ca02">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="4fbc9ff3-9b08-40f8-8d48-201718a2ca02">&lt;/strong&gt;</ept> object that represents your storage account information.</target>
        </trans-unit>
        <trans-unit id="df2fbc98-c96f-41e4-9158-a65f997d696d" xml:space="preserve">
          <source>Use the following code to get the storage connection string and storage account information from the Azure service configuration.</source>
          <target state="new">Use the following code to get the storage connection string and storage account information from the Azure service configuration.</target>
        </trans-unit>
        <trans-unit id="8aae05b3-0899-4b21-a6c0-4c1a67be6f29" xml:space="preserve">
          <source>Use all of the above code in front of the code in the following samples.</source>
          <target state="new">Use all of the above code in front of the code in the following samples.</target>
        </trans-unit>
        <trans-unit id="4f6f1aad-caba-459a-8d07-6056f4e605f5" xml:space="preserve">
          <source>Get a <bpt id="5fe85d26-6a4f-4451-8d91-86026e6f709a">&lt;strong&gt;</bpt>CloudTableClient<ept id="5fe85d26-6a4f-4451-8d91-86026e6f709a">&lt;/strong&gt;</ept> object to reference the table objects in your storage account.</source>
          <target state="new">Get a <bpt id="5fe85d26-6a4f-4451-8d91-86026e6f709a">&lt;strong&gt;</bpt>CloudTableClient<ept id="5fe85d26-6a4f-4451-8d91-86026e6f709a">&lt;/strong&gt;</ept> object to reference the table objects in your storage account.</target>
        </trans-unit>
        <trans-unit id="298d7d28-a0af-48ce-bf17-4760a6086280" xml:space="preserve">
          <source>Get a <bpt id="9950ede8-9145-4f58-a173-1548a8a115db">&lt;strong&gt;</bpt>CloudTable<ept id="9950ede8-9145-4f58-a173-1548a8a115db">&lt;/strong&gt;</ept> reference object to reference a specific table and entities.</source>
          <target state="new">Get a <bpt id="9950ede8-9145-4f58-a173-1548a8a115db">&lt;strong&gt;</bpt>CloudTable<ept id="9950ede8-9145-4f58-a173-1548a8a115db">&lt;/strong&gt;</ept> reference object to reference a specific table and entities.</target>
        </trans-unit>
        <trans-unit id="26e1415e-d5ec-4126-b40e-aa5bd1ea1dfe" xml:space="preserve">
          <source>To create the Azure table, just add a call to <bpt id="d6bc234b-f3c7-4daf-a1b8-a9f30c32eb3b">&lt;code&gt;</bpt>CreateIfNotExistsAsync<ept id="d6bc234b-f3c7-4daf-a1b8-a9f30c32eb3b">&lt;/code&gt;</ept> to the after you get a <bpt id="3315fa85-776e-448f-bd1f-4a036e5e8667">&lt;code&gt;</bpt>CloudTable<ept id="3315fa85-776e-448f-bd1f-4a036e5e8667">&lt;/code&gt;</ept> object as described in the "Access tables in code" section.</source>
          <target state="new">To create the Azure table, just add a call to <bpt id="d6bc234b-f3c7-4daf-a1b8-a9f30c32eb3b">&lt;code&gt;</bpt>CreateIfNotExistsAsync<ept id="d6bc234b-f3c7-4daf-a1b8-a9f30c32eb3b">&lt;/code&gt;</ept> to the after you get a <bpt id="3315fa85-776e-448f-bd1f-4a036e5e8667">&lt;code&gt;</bpt>CloudTable<ept id="3315fa85-776e-448f-bd1f-4a036e5e8667">&lt;/code&gt;</ept> object as described in the "Access tables in code" section.</target>
        </trans-unit>
        <trans-unit id="a11867a1-554f-4687-98b6-869bb9f3a3de" xml:space="preserve">
          <source>To add an entity to a table, create a class that defines the properties of your entity.</source>
          <target state="new">To add an entity to a table, create a class that defines the properties of your entity.</target>
        </trans-unit>
        <trans-unit id="3035e65e-2d2e-494e-964d-4ce74571b567" xml:space="preserve">
          <source>The following code defines an entity class called <bpt id="b21e1856-1efb-446a-9199-d65b4e398a6f">&lt;strong&gt;</bpt>CustomerEntity<ept id="b21e1856-1efb-446a-9199-d65b4e398a6f">&lt;/strong&gt;</ept> that uses the customer's first name as the row key and the last name as the partition key.</source>
          <target state="new">The following code defines an entity class called <bpt id="b21e1856-1efb-446a-9199-d65b4e398a6f">&lt;strong&gt;</bpt>CustomerEntity<ept id="b21e1856-1efb-446a-9199-d65b4e398a6f">&lt;/strong&gt;</ept> that uses the customer's first name as the row key and the last name as the partition key.</target>
        </trans-unit>
        <trans-unit id="d03a5463-4805-463f-a891-13b636dd9a7d" xml:space="preserve">
          <source>Table operations involving entities are done using the <bpt id="81f088a8-e061-42e4-aeee-2b13e2adc122">&lt;strong&gt;</bpt>CloudTable<ept id="81f088a8-e061-42e4-aeee-2b13e2adc122">&lt;/strong&gt;</ept> object that you created earlier in "Access tables in code."</source>
          <target state="new">Table operations involving entities are done using the <bpt id="81f088a8-e061-42e4-aeee-2b13e2adc122">&lt;strong&gt;</bpt>CloudTable<ept id="81f088a8-e061-42e4-aeee-2b13e2adc122">&lt;/strong&gt;</ept> object that you created earlier in "Access tables in code."</target>
        </trans-unit>
        <trans-unit id="a08c01ed-a337-45f4-a365-352e869689b7" xml:space="preserve">
          <source>The <bpt id="14d09f8f-e1b9-4e60-bd04-a76bb1a64186">&lt;strong&gt;</bpt>TableOperation<ept id="14d09f8f-e1b9-4e60-bd04-a76bb1a64186">&lt;/strong&gt;</ept> object represents the operation to be done.</source>
          <target state="new">The <bpt id="14d09f8f-e1b9-4e60-bd04-a76bb1a64186">&lt;strong&gt;</bpt>TableOperation<ept id="14d09f8f-e1b9-4e60-bd04-a76bb1a64186">&lt;/strong&gt;</ept> object represents the operation to be done.</target>
        </trans-unit>
        <trans-unit id="32103e99-bea1-4308-be76-39b20cfe198f" xml:space="preserve">
          <source>The following code example shows how to create a <bpt id="fc7b61d9-31ac-4573-88d0-1cd06f4b38ea">&lt;strong&gt;</bpt>CloudTable<ept id="fc7b61d9-31ac-4573-88d0-1cd06f4b38ea">&lt;/strong&gt;</ept> object and a <bpt id="f6a5abf8-af66-4183-8d11-be139618cda8">&lt;strong&gt;</bpt>CustomerEntity<ept id="f6a5abf8-af66-4183-8d11-be139618cda8">&lt;/strong&gt;</ept> object.</source>
          <target state="new">The following code example shows how to create a <bpt id="fc7b61d9-31ac-4573-88d0-1cd06f4b38ea">&lt;strong&gt;</bpt>CloudTable<ept id="fc7b61d9-31ac-4573-88d0-1cd06f4b38ea">&lt;/strong&gt;</ept> object and a <bpt id="f6a5abf8-af66-4183-8d11-be139618cda8">&lt;strong&gt;</bpt>CustomerEntity<ept id="f6a5abf8-af66-4183-8d11-be139618cda8">&lt;/strong&gt;</ept> object.</target>
        </trans-unit>
        <trans-unit id="c58bd7ce-d464-40a5-96b1-49c5501b3cfd" xml:space="preserve">
          <source>To prepare the operation, a <bpt id="3afafba5-23f6-4dd5-b20a-6f2a62c97c1d">&lt;strong&gt;</bpt>TableOperation<ept id="3afafba5-23f6-4dd5-b20a-6f2a62c97c1d">&lt;/strong&gt;</ept> is created to insert the customer entity into the table.</source>
          <target state="new">To prepare the operation, a <bpt id="3afafba5-23f6-4dd5-b20a-6f2a62c97c1d">&lt;strong&gt;</bpt>TableOperation<ept id="3afafba5-23f6-4dd5-b20a-6f2a62c97c1d">&lt;/strong&gt;</ept> is created to insert the customer entity into the table.</target>
        </trans-unit>
        <trans-unit id="c6231131-7ed6-4055-8daa-c2560460f11e" xml:space="preserve">
          <source>Finally, the operation is executed by calling <bpt id="e6c8c608-44ac-4249-8f08-510c0b7ab813">&lt;strong&gt;</bpt>CloudTable.ExecuteAsync<ept id="e6c8c608-44ac-4249-8f08-510c0b7ab813">&lt;/strong&gt;</ept>.</source>
          <target state="new">Finally, the operation is executed by calling <bpt id="e6c8c608-44ac-4249-8f08-510c0b7ab813">&lt;strong&gt;</bpt>CloudTable.ExecuteAsync<ept id="e6c8c608-44ac-4249-8f08-510c0b7ab813">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="9a25e01c-13ae-4365-b757-4ef63e85616e" xml:space="preserve">
          <source>You can insert multiple entities into a table in a single write operation.</source>
          <target state="new">You can insert multiple entities into a table in a single write operation.</target>
        </trans-unit>
        <trans-unit id="fe157a9b-a0b1-4319-8685-02d6c856fb48" xml:space="preserve">
          <source>The following code example creates two entity objects ("Jeff Smith" and "Ben Smith"), adds them to a <bpt id="5cda786b-daba-4a53-83f4-80d4940d73b7">&lt;strong&gt;</bpt>TableBatchOperation<ept id="5cda786b-daba-4a53-83f4-80d4940d73b7">&lt;/strong&gt;</ept> object using the Insert method, and then starts the operation by calling <bpt id="8683fd8c-2a57-42bf-9637-402581f1d77e">&lt;strong&gt;</bpt>CloudTable.ExecuteBatchAsync<ept id="8683fd8c-2a57-42bf-9637-402581f1d77e">&lt;/strong&gt;</ept>.</source>
          <target state="new">The following code example creates two entity objects ("Jeff Smith" and "Ben Smith"), adds them to a <bpt id="5cda786b-daba-4a53-83f4-80d4940d73b7">&lt;strong&gt;</bpt>TableBatchOperation<ept id="5cda786b-daba-4a53-83f4-80d4940d73b7">&lt;/strong&gt;</ept> object using the Insert method, and then starts the operation by calling <bpt id="8683fd8c-2a57-42bf-9637-402581f1d77e">&lt;strong&gt;</bpt>CloudTable.ExecuteBatchAsync<ept id="8683fd8c-2a57-42bf-9637-402581f1d77e">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="2f58fd3a-26f0-469e-bd13-d5f66bde0326" xml:space="preserve">
          <source>To add an entity to a table you create a class that defines the properties of your entity.</source>
          <target state="new">To add an entity to a table you create a class that defines the properties of your entity.</target>
        </trans-unit>
        <trans-unit id="165d8d53-7cc0-4af1-8a6e-186534232fb9" xml:space="preserve">
          <source>The following code defines an entity class called <bpt id="e94ffc9c-05fe-4003-80b0-a71d9a74792a">&lt;code&gt;</bpt>CustomerEntity<ept id="e94ffc9c-05fe-4003-80b0-a71d9a74792a">&lt;/code&gt;</ept> that uses the customer's first name as the row key and last name as the partition key.</source>
          <target state="new">The following code defines an entity class called <bpt id="e94ffc9c-05fe-4003-80b0-a71d9a74792a">&lt;code&gt;</bpt>CustomerEntity<ept id="e94ffc9c-05fe-4003-80b0-a71d9a74792a">&lt;/code&gt;</ept> that uses the customer's first name as the row key and last name as the partition key.</target>
        </trans-unit>
        <trans-unit id="b85ac80b-6cc2-42db-9caf-655770571676" xml:space="preserve">
          <source>Table operations involving entities are done using the <bpt id="45c7fca9-59b0-4630-a9aa-7ebdf6ddaee4">&lt;code&gt;</bpt>CloudTable<ept id="45c7fca9-59b0-4630-a9aa-7ebdf6ddaee4">&lt;/code&gt;</ept> object you created earlier in "Access tables in code."</source>
          <target state="new">Table operations involving entities are done using the <bpt id="45c7fca9-59b0-4630-a9aa-7ebdf6ddaee4">&lt;code&gt;</bpt>CloudTable<ept id="45c7fca9-59b0-4630-a9aa-7ebdf6ddaee4">&lt;/code&gt;</ept> object you created earlier in "Access tables in code."</target>
        </trans-unit>
        <trans-unit id="d1e2cac0-ce44-4dfc-b507-cf145258fa32" xml:space="preserve">
          <source>The <bpt id="6d1ae1ef-60e0-4c13-b148-defd1ff7daaa">&lt;code&gt;</bpt>TableOperation<ept id="6d1ae1ef-60e0-4c13-b148-defd1ff7daaa">&lt;/code&gt;</ept> object represents the operation to be done.</source>
          <target state="new">The <bpt id="6d1ae1ef-60e0-4c13-b148-defd1ff7daaa">&lt;code&gt;</bpt>TableOperation<ept id="6d1ae1ef-60e0-4c13-b148-defd1ff7daaa">&lt;/code&gt;</ept> object represents the operation to be done.</target>
        </trans-unit>
        <trans-unit id="9ec2abba-6b3d-4389-b6b3-565a739cbd89" xml:space="preserve">
          <source>The following code example shows how to create a <bpt id="d65e6325-b660-4078-b93c-2ad1b65c2c95">&lt;code&gt;</bpt>CloudTable<ept id="d65e6325-b660-4078-b93c-2ad1b65c2c95">&lt;/code&gt;</ept> object and a <bpt id="a05d8c5d-641b-4f1e-aef4-286cdb8a528c">&lt;code&gt;</bpt>CustomerEntity<ept id="a05d8c5d-641b-4f1e-aef4-286cdb8a528c">&lt;/code&gt;</ept> object.</source>
          <target state="new">The following code example shows how to create a <bpt id="d65e6325-b660-4078-b93c-2ad1b65c2c95">&lt;code&gt;</bpt>CloudTable<ept id="d65e6325-b660-4078-b93c-2ad1b65c2c95">&lt;/code&gt;</ept> object and a <bpt id="a05d8c5d-641b-4f1e-aef4-286cdb8a528c">&lt;code&gt;</bpt>CustomerEntity<ept id="a05d8c5d-641b-4f1e-aef4-286cdb8a528c">&lt;/code&gt;</ept> object.</target>
        </trans-unit>
        <trans-unit id="d132bc21-2112-4fa4-91e7-2df0599d3b93" xml:space="preserve">
          <source>To prepare the operation, a <bpt id="72917c7b-360d-43b8-8389-857181192bf0">&lt;code&gt;</bpt>TableOperation<ept id="72917c7b-360d-43b8-8389-857181192bf0">&lt;/code&gt;</ept> is created to insert the customer entity into the table.</source>
          <target state="new">To prepare the operation, a <bpt id="72917c7b-360d-43b8-8389-857181192bf0">&lt;code&gt;</bpt>TableOperation<ept id="72917c7b-360d-43b8-8389-857181192bf0">&lt;/code&gt;</ept> is created to insert the customer entity into the table.</target>
        </trans-unit>
        <trans-unit id="43204f7e-3cbe-4a43-9bb6-e2e46fbfa763" xml:space="preserve">
          <source>Finally, the operation is executed by calling CloudTable.ExecuteAsync.</source>
          <target state="new">Finally, the operation is executed by calling CloudTable.ExecuteAsync.</target>
        </trans-unit>
        <trans-unit id="3e61d075-5c37-4ec8-8181-4eca00b85d17" xml:space="preserve">
          <source>You can insert multiple entities into a table in a single write operation.</source>
          <target state="new">You can insert multiple entities into a table in a single write operation.</target>
        </trans-unit>
        <trans-unit id="86d16e5a-e1dc-4ece-bb68-ad4c8e62f40d" xml:space="preserve">
          <source>The following code example creates two entity objects ("Jeff Smith" and "Ben Smith"), adds them to a <bpt id="0558d97d-207a-438a-818d-ff716543c547">&lt;code&gt;</bpt>TableBatchOperation<ept id="0558d97d-207a-438a-818d-ff716543c547">&lt;/code&gt;</ept> object using the Insert method, and then starts the operation by calling <bpt id="0d9699a4-c14d-42c1-a4c7-85b8e646f5e1">&lt;code&gt;</bpt>CloudTable.ExecuteBatchAsync<ept id="0d9699a4-c14d-42c1-a4c7-85b8e646f5e1">&lt;/code&gt;</ept>.</source>
          <target state="new">The following code example creates two entity objects ("Jeff Smith" and "Ben Smith"), adds them to a <bpt id="0558d97d-207a-438a-818d-ff716543c547">&lt;code&gt;</bpt>TableBatchOperation<ept id="0558d97d-207a-438a-818d-ff716543c547">&lt;/code&gt;</ept> object using the Insert method, and then starts the operation by calling <bpt id="0d9699a4-c14d-42c1-a4c7-85b8e646f5e1">&lt;code&gt;</bpt>CloudTable.ExecuteBatchAsync<ept id="0d9699a4-c14d-42c1-a4c7-85b8e646f5e1">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="d2c69e87-22d7-4f57-8bc8-955153970a5c" xml:space="preserve">
          <source>To query a table for all of the entities in a partition, use a <bpt id="0c786005-73c3-4f34-bff7-c1515e06b3b4">&lt;code&gt;</bpt>TableQuery<ept id="0c786005-73c3-4f34-bff7-c1515e06b3b4">&lt;/code&gt;</ept> object.</source>
          <target state="new">To query a table for all of the entities in a partition, use a <bpt id="0c786005-73c3-4f34-bff7-c1515e06b3b4">&lt;code&gt;</bpt>TableQuery<ept id="0c786005-73c3-4f34-bff7-c1515e06b3b4">&lt;/code&gt;</ept> object.</target>
        </trans-unit>
        <trans-unit id="9563c3aa-11ef-4861-8f76-565e49c2f48b" xml:space="preserve">
          <source>The following code example specifies a filter for entities where 'Smith' is the partition key.</source>
          <target state="new">The following code example specifies a filter for entities where 'Smith' is the partition key.</target>
        </trans-unit>
        <trans-unit id="16827944-b81b-4043-a182-05e693d97163" xml:space="preserve">
          <source>This example prints the fields of each entity in the query results to the console.</source>
          <target state="new">This example prints the fields of each entity in the query results to the console.</target>
        </trans-unit>
        <trans-unit id="3029e865-c6a9-4cdf-9cc0-c8f70b77302b" xml:space="preserve">
          <source>You can write a query to get a single, specific entity.</source>
          <target state="new">You can write a query to get a single, specific entity.</target>
        </trans-unit>
        <trans-unit id="676e0052-b5dd-4ec0-bc97-dc92d0c47e96" xml:space="preserve">
          <source>The following code uses a <bpt id="43373753-c79f-4791-88ef-e4f8b843b899">&lt;strong&gt;</bpt>TableOperation<ept id="43373753-c79f-4791-88ef-e4f8b843b899">&lt;/strong&gt;</ept> object to specify a customer named 'Ben Smith'.</source>
          <target state="new">The following code uses a <bpt id="43373753-c79f-4791-88ef-e4f8b843b899">&lt;strong&gt;</bpt>TableOperation<ept id="43373753-c79f-4791-88ef-e4f8b843b899">&lt;/strong&gt;</ept> object to specify a customer named 'Ben Smith'.</target>
        </trans-unit>
        <trans-unit id="72440fda-d9c5-45e4-b341-789dbdc02522" xml:space="preserve">
          <source>This method returns just one entity, rather than a collection, and the returned value in <bpt id="83fae670-d1db-445b-bf01-eec779d7ff4e">&lt;strong&gt;</bpt>TableResult.Result<ept id="83fae670-d1db-445b-bf01-eec779d7ff4e">&lt;/strong&gt;</ept> is a <bpt id="d01d3517-d452-4731-b853-19adc1a2462f">&lt;strong&gt;</bpt>CustomerEntity<ept id="d01d3517-d452-4731-b853-19adc1a2462f">&lt;/strong&gt;</ept> object.</source>
          <target state="new">This method returns just one entity, rather than a collection, and the returned value in <bpt id="83fae670-d1db-445b-bf01-eec779d7ff4e">&lt;strong&gt;</bpt>TableResult.Result<ept id="83fae670-d1db-445b-bf01-eec779d7ff4e">&lt;/strong&gt;</ept> is a <bpt id="d01d3517-d452-4731-b853-19adc1a2462f">&lt;strong&gt;</bpt>CustomerEntity<ept id="d01d3517-d452-4731-b853-19adc1a2462f">&lt;/strong&gt;</ept> object.</target>
        </trans-unit>
        <trans-unit id="fa5ffd09-2245-4b3b-b6d5-34aa07192bb1" xml:space="preserve">
          <source>Specifying both partition and row keys in a query is the fastest way to retrieve a single entity from the <bpt id="48161443-865e-44a0-96e1-e6c52df50422">&lt;strong&gt;</bpt>Table<ept id="48161443-865e-44a0-96e1-e6c52df50422">&lt;/strong&gt;</ept> service.</source>
          <target state="new">Specifying both partition and row keys in a query is the fastest way to retrieve a single entity from the <bpt id="48161443-865e-44a0-96e1-e6c52df50422">&lt;strong&gt;</bpt>Table<ept id="48161443-865e-44a0-96e1-e6c52df50422">&lt;/strong&gt;</ept> service.</target>
        </trans-unit>
        <trans-unit id="c3d60c03-76be-4e22-821f-e0a087e06690" xml:space="preserve">
          <source>You can delete an entity after you find it.</source>
          <target state="new">You can delete an entity after you find it.</target>
        </trans-unit>
        <trans-unit id="585f5187-19ee-45b4-8bfb-0ca38699dbac" xml:space="preserve">
          <source>The following code looks for a customer entity named "Ben Smith", and if it finds it, it deletes it.</source>
          <target state="new">The following code looks for a customer entity named "Ben Smith", and if it finds it, it deletes it.</target>
        </trans-unit>
        <trans-unit id="b7924775-f48e-48e0-92cb-97b6bd76cc98" xml:space="preserve">
          <source><bpt id="931658a2-84a8-4a80-8bed-7ee82d925668">&lt;token href="../../includes/vs-storage-dotnet-blobs-next-steps.md"&gt;</bpt><ept id="931658a2-84a8-4a80-8bed-7ee82d925668">&lt;/token&gt;</ept></source>
          <target state="new"><bpt id="931658a2-84a8-4a80-8bed-7ee82d925668">&lt;token href="../../includes/vs-storage-dotnet-blobs-next-steps.md"&gt;</bpt><ept id="931658a2-84a8-4a80-8bed-7ee82d925668">&lt;/token&gt;</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>