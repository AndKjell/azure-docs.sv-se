<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="5731b90a-4d27-497b-b2a2-56ea2cdaee31" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="5731b90a-4d27-497b-b2a2-56ea2cdaee31" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="8a48a969-4ffe-4747-8387-39f004242e80">
        <trans-unit id="eed8901c-d691-458c-b815-a1180c219d2b" xml:space="preserve">
          <source>Service Fabric Reliable Service Architecture</source>
          <target state="new">Service Fabric Reliable Service Architecture</target>
        </trans-unit>
        <trans-unit id="fd4ab697-c611-4690-87a9-51a88e9efbf4" xml:space="preserve">
          <source>High-level overview of the reliable service architecture</source>
          <target state="new">High-level overview of the reliable service architecture</target>
        </trans-unit>
        <trans-unit id="ce726faa-3091-483c-9cda-ef83fc76503d" xml:space="preserve">
          <source>A Service Fabric Reliable Service may be stateful or stateless.</source>
          <target state="new">A Service Fabric Reliable Service may be stateful or stateless.</target>
        </trans-unit>
        <trans-unit id="a4ee2a38-53b0-4d58-af16-addf7adc823a" xml:space="preserve">
          <source>Each type of service runs within a specific architecture described in this article.</source>
          <target state="new">Each type of service runs within a specific architecture described in this article.</target>
        </trans-unit>
        <trans-unit id="471095ae-83d1-41a2-959d-a76e9fcbaa75" xml:space="preserve">
          <source>See <bpt id="f11afa4b-2e96-41ec-bf39-92e360ab547f">&lt;linkText&gt;</bpt>Reliable Service Overview<ept id="f11afa4b-2e96-41ec-bf39-92e360ab547f">&lt;/linkText&gt;</ept><bpt id="f11afa4b-2e96-41ec-bf39-92e360ab547f">&lt;title&gt;</bpt><ept id="f11afa4b-2e96-41ec-bf39-92e360ab547f">&lt;/title&gt;</ept> for more information about the differences between stateful and stateless services.</source>
          <target state="new">See <bpt id="f11afa4b-2e96-41ec-bf39-92e360ab547f">&lt;linkText&gt;</bpt>Reliable Service Overview<ept id="f11afa4b-2e96-41ec-bf39-92e360ab547f">&lt;/linkText&gt;</ept><bpt id="f11afa4b-2e96-41ec-bf39-92e360ab547f">&lt;title&gt;</bpt><ept id="f11afa4b-2e96-41ec-bf39-92e360ab547f">&lt;/title&gt;</ept> for more information about the differences between stateful and stateless services.</target>
        </trans-unit>
        <trans-unit id="5674fb69-0585-4993-a0f5-a2e07203cc0f" xml:space="preserve">
          <source><bpt id="97fed18c-dbe3-4e49-8841-e66635bc6bb3">&lt;linkText&gt;</bpt>Architecture Diagram<ept id="97fed18c-dbe3-4e49-8841-e66635bc6bb3">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="97fed18c-dbe3-4e49-8841-e66635bc6bb3">&lt;linkText&gt;</bpt>Architecture Diagram<ept id="97fed18c-dbe3-4e49-8841-e66635bc6bb3">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9513be1c-7d47-41c4-acac-55b403fc1562" xml:space="preserve">
          <source>A stateful reliable service can derive from either the StatefulService or StatefulServiceBase class.</source>
          <target state="new">A stateful reliable service can derive from either the StatefulService or StatefulServiceBase class.</target>
        </trans-unit>
        <trans-unit id="af586b19-0587-488a-9792-0c0d2f128757" xml:space="preserve">
          <source>Both of these base classes are provided by Service Fabric and
provide various levels of support and abstraction for your stateful service to interface with Service Fabric, and to participate as a service within the Service Fabric Cluster.</source>
          <target state="new">Both of these base classes are provided by Service Fabric and
provide various levels of support and abstraction for your stateful service to interface with Service Fabric, and to participate as a service within the Service Fabric Cluster.</target>
        </trans-unit>
        <trans-unit id="ed869aff-1cd0-4e4a-8ad5-7223f8f79f43" xml:space="preserve">
          <source>StatefulService derives from StatefulServiceBase; StatefulServiceBase offers services more flexibility but requires more understanding of the internals of Service Fabric.</source>
          <target state="new">StatefulService derives from StatefulServiceBase; StatefulServiceBase offers services more flexibility but requires more understanding of the internals of Service Fabric.</target>
        </trans-unit>
        <trans-unit id="c1cc325b-815b-4a04-8e2b-a073b5cf44bc" xml:space="preserve">
          <source>See <bpt id="91b0fe56-6ecf-4acb-8925-472da762713c">&lt;linkText&gt;</bpt>Reliable Service Overview<ept id="91b0fe56-6ecf-4acb-8925-472da762713c">&lt;/linkText&gt;</ept><bpt id="91b0fe56-6ecf-4acb-8925-472da762713c">&lt;title&gt;</bpt><ept id="91b0fe56-6ecf-4acb-8925-472da762713c">&lt;/title&gt;</ept> and <bpt id="03fef9af-df55-4c58-91d7-7f17d3868574">&lt;linkText&gt;</bpt>Reliable Service Advanced Usage<ept id="03fef9af-df55-4c58-91d7-7f17d3868574">&lt;/linkText&gt;</ept><bpt id="03fef9af-df55-4c58-91d7-7f17d3868574">&lt;title&gt;</bpt><ept id="03fef9af-df55-4c58-91d7-7f17d3868574">&lt;/title&gt;</ept> for more information on the specifics
of writing services using StatefulService and StatefulServiceBase classes.</source>
          <target state="new">See <bpt id="91b0fe56-6ecf-4acb-8925-472da762713c">&lt;linkText&gt;</bpt>Reliable Service Overview<ept id="91b0fe56-6ecf-4acb-8925-472da762713c">&lt;/linkText&gt;</ept><bpt id="91b0fe56-6ecf-4acb-8925-472da762713c">&lt;title&gt;</bpt><ept id="91b0fe56-6ecf-4acb-8925-472da762713c">&lt;/title&gt;</ept> and <bpt id="03fef9af-df55-4c58-91d7-7f17d3868574">&lt;linkText&gt;</bpt>Reliable Service Advanced Usage<ept id="03fef9af-df55-4c58-91d7-7f17d3868574">&lt;/linkText&gt;</ept><bpt id="03fef9af-df55-4c58-91d7-7f17d3868574">&lt;title&gt;</bpt><ept id="03fef9af-df55-4c58-91d7-7f17d3868574">&lt;/title&gt;</ept> for more information on the specifics
of writing services using StatefulService and StatefulServiceBase classes.</target>
        </trans-unit>
        <trans-unit id="d6976514-33f6-4754-ae3d-c9c341580e29" xml:space="preserve">
          <source>Both base classes manage the lifetime and role of the service implementation.</source>
          <target state="new">Both base classes manage the lifetime and role of the service implementation.</target>
        </trans-unit>
        <trans-unit id="2613bae0-1989-4800-8c28-26d03218a611" xml:space="preserve">
          <source>The service implementation may override virtual methods of either base class if the service implementation has work to do
at those points in the service implementation lifecycle or if it wants to create a communication listener object.</source>
          <target state="new">The service implementation may override virtual methods of either base class if the service implementation has work to do
at those points in the service implementation lifecycle or if it wants to create a communication listener object.</target>
        </trans-unit>
        <trans-unit id="cc5f7436-6288-4280-8c71-2be2e8a43658" xml:space="preserve">
          <source>Note that although a service implementation
may implement its own communication listener object exposing ICommunicationListener, in the diagram above, the communication listener is
implemented by Service Fabric as the service implementation uses a communication listener implemented by Service Fabric.</source>
          <target state="new">Note that although a service implementation
may implement its own communication listener object exposing ICommunicationListener, in the diagram above, the communication listener is
implemented by Service Fabric as the service implementation uses a communication listener implemented by Service Fabric.</target>
        </trans-unit>
        <trans-unit id="542e750a-9ea5-4c36-a2b7-85a959a83831" xml:space="preserve">
          <source>Your stateful reliable service uses the reliable state manager to take advantage of reliable collections.</source>
          <target state="new">Your stateful reliable service uses the reliable state manager to take advantage of reliable collections.</target>
        </trans-unit>
        <trans-unit id="1a7170ca-1aa6-4920-ad94-18d5dd9b9f83" xml:space="preserve">
          <source>Reliable collections are local data structures that are highly available to your service,
that is, are always available regardless of service failovers.</source>
          <target state="new">Reliable collections are local data structures that are highly available to your service,
that is, are always available regardless of service failovers.</target>
        </trans-unit>
        <trans-unit id="d2503982-078f-40d1-b4c9-1518190c7cc0" xml:space="preserve">
          <source>Each type of reliable collection is implemented by a reliable state provider.</source>
          <target state="new">Each type of reliable collection is implemented by a reliable state provider.</target>
        </trans-unit>
        <trans-unit id="34e46f3f-2f9e-4d9f-bf05-0c95163a3cde" xml:space="preserve">
          <source>For more information on reliable collections see <bpt id="132773fa-d7a3-4ef3-8a88-c9e32186907d">&lt;linkText&gt;</bpt>the Reliable Collections overview<ept id="132773fa-d7a3-4ef3-8a88-c9e32186907d">&lt;/linkText&gt;</ept><bpt id="132773fa-d7a3-4ef3-8a88-c9e32186907d">&lt;title&gt;</bpt><ept id="132773fa-d7a3-4ef3-8a88-c9e32186907d">&lt;/title&gt;</ept></source>
          <target state="new">For more information on reliable collections see <bpt id="132773fa-d7a3-4ef3-8a88-c9e32186907d">&lt;linkText&gt;</bpt>the Reliable Collections overview<ept id="132773fa-d7a3-4ef3-8a88-c9e32186907d">&lt;/linkText&gt;</ept><bpt id="132773fa-d7a3-4ef3-8a88-c9e32186907d">&lt;title&gt;</bpt><ept id="132773fa-d7a3-4ef3-8a88-c9e32186907d">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="076a42b7-5b38-4cfd-b66a-ec437c4c7889" xml:space="preserve">
          <source>The reliable state manager is the object that manages reliable state providers and has functionality to create, delete, enumerate and ensure that the reliable state providers are
persisted and highly available.</source>
          <target state="new">The reliable state manager is the object that manages reliable state providers and has functionality to create, delete, enumerate and ensure that the reliable state providers are
persisted and highly available.</target>
        </trans-unit>
        <trans-unit id="ecef88dc-8821-4800-8360-387515c6dbdf" xml:space="preserve">
          <source>A reliable state provider instance represents an instance of a persisted and highly available data structure such as a
dictionary or a queue.</source>
          <target state="new">A reliable state provider instance represents an instance of a persisted and highly available data structure such as a
dictionary or a queue.</target>
        </trans-unit>
        <trans-unit id="c2612685-8b9c-4560-a4df-73166b744e42" xml:space="preserve">
          <source>Each reliable state provider exposes an interface that is used by your stateful service to interact with the reliable state provider.</source>
          <target state="new">Each reliable state provider exposes an interface that is used by your stateful service to interact with the reliable state provider.</target>
        </trans-unit>
        <trans-unit id="a7019840-50fa-4f69-9022-f7b39c1813a8" xml:space="preserve">
          <source>For example
IReliableDictionary is used to interface with the reliable dictionary while IReliableQueue is used to interface with the reliable queue.</source>
          <target state="new">For example
IReliableDictionary is used to interface with the reliable dictionary while IReliableQueue is used to interface with the reliable queue.</target>
        </trans-unit>
        <trans-unit id="e20bc15c-20e6-4c54-82d3-75fa684d0028" xml:space="preserve">
          <source>All reliable state providers implement the
IReliableState interface.</source>
          <target state="new">All reliable state providers implement the
IReliableState interface.</target>
        </trans-unit>
        <trans-unit id="ac0d71c4-bfc9-4763-a83d-02fc4cccebfd" xml:space="preserve">
          <source>The reliable state manager has an interface named IReliableStateManager which allows access to it by the stateful service implementation.</source>
          <target state="new">The reliable state manager has an interface named IReliableStateManager which allows access to it by the stateful service implementation.</target>
        </trans-unit>
        <trans-unit id="f8eccf65-943e-425b-a06e-4e70c149e653" xml:space="preserve">
          <source>Interfaces to reliable state providers
are returned through IReliableStateManager.</source>
          <target state="new">Interfaces to reliable state providers
are returned through IReliableStateManager.</target>
        </trans-unit>
        <trans-unit id="39b8ad55-2e2a-4047-bc07-9f4b6a30cc02" xml:space="preserve">
          <source>The reliable state manager is architected with a dynamic plug-in architecture so that new types of reliable collections can be plugged in dynamically.</source>
          <target state="new">The reliable state manager is architected with a dynamic plug-in architecture so that new types of reliable collections can be plugged in dynamically.</target>
        </trans-unit>
        <trans-unit id="e13a7dfd-e1d5-4376-bd5e-d445ce9976ac" xml:space="preserve">
          <source>The reliable dictionary and reliable queue are built upon the implementation of a high performance versioned differential store.</source>
          <target state="new">The reliable dictionary and reliable queue are built upon the implementation of a high performance versioned differential store.</target>
        </trans-unit>
        <trans-unit id="c1c813cd-27fa-41e0-b305-1e64472c190c" xml:space="preserve">
          <source>The transactional replicator component is responsible for ensuring that the state of the your service, that is the state within the reliable state manager and the reliable collections,
is consistent across all replicas running your service and that state is also persisted in the log.</source>
          <target state="new">The transactional replicator component is responsible for ensuring that the state of the your service, that is the state within the reliable state manager and the reliable collections,
is consistent across all replicas running your service and that state is also persisted in the log.</target>
        </trans-unit>
        <trans-unit id="4449146b-87f3-45ff-95c4-a26ae80b151a" xml:space="preserve">
          <source>The reliable state manager interfaces with the transactional replicator
via a private mechanism.</source>
          <target state="new">The reliable state manager interfaces with the transactional replicator
via a private mechanism.</target>
        </trans-unit>
        <trans-unit id="aed617c9-20da-4763-9070-99cc46806666" xml:space="preserve">
          <source>The transactional replicator uses a network protocol to communicate state with other replicas of the service instance so that all replicas have up to date state information.</source>
          <target state="new">The transactional replicator uses a network protocol to communicate state with other replicas of the service instance so that all replicas have up to date state information.</target>
        </trans-unit>
        <trans-unit id="c1e5014c-b6e2-4457-986a-49180de2b298" xml:space="preserve">
          <source>The transactional replicator uses a log to persist state information so that the state information survives process or node crashes.</source>
          <target state="new">The transactional replicator uses a log to persist state information so that the state information survives process or node crashes.</target>
        </trans-unit>
        <trans-unit id="9b548956-44ea-47c7-95b2-3325202e16c1" xml:space="preserve">
          <source>The interface to the log is via a private mechanism.</source>
          <target state="new">The interface to the log is via a private mechanism.</target>
        </trans-unit>
        <trans-unit id="a58441ad-89d7-48cf-b4db-0c759fbc8834" xml:space="preserve">
          <source>The log component provides a high performance persistent store that can be optimized for writing to spinning or solid state disks and also optimized for most efficient use of disk space.</source>
          <target state="new">The log component provides a high performance persistent store that can be optimized for writing to spinning or solid state disks and also optimized for most efficient use of disk space.</target>
        </trans-unit>
        <trans-unit id="dad9eaef-3ebe-4d78-93c6-f32af9430adb" xml:space="preserve">
          <source>The design
of the log is for the persistent storage (ie, hard disks)
to be local to the nodes that are running your stateful service to allow for low latencies and high throughput as compared to persistent storage that is not local to the node.</source>
          <target state="new">The design
of the log is for the persistent storage (ie, hard disks)
to be local to the nodes that are running your stateful service to allow for low latencies and high throughput as compared to persistent storage that is not local to the node.</target>
        </trans-unit>
        <trans-unit id="333a2832-4d6b-4f7c-9eb9-35ad1eddb77e" xml:space="preserve">
          <source>The log component uses two types of log files.</source>
          <target state="new">The log component uses two types of log files.</target>
        </trans-unit>
        <trans-unit id="84b1a3ec-e44f-49f1-8547-76fa475e27b8" xml:space="preserve">
          <source>There is a node-wide shared log file which should be on a disk that is only used for that log file.</source>
          <target state="new">There is a node-wide shared log file which should be on a disk that is only used for that log file.</target>
        </trans-unit>
        <trans-unit id="b03803dd-16e3-49bd-a43d-960a86d3742e" xml:space="preserve">
          <source>This file is placed in the Service Fabric node
work directory.</source>
          <target state="new">This file is placed in the Service Fabric node
work directory.</target>
        </trans-unit>
        <trans-unit id="c3f61c66-cc24-4142-8976-d20fe22136ba" xml:space="preserve">
          <source>Each replica for your service also has a dedicated log file and is placed within the service's work directory.</source>
          <target state="new">Each replica for your service also has a dedicated log file and is placed within the service's work directory.</target>
        </trans-unit>
        <trans-unit id="26995c36-4234-46da-ba72-4d34c78f14d6" xml:space="preserve">
          <source>The shared log is a transitional area for the state information
while the dedicated log file is its ultimate destination where it is persisted.</source>
          <target state="new">The shared log is a transitional area for the state information
while the dedicated log file is its ultimate destination where it is persisted.</target>
        </trans-unit>
        <trans-unit id="65024cd1-1945-4f69-87f6-eebf09c311c0" xml:space="preserve">
          <source>In this design the state information is first written to the shared log file and then lazily destaged to the dedicated log
file in the background.</source>
          <target state="new">In this design the state information is first written to the shared log file and then lazily destaged to the dedicated log
file in the background.</target>
        </trans-unit>
        <trans-unit id="37c2be71-03ef-4f62-a7f5-1b6fbc2647d1" xml:space="preserve">
          <source>In this way the write to the shared log would have the lowest latency and highest throughput to allow the service to make progress faster.</source>
          <target state="new">In this way the write to the shared log would have the lowest latency and highest throughput to allow the service to make progress faster.</target>
        </trans-unit>
        <trans-unit id="fc405d03-4915-4130-b4fa-2ca506c0dc7c" xml:space="preserve">
          <source>However when the log component is configured for optimizing for solid state disks using the OptimizeForLocalSSD setting, the state information is written directly to the dedicated
log file and bypasses the shared log file.</source>
          <target state="new">However when the log component is configured for optimizing for solid state disks using the OptimizeForLocalSSD setting, the state information is written directly to the dedicated
log file and bypasses the shared log file.</target>
        </trans-unit>
        <trans-unit id="2da11f6c-b143-429b-a31f-40166410a7fa" xml:space="preserve">
          <source>Since solid state disks do not suffer from delays due to head movement contention, there is no penalty for writing directly to the dedicated log file.</source>
          <target state="new">Since solid state disks do not suffer from delays due to head movement contention, there is no penalty for writing directly to the dedicated log file.</target>
        </trans-unit>
        <trans-unit id="445ec93c-3051-4239-9fbd-45800beee783" xml:space="preserve">
          <source>When the log component is optimized to minimize the use of disk space using the OptimizeLogForLowerDiskUsage, the dedicated log files are created as NTFS sparse files.</source>
          <target state="new">When the log component is optimized to minimize the use of disk space using the OptimizeLogForLowerDiskUsage, the dedicated log files are created as NTFS sparse files.</target>
        </trans-unit>
        <trans-unit id="554e43b8-09f1-415b-ab83-3a63e3b111d0" xml:space="preserve">
          <source>Since log files typically
are not always completely full of state information, the use of sparse files allows overprovisioning of the disk space available to more replicas.</source>
          <target state="new">Since log files typically
are not always completely full of state information, the use of sparse files allows overprovisioning of the disk space available to more replicas.</target>
        </trans-unit>
        <trans-unit id="d8b4282e-1553-44c5-9cb7-77e5f88287ee" xml:space="preserve">
          <source>If not configured in this way the log file space
is preallocated and the log component can write directly to the file with the highest performance.</source>
          <target state="new">If not configured in this way the log file space
is preallocated and the log component can write directly to the file with the highest performance.</target>
        </trans-unit>
        <trans-unit id="4592100f-d922-4d50-a4a3-4e0bdef2127c" xml:space="preserve">
          <source>Aside from a minimal user mode interface to the log, the log is written as a kernel mode driver.</source>
          <target state="new">Aside from a minimal user mode interface to the log, the log is written as a kernel mode driver.</target>
        </trans-unit>
        <trans-unit id="04d626b1-0345-449f-a3bf-61ac170ba763" xml:space="preserve">
          <source>By running as a kernel mode driver the log can provide the highest performance to all services that
use it.</source>
          <target state="new">By running as a kernel mode driver the log can provide the highest performance to all services that
use it.</target>
        </trans-unit>
        <trans-unit id="5a764118-fcda-4e79-a29d-efbb4d604f5a" xml:space="preserve">
          <source>For more information about configuring the log see <bpt id="f7b06420-fd01-49af-a739-b1ee28092ff6">&lt;linkText&gt;</bpt>configuring stateful Reliable Services<ept id="f7b06420-fd01-49af-a739-b1ee28092ff6">&lt;/linkText&gt;</ept><bpt id="f7b06420-fd01-49af-a739-b1ee28092ff6">&lt;title&gt;</bpt><ept id="f7b06420-fd01-49af-a739-b1ee28092ff6">&lt;/title&gt;</ept>.</source>
          <target state="new">For more information about configuring the log see <bpt id="f7b06420-fd01-49af-a739-b1ee28092ff6">&lt;linkText&gt;</bpt>configuring stateful Reliable Services<ept id="f7b06420-fd01-49af-a739-b1ee28092ff6">&lt;/linkText&gt;</ept><bpt id="f7b06420-fd01-49af-a739-b1ee28092ff6">&lt;title&gt;</bpt><ept id="f7b06420-fd01-49af-a739-b1ee28092ff6">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="430c4942-1ada-4ce8-a026-9e10b5f8e835" xml:space="preserve">
          <source><bpt id="91d17bb5-459f-4203-83a0-7cfdd4953bdd">&lt;linkText&gt;</bpt>Architecture Diagram<ept id="91d17bb5-459f-4203-83a0-7cfdd4953bdd">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="91d17bb5-459f-4203-83a0-7cfdd4953bdd">&lt;linkText&gt;</bpt>Architecture Diagram<ept id="91d17bb5-459f-4203-83a0-7cfdd4953bdd">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ed6bfb44-21ed-4db6-839e-121d7c740d62" xml:space="preserve">
          <source>Stateless service implementations derive from the StatelessService or StatelessServiceBase class where the StatelessServiceBase class allows more flexibility than the StatelessService.</source>
          <target state="new">Stateless service implementations derive from the StatelessService or StatelessServiceBase class where the StatelessServiceBase class allows more flexibility than the StatelessService.</target>
        </trans-unit>
        <trans-unit id="ba81ea2d-d433-4224-8dd6-2cc8ea4ba83d" xml:space="preserve">
          <source>Both base classes manages the lifetime and role of the your service.</source>
          <target state="new">Both base classes manages the lifetime and role of the your service.</target>
        </trans-unit>
        <trans-unit id="0737c11d-f019-44f9-86b6-a19fa2824855" xml:space="preserve">
          <source>The service implementation may override virtual methods of either base class if your service has work to do
at those points in the service lifecycle or if it wants to create a communication listener object.</source>
          <target state="new">The service implementation may override virtual methods of either base class if your service has work to do
at those points in the service lifecycle or if it wants to create a communication listener object.</target>
        </trans-unit>
        <trans-unit id="ac59026d-ae5e-46d5-80b8-cb90a6661fd6" xml:space="preserve">
          <source>Note that although your service may implement its own communication
listener object exposing ICommunicationListener, in the diagram above, the communication listener is implemented by Service Fabric as that service implementation uses a
communication listener implemented by Service Fabric.</source>
          <target state="new">Note that although your service may implement its own communication
listener object exposing ICommunicationListener, in the diagram above, the communication listener is implemented by Service Fabric as that service implementation uses a
communication listener implemented by Service Fabric.</target>
        </trans-unit>
        <trans-unit id="8758155a-3ecb-4fef-97a1-c6dc97911cd3" xml:space="preserve">
          <source>See <bpt id="7582cdc0-8174-495f-9b92-ca5049cd7f3c">&lt;linkText&gt;</bpt>Reliable Service Overview<ept id="7582cdc0-8174-495f-9b92-ca5049cd7f3c">&lt;/linkText&gt;</ept><bpt id="7582cdc0-8174-495f-9b92-ca5049cd7f3c">&lt;title&gt;</bpt><ept id="7582cdc0-8174-495f-9b92-ca5049cd7f3c">&lt;/title&gt;</ept> and <bpt id="e7a7888b-60a3-41a4-91f6-7cf5c7a43b2e">&lt;linkText&gt;</bpt>Reliable Service Advanced Usage<ept id="e7a7888b-60a3-41a4-91f6-7cf5c7a43b2e">&lt;/linkText&gt;</ept><bpt id="e7a7888b-60a3-41a4-91f6-7cf5c7a43b2e">&lt;title&gt;</bpt><ept id="e7a7888b-60a3-41a4-91f6-7cf5c7a43b2e">&lt;/title&gt;</ept> for more information on the specifics
of writing services using StatelessService and StatelessServiceBase classes.</source>
          <target state="new">See <bpt id="7582cdc0-8174-495f-9b92-ca5049cd7f3c">&lt;linkText&gt;</bpt>Reliable Service Overview<ept id="7582cdc0-8174-495f-9b92-ca5049cd7f3c">&lt;/linkText&gt;</ept><bpt id="7582cdc0-8174-495f-9b92-ca5049cd7f3c">&lt;title&gt;</bpt><ept id="7582cdc0-8174-495f-9b92-ca5049cd7f3c">&lt;/title&gt;</ept> and <bpt id="e7a7888b-60a3-41a4-91f6-7cf5c7a43b2e">&lt;linkText&gt;</bpt>Reliable Service Advanced Usage<ept id="e7a7888b-60a3-41a4-91f6-7cf5c7a43b2e">&lt;/linkText&gt;</ept><bpt id="e7a7888b-60a3-41a4-91f6-7cf5c7a43b2e">&lt;title&gt;</bpt><ept id="e7a7888b-60a3-41a4-91f6-7cf5c7a43b2e">&lt;/title&gt;</ept> for more information on the specifics
of writing services using StatelessService and StatelessServiceBase classes.</target>
        </trans-unit>
        <trans-unit id="cad29066-5f51-4620-a043-c43f13e5894b" xml:space="preserve">
          <source>For more information about Service Fabric, see:</source>
          <target state="new">For more information about Service Fabric, see:</target>
        </trans-unit>
        <trans-unit id="661f3a40-1d44-486e-9b01-2be97e174541" xml:space="preserve">
          <source><bpt id="e376b28b-6c2c-4535-bd4e-c94bd736e24b">&lt;linkText&gt;</bpt>Reliable Service Overview<ept id="e376b28b-6c2c-4535-bd4e-c94bd736e24b">&lt;/linkText&gt;</ept><bpt id="e376b28b-6c2c-4535-bd4e-c94bd736e24b">&lt;title&gt;</bpt><ept id="e376b28b-6c2c-4535-bd4e-c94bd736e24b">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="e376b28b-6c2c-4535-bd4e-c94bd736e24b">&lt;linkText&gt;</bpt>Reliable Service Overview<ept id="e376b28b-6c2c-4535-bd4e-c94bd736e24b">&lt;/linkText&gt;</ept><bpt id="e376b28b-6c2c-4535-bd4e-c94bd736e24b">&lt;title&gt;</bpt><ept id="e376b28b-6c2c-4535-bd4e-c94bd736e24b">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d6627abc-e903-46b1-8b1b-04754cd034c8" xml:space="preserve">
          <source><bpt id="724df737-48f3-4e5f-9d9d-0b204f3bd1d1">&lt;linkText&gt;</bpt>Quick Start<ept id="724df737-48f3-4e5f-9d9d-0b204f3bd1d1">&lt;/linkText&gt;</ept><bpt id="724df737-48f3-4e5f-9d9d-0b204f3bd1d1">&lt;title&gt;</bpt><ept id="724df737-48f3-4e5f-9d9d-0b204f3bd1d1">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="724df737-48f3-4e5f-9d9d-0b204f3bd1d1">&lt;linkText&gt;</bpt>Quick Start<ept id="724df737-48f3-4e5f-9d9d-0b204f3bd1d1">&lt;/linkText&gt;</ept><bpt id="724df737-48f3-4e5f-9d9d-0b204f3bd1d1">&lt;title&gt;</bpt><ept id="724df737-48f3-4e5f-9d9d-0b204f3bd1d1">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="16ca4426-bc44-47be-81b5-8ab3d6c908aa" xml:space="preserve">
          <source><bpt id="b6782651-15ee-476b-989e-cb323b912731">&lt;linkText&gt;</bpt>Reliable Collections Overview<ept id="b6782651-15ee-476b-989e-cb323b912731">&lt;/linkText&gt;</ept><bpt id="b6782651-15ee-476b-989e-cb323b912731">&lt;title&gt;</bpt><ept id="b6782651-15ee-476b-989e-cb323b912731">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="b6782651-15ee-476b-989e-cb323b912731">&lt;linkText&gt;</bpt>Reliable Collections Overview<ept id="b6782651-15ee-476b-989e-cb323b912731">&lt;/linkText&gt;</ept><bpt id="b6782651-15ee-476b-989e-cb323b912731">&lt;title&gt;</bpt><ept id="b6782651-15ee-476b-989e-cb323b912731">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8b4e861b-baa5-497e-aec6-1610e6edc025" xml:space="preserve">
          <source><bpt id="ddc0b2b3-f883-41ff-b4b7-7a290692965e">&lt;linkText&gt;</bpt>Reliable Service Advanced Usage<ept id="ddc0b2b3-f883-41ff-b4b7-7a290692965e">&lt;/linkText&gt;</ept><bpt id="ddc0b2b3-f883-41ff-b4b7-7a290692965e">&lt;title&gt;</bpt><ept id="ddc0b2b3-f883-41ff-b4b7-7a290692965e">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="ddc0b2b3-f883-41ff-b4b7-7a290692965e">&lt;linkText&gt;</bpt>Reliable Service Advanced Usage<ept id="ddc0b2b3-f883-41ff-b4b7-7a290692965e">&lt;/linkText&gt;</ept><bpt id="ddc0b2b3-f883-41ff-b4b7-7a290692965e">&lt;title&gt;</bpt><ept id="ddc0b2b3-f883-41ff-b4b7-7a290692965e">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d7e4bc15-0678-411c-a6c4-b965301d7378" xml:space="preserve">
          <source><bpt id="4c2e4d8c-a4a9-4bfb-ad20-4b8aa3c08b63">&lt;linkText&gt;</bpt>Reliable Service Configuration<ept id="4c2e4d8c-a4a9-4bfb-ad20-4b8aa3c08b63">&lt;/linkText&gt;</ept><bpt id="4c2e4d8c-a4a9-4bfb-ad20-4b8aa3c08b63">&lt;title&gt;</bpt><ept id="4c2e4d8c-a4a9-4bfb-ad20-4b8aa3c08b63">&lt;/title&gt;</ept>  </source>
          <target state="new"><bpt id="4c2e4d8c-a4a9-4bfb-ad20-4b8aa3c08b63">&lt;linkText&gt;</bpt>Reliable Service Configuration<ept id="4c2e4d8c-a4a9-4bfb-ad20-4b8aa3c08b63">&lt;/linkText&gt;</ept><bpt id="4c2e4d8c-a4a9-4bfb-ad20-4b8aa3c08b63">&lt;title&gt;</bpt><ept id="4c2e4d8c-a4a9-4bfb-ad20-4b8aa3c08b63">&lt;/title&gt;</ept>  </target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>