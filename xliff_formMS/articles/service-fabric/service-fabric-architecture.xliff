<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="2333e31f-7694-4dae-984e-571f3b492fd7" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="2333e31f-7694-4dae-984e-571f3b492fd7" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="8edc0005-980f-427f-b44b-80c5ad3832ef">
        <trans-unit id="73ed3256-c2f5-416c-bff0-b2134e958d14" xml:space="preserve">
          <source>Service Fabric Architecture</source>
          <target state="new">Service Fabric Architecture</target>
        </trans-unit>
        <trans-unit id="117c8fed-3bb9-4fae-8cb8-ded1d9dc90df" xml:space="preserve">
          <source>Service Fabric is a distributed systems platform used to build scalable, reliable, and easily-managed applications for the cloud. This article shows the architecture of Service Fabric.</source>
          <target state="new">Service Fabric is a distributed systems platform used to build scalable, reliable, and easily-managed applications for the cloud. This article shows the architecture of Service Fabric.</target>
        </trans-unit>
        <trans-unit id="4d3cc5c9-6833-46de-ba54-f76c510215dc" xml:space="preserve">
          <source>Service Fabric, like any platform is built through many sub-systems.</source>
          <target state="new">Service Fabric, like any platform is built through many sub-systems.</target>
        </trans-unit>
        <trans-unit id="665d93e5-b1de-401e-a1f9-4351b20690fb" xml:space="preserve">
          <source>These subsystems layered together allow application developers to write service fabric applications that are:</source>
          <target state="new">These subsystems layered together allow application developers to write service fabric applications that are:</target>
        </trans-unit>
        <trans-unit id="c786a574-4600-4178-a494-24a86fd13ee1" xml:space="preserve">
          <source>highly available, </source>
          <target state="new">highly available, </target>
        </trans-unit>
        <trans-unit id="f15f2cb1-08e3-4dd9-aac8-af99efd8dbd8" xml:space="preserve">
          <source>scalable, </source>
          <target state="new">scalable, </target>
        </trans-unit>
        <trans-unit id="a5fd345b-beac-4098-876e-c8d277ef5b6e" xml:space="preserve">
          <source>easily manageable and </source>
          <target state="new">easily manageable and </target>
        </trans-unit>
        <trans-unit id="15e38ccc-46e6-464a-9c3e-3ecf4c410836" xml:space="preserve">
          <source>easy to test.</source>
          <target state="new">easy to test.</target>
        </trans-unit>
        <trans-unit id="e406ff9a-eef7-46aa-b7ef-811bd6bde4ca" xml:space="preserve">
          <source>The following picture shows the architecture and major subsystems of Service Fabric.</source>
          <target state="new">The following picture shows the architecture and major subsystems of Service Fabric.</target>
        </trans-unit>
        <trans-unit id="e6439210-4bf0-40fb-99dc-42d2fbf62b68" xml:space="preserve">
          <source><bpt id="e7005af2-8eac-4008-bf2c-2c925ce4a133">&lt;linkText&gt;</bpt><ept id="e7005af2-8eac-4008-bf2c-2c925ce4a133">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="e7005af2-8eac-4008-bf2c-2c925ce4a133">&lt;linkText&gt;</bpt><ept id="e7005af2-8eac-4008-bf2c-2c925ce4a133">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="07cfad84-30c5-4e76-97b5-835b90856588" xml:space="preserve">
          <source>In a distributed system, the ability to securely communicate between different nodes is crucial.</source>
          <target state="new">In a distributed system, the ability to securely communicate between different nodes is crucial.</target>
        </trans-unit>
        <trans-unit id="2a1e9bdf-8c86-4747-a482-494dd29eebae" xml:space="preserve">
          <source>At the bottom of the stack is transport subsystem, which provides the ability to securely communicate between the different nodes.</source>
          <target state="new">At the bottom of the stack is transport subsystem, which provides the ability to securely communicate between the different nodes.</target>
        </trans-unit>
        <trans-unit id="01393ffc-a92f-42e7-a160-7ebfa4096a6c" xml:space="preserve">
          <source>Above the transport subsystem lies the federation subsystem, which clusters the different nodes into a single entity (named clusters) so that the system can detect failures, perform leader election and route consistenty.</source>
          <target state="new">Above the transport subsystem lies the federation subsystem, which clusters the different nodes into a single entity (named clusters) so that the system can detect failures, perform leader election and route consistenty.</target>
        </trans-unit>
        <trans-unit id="211f952b-555b-4481-bd39-a8564d7e2056" xml:space="preserve">
          <source>The reliability subsystem, layered on top of the federation subsystem is responsible for the high reliability of Service Fabric services through mechanisms such as replication, resource management and failover management.</source>
          <target state="new">The reliability subsystem, layered on top of the federation subsystem is responsible for the high reliability of Service Fabric services through mechanisms such as replication, resource management and failover management.</target>
        </trans-unit>
        <trans-unit id="44b0c9ee-b40c-4161-a6f3-90c239caaadf" xml:space="preserve">
          <source>The federation subsystem also underlies the Hosting subsystem, which manages the lifecycle of an application on a single node.</source>
          <target state="new">The federation subsystem also underlies the Hosting subsystem, which manages the lifecycle of an application on a single node.</target>
        </trans-unit>
        <trans-unit id="2400d7f4-3016-43df-80a6-cb87fd22f4fd" xml:space="preserve">
          <source>The cluster management subsystem manages the multi-machine lifecycle of applications and services.</source>
          <target state="new">The cluster management subsystem manages the multi-machine lifecycle of applications and services.</target>
        </trans-unit>
        <trans-unit id="14842d30-c948-4eeb-ac6c-abad79a92464" xml:space="preserve">
          <source>The testability subsystem allows the application developer to test their services through simulated faults before deploying applications and services to production environments.</source>
          <target state="new">The testability subsystem allows the application developer to test their services through simulated faults before deploying applications and services to production environments.</target>
        </trans-unit>
        <trans-unit id="cbf34c2c-1227-472d-82ca-189716fe3527" xml:space="preserve">
          <source>Service Fabric also provides the ability to resolve service locations through its communication subsystem.</source>
          <target state="new">Service Fabric also provides the ability to resolve service locations through its communication subsystem.</target>
        </trans-unit>
        <trans-unit id="8e8e9ad2-b431-48e9-97ea-0390b5ca5d04" xml:space="preserve">
          <source>The application programming model exposed to developers is layered on top of these susbsystems.</source>
          <target state="new">The application programming model exposed to developers is layered on top of these susbsystems.</target>
        </trans-unit>
        <trans-unit id="322a94eb-0c4b-4f68-a620-1e5e23e30c3d" xml:space="preserve">
          <source>The transport subsystem implements a point-to-point datagram communication channel.</source>
          <target state="new">The transport subsystem implements a point-to-point datagram communication channel.</target>
        </trans-unit>
        <trans-unit id="fa65a379-c9a5-433b-b072-cd7336368201" xml:space="preserve">
          <source>This channel is used for communication within service fabric cluster and communication between service fabric cluster and clients.</source>
          <target state="new">This channel is used for communication within service fabric cluster and communication between service fabric cluster and clients.</target>
        </trans-unit>
        <trans-unit id="4dd07e5b-0379-487e-8236-30fb9829a3ad" xml:space="preserve">
          <source>It supports one-way and request-reply communication pattern, which provides the basis for implementing broadcast and multicast in upper layers.</source>
          <target state="new">It supports one-way and request-reply communication pattern, which provides the basis for implementing broadcast and multicast in upper layers.</target>
        </trans-unit>
        <trans-unit id="69957e71-0441-4182-b2cd-ec8b78935fdd" xml:space="preserve">
          <source>The transport subsystem secures communication by using X509 certificates or Windows security.</source>
          <target state="new">The transport subsystem secures communication by using X509 certificates or Windows security.</target>
        </trans-unit>
        <trans-unit id="420e465d-fefc-4e55-981c-5d49b6a2b8b1" xml:space="preserve">
          <source>This subsystem is used internally by Service Fabric and is not directly accessible to the developers for application programming.</source>
          <target state="new">This subsystem is used internally by Service Fabric and is not directly accessible to the developers for application programming.</target>
        </trans-unit>
        <trans-unit id="ed8e2a90-e843-4964-b611-22e3e7a5fc9e" xml:space="preserve">
          <source>In order to reason about a set of nodes in a distributed system, we need to have a consistent view of the system.</source>
          <target state="new">In order to reason about a set of nodes in a distributed system, we need to have a consistent view of the system.</target>
        </trans-unit>
        <trans-unit id="d1b95df5-6a04-4c47-bc58-ca81273c914b" xml:space="preserve">
          <source>The federation subsystem uses the communication primitives provided by the transport subsystem and stitches the various nodes into a single unified system that it can reason about.</source>
          <target state="new">The federation subsystem uses the communication primitives provided by the transport subsystem and stitches the various nodes into a single unified system that it can reason about.</target>
        </trans-unit>
        <trans-unit id="bea64ab0-4227-4798-9106-d0f67e852ee1" xml:space="preserve">
          <source>It provides the distributed systems primitives needed by the other subsystems - failure detection, leader election, and consistent routing.</source>
          <target state="new">It provides the distributed systems primitives needed by the other subsystems - failure detection, leader election, and consistent routing.</target>
        </trans-unit>
        <trans-unit id="06840285-a8dd-4993-9028-bb3d9ed9d29d" xml:space="preserve">
          <source>The federation subsystem is built on top of Distributed Hash Tables with a 128 bit token space and creates a ring topology over the nodes, with each node in the ring being allocated a subset of the token space for ownership.</source>
          <target state="new">The federation subsystem is built on top of Distributed Hash Tables with a 128 bit token space and creates a ring topology over the nodes, with each node in the ring being allocated a subset of the token space for ownership.</target>
        </trans-unit>
        <trans-unit id="f6ab3db8-e811-450c-8618-444877f965f9" xml:space="preserve">
          <source>For failure detection, the layer uses a leasing mechanism based on heart beating and arbitration.</source>
          <target state="new">For failure detection, the layer uses a leasing mechanism based on heart beating and arbitration.</target>
        </trans-unit>
        <trans-unit id="163ea042-a316-4e14-bc10-fa172099c02b" xml:space="preserve">
          <source>The federation subsystem also guarantees through intricate join and departure protocols that only a single owner of a token exists at any time.</source>
          <target state="new">The federation subsystem also guarantees through intricate join and departure protocols that only a single owner of a token exists at any time.</target>
        </trans-unit>
        <trans-unit id="c6f85e43-d9c0-4430-a80c-acb307f0e27e" xml:space="preserve">
          <source>This allows us to provide leader election and consistent routing guarantees.</source>
          <target state="new">This allows us to provide leader election and consistent routing guarantees.</target>
        </trans-unit>
        <trans-unit id="1358769d-9bcf-4427-9858-2f343bf2a453" xml:space="preserve">
          <source>The reliability subsystem provides the mechanism to make the state of a Service Fabric service highly available through the use of the <bpt id="d90b8834-a09b-4684-a8b4-f4050f2033fe">&lt;em&gt;</bpt>replicator<ept id="d90b8834-a09b-4684-a8b4-f4050f2033fe">&lt;/em&gt;</ept>, the <bpt id="baad1647-2210-4522-bd9a-212694e5e4be">&lt;em&gt;</bpt>failover manager<ept id="baad1647-2210-4522-bd9a-212694e5e4be">&lt;/em&gt;</ept>, and, the <bpt id="03b5ecec-b905-443a-aef7-e32f21d52f1f">&lt;em&gt;</bpt>resource balancer<ept id="03b5ecec-b905-443a-aef7-e32f21d52f1f">&lt;/em&gt;</ept>.</source>
          <target state="new">The reliability subsystem provides the mechanism to make the state of a Service Fabric service highly available through the use of the <bpt id="d90b8834-a09b-4684-a8b4-f4050f2033fe">&lt;em&gt;</bpt>replicator<ept id="d90b8834-a09b-4684-a8b4-f4050f2033fe">&lt;/em&gt;</ept>, the <bpt id="baad1647-2210-4522-bd9a-212694e5e4be">&lt;em&gt;</bpt>failover manager<ept id="baad1647-2210-4522-bd9a-212694e5e4be">&lt;/em&gt;</ept>, and, the <bpt id="03b5ecec-b905-443a-aef7-e32f21d52f1f">&lt;em&gt;</bpt>resource balancer<ept id="03b5ecec-b905-443a-aef7-e32f21d52f1f">&lt;/em&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="0797b538-ef22-4f14-bd79-8a5b5a7dff46" xml:space="preserve">
          <source>The Replicator ensures that state changes in the primary service replica will automatically be replicated to secondary replicas, maintaining consistency between the primary and secondary replicas in a service replica set.</source>
          <target state="new">The Replicator ensures that state changes in the primary service replica will automatically be replicated to secondary replicas, maintaining consistency between the primary and secondary replicas in a service replica set.</target>
        </trans-unit>
        <trans-unit id="2742102a-0549-4ada-ae52-05a1b83bf7ca" xml:space="preserve">
          <source>The Replicator is responsible for quorum management among the replicas in the replica-set.</source>
          <target state="new">The Replicator is responsible for quorum management among the replicas in the replica-set.</target>
        </trans-unit>
        <trans-unit id="f71767a3-cc7b-4f6f-b345-122a14aa11e7" xml:space="preserve">
          <source>It interacts with the failover unit to get the list of operations to replicate and the reconfiguration agent (RA) provides it with the configuration of the replica-set, which indicates which replicas the operations need to be replicated to.</source>
          <target state="new">It interacts with the failover unit to get the list of operations to replicate and the reconfiguration agent (RA) provides it with the configuration of the replica-set, which indicates which replicas the operations need to be replicated to.</target>
        </trans-unit>
        <trans-unit id="70a47144-e720-41e5-ac11-1c0296913197" xml:space="preserve">
          <source>Service Fabric provides a default replicator called Fabric Replicator, which can be used by service developers to make service state highly available and reliable.</source>
          <target state="new">Service Fabric provides a default replicator called Fabric Replicator, which can be used by service developers to make service state highly available and reliable.</target>
        </trans-unit>
        <trans-unit id="98f91997-c233-409c-8ecf-f24c9e623bb5" xml:space="preserve">
          <source>The Failover Manager ensures that when nodes are added to or removed from the cluster, load is automatically redistributed across the available nodes.</source>
          <target state="new">The Failover Manager ensures that when nodes are added to or removed from the cluster, load is automatically redistributed across the available nodes.</target>
        </trans-unit>
        <trans-unit id="46729ebc-b63a-4edb-bdeb-bb986139d33e" xml:space="preserve">
          <source>If a node in the cluster fails, the cluster will automatically reconfigure the service replicas so that there will be no loss of availability.</source>
          <target state="new">If a node in the cluster fails, the cluster will automatically reconfigure the service replicas so that there will be no loss of availability.</target>
        </trans-unit>
        <trans-unit id="a29501c1-3bd7-4a42-bed0-968bc33b2989" xml:space="preserve">
          <source>The Resource Balancer places service replicas across failure domain in the cluster and ensures that all failover units are operational.</source>
          <target state="new">The Resource Balancer places service replicas across failure domain in the cluster and ensures that all failover units are operational.</target>
        </trans-unit>
        <trans-unit id="2f148b5d-dd27-438b-97fb-934be0f26690" xml:space="preserve">
          <source>The Resource Balancer also resource balances services across the underlying shared pool of cluster nodes to achieve optimal uniform load distribution.</source>
          <target state="new">The Resource Balancer also resource balances services across the underlying shared pool of cluster nodes to achieve optimal uniform load distribution.</target>
        </trans-unit>
        <trans-unit id="17fd7b25-0011-4c66-ba37-459ec4c0453d" xml:space="preserve">
          <source>The management subsystem provides end-to-end service and application lifecycle management.</source>
          <target state="new">The management subsystem provides end-to-end service and application lifecycle management.</target>
        </trans-unit>
        <trans-unit id="820b6e39-2bbd-418f-8081-c08456bff45f" xml:space="preserve">
          <source>PowerShell Cmdlets and administrative APIs enable you to provision, deploy, patch, upgrade, and de-provision applications without loss of availability.</source>
          <target state="new">PowerShell Cmdlets and administrative APIs enable you to provision, deploy, patch, upgrade, and de-provision applications without loss of availability.</target>
        </trans-unit>
        <trans-unit id="b51dd699-6cee-446c-a5d5-9c5cc9d7c556" xml:space="preserve">
          <source>The management subsystem performs this through the following services.</source>
          <target state="new">The management subsystem performs this through the following services.</target>
        </trans-unit>
        <trans-unit id="f28b53da-411f-4f63-8841-4e024c46bf97" xml:space="preserve">
          <source>Cluster Manager - This is the primary service that interacts with the Failover Manager from reliability to place the applications with the various nodes based on the service placement constraints.</source>
          <target state="new">Cluster Manager - This is the primary service that interacts with the Failover Manager from reliability to place the applications with the various nodes based on the service placement constraints.</target>
        </trans-unit>
        <trans-unit id="1d03f910-42eb-44b0-9816-85bad3c2eb29" xml:space="preserve">
          <source>The resource balancer in failover ensures that the constraints are never broken.</source>
          <target state="new">The resource balancer in failover ensures that the constraints are never broken.</target>
        </trans-unit>
        <trans-unit id="0ebb5fb1-5d63-4bb4-bf6f-a61757795517" xml:space="preserve">
          <source>The cluster manager manages the life-cycle of the applications from provision to de-provision.</source>
          <target state="new">The cluster manager manages the life-cycle of the applications from provision to de-provision.</target>
        </trans-unit>
        <trans-unit id="1fc3a74b-e20b-4476-8a12-00266ab908d4" xml:space="preserve">
          <source>It integrates with the health manager described in the next step to ensure that application availability is not lost from a semantic health perspective during upgrades.</source>
          <target state="new">It integrates with the health manager described in the next step to ensure that application availability is not lost from a semantic health perspective during upgrades.</target>
        </trans-unit>
        <trans-unit id="bb7bbcbc-2648-4246-801b-475ff959b753" xml:space="preserve">
          <source>Health Manager - This services enables health monitoring of applications and services and cluster entities.</source>
          <target state="new">Health Manager - This services enables health monitoring of applications and services and cluster entities.</target>
        </trans-unit>
        <trans-unit id="aa4b3006-2c23-4714-b5a4-f7b8cb89f2fc" xml:space="preserve">
          <source>Cluster entities (such as nodes, service partitions, and replicas) can report health information, which is then aggregated into the centralized Health Store.</source>
          <target state="new">Cluster entities (such as nodes, service partitions, and replicas) can report health information, which is then aggregated into the centralized Health Store.</target>
        </trans-unit>
        <trans-unit id="cb413789-aed0-40f9-87d2-d87f44964e99" xml:space="preserve">
          <source>This health information provides an overall point-in-time health snapshot of the services and nodes distributed across multiple nodes in the cluster, allowing you to take any needed corrective actions.</source>
          <target state="new">This health information provides an overall point-in-time health snapshot of the services and nodes distributed across multiple nodes in the cluster, allowing you to take any needed corrective actions.</target>
        </trans-unit>
        <trans-unit id="37e54801-54d0-4cbc-ba34-9915e870fb85" xml:space="preserve">
          <source>Health Query APIs enable you to query the health events reported to the Health subsystem.</source>
          <target state="new">Health Query APIs enable you to query the health events reported to the Health subsystem.</target>
        </trans-unit>
        <trans-unit id="84753d27-d57e-4a9b-82ce-72cdcf4c68be" xml:space="preserve">
          <source>The Health Query APIs return the raw health data stored in the Health Store or the aggregated, interpreted health data for a specific cluster entity.</source>
          <target state="new">The Health Query APIs return the raw health data stored in the Health Store or the aggregated, interpreted health data for a specific cluster entity.</target>
        </trans-unit>
        <trans-unit id="6135dba8-66bb-4c23-b1a2-7e533d6077c4" xml:space="preserve">
          <source>Image Store - This service allows for the storage and distribution of the application binaries.</source>
          <target state="new">Image Store - This service allows for the storage and distribution of the application binaries.</target>
        </trans-unit>
        <trans-unit id="963f6caa-3a88-4fe3-ae53-34af1e04dfe2" xml:space="preserve">
          <source>This service provides simple distributed file store where the applications are uploaded to and downloaded from.</source>
          <target state="new">This service provides simple distributed file store where the applications are uploaded to and downloaded from.</target>
        </trans-unit>
        <trans-unit id="54446e00-e63e-4f2c-884a-7b22516c17ad" xml:space="preserve">
          <source>The cluster manager informs the hosting subsystem (running on each node) which services it needs to manage for a particular node.</source>
          <target state="new">The cluster manager informs the hosting subsystem (running on each node) which services it needs to manage for a particular node.</target>
        </trans-unit>
        <trans-unit id="27d8c2b6-eccc-4dba-9f91-8b745537b328" xml:space="preserve">
          <source>The hosting subsytem then manages the lifecycle of the application on that node.</source>
          <target state="new">The hosting subsytem then manages the lifecycle of the application on that node.</target>
        </trans-unit>
        <trans-unit id="bda903fa-02c3-4160-b078-71c21ce129b3" xml:space="preserve">
          <source>It interacts with the reliability and health components to ensure that the replicas are properly placed and are healthy.</source>
          <target state="new">It interacts with the reliability and health components to ensure that the replicas are properly placed and are healthy.</target>
        </trans-unit>
        <trans-unit id="981af49a-f491-46a2-8afe-410b27f116d9" xml:space="preserve">
          <source>This subsystem provides reliable messaging within the cluster and service discovery through the Naming service.</source>
          <target state="new">This subsystem provides reliable messaging within the cluster and service discovery through the Naming service.</target>
        </trans-unit>
        <trans-unit id="8077b5ad-63cb-46e8-aa65-49002dd09057" xml:space="preserve">
          <source>The Naming service resolves service names to a location in the cluster and allows users to manage service names and properties.</source>
          <target state="new">The Naming service resolves service names to a location in the cluster and allows users to manage service names and properties.</target>
        </trans-unit>
        <trans-unit id="efb47171-2a5b-4e73-877d-c40cabc9513b" xml:space="preserve">
          <source>Using the Naming service, clients can securely communicate with any node in the cluster to resolve a service name and retrieve service metadata.</source>
          <target state="new">Using the Naming service, clients can securely communicate with any node in the cluster to resolve a service name and retrieve service metadata.</target>
        </trans-unit>
        <trans-unit id="e44daf62-27c0-4be2-b617-b50b8962760c" xml:space="preserve">
          <source>Using a simple Naming Client API, users of Service Fabric can develop services and clients capable of resolving the current network location despite node dynamism or size of the cluster.</source>
          <target state="new">Using a simple Naming Client API, users of Service Fabric can develop services and clients capable of resolving the current network location despite node dynamism or size of the cluster.</target>
        </trans-unit>
        <trans-unit id="de746512-dd99-4910-bf62-0f40d671a518" xml:space="preserve">
          <source>Testability is a suite of tools specifically designed for testing services built on  Service Fabric.</source>
          <target state="new">Testability is a suite of tools specifically designed for testing services built on  Service Fabric.</target>
        </trans-unit>
        <trans-unit id="74e65fc2-9110-424f-acb7-ee0b8e507ac0" xml:space="preserve">
          <source>The tools allow the developer to easily induce meaningful faults and run test scenarios to exercise and validate the numerous different states and transitions a service will experience throughout its lifetime, all in a controlled and safe manner.</source>
          <target state="new">The tools allow the developer to easily induce meaningful faults and run test scenarios to exercise and validate the numerous different states and transitions a service will experience throughout its lifetime, all in a controlled and safe manner.</target>
        </trans-unit>
        <trans-unit id="26c81dfb-37d6-4b61-a205-ffa8a59bcca7" xml:space="preserve">
          <source>Testability also provides a mechanism to run long running tests that can iterate through various possible failures without losing availability providing users with a Test In Production environment.</source>
          <target state="new">Testability also provides a mechanism to run long running tests that can iterate through various possible failures without losing availability providing users with a Test In Production environment.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>