<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="769c4fc4-9f9f-414b-a817-f6cddb594bd7" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="769c4fc4-9f9f-414b-a817-f6cddb594bd7" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="583c3627-f4c7-446a-a8cd-074c933cf3ac">
        <trans-unit id="77a9f206-4d14-4123-a782-0ba6318fb361" xml:space="preserve">
          <source>Reliable Actors Reentrancy</source>
          <target state="new">Reliable Actors Reentrancy</target>
        </trans-unit>
        <trans-unit id="bb2ce46c-6ec4-455a-8bad-2c1bcc3671db" xml:space="preserve">
          <source>Introduction to Reentrancy for Service Fabric Reliable Actors</source>
          <target state="new">Introduction to Reentrancy for Service Fabric Reliable Actors</target>
        </trans-unit>
        <trans-unit id="40307bb3-48bb-4f8e-ada1-e3514d815c65" xml:space="preserve">
          <source>Fabric Actors, by default, allow logical call context-based reentrancy.</source>
          <target state="new">Fabric Actors, by default, allow logical call context-based reentrancy.</target>
        </trans-unit>
        <trans-unit id="76e5e36b-e354-48bc-a468-6f579f4531ac" xml:space="preserve">
          <source>This allows for actors to be reentrant if they are in the same call context chain.</source>
          <target state="new">This allows for actors to be reentrant if they are in the same call context chain.</target>
        </trans-unit>
        <trans-unit id="975f4e35-78bf-43cd-b66b-c452a8998ba4" xml:space="preserve">
          <source>For example if Actor A sends message to Actor B who sends message to Actor C. As part of the message processing if Actor C calls Actor A, the message is reentrant so will be allowed.</source>
          <target state="new">For example if Actor A sends message to Actor B who sends message to Actor C. As part of the message processing if Actor C calls Actor A, the message is reentrant so will be allowed.</target>
        </trans-unit>
        <trans-unit id="506f462a-df89-49a9-a8bf-f7ab7e323dae" xml:space="preserve">
          <source>Any other messages that are part of different call context will be blocked on Actor A until it completes processing.</source>
          <target state="new">Any other messages that are part of different call context will be blocked on Actor A until it completes processing.</target>
        </trans-unit>
        <trans-unit id="e85b8107-2e16-4020-9562-709a5995b49b" xml:space="preserve">
          <source>Actors that want to disallow logical call context-based reentrancy can disable it by decorating the actor class with <bpt id="f94708f5-edfd-4846-b042-3d7476d0b571">&lt;code&gt;</bpt>ReentrantAttribute(ReentrancyMode.Disallowed)<ept id="f94708f5-edfd-4846-b042-3d7476d0b571">&lt;/code&gt;</ept>.</source>
          <target state="new">Actors that want to disallow logical call context-based reentrancy can disable it by decorating the actor class with <bpt id="f94708f5-edfd-4846-b042-3d7476d0b571">&lt;code&gt;</bpt>ReentrantAttribute(ReentrancyMode.Disallowed)<ept id="f94708f5-edfd-4846-b042-3d7476d0b571">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="38d18a1f-8b20-4efc-95f3-441258845dcc" xml:space="preserve">
          <source>The following code shows actor class that sets the reentrancy mode to <bpt id="f424c79f-2e82-4880-947f-58defef10276">&lt;code&gt;</bpt>ReentrancyMode.Disallowed<ept id="f424c79f-2e82-4880-947f-58defef10276">&lt;/code&gt;</ept>.</source>
          <target state="new">The following code shows actor class that sets the reentrancy mode to <bpt id="f424c79f-2e82-4880-947f-58defef10276">&lt;code&gt;</bpt>ReentrancyMode.Disallowed<ept id="f424c79f-2e82-4880-947f-58defef10276">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="1f6a1287-9871-4c2b-8d7c-680e46a6c2b7" xml:space="preserve">
          <source>In this case if an actor sends a reentrant message to another actor an exception of type <bpt id="66aa1ff5-7c8c-49ef-800b-406e5b0d3ae6">&lt;code&gt;</bpt>FabricException<ept id="66aa1ff5-7c8c-49ef-800b-406e5b0d3ae6">&lt;/code&gt;</ept> will be thrown.</source>
          <target state="new">In this case if an actor sends a reentrant message to another actor an exception of type <bpt id="66aa1ff5-7c8c-49ef-800b-406e5b0d3ae6">&lt;code&gt;</bpt>FabricException<ept id="66aa1ff5-7c8c-49ef-800b-406e5b0d3ae6">&lt;/code&gt;</ept> will be thrown.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>