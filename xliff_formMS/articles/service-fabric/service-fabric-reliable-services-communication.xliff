<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="c43e8f1e-bf51-4b45-a599-84e48b0fe029" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="c43e8f1e-bf51-4b45-a599-84e48b0fe029" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="f40054ec-10a0-4220-bc29-da703e32ee7d">
        <trans-unit id="7c2eb7be-11ab-4d72-9ae9-51b98742d265" xml:space="preserve">
          <source>Service Communication Model Overview</source>
          <target state="new">Service Communication Model Overview</target>
        </trans-unit>
        <trans-unit id="e542cb35-5780-455b-a4a4-e364d43101ca" xml:space="preserve">
          <source>This article describes the basics of Communication model supported by the Reliable Service's api.</source>
          <target state="new">This article describes the basics of Communication model supported by the Reliable Service's api.</target>
        </trans-unit>
        <trans-unit id="e9e79143-3db7-4b00-81c9-21674c53b2ed" xml:space="preserve">
          <source>The Reliable Services programming model allows service authors to specify the communication mechanism they want to use to expose their service endpoints and also provides abstractions which clients can use to discover and communicate with the service endpoint.</source>
          <target state="new">The Reliable Services programming model allows service authors to specify the communication mechanism they want to use to expose their service endpoints and also provides abstractions which clients can use to discover and communicate with the service endpoint.</target>
        </trans-unit>
        <trans-unit id="5638b910-eb11-4b17-a6eb-9f433e970a1a" xml:space="preserve">
          <source>Reliable Services API allows service authors to plugin the communication stack of their choice in the service by implementing the following method in their service,</source>
          <target state="new">Reliable Services API allows service authors to plugin the communication stack of their choice in the service by implementing the following method in their service,</target>
        </trans-unit>
        <trans-unit id="dea7966a-2ccd-4d53-b87c-a73a1baaa674" xml:space="preserve">
          <source>The <bpt id="d3a693ea-19f3-4abb-ac9f-a7535dd95361">&lt;code&gt;</bpt>ICommunicationListener<ept id="d3a693ea-19f3-4abb-ac9f-a7535dd95361">&lt;/code&gt;</ept> interface defines the interface that must be implemented by the communication listener for a service.</source>
          <target state="new">The <bpt id="d3a693ea-19f3-4abb-ac9f-a7535dd95361">&lt;code&gt;</bpt>ICommunicationListener<ept id="d3a693ea-19f3-4abb-ac9f-a7535dd95361">&lt;/code&gt;</ept> interface defines the interface that must be implemented by the communication listener for a service.</target>
        </trans-unit>
        <trans-unit id="9e70640e-a8da-4722-bc4f-e6a9858e1b53" xml:space="preserve">
          <source>The endpoints that are required for the service are described via the <bpt id="e92cd07b-5719-4e97-a6c2-7c92e7a01ee4">&lt;linkText&gt;</bpt>Service manifest<ept id="e92cd07b-5719-4e97-a6c2-7c92e7a01ee4">&lt;/linkText&gt;</ept><bpt id="e92cd07b-5719-4e97-a6c2-7c92e7a01ee4">&lt;title&gt;</bpt><ept id="e92cd07b-5719-4e97-a6c2-7c92e7a01ee4">&lt;/title&gt;</ept> under the Endpoints section.</source>
          <target state="new">The endpoints that are required for the service are described via the <bpt id="e92cd07b-5719-4e97-a6c2-7c92e7a01ee4">&lt;linkText&gt;</bpt>Service manifest<ept id="e92cd07b-5719-4e97-a6c2-7c92e7a01ee4">&lt;/linkText&gt;</ept><bpt id="e92cd07b-5719-4e97-a6c2-7c92e7a01ee4">&lt;title&gt;</bpt><ept id="e92cd07b-5719-4e97-a6c2-7c92e7a01ee4">&lt;/title&gt;</ept> under the Endpoints section.</target>
        </trans-unit>
        <trans-unit id="9538b36e-72a3-4c56-b51d-ba72db2e9ade" xml:space="preserve">
          <source>The communication listener can access the endpoint resources allocated to it from the <bpt id="7268f2fe-c5fa-4832-8f30-3c902b6ff18e">&lt;code&gt;</bpt>CodePackageActivationContext<ept id="7268f2fe-c5fa-4832-8f30-3c902b6ff18e">&lt;/code&gt;</ept> in the <bpt id="b28d9428-fe58-4a0a-b1af-e8ead0651668">&lt;code&gt;</bpt>ServiceInitializationParameters<ept id="b28d9428-fe58-4a0a-b1af-e8ead0651668">&lt;/code&gt;</ept>, and start listening for requests when it is opened.</source>
          <target state="new">The communication listener can access the endpoint resources allocated to it from the <bpt id="7268f2fe-c5fa-4832-8f30-3c902b6ff18e">&lt;code&gt;</bpt>CodePackageActivationContext<ept id="7268f2fe-c5fa-4832-8f30-3c902b6ff18e">&lt;/code&gt;</ept> in the <bpt id="b28d9428-fe58-4a0a-b1af-e8ead0651668">&lt;code&gt;</bpt>ServiceInitializationParameters<ept id="b28d9428-fe58-4a0a-b1af-e8ead0651668">&lt;/code&gt;</ept>, and start listening for requests when it is opened.</target>
        </trans-unit>
        <trans-unit id="ffebf5ea-bd71-4791-9177-f06cfcdebcba" xml:space="preserve">
          <source>The Endpoints resources are common to the entire service package and are allocated by Service Fabric when the service package is activated.</source>
          <target state="new">The Endpoints resources are common to the entire service package and are allocated by Service Fabric when the service package is activated.</target>
        </trans-unit>
        <trans-unit id="04ddd044-3109-4a9c-8c23-caf3217b0d8f" xml:space="preserve">
          <source>So all the replicas hosted in the same ServiceHost share the same port.</source>
          <target state="new">So all the replicas hosted in the same ServiceHost share the same port.</target>
        </trans-unit>
        <trans-unit id="197d5ab9-3d60-4442-955a-31fb000fed6d" xml:space="preserve">
          <source>This means that the communication listener should support port sharing.</source>
          <target state="new">This means that the communication listener should support port sharing.</target>
        </trans-unit>
        <trans-unit id="b75accb9-995e-4065-b00c-38f7377b7331" xml:space="preserve">
          <source>The recommended way of doing this, is for the communication listener to use the partition Id and replica/instance Id when generating the listen address.</source>
          <target state="new">The recommended way of doing this, is for the communication listener to use the partition Id and replica/instance Id when generating the listen address.</target>
        </trans-unit>
        <trans-unit id="172cb5c3-4d62-4d51-be62-34ab6b46c977" xml:space="preserve">
          <source>Reliable Services API provides the following abstractions which make writing clients for communicating with Services easy.</source>
          <target state="new">Reliable Services API provides the following abstractions which make writing clients for communicating with Services easy.</target>
        </trans-unit>
        <trans-unit id="d2d8174c-f3a3-4ece-ac68-699e0628184d" xml:space="preserve">
          <source>ServicePartitionResolver class helps the client to determine the endpoint of a Service Fabric service at runtime.</source>
          <target state="new">ServicePartitionResolver class helps the client to determine the endpoint of a Service Fabric service at runtime.</target>
        </trans-unit>
        <trans-unit id="d2db924f-41a3-451c-8df5-863fb83cd23f" xml:space="preserve">
          <source>The process of determining the endpoint of a service is referred to as Service Endpoint Resolution in Service Fabric terminology.</source>
          <target state="new">The process of determining the endpoint of a service is referred to as Service Endpoint Resolution in Service Fabric terminology.</target>
        </trans-unit>
        <trans-unit id="c25c75aa-4100-4455-b6f6-2eff8a7a87ca" xml:space="preserve">
          <source>FabricClient is the object that is used to communicate to the Service Fabric cluster for various management operations on the Service Fabric cluster.</source>
          <target state="new">FabricClient is the object that is used to communicate to the Service Fabric cluster for various management operations on the Service Fabric cluster.</target>
        </trans-unit>
        <trans-unit id="9e95a8cc-262d-4562-a5cb-749c20656dbc" xml:space="preserve">
          <source>Typically client code need not work with <bpt id="2148ad9a-bfef-4a78-8af1-bae7b1cbed5c">&lt;code&gt;</bpt>ServicePartitionResolver<ept id="2148ad9a-bfef-4a78-8af1-bae7b1cbed5c">&lt;/code&gt;</ept> directly.</source>
          <target state="new">Typically client code need not work with <bpt id="2148ad9a-bfef-4a78-8af1-bae7b1cbed5c">&lt;code&gt;</bpt>ServicePartitionResolver<ept id="2148ad9a-bfef-4a78-8af1-bae7b1cbed5c">&lt;/code&gt;</ept> directly.</target>
        </trans-unit>
        <trans-unit id="7c3e7887-cf54-4859-a0e3-b04b665f489a" xml:space="preserve">
          <source>It is created and passed on to other helper classes in the Reliable Service's API, which internally use the resolver and help the client communicate with the service.</source>
          <target state="new">It is created and passed on to other helper classes in the Reliable Service's API, which internally use the resolver and help the client communicate with the service.</target>
        </trans-unit>
        <trans-unit id="17346e29-b39b-4407-bc76-17a73900fef3" xml:space="preserve">
          <source><bpt id="c56a6e58-9fc6-4003-9361-f226335ce0c2">&lt;code&gt;</bpt>ICommunicationClientFactory<ept id="c56a6e58-9fc6-4003-9361-f226335ce0c2">&lt;/code&gt;</ept> defines the base interface implemented by a communication client factory that produces clients that can talk to a ServiceFabric service. The implementation of the CommunicationClientFactory will depend on the communication stack used by the Service Fabric service to which the client wants to communicate to. Reliable Service's API provides a CommunicationClientFactoryBase&lt;TCommunicationClient&gt; which provides a base implementation of this <bpt id="c9cb6fc2-8e9c-4fdd-b7b1-7c09547fc732">&lt;code&gt;</bpt>ICommunicationClientFactory<ept id="c9cb6fc2-8e9c-4fdd-b7b1-7c09547fc732">&lt;/code&gt;</ept> interface and performs tasks which are common for all the communication stacks.(like using a <bpt id="471d9ee2-d1fb-4f44-bab5-bda4bf59ac46">&lt;code&gt;</bpt>ServicePartitionResolver<ept id="471d9ee2-d1fb-4f44-bab5-bda4bf59ac46">&lt;/code&gt;</ept> to determine the service endpoint). Clients usually implement the abstract CommunicationClientFactoryBase class to handle communication stack specific logic.</source>
          <target state="new"><bpt id="c56a6e58-9fc6-4003-9361-f226335ce0c2">&lt;code&gt;</bpt>ICommunicationClientFactory<ept id="c56a6e58-9fc6-4003-9361-f226335ce0c2">&lt;/code&gt;</ept> defines the base interface implemented by a communication client factory that produces clients that can talk to a ServiceFabric service. The implementation of the CommunicationClientFactory will depend on the communication stack used by the Service Fabric service to which the client wants to communicate to. Reliable Service's API provides a CommunicationClientFactoryBase&lt;TCommunicationClient&gt; which provides a base implementation of this <bpt id="c9cb6fc2-8e9c-4fdd-b7b1-7c09547fc732">&lt;code&gt;</bpt>ICommunicationClientFactory<ept id="c9cb6fc2-8e9c-4fdd-b7b1-7c09547fc732">&lt;/code&gt;</ept> interface and performs tasks which are common for all the communication stacks.(like using a <bpt id="471d9ee2-d1fb-4f44-bab5-bda4bf59ac46">&lt;code&gt;</bpt>ServicePartitionResolver<ept id="471d9ee2-d1fb-4f44-bab5-bda4bf59ac46">&lt;/code&gt;</ept> to determine the service endpoint). Clients usually implement the abstract CommunicationClientFactoryBase class to handle communication stack specific logic.</target>
        </trans-unit>
        <trans-unit id="4da3675f-1ee8-45fe-8d40-03c365c3a253" xml:space="preserve">
          <source><bpt id="44b55843-bec8-4e67-863d-89d7d8f3a6e8">&lt;code&gt;</bpt>ServicePartitionClient<ept id="44b55843-bec8-4e67-863d-89d7d8f3a6e8">&lt;/code&gt;</ept> uses the CommunicationClientFactory(and internally the ServicePartitionResolver) and helps in communicating with the service by handling retries for common communication and Service Fabric Transient exceptions.</source>
          <target state="new"><bpt id="44b55843-bec8-4e67-863d-89d7d8f3a6e8">&lt;code&gt;</bpt>ServicePartitionClient<ept id="44b55843-bec8-4e67-863d-89d7d8f3a6e8">&lt;/code&gt;</ept> uses the CommunicationClientFactory(and internally the ServicePartitionResolver) and helps in communicating with the service by handling retries for common communication and Service Fabric Transient exceptions.</target>
        </trans-unit>
        <trans-unit id="d0d8dc2c-79b6-4edc-abcc-5e4b1ac3eb5a" xml:space="preserve">
          <source>A typical usage pattern would look like this,</source>
          <target state="new">A typical usage pattern would look like this,</target>
        </trans-unit>
        <trans-unit id="a393f6e3-43aa-458a-b778-e5ae8a6c2313" xml:space="preserve">
          <source><bpt id="810e7f0d-2d09-4388-8e04-788f91c73420">&lt;linkText&gt;</bpt>Default communication stack provided by the Reliable Services Framework<ept id="810e7f0d-2d09-4388-8e04-788f91c73420">&lt;/linkText&gt;</ept><bpt id="810e7f0d-2d09-4388-8e04-788f91c73420">&lt;title&gt;</bpt><ept id="810e7f0d-2d09-4388-8e04-788f91c73420">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="810e7f0d-2d09-4388-8e04-788f91c73420">&lt;linkText&gt;</bpt>Default communication stack provided by the Reliable Services Framework<ept id="810e7f0d-2d09-4388-8e04-788f91c73420">&lt;/linkText&gt;</ept><bpt id="810e7f0d-2d09-4388-8e04-788f91c73420">&lt;title&gt;</bpt><ept id="810e7f0d-2d09-4388-8e04-788f91c73420">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="477a607f-bc1c-4ee3-9d69-afaf03b8335b" xml:space="preserve">
          <source><bpt id="d032ef1f-30de-4d9a-8868-463b53053286">&lt;linkText&gt;</bpt>WCF based communication stack provided by the Reliable Services Framework<ept id="d032ef1f-30de-4d9a-8868-463b53053286">&lt;/linkText&gt;</ept><bpt id="d032ef1f-30de-4d9a-8868-463b53053286">&lt;title&gt;</bpt><ept id="d032ef1f-30de-4d9a-8868-463b53053286">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="d032ef1f-30de-4d9a-8868-463b53053286">&lt;linkText&gt;</bpt>WCF based communication stack provided by the Reliable Services Framework<ept id="d032ef1f-30de-4d9a-8868-463b53053286">&lt;/linkText&gt;</ept><bpt id="d032ef1f-30de-4d9a-8868-463b53053286">&lt;title&gt;</bpt><ept id="d032ef1f-30de-4d9a-8868-463b53053286">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9ce03ae2-9c34-4cfb-95d5-c0c94c2bd586" xml:space="preserve">
          <source><bpt id="a83dc690-0461-4e62-9f02-985964213b8e">&lt;linkText&gt;</bpt>Writing a Service using Reliable Services API that uses WebAPI communication stack<ept id="a83dc690-0461-4e62-9f02-985964213b8e">&lt;/linkText&gt;</ept><bpt id="a83dc690-0461-4e62-9f02-985964213b8e">&lt;title&gt;</bpt><ept id="a83dc690-0461-4e62-9f02-985964213b8e">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="a83dc690-0461-4e62-9f02-985964213b8e">&lt;linkText&gt;</bpt>Writing a Service using Reliable Services API that uses WebAPI communication stack<ept id="a83dc690-0461-4e62-9f02-985964213b8e">&lt;/linkText&gt;</ept><bpt id="a83dc690-0461-4e62-9f02-985964213b8e">&lt;title&gt;</bpt><ept id="a83dc690-0461-4e62-9f02-985964213b8e">&lt;/title&gt;</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>