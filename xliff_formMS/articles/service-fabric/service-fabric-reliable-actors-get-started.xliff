<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="ac7431f6-00a5-4564-ac87-c32f7b300720" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="ac7431f6-00a5-4564-ac87-c32f7b300720" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="8d06b930-5b71-405b-9e36-7829de3ef18d">
        <trans-unit id="3e43a632-27b3-4ce7-a3ec-d2c207025348" xml:space="preserve">
          <source>Get Started with Reliable Actors | Microsoft Azure</source>
          <target state="new">Get Started with Reliable Actors | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="cd8e301f-ad35-48ef-b49b-8c7785f7100c" xml:space="preserve">
          <source>This tutorial walks you through the steps of creating, debugging, and deploying a canonical HelloWorld service using Service Fabric Reliable Actors.</source>
          <target state="new">This tutorial walks you through the steps of creating, debugging, and deploying a canonical HelloWorld service using Service Fabric Reliable Actors.</target>
        </trans-unit>
        <trans-unit id="ba28315f-f0df-44e3-9577-4949156b826b" xml:space="preserve">
          <source>This article explains the basics of Service Fabric Reliable Actors and walks you through creating, debugging, and deploying a simple HelloWorld application in Visual Studio.</source>
          <target state="new">This article explains the basics of Service Fabric Reliable Actors and walks you through creating, debugging, and deploying a simple HelloWorld application in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="a6425dbf-c7b5-46d6-b4f2-097a6313209c" xml:space="preserve">
          <source>Before starting, make sure you have the Service Fabric development environment setup on your machine.</source>
          <target state="new">Before starting, make sure you have the Service Fabric development environment setup on your machine.</target>
        </trans-unit>
        <trans-unit id="e27ce953-e17e-477e-b397-5c81dc3c6fbd" xml:space="preserve">
          <source>Detailed instructions on how to setup the development environment can be found <bpt id="4260600b-8341-4009-b26f-635807098c41">&lt;linkText&gt;</bpt>here<ept id="4260600b-8341-4009-b26f-635807098c41">&lt;/linkText&gt;</ept><bpt id="4260600b-8341-4009-b26f-635807098c41">&lt;title&gt;</bpt><ept id="4260600b-8341-4009-b26f-635807098c41">&lt;/title&gt;</ept>.</source>
          <target state="new">Detailed instructions on how to setup the development environment can be found <bpt id="4260600b-8341-4009-b26f-635807098c41">&lt;linkText&gt;</bpt>here<ept id="4260600b-8341-4009-b26f-635807098c41">&lt;/linkText&gt;</ept><bpt id="4260600b-8341-4009-b26f-635807098c41">&lt;title&gt;</bpt><ept id="4260600b-8341-4009-b26f-635807098c41">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="263d90d6-14b6-4173-b93d-ae251d181ae8" xml:space="preserve">
          <source>In order to get started with Reliable Actors you just need to understand 4 basic concepts:</source>
          <target state="new">In order to get started with Reliable Actors you just need to understand 4 basic concepts:</target>
        </trans-unit>
        <trans-unit id="a6543e85-42e7-4321-892e-619c27a986a8" xml:space="preserve">
          <source><bpt id="46446eb4-2978-4f38-b6d3-d179a01f7ab3">&lt;strong&gt;</bpt>Actor Service<ept id="46446eb4-2978-4f38-b6d3-d179a01f7ab3">&lt;/strong&gt;</ept>.</source>
          <target state="new"><bpt id="46446eb4-2978-4f38-b6d3-d179a01f7ab3">&lt;strong&gt;</bpt>Actor Service<ept id="46446eb4-2978-4f38-b6d3-d179a01f7ab3">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="b4602fad-f343-4634-b6ff-5981fab5b0b5" xml:space="preserve">
          <source>Reliable Actors are packaged in Services that can be deployed in the Service Fabric infrastructure.</source>
          <target state="new">Reliable Actors are packaged in Services that can be deployed in the Service Fabric infrastructure.</target>
        </trans-unit>
        <trans-unit id="c7a3b5d6-5241-44a1-82c2-63c4a8c1d4ba" xml:space="preserve">
          <source>A service can host one or more actors.</source>
          <target state="new">A service can host one or more actors.</target>
        </trans-unit>
        <trans-unit id="1783e1f2-8c9a-4984-a313-cbc814012ecd" xml:space="preserve">
          <source>We will go into more details about the trade-offs of one vs. multiple actors per service later.</source>
          <target state="new">We will go into more details about the trade-offs of one vs. multiple actors per service later.</target>
        </trans-unit>
        <trans-unit id="d80306ad-81ea-448c-85fe-d7713bcb89d9" xml:space="preserve">
          <source>For now let's assume we need to implement only one actor.</source>
          <target state="new">For now let's assume we need to implement only one actor.</target>
        </trans-unit>
        <trans-unit id="af024bf4-6f73-48c5-a748-bf5813ec0c11" xml:space="preserve">
          <source><bpt id="0cd43d96-cb1a-404f-926a-0e78d55fbf69">&lt;strong&gt;</bpt>Actor Interface<ept id="0cd43d96-cb1a-404f-926a-0e78d55fbf69">&lt;/strong&gt;</ept>.</source>
          <target state="new"><bpt id="0cd43d96-cb1a-404f-926a-0e78d55fbf69">&lt;strong&gt;</bpt>Actor Interface<ept id="0cd43d96-cb1a-404f-926a-0e78d55fbf69">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="000a5b26-e211-4abb-b017-2e33fe1a73a7" xml:space="preserve">
          <source>The Actor interface is used to define the public interface of an actor.</source>
          <target state="new">The Actor interface is used to define the public interface of an actor.</target>
        </trans-unit>
        <trans-unit id="a68eb156-763b-46e1-823b-13f229c231f4" xml:space="preserve">
          <source>In Actor model terminology it defines the type of messages that the actor is able to understand process.</source>
          <target state="new">In Actor model terminology it defines the type of messages that the actor is able to understand process.</target>
        </trans-unit>
        <trans-unit id="21b149c0-ede9-4232-862f-10661356179c" xml:space="preserve">
          <source>The Actor interface is used by other Actors or client applications to 'send' (asynchronously) messages to the Actor.</source>
          <target state="new">The Actor interface is used by other Actors or client applications to 'send' (asynchronously) messages to the Actor.</target>
        </trans-unit>
        <trans-unit id="a7810fc6-4f58-46bf-ad25-5a1b9e7d03a2" xml:space="preserve">
          <source>Reliable Actors can implement multiple interfaces, as we will see, an HelloWorld Actor can implement the IHelloWorld interface but also an ILogging interface that defines different messages/functionalities.</source>
          <target state="new">Reliable Actors can implement multiple interfaces, as we will see, an HelloWorld Actor can implement the IHelloWorld interface but also an ILogging interface that defines different messages/functionalities.</target>
        </trans-unit>
        <trans-unit id="4f004238-0eb5-4fb2-97e9-c889ae79e9b2" xml:space="preserve">
          <source><bpt id="f0ce6fb4-7000-40d1-a9bc-0c898c39f2ff">&lt;strong&gt;</bpt>Actor Registration<ept id="f0ce6fb4-7000-40d1-a9bc-0c898c39f2ff">&lt;/strong&gt;</ept>.</source>
          <target state="new"><bpt id="f0ce6fb4-7000-40d1-a9bc-0c898c39f2ff">&lt;strong&gt;</bpt>Actor Registration<ept id="f0ce6fb4-7000-40d1-a9bc-0c898c39f2ff">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="9bffa787-f58e-4ca0-80f6-5b59468834d4" xml:space="preserve">
          <source>In the Actor Service, the Actor Type needs to be registered so Service Fabric is aware of the new type and can use it to create new actors.</source>
          <target state="new">In the Actor Service, the Actor Type needs to be registered so Service Fabric is aware of the new type and can use it to create new actors.</target>
        </trans-unit>
        <trans-unit id="56fad7f0-8423-4af2-be6b-c4023d6ff2da" xml:space="preserve">
          <source><bpt id="8a1ca3b7-b6ab-4372-a276-300b1e6194cd">&lt;strong&gt;</bpt>ActorProxy Class<ept id="8a1ca3b7-b6ab-4372-a276-300b1e6194cd">&lt;/strong&gt;</ept>.</source>
          <target state="new"><bpt id="8a1ca3b7-b6ab-4372-a276-300b1e6194cd">&lt;strong&gt;</bpt>ActorProxy Class<ept id="8a1ca3b7-b6ab-4372-a276-300b1e6194cd">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="52e5d5bd-bb6f-46ef-a7a6-6e1c21f2b8c0" xml:space="preserve">
          <source>The ActorProxy class is used to bind to an Actor and invoke the methods exposed through its interfaces.</source>
          <target state="new">The ActorProxy class is used to bind to an Actor and invoke the methods exposed through its interfaces.</target>
        </trans-unit>
        <trans-unit id="9aa4e2d1-90e4-474a-b36c-e395198a65ad" xml:space="preserve">
          <source>The ActorProxy class provides two important functionalities:</source>
          <target state="new">The ActorProxy class provides two important functionalities:</target>
        </trans-unit>
        <trans-unit id="28d21568-bb13-42f2-8aa6-8dd24c401580" xml:space="preserve">
          <source>Name resolution: it is able to locate the Actor in the cluster (find in which node of the cluster it is hosted).</source>
          <target state="new">Name resolution: it is able to locate the Actor in the cluster (find in which node of the cluster it is hosted).</target>
        </trans-unit>
        <trans-unit id="d9910ccb-b01a-448a-a1c6-4740ce2c680e" xml:space="preserve">
          <source>Handle failures: it can re-try method invocations and re-determine the Actor location after, for instance, a failure that requires the actor to be relocated to another node in the cluster.</source>
          <target state="new">Handle failures: it can re-try method invocations and re-determine the Actor location after, for instance, a failure that requires the actor to be relocated to another node in the cluster.</target>
        </trans-unit>
        <trans-unit id="558faaa3-a1af-4520-a7a5-4fd91f3a9198" xml:space="preserve">
          <source>After you install the Service Fabric Tools for Visual Studio, you can create a new project types.</source>
          <target state="new">After you install the Service Fabric Tools for Visual Studio, you can create a new project types.</target>
        </trans-unit>
        <trans-unit id="7d8326e1-5b97-41ca-a5b2-da51357740ce" xml:space="preserve">
          <source>The new project types are under the 'Cloud' category of the New Project Dialog</source>
          <target state="new">The new project types are under the 'Cloud' category of the New Project Dialog</target>
        </trans-unit>
        <trans-unit id="7c756f81-1ddc-45fa-afe6-ad1eb6fc50c4" xml:space="preserve">
          <source><bpt id="aacbb819-17db-43f2-8c3a-44de97eecf8b">&lt;linkText&gt;</bpt>Service Fabric tools for VS - New project<ept id="aacbb819-17db-43f2-8c3a-44de97eecf8b">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="aacbb819-17db-43f2-8c3a-44de97eecf8b">&lt;linkText&gt;</bpt>Service Fabric tools for VS - New project<ept id="aacbb819-17db-43f2-8c3a-44de97eecf8b">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="c084f4c7-fcbb-4643-bed7-13c62f0d1645" xml:space="preserve">
          <source>In the next dialog you can choose the type of project that you want to create.</source>
          <target state="new">In the next dialog you can choose the type of project that you want to create.</target>
        </trans-unit>
        <trans-unit id="a1804d5b-723a-42af-b5ec-c8f55a56da84" xml:space="preserve">
          <source><bpt id="6cbec408-9dc2-4b07-82d1-027e248f6d95">&lt;linkText&gt;</bpt>Service Fabric Project Templates<ept id="6cbec408-9dc2-4b07-82d1-027e248f6d95">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="6cbec408-9dc2-4b07-82d1-027e248f6d95">&lt;linkText&gt;</bpt>Service Fabric Project Templates<ept id="6cbec408-9dc2-4b07-82d1-027e248f6d95">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d603dc82-32d4-4f2b-8581-363d469382d9" xml:space="preserve">
          <source>For the HelloWorld project, let's use the Service Fabric Actor Service.</source>
          <target state="new">For the HelloWorld project, let's use the Service Fabric Actor Service.</target>
        </trans-unit>
        <trans-unit id="bc74bcff-5507-4b3d-9848-dabb2f2bbefe" xml:space="preserve">
          <source>Once the solution is created you should see the following structure:</source>
          <target state="new">Once the solution is created you should see the following structure:</target>
        </trans-unit>
        <trans-unit id="c7afef8f-2bf2-41ab-8a71-ee3c294d71ec" xml:space="preserve">
          <source><bpt id="60576f82-c660-4324-b0b4-6c6bda3885ca">&lt;linkText&gt;</bpt>Service Fabric Project Structure<ept id="60576f82-c660-4324-b0b4-6c6bda3885ca">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="60576f82-c660-4324-b0b4-6c6bda3885ca">&lt;linkText&gt;</bpt>Service Fabric Project Structure<ept id="60576f82-c660-4324-b0b4-6c6bda3885ca">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="936fa1dd-57d2-4493-bf56-973489e467f2" xml:space="preserve">
          <source>A typical Reliable Actors solution is composed of 3 projects:</source>
          <target state="new">A typical Reliable Actors solution is composed of 3 projects:</target>
        </trans-unit>
        <trans-unit id="7c4beca5-385e-4428-bbb1-66b9460cee7c" xml:space="preserve">
          <source>The Application project (HelloWorldApplication).</source>
          <target state="new">The Application project (HelloWorldApplication).</target>
        </trans-unit>
        <trans-unit id="8a0f4efa-621c-46b2-ade0-52530775c8bf" xml:space="preserve">
          <source>This is the project that packages all the services together for deployment.</source>
          <target state="new">This is the project that packages all the services together for deployment.</target>
        </trans-unit>
        <trans-unit id="b63ca6e3-8692-4498-bad6-9ad5ce4d6d65" xml:space="preserve">
          <source>It contains the ApplicationManifest.xml and PowerShell scripts for managing the application.</source>
          <target state="new">It contains the ApplicationManifest.xml and PowerShell scripts for managing the application.</target>
        </trans-unit>
        <trans-unit id="9bb88d94-79f9-4f22-af54-0c2fe81ad775" xml:space="preserve">
          <source>The Interface project (HelloWorld.Interfaces).</source>
          <target state="new">The Interface project (HelloWorld.Interfaces).</target>
        </trans-unit>
        <trans-unit id="ea2f24f2-fdb3-4555-af82-22359c9436cf" xml:space="preserve">
          <source>This is the project that contains the interface definition for the actor.</source>
          <target state="new">This is the project that contains the interface definition for the actor.</target>
        </trans-unit>
        <trans-unit id="64c01edd-eef6-4241-9a5d-8524035eb0b6" xml:space="preserve">
          <source>In the Interfaces project you can define the interfaces that will be used by the actors in the solution.</source>
          <target state="new">In the Interfaces project you can define the interfaces that will be used by the actors in the solution.</target>
        </trans-unit>
        <trans-unit id="46a4a32a-c82f-4c7b-a8ba-55e270a3db35" xml:space="preserve">
          <source>The Service project (HelloWorld).</source>
          <target state="new">The Service project (HelloWorld).</target>
        </trans-unit>
        <trans-unit id="06aaa315-362d-44a7-b0e7-ed2688bc623d" xml:space="preserve">
          <source>This is the project used to define the Service Fabric service that is going to host the actor.</source>
          <target state="new">This is the project used to define the Service Fabric service that is going to host the actor.</target>
        </trans-unit>
        <trans-unit id="6e905b6e-e875-49ba-9c34-5b1357b0377f" xml:space="preserve">
          <source>It contains some boilerplate code that does not need to be edited in most cases (ServiceHost.cs) and the implementation of the Actor.</source>
          <target state="new">It contains some boilerplate code that does not need to be edited in most cases (ServiceHost.cs) and the implementation of the Actor.</target>
        </trans-unit>
        <trans-unit id="8eb36ddd-89d1-44ba-9c15-154d15564439" xml:space="preserve">
          <source>Implementation of the actor involves implementing a class that derives from a base type (Actor) and implements the interface(s) defined in the .Interfaces project.</source>
          <target state="new">Implementation of the actor involves implementing a class that derives from a base type (Actor) and implements the interface(s) defined in the .Interfaces project.</target>
        </trans-unit>
        <trans-unit id="eb35a18f-1c41-4f04-bc38-1150fbf7b8a6" xml:space="preserve">
          <source>The Actor Service project contains the code to create a Service Fabric service, in the service definition, Actor type(s) are registered so they can be used to instantiate new actors.</source>
          <target state="new">The Actor Service project contains the code to create a Service Fabric service, in the service definition, Actor type(s) are registered so they can be used to instantiate new actors.</target>
        </trans-unit>
        <trans-unit id="cdd3798b-0ceb-4474-9cc6-0a557b3c07b6" xml:space="preserve">
          <source>If you start from a new project in Visual Studio and you have only one Actor definition, the registration is included by default in the code that Visual Studio generates.</source>
          <target state="new">If you start from a new project in Visual Studio and you have only one Actor definition, the registration is included by default in the code that Visual Studio generates.</target>
        </trans-unit>
        <trans-unit id="407cd1fe-c195-4e10-b3a7-4bc242b0d781" xml:space="preserve">
          <source>If you define other actors in the service, you need to add the Actor registration using:</source>
          <target state="new">If you define other actors in the service, you need to add the Actor registration using:</target>
        </trans-unit>
        <trans-unit id="bea5eb26-96ec-48b7-9623-a149655c24c1" xml:space="preserve">
          <source>Service Fabric tools for Visual Studio supports debugging on the local machine.</source>
          <target state="new">Service Fabric tools for Visual Studio supports debugging on the local machine.</target>
        </trans-unit>
        <trans-unit id="a9d222b0-e6cd-474b-8440-78222e107b7e" xml:space="preserve">
          <source>You can start a debugging session by hitting F5.</source>
          <target state="new">You can start a debugging session by hitting F5.</target>
        </trans-unit>
        <trans-unit id="38faab49-2070-442c-8fe0-38cfaeda3a81" xml:space="preserve">
          <source>Visual Studio builds (if necessary), packages and deploys the application on the local Service Fabric cluster and attaches the debugger.</source>
          <target state="new">Visual Studio builds (if necessary), packages and deploys the application on the local Service Fabric cluster and attaches the debugger.</target>
        </trans-unit>
        <trans-unit id="d8a700a8-c43d-4706-aa39-7ae28d23d618" xml:space="preserve">
          <source>The experience is similar to debugging an ASP.NET application.</source>
          <target state="new">The experience is similar to debugging an ASP.NET application.</target>
        </trans-unit>
        <trans-unit id="cbf6efc3-96d3-4b4f-8203-9fdfafaa6a50" xml:space="preserve">
          <source>During the deployment process you can see progress in the Output Window</source>
          <target state="new">During the deployment process you can see progress in the Output Window</target>
        </trans-unit>
        <trans-unit id="77efc85b-63ef-4203-a714-a1ba44b93352" xml:space="preserve">
          <source><bpt id="26ec51f0-3bf1-4d1d-a888-4ec2f0e0c9b0">&lt;linkText&gt;</bpt>Service Fabric Debugging output window<ept id="26ec51f0-3bf1-4d1d-a888-4ec2f0e0c9b0">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="26ec51f0-3bf1-4d1d-a888-4ec2f0e0c9b0">&lt;linkText&gt;</bpt>Service Fabric Debugging output window<ept id="26ec51f0-3bf1-4d1d-a888-4ec2f0e0c9b0">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9347243f-b658-4551-9200-8c4c13222072" xml:space="preserve">
          <source><bpt id="334a0c19-0477-46c2-9684-f54f3fc8ad41">&lt;linkText&gt;</bpt>Introduction to Service Fabric Reliable Actors<ept id="334a0c19-0477-46c2-9684-f54f3fc8ad41">&lt;/linkText&gt;</ept><bpt id="334a0c19-0477-46c2-9684-f54f3fc8ad41">&lt;title&gt;</bpt><ept id="334a0c19-0477-46c2-9684-f54f3fc8ad41">&lt;/title&gt;</ept>
<bpt id="2a66e37b-5324-452f-baf3-88e8857f0e3d">&lt;linkText&gt;</bpt>Actors APIs Reference Documentation<ept id="2a66e37b-5324-452f-baf3-88e8857f0e3d">&lt;/linkText&gt;</ept><bpt id="2a66e37b-5324-452f-baf3-88e8857f0e3d">&lt;title&gt;</bpt><ept id="2a66e37b-5324-452f-baf3-88e8857f0e3d">&lt;/title&gt;</ept>
<bpt id="7713b716-5cc8-494b-945f-788ee8d4cf33">&lt;linkText&gt;</bpt>Sample code<ept id="7713b716-5cc8-494b-945f-788ee8d4cf33">&lt;/linkText&gt;</ept><bpt id="7713b716-5cc8-494b-945f-788ee8d4cf33">&lt;title&gt;</bpt><ept id="7713b716-5cc8-494b-945f-788ee8d4cf33">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="334a0c19-0477-46c2-9684-f54f3fc8ad41">&lt;linkText&gt;</bpt>Introduction to Service Fabric Reliable Actors<ept id="334a0c19-0477-46c2-9684-f54f3fc8ad41">&lt;/linkText&gt;</ept><bpt id="334a0c19-0477-46c2-9684-f54f3fc8ad41">&lt;title&gt;</bpt><ept id="334a0c19-0477-46c2-9684-f54f3fc8ad41">&lt;/title&gt;</ept>
<bpt id="2a66e37b-5324-452f-baf3-88e8857f0e3d">&lt;linkText&gt;</bpt>Actors APIs Reference Documentation<ept id="2a66e37b-5324-452f-baf3-88e8857f0e3d">&lt;/linkText&gt;</ept><bpt id="2a66e37b-5324-452f-baf3-88e8857f0e3d">&lt;title&gt;</bpt><ept id="2a66e37b-5324-452f-baf3-88e8857f0e3d">&lt;/title&gt;</ept>
<bpt id="7713b716-5cc8-494b-945f-788ee8d4cf33">&lt;linkText&gt;</bpt>Sample code<ept id="7713b716-5cc8-494b-945f-788ee8d4cf33">&lt;/linkText&gt;</ept><bpt id="7713b716-5cc8-494b-945f-788ee8d4cf33">&lt;title&gt;</bpt><ept id="7713b716-5cc8-494b-945f-788ee8d4cf33">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b88fe75b-f044-4a3d-8d4c-bbe8c8065eb4" xml:space="preserve">
          <source>./media/service-fabric-reliable-actors-get-started/reliable-actors-newproject.PNG</source>
          <target state="new">./media/service-fabric-reliable-actors-get-started/reliable-actors-newproject.PNG</target>
        </trans-unit>
        <trans-unit id="5891cd9f-794b-4e1a-96e4-1fe68b12e10b" xml:space="preserve">
          <source>./media/service-fabric-reliable-actors-get-started/reliable-actors-projectstructure.PNG</source>
          <target state="new">./media/service-fabric-reliable-actors-get-started/reliable-actors-projectstructure.PNG</target>
        </trans-unit>
        <trans-unit id="f0f90b49-cce3-4ef8-96da-0c96363dbb89" xml:space="preserve">
          <source>./media/service-fabric-reliable-actors-get-started/debugging-output.PNG</source>
          <target state="new">./media/service-fabric-reliable-actors-get-started/debugging-output.PNG</target>
        </trans-unit>
        <trans-unit id="d8a22f6f-055b-49a3-8ca9-523b35a1cd82" xml:space="preserve">
          <source>./media/service-fabric-reliable-actors-get-started/vs-context-menu.png</source>
          <target state="new">./media/service-fabric-reliable-actors-get-started/vs-context-menu.png</target>
        </trans-unit>
        <trans-unit id="c4d3488e-a09b-438f-a13e-33e8f556f077" xml:space="preserve">
          <source>./media/service-fabric-reliable-actors-get-started/reliable-actors-newproject1.PNG</source>
          <target state="new">./media/service-fabric-reliable-actors-get-started/reliable-actors-newproject1.PNG</target>
        </trans-unit>
      </group>
      <group id="3163358f-4a7d-46a0-9717-6fe5ddb50bbb" />
    </body>
  </file>
</xliff>