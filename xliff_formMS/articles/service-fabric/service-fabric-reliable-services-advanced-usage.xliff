<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="1b992854-6af5-43f9-b3fe-60695a3766ab" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="1b992854-6af5-43f9-b3fe-60695a3766ab" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="044111cf-dda4-4cc6-9ddf-9da73946df31">
        <trans-unit id="68333de2-a7e3-4550-af44-038c718c4569" xml:space="preserve">
          <source>Advanced Usage of Reliable Services Programming Model</source>
          <target state="new">Advanced Usage of Reliable Services Programming Model</target>
        </trans-unit>
        <trans-unit id="c7120c5c-32e6-4db5-8416-90147b621910" xml:space="preserve">
          <source>Learn about advanced usage of Service Fabric's Reliable Service programming model for added flexibility in your services.</source>
          <target state="new">Learn about advanced usage of Service Fabric's Reliable Service programming model for added flexibility in your services.</target>
        </trans-unit>
        <trans-unit id="d2450265-33e0-4f2a-b8c1-9b151fa2c7c5" xml:space="preserve">
          <source>Service Fabric simplifies writing and managing reliable stateless and stateful services.</source>
          <target state="new">Service Fabric simplifies writing and managing reliable stateless and stateful services.</target>
        </trans-unit>
        <trans-unit id="b5617bfa-eaa4-4589-94c0-bd0171bc42f6" xml:space="preserve">
          <source>This guide will talk about advanced usages of the Reliable Services programming model to gain more control and flexibility over your services.</source>
          <target state="new">This guide will talk about advanced usages of the Reliable Services programming model to gain more control and flexibility over your services.</target>
        </trans-unit>
        <trans-unit id="104ae3f1-0e2c-4a0b-8396-fcf8c3f7a69a" xml:space="preserve">
          <source>Prior to reading this guide, familiarize yourself with <bpt id="e905da45-02fd-4413-88b3-336a07144697">&lt;linkText&gt;</bpt>the Reliable Services programming model<ept id="e905da45-02fd-4413-88b3-336a07144697">&lt;/linkText&gt;</ept><bpt id="e905da45-02fd-4413-88b3-336a07144697">&lt;title&gt;</bpt><ept id="e905da45-02fd-4413-88b3-336a07144697">&lt;/title&gt;</ept>.</source>
          <target state="new">Prior to reading this guide, familiarize yourself with <bpt id="e905da45-02fd-4413-88b3-336a07144697">&lt;linkText&gt;</bpt>the Reliable Services programming model<ept id="e905da45-02fd-4413-88b3-336a07144697">&lt;/linkText&gt;</ept><bpt id="e905da45-02fd-4413-88b3-336a07144697">&lt;title&gt;</bpt><ept id="e905da45-02fd-4413-88b3-336a07144697">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="8b046485-1e12-45b0-80b6-70e0fb2583d3" xml:space="preserve">
          <source>The StatelessService base class provides CreateCommunicationListener() and RunAsync(), which is sufficient for the majority of stateless services.</source>
          <target state="new">The StatelessService base class provides CreateCommunicationListener() and RunAsync(), which is sufficient for the majority of stateless services.</target>
        </trans-unit>
        <trans-unit id="e56ae8be-4c81-4a10-b95d-c7f4af64849c" xml:space="preserve">
          <source>The StatelessServiceBase class underlies StatelessService and exposes additional service lifecycle events.</source>
          <target state="new">The StatelessServiceBase class underlies StatelessService and exposes additional service lifecycle events.</target>
        </trans-unit>
        <trans-unit id="31655144-596e-4562-a2d7-702ee96535e9" xml:space="preserve">
          <source>You can derive from StatelessServiceBase if you need additional control or flexibility.</source>
          <target state="new">You can derive from StatelessServiceBase if you need additional control or flexibility.</target>
        </trans-unit>
        <trans-unit id="7760ff91-37c6-49a1-822d-cf0859417cb6" xml:space="preserve">
          <source>See the developer reference documentation on <bpt id="39e64a37-6445-48ba-a5f7-fff1f702cbd5">&lt;linkText&gt;</bpt>StatelessService<ept id="39e64a37-6445-48ba-a5f7-fff1f702cbd5">&lt;/linkText&gt;</ept><bpt id="39e64a37-6445-48ba-a5f7-fff1f702cbd5">&lt;title&gt;</bpt><ept id="39e64a37-6445-48ba-a5f7-fff1f702cbd5">&lt;/title&gt;</ept> and <bpt id="d6325c8b-4e92-4f7d-8c71-9d7705215157">&lt;linkText&gt;</bpt>StatelessServiceBase<ept id="d6325c8b-4e92-4f7d-8c71-9d7705215157">&lt;/linkText&gt;</ept><bpt id="d6325c8b-4e92-4f7d-8c71-9d7705215157">&lt;title&gt;</bpt><ept id="d6325c8b-4e92-4f7d-8c71-9d7705215157">&lt;/title&gt;</ept> for more information.</source>
          <target state="new">See the developer reference documentation on <bpt id="39e64a37-6445-48ba-a5f7-fff1f702cbd5">&lt;linkText&gt;</bpt>StatelessService<ept id="39e64a37-6445-48ba-a5f7-fff1f702cbd5">&lt;/linkText&gt;</ept><bpt id="39e64a37-6445-48ba-a5f7-fff1f702cbd5">&lt;title&gt;</bpt><ept id="39e64a37-6445-48ba-a5f7-fff1f702cbd5">&lt;/title&gt;</ept> and <bpt id="d6325c8b-4e92-4f7d-8c71-9d7705215157">&lt;linkText&gt;</bpt>StatelessServiceBase<ept id="d6325c8b-4e92-4f7d-8c71-9d7705215157">&lt;/linkText&gt;</ept><bpt id="d6325c8b-4e92-4f7d-8c71-9d7705215157">&lt;title&gt;</bpt><ept id="d6325c8b-4e92-4f7d-8c71-9d7705215157">&lt;/title&gt;</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="cae96aa2-58df-42a3-ae26-0eb2f9c6cf5f" xml:space="preserve">
          <source><bpt id="1575dfc2-2b62-4d14-aa25-145e7d23cc88">&lt;code&gt;</bpt>void OnInitialize(StatelessServiceInitializiationParameters)<ept id="1575dfc2-2b62-4d14-aa25-145e7d23cc88">&lt;/code&gt;</ept>
OnInitialize is the first method called by Service Fabric.</source>
          <target state="new"><bpt id="1575dfc2-2b62-4d14-aa25-145e7d23cc88">&lt;code&gt;</bpt>void OnInitialize(StatelessServiceInitializiationParameters)<ept id="1575dfc2-2b62-4d14-aa25-145e7d23cc88">&lt;/code&gt;</ept>
OnInitialize is the first method called by Service Fabric.</target>
        </trans-unit>
        <trans-unit id="b57daef2-4871-4556-8ca0-73a2d6e2eea1" xml:space="preserve">
          <source>Service initialization information is provided such as the service name, partition id, instance id, and code package information.</source>
          <target state="new">Service initialization information is provided such as the service name, partition id, instance id, and code package information.</target>
        </trans-unit>
        <trans-unit id="82613f29-6ae0-4149-b2dc-9dcf31f86e31" xml:space="preserve">
          <source>No complex processing should be done here.</source>
          <target state="new">No complex processing should be done here.</target>
        </trans-unit>
        <trans-unit id="0c7c9364-0fe9-4f3a-afc5-f400c40c6175" xml:space="preserve">
          <source>Lengthy initialization should be done in OnOpenAsync.</source>
          <target state="new">Lengthy initialization should be done in OnOpenAsync.</target>
        </trans-unit>
        <trans-unit id="67e994e1-1182-4045-9a48-706820ef2771" xml:space="preserve">
          <source><bpt id="9b002c15-8125-485e-a138-d44da898ad75">&lt;code&gt;</bpt>Task OnOpenAsync(IStatelessServicePartition, CancellationToken)<ept id="9b002c15-8125-485e-a138-d44da898ad75">&lt;/code&gt;</ept>
OnOpenAsync is called when the stateless service instance is about to be used.</source>
          <target state="new"><bpt id="9b002c15-8125-485e-a138-d44da898ad75">&lt;code&gt;</bpt>Task OnOpenAsync(IStatelessServicePartition, CancellationToken)<ept id="9b002c15-8125-485e-a138-d44da898ad75">&lt;/code&gt;</ept>
OnOpenAsync is called when the stateless service instance is about to be used.</target>
        </trans-unit>
        <trans-unit id="87de16b5-e58a-4df0-be7b-a1d793e31786" xml:space="preserve">
          <source>Extended service initialization tasks can be started at this time.</source>
          <target state="new">Extended service initialization tasks can be started at this time.</target>
        </trans-unit>
        <trans-unit id="c73c7779-6b3c-44f7-b70e-f8461a7f639b" xml:space="preserve">
          <source><bpt id="1a46f467-875c-43d6-a59c-bfab3c7be38b">&lt;code&gt;</bpt>Task OnCloseAsync(CancellationToken)<ept id="1a46f467-875c-43d6-a59c-bfab3c7be38b">&lt;/code&gt;</ept>
OnCloseAsync is called when the stateless service instance is going to be gracefully shutdown.</source>
          <target state="new"><bpt id="1a46f467-875c-43d6-a59c-bfab3c7be38b">&lt;code&gt;</bpt>Task OnCloseAsync(CancellationToken)<ept id="1a46f467-875c-43d6-a59c-bfab3c7be38b">&lt;/code&gt;</ept>
OnCloseAsync is called when the stateless service instance is going to be gracefully shutdown.</target>
        </trans-unit>
        <trans-unit id="5c4f11d0-a785-4dee-8800-6a70a939a4b9" xml:space="preserve">
          <source>This can occur when the service's code is being upgraded, the service instance is being moved due to load balancing, or a transient fault is detected.</source>
          <target state="new">This can occur when the service's code is being upgraded, the service instance is being moved due to load balancing, or a transient fault is detected.</target>
        </trans-unit>
        <trans-unit id="8a7f85bf-962c-4e97-95e9-f34c29e5a0c8" xml:space="preserve">
          <source>OnCloseAsync can be used to safely close any resources, stop any background processing, finish saving external state, or close down existing connections.</source>
          <target state="new">OnCloseAsync can be used to safely close any resources, stop any background processing, finish saving external state, or close down existing connections.</target>
        </trans-unit>
        <trans-unit id="04f96d24-cbb2-4439-b6d6-1f04b59acf28" xml:space="preserve">
          <source><bpt id="bdb010d8-b017-4413-b06b-5720d90c846e">&lt;code&gt;</bpt>void OnAbort()<ept id="bdb010d8-b017-4413-b06b-5720d90c846e">&lt;/code&gt;</ept>
OnAbort is called when the stateless service instance is being forcefully shutdown.</source>
          <target state="new"><bpt id="bdb010d8-b017-4413-b06b-5720d90c846e">&lt;code&gt;</bpt>void OnAbort()<ept id="bdb010d8-b017-4413-b06b-5720d90c846e">&lt;/code&gt;</ept>
OnAbort is called when the stateless service instance is being forcefully shutdown.</target>
        </trans-unit>
        <trans-unit id="724d87f4-8f4f-4642-b8bd-7360bab3e823" xml:space="preserve">
          <source>This is generally called when a permanent fault is detected on the node, or when Service Fabric cannot reliably manage the service instance's lifecycle due to internal failures.</source>
          <target state="new">This is generally called when a permanent fault is detected on the node, or when Service Fabric cannot reliably manage the service instance's lifecycle due to internal failures.</target>
        </trans-unit>
        <trans-unit id="35f24b53-ae2f-484b-9998-9a4f7cb5ba48" xml:space="preserve">
          <source>The StatefulService base class should be sufficient for most stateful services.</source>
          <target state="new">The StatefulService base class should be sufficient for most stateful services.</target>
        </trans-unit>
        <trans-unit id="f2307f5e-2e1f-4ee2-9152-37611683f784" xml:space="preserve">
          <source>Similar to stateless services, the StatefulServiceBase class underlies StatefulService and exposes additional service lifecycle events.</source>
          <target state="new">Similar to stateless services, the StatefulServiceBase class underlies StatefulService and exposes additional service lifecycle events.</target>
        </trans-unit>
        <trans-unit id="71288acd-c08d-437e-b3be-eb7fb0c47a77" xml:space="preserve">
          <source>Additionally, it allows you to provide a custom reliable state provider and optionally support communication listeners on Secondaries.</source>
          <target state="new">Additionally, it allows you to provide a custom reliable state provider and optionally support communication listeners on Secondaries.</target>
        </trans-unit>
        <trans-unit id="1b5d5fec-5591-4ccd-8f02-2b89795c51b2" xml:space="preserve">
          <source>You can derive from StatefulServiceBase if you need additional control or flexibility.</source>
          <target state="new">You can derive from StatefulServiceBase if you need additional control or flexibility.</target>
        </trans-unit>
        <trans-unit id="8bb2de00-5377-4d4c-8939-f1b22fec6d11" xml:space="preserve">
          <source>See the developer reference documentation on <bpt id="10a0127d-e45e-4eb1-a5c6-ea6d2ab95cb6">&lt;linkText&gt;</bpt>StatefulService<ept id="10a0127d-e45e-4eb1-a5c6-ea6d2ab95cb6">&lt;/linkText&gt;</ept><bpt id="10a0127d-e45e-4eb1-a5c6-ea6d2ab95cb6">&lt;title&gt;</bpt><ept id="10a0127d-e45e-4eb1-a5c6-ea6d2ab95cb6">&lt;/title&gt;</ept> and <bpt id="fd8a8ae8-74cb-4733-9cfa-b8467a5329d2">&lt;linkText&gt;</bpt>StatefulServiceBase<ept id="fd8a8ae8-74cb-4733-9cfa-b8467a5329d2">&lt;/linkText&gt;</ept><bpt id="fd8a8ae8-74cb-4733-9cfa-b8467a5329d2">&lt;title&gt;</bpt><ept id="fd8a8ae8-74cb-4733-9cfa-b8467a5329d2">&lt;/title&gt;</ept> for more information.</source>
          <target state="new">See the developer reference documentation on <bpt id="10a0127d-e45e-4eb1-a5c6-ea6d2ab95cb6">&lt;linkText&gt;</bpt>StatefulService<ept id="10a0127d-e45e-4eb1-a5c6-ea6d2ab95cb6">&lt;/linkText&gt;</ept><bpt id="10a0127d-e45e-4eb1-a5c6-ea6d2ab95cb6">&lt;title&gt;</bpt><ept id="10a0127d-e45e-4eb1-a5c6-ea6d2ab95cb6">&lt;/title&gt;</ept> and <bpt id="fd8a8ae8-74cb-4733-9cfa-b8467a5329d2">&lt;linkText&gt;</bpt>StatefulServiceBase<ept id="fd8a8ae8-74cb-4733-9cfa-b8467a5329d2">&lt;/linkText&gt;</ept><bpt id="fd8a8ae8-74cb-4733-9cfa-b8467a5329d2">&lt;title&gt;</bpt><ept id="fd8a8ae8-74cb-4733-9cfa-b8467a5329d2">&lt;/title&gt;</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="3375e000-84d7-43ce-b66b-a88e81e7c0a0" xml:space="preserve">
          <source><bpt id="71984783-f1ad-4d4a-ae63-c8b5dfa43108">&lt;code&gt;</bpt>Task OnChangeRoleAsync(ReplicaRole, CancellationToken)<ept id="71984783-f1ad-4d4a-ae63-c8b5dfa43108">&lt;/code&gt;</ept>
OnChangeRoleAsync is called when the stateful service is changing roles, for example to Primary or Secondary.</source>
          <target state="new"><bpt id="71984783-f1ad-4d4a-ae63-c8b5dfa43108">&lt;code&gt;</bpt>Task OnChangeRoleAsync(ReplicaRole, CancellationToken)<ept id="71984783-f1ad-4d4a-ae63-c8b5dfa43108">&lt;/code&gt;</ept>
OnChangeRoleAsync is called when the stateful service is changing roles, for example to Primary or Secondary.</target>
        </trans-unit>
        <trans-unit id="99c8afc2-62c0-4e55-acad-728339f53e2c" xml:space="preserve">
          <source>Primary replicas are given write status (are allowed to create and write to the reliable collections), while Secondary replicas are given read status (can only read from existing reliable collections).</source>
          <target state="new">Primary replicas are given write status (are allowed to create and write to the reliable collections), while Secondary replicas are given read status (can only read from existing reliable collections).</target>
        </trans-unit>
        <trans-unit id="3bd97804-ee42-4f67-b5e1-bf5b7e106a3c" xml:space="preserve">
          <source>You can start or update the background tasks in response to role changes, such as performing read-only validation, report generation, or data mining on a Secondary.</source>
          <target state="new">You can start or update the background tasks in response to role changes, such as performing read-only validation, report generation, or data mining on a Secondary.</target>
        </trans-unit>
        <trans-unit id="6287590c-6346-4059-b997-d8ec5f26b55c" xml:space="preserve">
          <source><bpt id="9101e470-3ec4-4733-a6ef-3404b04cf349">&lt;code&gt;</bpt>IStateProviderReplica CreateStateProviderReplica()<ept id="9101e470-3ec4-4733-a6ef-3404b04cf349">&lt;/code&gt;</ept>
A stateful service is expected to have a reliable state provider.</source>
          <target state="new"><bpt id="9101e470-3ec4-4733-a6ef-3404b04cf349">&lt;code&gt;</bpt>IStateProviderReplica CreateStateProviderReplica()<ept id="9101e470-3ec4-4733-a6ef-3404b04cf349">&lt;/code&gt;</ept>
A stateful service is expected to have a reliable state provider.</target>
        </trans-unit>
        <trans-unit id="526a8bb1-6ea6-4a67-862a-239873af373f" xml:space="preserve">
          <source>StatefulService uses the ReliableStateManager class, which provides the reliable collections (e.g. dictionaries and queues).</source>
          <target state="new">StatefulService uses the ReliableStateManager class, which provides the reliable collections (e.g. dictionaries and queues).</target>
        </trans-unit>
        <trans-unit id="a46d7676-09c6-43d2-acdb-d488de4a4658" xml:space="preserve">
          <source>You may want to supply your own provider if you wish to manage the state yourself, or extend the functionality of one of the built-in state providers.</source>
          <target state="new">You may want to supply your own provider if you wish to manage the state yourself, or extend the functionality of one of the built-in state providers.</target>
        </trans-unit>
        <trans-unit id="1038f622-1c83-4e6f-9256-1aa0629aab14" xml:space="preserve">
          <source><bpt id="612ce583-754f-4630-8986-53efeacf2b07">&lt;code&gt;</bpt>bool EnableCommunicationListenerOnSecondary { get; }<ept id="612ce583-754f-4630-8986-53efeacf2b07">&lt;/code&gt;</ept>
By default, communication listeners are only created on Primaries.</source>
          <target state="new"><bpt id="612ce583-754f-4630-8986-53efeacf2b07">&lt;code&gt;</bpt>bool EnableCommunicationListenerOnSecondary { get; }<ept id="612ce583-754f-4630-8986-53efeacf2b07">&lt;/code&gt;</ept>
By default, communication listeners are only created on Primaries.</target>
        </trans-unit>
        <trans-unit id="b7de95b1-8ecb-439d-90bb-7be64643b24f" xml:space="preserve">
          <source>Both StatefulService and StatefulServiceBase allow you to override this property to allow communication listeners to be created on Secondaries.</source>
          <target state="new">Both StatefulService and StatefulServiceBase allow you to override this property to allow communication listeners to be created on Secondaries.</target>
        </trans-unit>
        <trans-unit id="fd4c536b-fc4f-4b44-9f23-a6444e8cd83b" xml:space="preserve">
          <source>You may want to allow your Secondaries to handle read-only requests, to improve the throughput on read-heavy workloads.</source>
          <target state="new">You may want to allow your Secondaries to handle read-only requests, to improve the throughput on read-heavy workloads.</target>
        </trans-unit>
        <trans-unit id="d2952cff-f083-43e6-84d6-6f2e7e934b06" xml:space="preserve">
          <source>You are responsible for ensuring your Secondaries do not attempt to create or write to reliable collections.</source>
          <target state="new">You are responsible for ensuring your Secondaries do not attempt to create or write to reliable collections.</target>
        </trans-unit>
        <trans-unit id="6de0bf3b-8d74-4b1d-a79f-ca22173a275c" xml:space="preserve">
          <source>Attempts to write on a Secondary will cause an exception which, if unhandled, will cause the replica to be closed and reopened.</source>
          <target state="new">Attempts to write on a Secondary will cause an exception which, if unhandled, will cause the replica to be closed and reopened.</target>
        </trans-unit>
        <trans-unit id="ff9a6d8e-4d69-49ee-925d-2d83d3f99b73" xml:space="preserve">
          <source>StatefulServiceBase also provides the same four lifecycle events as StatelessServiceBase, with the same semantics and use cases:</source>
          <target state="new">StatefulServiceBase also provides the same four lifecycle events as StatelessServiceBase, with the same semantics and use cases:</target>
        </trans-unit>
        <trans-unit id="b829b4ae-ebc1-4464-b045-391f97be3b0e" xml:space="preserve">
          <source><bpt id="1555cecb-f12d-4c0a-af5b-57c55261a7f5">&lt;code&gt;</bpt>void OnInitialize(StatefulServiceInitializiationParameters)<ept id="1555cecb-f12d-4c0a-af5b-57c55261a7f5">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="1555cecb-f12d-4c0a-af5b-57c55261a7f5">&lt;code&gt;</bpt>void OnInitialize(StatefulServiceInitializiationParameters)<ept id="1555cecb-f12d-4c0a-af5b-57c55261a7f5">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b245d9e7-d542-4d6d-ab51-369aa04138e7" xml:space="preserve">
          <source><bpt id="deea483b-752f-4abe-b227-96a775afac2c">&lt;code&gt;</bpt>Task OnOpenAsync(IStatefulServicePartition, CancellationToken)<ept id="deea483b-752f-4abe-b227-96a775afac2c">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="deea483b-752f-4abe-b227-96a775afac2c">&lt;code&gt;</bpt>Task OnOpenAsync(IStatefulServicePartition, CancellationToken)<ept id="deea483b-752f-4abe-b227-96a775afac2c">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="95677a51-8577-4078-9273-88d11db94f84" xml:space="preserve">
          <source><bpt id="7035d527-9bf2-4c64-8457-92463bcc677f">&lt;code&gt;</bpt>Task OnCloseAsync(CancellationToken)<ept id="7035d527-9bf2-4c64-8457-92463bcc677f">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="7035d527-9bf2-4c64-8457-92463bcc677f">&lt;code&gt;</bpt>Task OnCloseAsync(CancellationToken)<ept id="7035d527-9bf2-4c64-8457-92463bcc677f">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f73411d4-2c14-4f18-b655-ea0f59bba6ec" xml:space="preserve">
          <source><bpt id="a5967fb8-ec78-4147-9d35-21aad3a5e62e">&lt;code&gt;</bpt>void OnAbort()<ept id="a5967fb8-ec78-4147-9d35-21aad3a5e62e">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="a5967fb8-ec78-4147-9d35-21aad3a5e62e">&lt;code&gt;</bpt>void OnAbort()<ept id="a5967fb8-ec78-4147-9d35-21aad3a5e62e">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f243ac30-2298-456c-af13-50b6ec7ab8b7" xml:space="preserve">
          <source>For more advanced topics related to Service Fabric, see the following articles.</source>
          <target state="new">For more advanced topics related to Service Fabric, see the following articles.</target>
        </trans-unit>
        <trans-unit id="ea65e6f6-9b53-4c89-b7da-f5586e51c6ae" xml:space="preserve">
          <source><bpt id="d5d2ea63-9fbf-49be-9a9e-784f3b0ce86f">&lt;linkText&gt;</bpt>Configuring Stateful Reliable Services<ept id="d5d2ea63-9fbf-49be-9a9e-784f3b0ce86f">&lt;/linkText&gt;</ept><bpt id="d5d2ea63-9fbf-49be-9a9e-784f3b0ce86f">&lt;title&gt;</bpt><ept id="d5d2ea63-9fbf-49be-9a9e-784f3b0ce86f">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="d5d2ea63-9fbf-49be-9a9e-784f3b0ce86f">&lt;linkText&gt;</bpt>Configuring Stateful Reliable Services<ept id="d5d2ea63-9fbf-49be-9a9e-784f3b0ce86f">&lt;/linkText&gt;</ept><bpt id="d5d2ea63-9fbf-49be-9a9e-784f3b0ce86f">&lt;title&gt;</bpt><ept id="d5d2ea63-9fbf-49be-9a9e-784f3b0ce86f">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="e61a4288-a9b1-4a6a-8d55-f88a71ae7e49" xml:space="preserve">
          <source><bpt id="edeebd62-0006-4dd7-94fa-e6d71378c737">&lt;linkText&gt;</bpt>Service Fabric Health Introduction<ept id="edeebd62-0006-4dd7-94fa-e6d71378c737">&lt;/linkText&gt;</ept><bpt id="edeebd62-0006-4dd7-94fa-e6d71378c737">&lt;title&gt;</bpt><ept id="edeebd62-0006-4dd7-94fa-e6d71378c737">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="edeebd62-0006-4dd7-94fa-e6d71378c737">&lt;linkText&gt;</bpt>Service Fabric Health Introduction<ept id="edeebd62-0006-4dd7-94fa-e6d71378c737">&lt;/linkText&gt;</ept><bpt id="edeebd62-0006-4dd7-94fa-e6d71378c737">&lt;title&gt;</bpt><ept id="edeebd62-0006-4dd7-94fa-e6d71378c737">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8fafbf4e-0f29-4db7-80cd-506dbdeec20d" xml:space="preserve">
          <source><bpt id="959ef5da-7815-4271-a0c4-4d854bb374eb">&lt;linkText&gt;</bpt>Using System health reports for troubleshooting<ept id="959ef5da-7815-4271-a0c4-4d854bb374eb">&lt;/linkText&gt;</ept><bpt id="959ef5da-7815-4271-a0c4-4d854bb374eb">&lt;title&gt;</bpt><ept id="959ef5da-7815-4271-a0c4-4d854bb374eb">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="959ef5da-7815-4271-a0c4-4d854bb374eb">&lt;linkText&gt;</bpt>Using System health reports for troubleshooting<ept id="959ef5da-7815-4271-a0c4-4d854bb374eb">&lt;/linkText&gt;</ept><bpt id="959ef5da-7815-4271-a0c4-4d854bb374eb">&lt;title&gt;</bpt><ept id="959ef5da-7815-4271-a0c4-4d854bb374eb">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="03112628-30f6-40bd-9d26-775fb7030b1e" xml:space="preserve">
          <source><bpt id="f4a5c30f-c40d-4bf3-b132-064d6ab15865">&lt;linkText&gt;</bpt>Placement Constraints Overview<ept id="f4a5c30f-c40d-4bf3-b132-064d6ab15865">&lt;/linkText&gt;</ept><bpt id="f4a5c30f-c40d-4bf3-b132-064d6ab15865">&lt;title&gt;</bpt><ept id="f4a5c30f-c40d-4bf3-b132-064d6ab15865">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="f4a5c30f-c40d-4bf3-b132-064d6ab15865">&lt;linkText&gt;</bpt>Placement Constraints Overview<ept id="f4a5c30f-c40d-4bf3-b132-064d6ab15865">&lt;/linkText&gt;</ept><bpt id="f4a5c30f-c40d-4bf3-b132-064d6ab15865">&lt;title&gt;</bpt><ept id="f4a5c30f-c40d-4bf3-b132-064d6ab15865">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="5beed61c-8952-4d17-833d-2b02067b72da" xml:space="preserve">
          <source><bpt id="3ca53db3-c07f-48e2-b1d8-ba71bf95b115">&lt;linkText&gt;</bpt>Secure Replication traffic of Stateful Services in Azure Service Fabric<ept id="3ca53db3-c07f-48e2-b1d8-ba71bf95b115">&lt;/linkText&gt;</ept><bpt id="3ca53db3-c07f-48e2-b1d8-ba71bf95b115">&lt;title&gt;</bpt><ept id="3ca53db3-c07f-48e2-b1d8-ba71bf95b115">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="3ca53db3-c07f-48e2-b1d8-ba71bf95b115">&lt;linkText&gt;</bpt>Secure Replication traffic of Stateful Services in Azure Service Fabric<ept id="3ca53db3-c07f-48e2-b1d8-ba71bf95b115">&lt;/linkText&gt;</ept><bpt id="3ca53db3-c07f-48e2-b1d8-ba71bf95b115">&lt;title&gt;</bpt><ept id="3ca53db3-c07f-48e2-b1d8-ba71bf95b115">&lt;/title&gt;</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>