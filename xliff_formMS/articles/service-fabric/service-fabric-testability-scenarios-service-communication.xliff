<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="2c084e97-3977-46b0-893d-f11c2895bb81" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="2c084e97-3977-46b0-893d-f11c2895bb81" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="fcb4de68-d8f0-4c3e-ab56-586c8bf90844">
        <trans-unit id="fa63564c-f5d9-4e5a-835a-9d86be87c497" xml:space="preserve">
          <source>Service Fabric Testability Scenarios: Service Communication</source>
          <target state="new">Service Fabric Testability Scenarios: Service Communication</target>
        </trans-unit>
        <trans-unit id="3d9fb389-11cf-4fc6-a728-1a94f1b4a10e" xml:space="preserve">
          <source>Service-to-service communication is a critical integration point of a Service Fabric application. This article discusses design consideration and testing techniques.</source>
          <target state="new">Service-to-service communication is a critical integration point of a Service Fabric application. This article discusses design consideration and testing techniques.</target>
        </trans-unit>
        <trans-unit id="dc642d1a-d37c-40f4-8481-42c1a8c0869c" xml:space="preserve">
          <source>Microservices and service-oriented architectural styles surface naturally in Service Fabric.</source>
          <target state="new">Microservices and service-oriented architectural styles surface naturally in Service Fabric.</target>
        </trans-unit>
        <trans-unit id="7d112586-0c32-49dc-9be6-f4dc406d0f48" xml:space="preserve">
          <source>In these types of distributed architectures, componentized microservice applications are typically composed of multiple services that need to talk to each other.</source>
          <target state="new">In these types of distributed architectures, componentized microservice applications are typically composed of multiple services that need to talk to each other.</target>
        </trans-unit>
        <trans-unit id="04d93452-7988-4f61-b9e9-6de77c48ccc3" xml:space="preserve">
          <source>Even in the simplest case, you generally have at least a stateless web service and a stateful data storage service that need to communicate.</source>
          <target state="new">Even in the simplest case, you generally have at least a stateless web service and a stateful data storage service that need to communicate.</target>
        </trans-unit>
        <trans-unit id="e270916a-197c-4e89-b8f9-f8a0af77839f" xml:space="preserve">
          <source>Service-to-service communication is a critical integration point of an application as each service exposes a remote API to other services.</source>
          <target state="new">Service-to-service communication is a critical integration point of an application as each service exposes a remote API to other services.</target>
        </trans-unit>
        <trans-unit id="85becbeb-d37c-41e9-a8ca-09187a92d86a" xml:space="preserve">
          <source>Working with a set of API boundaries involving I/O generally requires some care with a good amount of testing and validation.</source>
          <target state="new">Working with a set of API boundaries involving I/O generally requires some care with a good amount of testing and validation.</target>
        </trans-unit>
        <trans-unit id="0912e7e9-124d-43af-9119-9f9b31cdde24" xml:space="preserve">
          <source>There are numerous considerations to make when these service boundaries are wired together in a distributed system:</source>
          <target state="new">There are numerous considerations to make when these service boundaries are wired together in a distributed system:</target>
        </trans-unit>
        <trans-unit id="3b49a19b-2855-4ba3-a436-9978e50de626" xml:space="preserve">
          <source><bpt id="2101f524-6ddd-434a-ab49-808616dff1ed">&lt;strong&gt;</bpt>Transport protocol<ept id="2101f524-6ddd-434a-ab49-808616dff1ed">&lt;/strong&gt;</ept>.</source>
          <target state="new"><bpt id="2101f524-6ddd-434a-ab49-808616dff1ed">&lt;strong&gt;</bpt>Transport protocol<ept id="2101f524-6ddd-434a-ab49-808616dff1ed">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="46984081-97c1-442d-bddf-6b33f1da8b68" xml:space="preserve">
          <source>Will it be HTTP for increased interoperability, or a custom binary protocol for maximum throughput?</source>
          <target state="new">Will it be HTTP for increased interoperability, or a custom binary protocol for maximum throughput?</target>
        </trans-unit>
        <trans-unit id="02fb1e0a-1fc6-4ae1-b112-60c73f146d37" xml:space="preserve">
          <source><bpt id="99ccbc3f-90a6-4234-a4eb-c735e953c4bc">&lt;strong&gt;</bpt>Error handling<ept id="99ccbc3f-90a6-4234-a4eb-c735e953c4bc">&lt;/strong&gt;</ept>.</source>
          <target state="new"><bpt id="99ccbc3f-90a6-4234-a4eb-c735e953c4bc">&lt;strong&gt;</bpt>Error handling<ept id="99ccbc3f-90a6-4234-a4eb-c735e953c4bc">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="8bffc2e7-1dcc-40f7-8337-5cfc7164dbde" xml:space="preserve">
          <source>How are permanent and transient errors handled and what happens when a service moves to a different node?</source>
          <target state="new">How are permanent and transient errors handled and what happens when a service moves to a different node?</target>
        </trans-unit>
        <trans-unit id="b9684aae-f29a-44c2-a08f-661c26e1738d" xml:space="preserve">
          <source><bpt id="dbb987c2-ce30-449a-b9ec-46aebfb0003c">&lt;strong&gt;</bpt>Timeouts and latency<ept id="dbb987c2-ce30-449a-b9ec-46aebfb0003c">&lt;/strong&gt;</ept>.</source>
          <target state="new"><bpt id="dbb987c2-ce30-449a-b9ec-46aebfb0003c">&lt;strong&gt;</bpt>Timeouts and latency<ept id="dbb987c2-ce30-449a-b9ec-46aebfb0003c">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="73183612-65d6-4d6f-a65a-477861af2df6" xml:space="preserve">
          <source>In multi-tiered applications, how does each service layer handle latency through the stack and up to the user?</source>
          <target state="new">In multi-tiered applications, how does each service layer handle latency through the stack and up to the user?</target>
        </trans-unit>
        <trans-unit id="16626a53-ea80-46fb-a0d0-2d761ee387f7" xml:space="preserve">
          <source>Whether you're using one of the built-in service communication components provided by Service Fabric or building your own, testing the interaction between your services is a critical part of ensuring resiliency in your application.</source>
          <target state="new">Whether you're using one of the built-in service communication components provided by Service Fabric or building your own, testing the interaction between your services is a critical part of ensuring resiliency in your application.</target>
        </trans-unit>
        <trans-unit id="05a37cca-7e7e-493c-ae7e-19d696c9806d" xml:space="preserve">
          <source>Service instances may move around over time, especially when configured with load metrics for custom-tailored optimal resource balancing.</source>
          <target state="new">Service instances may move around over time, especially when configured with load metrics for custom-tailored optimal resource balancing.</target>
        </trans-unit>
        <trans-unit id="b2c85c34-aaa6-4241-96e3-28c59a913d92" xml:space="preserve">
          <source>Upgrades, failovers, scale-out, and other various situations that occur over the lifetime of a distributed system are where Service Fabric moves your service instances to maximize availability.</source>
          <target state="new">Upgrades, failovers, scale-out, and other various situations that occur over the lifetime of a distributed system are where Service Fabric moves your service instances to maximize availability.</target>
        </trans-unit>
        <trans-unit id="d629c23d-0778-46d9-a73f-e5e59c36d150" xml:space="preserve">
          <source>As services move around in the cluster, there are two scenarios your clients and other services should be prepared to handle when talking to a service:</source>
          <target state="new">As services move around in the cluster, there are two scenarios your clients and other services should be prepared to handle when talking to a service:</target>
        </trans-unit>
        <trans-unit id="93d87180-c8ad-4e77-ab26-ef08cadb3513" xml:space="preserve">
          <source>The service instance or partition replica has moved since the last time you talked to it.</source>
          <target state="new">The service instance or partition replica has moved since the last time you talked to it.</target>
        </trans-unit>
        <trans-unit id="aa2a632c-1fb1-4718-889e-dd1445168eaa" xml:space="preserve">
          <source>This is a normal part of a service lifecycle and should be expected to happen during the lifetime of your application.</source>
          <target state="new">This is a normal part of a service lifecycle and should be expected to happen during the lifetime of your application.</target>
        </trans-unit>
        <trans-unit id="eea57b7b-3b7d-4d08-a19e-a275e8a52826" xml:space="preserve">
          <source>The service instance or partition replica is in the process of moving.</source>
          <target state="new">The service instance or partition replica is in the process of moving.</target>
        </trans-unit>
        <trans-unit id="c2310e6b-7e25-4c17-9ffc-379594700c70" xml:space="preserve">
          <source>Although failover of a service from one node to another occurs very quickly in Service Fabric, there may be a delay in availability if the communication component of your service is slow to start.</source>
          <target state="new">Although failover of a service from one node to another occurs very quickly in Service Fabric, there may be a delay in availability if the communication component of your service is slow to start.</target>
        </trans-unit>
        <trans-unit id="787a7335-6331-470e-bba5-c263abba8e04" xml:space="preserve">
          <source>Handling these scenarios gracefully is important for a smooth-running system.</source>
          <target state="new">Handling these scenarios gracefully is important for a smooth-running system.</target>
        </trans-unit>
        <trans-unit id="d14ed535-6a20-4a8a-b189-364d2638528e" xml:space="preserve">
          <source>To do so, we need to make a few considerations:</source>
          <target state="new">To do so, we need to make a few considerations:</target>
        </trans-unit>
        <trans-unit id="ba72d836-6307-4221-8402-42c3814531cf" xml:space="preserve">
          <source>Every service that can be connected to has an <bpt id="36c62a2e-68a5-4726-8d67-19865fada652">&lt;em&gt;</bpt>address<ept id="36c62a2e-68a5-4726-8d67-19865fada652">&lt;/em&gt;</ept> that it listens on (HTTP, WebSockets, etc.).</source>
          <target state="new">Every service that can be connected to has an <bpt id="36c62a2e-68a5-4726-8d67-19865fada652">&lt;em&gt;</bpt>address<ept id="36c62a2e-68a5-4726-8d67-19865fada652">&lt;/em&gt;</ept> that it listens on (HTTP, WebSockets, etc.).</target>
        </trans-unit>
        <trans-unit id="3715926d-7986-4375-88b0-ece475f2711e" xml:space="preserve">
          <source>When a service instance or partition has moved, its address endpoint will change (it's been moved to a different node with a different IP address).</source>
          <target state="new">When a service instance or partition has moved, its address endpoint will change (it's been moved to a different node with a different IP address).</target>
        </trans-unit>
        <trans-unit id="f5654fa4-0029-4af7-90d2-ecfc49ca33e8" xml:space="preserve">
          <source>If you're using the built-in communication components, they will handle re-resolving service addresses for you.</source>
          <target state="new">If you're using the built-in communication components, they will handle re-resolving service addresses for you.</target>
        </trans-unit>
        <trans-unit id="93edc3e6-60cd-4aac-93ad-559d7989a8bb" xml:space="preserve">
          <source>There may be a temporary increase in service latency as the service instance starts up its listener again, depending on how quickly the service opens it after being moved.</source>
          <target state="new">There may be a temporary increase in service latency as the service instance starts up its listener again, depending on how quickly the service opens it after being moved.</target>
        </trans-unit>
        <trans-unit id="f326a6e1-8ee9-4401-b199-ec214f14ac1d" xml:space="preserve">
          <source>Any existing connections will need to be closed and re-opened again when the service opens on a new node.</source>
          <target state="new">Any existing connections will need to be closed and re-opened again when the service opens on a new node.</target>
        </trans-unit>
        <trans-unit id="4b9c234b-b661-4a50-ae3c-75347166b15c" xml:space="preserve">
          <source>A graceful node shut down or restart allows time for existing connections to be gracefully shut down.</source>
          <target state="new">A graceful node shut down or restart allows time for existing connections to be gracefully shut down.</target>
        </trans-unit>
        <trans-unit id="755a4af4-0445-431d-9a4a-e4f3208f7994" xml:space="preserve">
          <source>Using Service Fabric's Testability tools, we can author a test scenario to test these situations in different ways.</source>
          <target state="new">Using Service Fabric's Testability tools, we can author a test scenario to test these situations in different ways.</target>
        </trans-unit>
        <trans-unit id="7092879c-e249-4ca4-a3b8-efbe9dfd08ce" xml:space="preserve">
          <source>Move a stateful service's primary replica.</source>
          <target state="new">Move a stateful service's primary replica.</target>
        </trans-unit>
        <trans-unit id="4a15e9a4-9920-4a25-8c92-f552fa646f95" xml:space="preserve">
          <source>The primary replica of a stateful service partition can be moved for any number of reasons.</source>
          <target state="new">The primary replica of a stateful service partition can be moved for any number of reasons.</target>
        </trans-unit>
        <trans-unit id="658a0426-e47a-4851-84f5-65e26a84fc96" xml:space="preserve">
          <source>Use this to target the primary replica of a specific partition to see how your services react to the move in a very controlled manner.</source>
          <target state="new">Use this to target the primary replica of a specific partition to see how your services react to the move in a very controlled manner.</target>
        </trans-unit>
        <trans-unit id="4817c183-a6bc-4d46-a0d0-53486004e166" xml:space="preserve">
          <source>Stop a node.</source>
          <target state="new">Stop a node.</target>
        </trans-unit>
        <trans-unit id="c822005a-e712-4101-bf3f-db4d4b1cfdf8" xml:space="preserve">
          <source>When a node is stopped, Service Fabric will move all the services instances or partitions that were on that node to one of the other available nodes in the cluster.</source>
          <target state="new">When a node is stopped, Service Fabric will move all the services instances or partitions that were on that node to one of the other available nodes in the cluster.</target>
        </trans-unit>
        <trans-unit id="0a822383-b81b-4956-95f6-706dc7311139" xml:space="preserve">
          <source>Use this to test a stituation where a node is lost from your cluster and all of the service instances and replicas on that node have to move.</source>
          <target state="new">Use this to test a stituation where a node is lost from your cluster and all of the service instances and replicas on that node have to move.</target>
        </trans-unit>
        <trans-unit id="8c9c540d-ec9e-40ca-a5e9-92fd0f8f8bbf" xml:space="preserve">
          <source>A node can be stopped using the Stop-ServiceFabricNode PowerShell cmdlet:</source>
          <target state="new">A node can be stopped using the Stop-ServiceFabricNode PowerShell cmdlet:</target>
        </trans-unit>
        <trans-unit id="5285da2b-aaea-4374-b465-bc6eed8ec998" xml:space="preserve">
          <source>Service Fabric is a platform that is designed to provide high-availability of your services.</source>
          <target state="new">Service Fabric is a platform that is designed to provide high-availability of your services.</target>
        </trans-unit>
        <trans-unit id="493e0052-d3c6-4174-aa4d-7b16e4ab42ca" xml:space="preserve">
          <source>However, underlying infrastructure problems can still cause unavailability in extreme cases.</source>
          <target state="new">However, underlying infrastructure problems can still cause unavailability in extreme cases.</target>
        </trans-unit>
        <trans-unit id="2a2296b3-9c8e-46ea-83c3-8bef6f22bba7" xml:space="preserve">
          <source>Thus it is important to also test for such a scenario.</source>
          <target state="new">Thus it is important to also test for such a scenario.</target>
        </trans-unit>
        <trans-unit id="80f1f787-419b-4fe6-ad9a-c57917d2b87b" xml:space="preserve">
          <source>Stateful services use a quorum-based system for replicating state for high-availability.</source>
          <target state="new">Stateful services use a quorum-based system for replicating state for high-availability.</target>
        </trans-unit>
        <trans-unit id="4c9041d2-e32d-4a1e-bc8b-71536fbd353f" xml:space="preserve">
          <source>This means a quorum of replicas need to be available in order to perform write operations.</source>
          <target state="new">This means a quorum of replicas need to be available in order to perform write operations.</target>
        </trans-unit>
        <trans-unit id="6c80310a-eba5-43cc-8515-3106202976e0" xml:space="preserve">
          <source>In rare cases, such as widespread hardware failure, a quorum of replicas may not be available.</source>
          <target state="new">In rare cases, such as widespread hardware failure, a quorum of replicas may not be available.</target>
        </trans-unit>
        <trans-unit id="064bdf5c-80a8-44c4-89ae-98c4e697aaeb" xml:space="preserve">
          <source>In this case, you will not be able to perform write operations, but you will still be able to perfom read operations.</source>
          <target state="new">In this case, you will not be able to perform write operations, but you will still be able to perfom read operations.</target>
        </trans-unit>
        <trans-unit id="a96ae34e-ab12-4f4f-88a9-6f234d2466fe" xml:space="preserve">
          <source>Service Fabric's Testability tools allow you to inject a fault that induces quorum loss to test this type of scenario.</source>
          <target state="new">Service Fabric's Testability tools allow you to inject a fault that induces quorum loss to test this type of scenario.</target>
        </trans-unit>
        <trans-unit id="fe6b047b-d7e5-4eb1-adf5-7f10a6a4c1cb" xml:space="preserve">
          <source>Although rare, it is important that clients and services that depend on stateful service are prepared to handle situations where they cannot make write requests to the stateful service.</source>
          <target state="new">Although rare, it is important that clients and services that depend on stateful service are prepared to handle situations where they cannot make write requests to the stateful service.</target>
        </trans-unit>
        <trans-unit id="4f898d2d-abd8-4f42-b68f-22b5e1697bf4" xml:space="preserve">
          <source>At the same time it is also important that the stateful service itself is aware of this possibiliy and can gracefully communicate it to callers.</source>
          <target state="new">At the same time it is also important that the stateful service itself is aware of this possibiliy and can gracefully communicate it to callers.</target>
        </trans-unit>
        <trans-unit id="7e9ad1f5-27bf-4f4c-94ac-e121a725382f" xml:space="preserve">
          <source>Quorum loss can be induced using the Invoke-ServiceFabricPartitionQuorumLoss PowerShell cmdlet:</source>
          <target state="new">Quorum loss can be induced using the Invoke-ServiceFabricPartitionQuorumLoss PowerShell cmdlet:</target>
        </trans-unit>
        <trans-unit id="ac63e82b-66cb-4945-b022-f2fdb4a003d3" xml:space="preserve">
          <source>In this example, we set <bpt id="5cac67a6-6e36-49c8-a7ac-f4356e2c266a">&lt;code&gt;</bpt>QuorumLossMode<ept id="5cac67a6-6e36-49c8-a7ac-f4356e2c266a">&lt;/code&gt;</ept> to <bpt id="0daa0941-88fe-4399-bee9-cd01dcb14a88">&lt;code&gt;</bpt>PartialQuorumLoss<ept id="0daa0941-88fe-4399-bee9-cd01dcb14a88">&lt;/code&gt;</ept> to indicate we want to induce quorum loss without taking down all replicas, so that read operations are still possible.</source>
          <target state="new">In this example, we set <bpt id="5cac67a6-6e36-49c8-a7ac-f4356e2c266a">&lt;code&gt;</bpt>QuorumLossMode<ept id="5cac67a6-6e36-49c8-a7ac-f4356e2c266a">&lt;/code&gt;</ept> to <bpt id="0daa0941-88fe-4399-bee9-cd01dcb14a88">&lt;code&gt;</bpt>PartialQuorumLoss<ept id="0daa0941-88fe-4399-bee9-cd01dcb14a88">&lt;/code&gt;</ept> to indicate we want to induce quorum loss without taking down all replicas, so that read operations are still possible.</target>
        </trans-unit>
        <trans-unit id="d71151ae-fe16-4edf-a637-3c5c438251f1" xml:space="preserve">
          <source>To test a scenario where an entire partition is unavailable, you can set this switch to <bpt id="ed4117a9-8cd5-414a-b6d0-9736d378bd05">&lt;code&gt;</bpt>FullQuorumLoss<ept id="ed4117a9-8cd5-414a-b6d0-9736d378bd05">&lt;/code&gt;</ept>.</source>
          <target state="new">To test a scenario where an entire partition is unavailable, you can set this switch to <bpt id="ed4117a9-8cd5-414a-b6d0-9736d378bd05">&lt;code&gt;</bpt>FullQuorumLoss<ept id="ed4117a9-8cd5-414a-b6d0-9736d378bd05">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="a14b3e81-6c0b-499a-95a4-931430980dea" xml:space="preserve">
          <source><bpt id="10ae405a-cc62-49f7-9587-25d8a57d2039">&lt;linkText&gt;</bpt>Learn more about Testability Actions<ept id="10ae405a-cc62-49f7-9587-25d8a57d2039">&lt;/linkText&gt;</ept><bpt id="10ae405a-cc62-49f7-9587-25d8a57d2039">&lt;title&gt;</bpt><ept id="10ae405a-cc62-49f7-9587-25d8a57d2039">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="10ae405a-cc62-49f7-9587-25d8a57d2039">&lt;linkText&gt;</bpt>Learn more about Testability Actions<ept id="10ae405a-cc62-49f7-9587-25d8a57d2039">&lt;/linkText&gt;</ept><bpt id="10ae405a-cc62-49f7-9587-25d8a57d2039">&lt;title&gt;</bpt><ept id="10ae405a-cc62-49f7-9587-25d8a57d2039">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="bccc81fb-46ab-4995-98c6-59d6ccbafd57" xml:space="preserve">
          <source><bpt id="afad6ced-bb14-4270-8d2b-6f741775636f">&lt;linkText&gt;</bpt>Learn more about Testability Scenarios<ept id="afad6ced-bb14-4270-8d2b-6f741775636f">&lt;/linkText&gt;</ept><bpt id="afad6ced-bb14-4270-8d2b-6f741775636f">&lt;title&gt;</bpt><ept id="afad6ced-bb14-4270-8d2b-6f741775636f">&lt;/title&gt;</ept> </source>
          <target state="new"><bpt id="afad6ced-bb14-4270-8d2b-6f741775636f">&lt;linkText&gt;</bpt>Learn more about Testability Scenarios<ept id="afad6ced-bb14-4270-8d2b-6f741775636f">&lt;/linkText&gt;</ept><bpt id="afad6ced-bb14-4270-8d2b-6f741775636f">&lt;title&gt;</bpt><ept id="afad6ced-bb14-4270-8d2b-6f741775636f">&lt;/title&gt;</ept> </target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>