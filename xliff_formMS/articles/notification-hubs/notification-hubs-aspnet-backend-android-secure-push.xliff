<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="8f0cf009-0ab5-4082-bb45-e401073a54ab" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="8f0cf009-0ab5-4082-bb45-e401073a54ab" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="da510e79-66b2-4146-95fe-43dbb3f5d2f1">
        <trans-unit id="c07c27ee-b319-4a97-9632-501c55d0f71b" xml:space="preserve">
          <source>Azure Notification Hubs Secure Push</source>
          <target state="new">Azure Notification Hubs Secure Push</target>
        </trans-unit>
        <trans-unit id="6f599807-6062-4e12-b02e-d7414a0219ec" xml:space="preserve">
          <source>Learn how to send secure push notifications to an Android app from Azure. Code samples written in Java and C#.</source>
          <target state="new">Learn how to send secure push notifications to an Android app from Azure. Code samples written in Java and C#.</target>
        </trans-unit>
        <trans-unit id="168b192e-8fe2-49a3-bd18-f0d0e511ac27" xml:space="preserve">
          <source>Push notification support in Microsoft Azure enables you to access an easy-to-use, multiplatform, and scaled-out push infrastructure, which greatly simplifies the implementation of push notifications for both consumer and enterprise applications for mobile platforms.</source>
          <target state="new">Push notification support in Microsoft Azure enables you to access an easy-to-use, multiplatform, and scaled-out push infrastructure, which greatly simplifies the implementation of push notifications for both consumer and enterprise applications for mobile platforms.</target>
        </trans-unit>
        <trans-unit id="45a0dc7f-bf20-4e61-a282-5315b1f92ac7" xml:space="preserve">
          <source>Due to regulatory or security constraints, sometimes an application might want to include something in the notification that cannot be transmitted through the standard push notification infrastructure.</source>
          <target state="new">Due to regulatory or security constraints, sometimes an application might want to include something in the notification that cannot be transmitted through the standard push notification infrastructure.</target>
        </trans-unit>
        <trans-unit id="c92b8157-1992-4d87-9dcb-cccae1ac5b21" xml:space="preserve">
          <source>This tutorial describes how to achieve the same experience by sending sensitive information through a secure, authenticated connection between the client device and the app backend.</source>
          <target state="new">This tutorial describes how to achieve the same experience by sending sensitive information through a secure, authenticated connection between the client device and the app backend.</target>
        </trans-unit>
        <trans-unit id="5488e52b-f744-4bea-b030-c2d83233a4b4" xml:space="preserve">
          <source>At a high level, the flow is as follows:</source>
          <target state="new">At a high level, the flow is as follows:</target>
        </trans-unit>
        <trans-unit id="03dba906-ff3d-462d-afcf-56a45722e5df" xml:space="preserve">
          <source>The app back-end:</source>
          <target state="new">The app back-end:</target>
        </trans-unit>
        <trans-unit id="7f6fa757-b874-4691-b314-f626e98fc3cf" xml:space="preserve">
          <source>Stores secure payload in back-end database.</source>
          <target state="new">Stores secure payload in back-end database.</target>
        </trans-unit>
        <trans-unit id="e4710c6b-c0f5-42fa-80f7-29612862a6a5" xml:space="preserve">
          <source>Sends the ID of this notification to the device (no secure information is sent).</source>
          <target state="new">Sends the ID of this notification to the device (no secure information is sent).</target>
        </trans-unit>
        <trans-unit id="6133b0ee-e7da-4c87-af56-d7e30bc78364" xml:space="preserve">
          <source>The app on the device, when receiving the notification:</source>
          <target state="new">The app on the device, when receiving the notification:</target>
        </trans-unit>
        <trans-unit id="fdebf5f1-3d93-4941-a674-5f5d1bd7dce0" xml:space="preserve">
          <source>The device contacts the back-end requesting the secure payload.</source>
          <target state="new">The device contacts the back-end requesting the secure payload.</target>
        </trans-unit>
        <trans-unit id="78579144-4392-4dd4-9d3d-33e1e4fecf5d" xml:space="preserve">
          <source>The app can show the payload as a notification on the device.</source>
          <target state="new">The app can show the payload as a notification on the device.</target>
        </trans-unit>
        <trans-unit id="97678fbe-b4ac-49cd-8ec8-d4ca41e92142" xml:space="preserve">
          <source>It is important to note that in the preceding flow (and in this tutorial), we assume that the device stores an authentication token in local storage, after the user logs in.</source>
          <target state="new">It is important to note that in the preceding flow (and in this tutorial), we assume that the device stores an authentication token in local storage, after the user logs in.</target>
        </trans-unit>
        <trans-unit id="976b6e61-0b8c-4796-9297-fb3548844d08" xml:space="preserve">
          <source>This guarantees a completely seamless experience, as the device can retrieve the notification’s secure payload using this token.</source>
          <target state="new">This guarantees a completely seamless experience, as the device can retrieve the notification’s secure payload using this token.</target>
        </trans-unit>
        <trans-unit id="199392bb-5964-4597-a594-8b90d799ea23" xml:space="preserve">
          <source>If your application does not store authentication tokens on the device, or if these tokens can be expired, the device app, upon receiving the notification should display a generic notification prompting the user to launch the app.</source>
          <target state="new">If your application does not store authentication tokens on the device, or if these tokens can be expired, the device app, upon receiving the notification should display a generic notification prompting the user to launch the app.</target>
        </trans-unit>
        <trans-unit id="9979d3eb-5708-4965-ac6a-cf05a8703d02" xml:space="preserve">
          <source>The app then authenticates the user and shows the notification payload.</source>
          <target state="new">The app then authenticates the user and shows the notification payload.</target>
        </trans-unit>
        <trans-unit id="4fc6b8eb-9282-4e21-995b-0b1f67aab74e" xml:space="preserve">
          <source>This Secure Push tutorial shows how to send a push notification securely.</source>
          <target state="new">This Secure Push tutorial shows how to send a push notification securely.</target>
        </trans-unit>
        <trans-unit id="ad56b3ec-9945-4519-ba5d-b87082bfc9b2" xml:space="preserve">
          <source>The tutorial builds on the <bpt id="910a1a1b-6936-4cdb-bcc4-7e1ddce18747">&lt;strong&gt;</bpt>Notify Users<ept id="910a1a1b-6936-4cdb-bcc4-7e1ddce18747">&lt;/strong&gt;</ept> tutorial, so you should complete the steps in that tutorial first.</source>
          <target state="new">The tutorial builds on the <bpt id="910a1a1b-6936-4cdb-bcc4-7e1ddce18747">&lt;strong&gt;</bpt>Notify Users<ept id="910a1a1b-6936-4cdb-bcc4-7e1ddce18747">&lt;/strong&gt;</ept> tutorial, so you should complete the steps in that tutorial first.</target>
        </trans-unit>
        <trans-unit id="03e96734-1e54-43ea-9bb3-f1d4e553fda9" xml:space="preserve">
          <source>This tutorial assumes that you have created and configured your notification hub as described in <bpt id="570fe8d1-ff02-49cf-a997-eb324cdf18f4">&lt;linkText&gt;</bpt>Getting Started with Notification Hubs (Android)<ept id="570fe8d1-ff02-49cf-a997-eb324cdf18f4">&lt;/linkText&gt;</ept><bpt id="570fe8d1-ff02-49cf-a997-eb324cdf18f4">&lt;title&gt;</bpt><ept id="570fe8d1-ff02-49cf-a997-eb324cdf18f4">&lt;/title&gt;</ept>.</source>
          <target state="new">This tutorial assumes that you have created and configured your notification hub as described in <bpt id="570fe8d1-ff02-49cf-a997-eb324cdf18f4">&lt;linkText&gt;</bpt>Getting Started with Notification Hubs (Android)<ept id="570fe8d1-ff02-49cf-a997-eb324cdf18f4">&lt;/linkText&gt;</ept><bpt id="570fe8d1-ff02-49cf-a997-eb324cdf18f4">&lt;title&gt;</bpt><ept id="570fe8d1-ff02-49cf-a997-eb324cdf18f4">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="5e12cdcc-b05d-455b-b370-fdc799d1a207" xml:space="preserve">
          <source><bpt id="e4a24b58-b94d-4781-853e-bb606455e0f8">&lt;token href="../../includes/notification-hubs-aspnet-backend-securepush.md"&gt;</bpt><ept id="e4a24b58-b94d-4781-853e-bb606455e0f8">&lt;/token&gt;</ept></source>
          <target state="new"><bpt id="e4a24b58-b94d-4781-853e-bb606455e0f8">&lt;token href="../../includes/notification-hubs-aspnet-backend-securepush.md"&gt;</bpt><ept id="e4a24b58-b94d-4781-853e-bb606455e0f8">&lt;/token&gt;</ept></target>
        </trans-unit>
        <trans-unit id="caee90bc-d73c-4b41-aa3b-d52f390ae78e" xml:space="preserve">
          <source>Now that you modified your app back-end to send just the <bpt id="68920013-1914-4760-8841-e4c463a0292b">&lt;em&gt;</bpt>id<ept id="68920013-1914-4760-8841-e4c463a0292b">&lt;/em&gt;</ept> of a notification, you have to change your Android app to handle that notification and call back your back-end to retrieve the secure message to be displayed.</source>
          <target state="new">Now that you modified your app back-end to send just the <bpt id="68920013-1914-4760-8841-e4c463a0292b">&lt;em&gt;</bpt>id<ept id="68920013-1914-4760-8841-e4c463a0292b">&lt;/em&gt;</ept> of a notification, you have to change your Android app to handle that notification and call back your back-end to retrieve the secure message to be displayed.</target>
        </trans-unit>
        <trans-unit id="4f46ac2f-7a63-4891-bf75-4aebcee6dc5f" xml:space="preserve">
          <source>To achieve this goal, you have to make sure that your Android app knows how to authenticate itself with your back-end when it receives the push notifications.</source>
          <target state="new">To achieve this goal, you have to make sure that your Android app knows how to authenticate itself with your back-end when it receives the push notifications.</target>
        </trans-unit>
        <trans-unit id="e2a1d693-eb02-4374-a6aa-7daac146d6aa" xml:space="preserve">
          <source>We will now modify the <bpt id="19b2adf6-9f78-429f-9b71-53eaa46508bf">&lt;em&gt;</bpt>login<ept id="19b2adf6-9f78-429f-9b71-53eaa46508bf">&lt;/em&gt;</ept> flow in order to save the authentication header value in the shared preferences of your app.</source>
          <target state="new">We will now modify the <bpt id="19b2adf6-9f78-429f-9b71-53eaa46508bf">&lt;em&gt;</bpt>login<ept id="19b2adf6-9f78-429f-9b71-53eaa46508bf">&lt;/em&gt;</ept> flow in order to save the authentication header value in the shared preferences of your app.</target>
        </trans-unit>
        <trans-unit id="1dd0ae2d-955c-4d29-8ec2-aeefe035e5a7" xml:space="preserve">
          <source>Analogous mechanisms can be used to store any authentication token (e.g. OAuth tokens) that the app will have to use without requiring user credentials.</source>
          <target state="new">Analogous mechanisms can be used to store any authentication token (e.g. OAuth tokens) that the app will have to use without requiring user credentials.</target>
        </trans-unit>
        <trans-unit id="3ff2f4af-3257-4ea5-b796-cf3d0eb3dcc9" xml:space="preserve">
          <source>In your Android app project, add the following constants at the top of the <bpt id="71ed34ee-a310-47ff-93d8-3e561e421099">&lt;strong&gt;</bpt>MainActivity<ept id="71ed34ee-a310-47ff-93d8-3e561e421099">&lt;/strong&gt;</ept> class:</source>
          <target state="new">In your Android app project, add the following constants at the top of the <bpt id="71ed34ee-a310-47ff-93d8-3e561e421099">&lt;strong&gt;</bpt>MainActivity<ept id="71ed34ee-a310-47ff-93d8-3e561e421099">&lt;/strong&gt;</ept> class:</target>
        </trans-unit>
        <trans-unit id="4a222f39-ff1b-4ab9-a476-7280f44e4025" xml:space="preserve">
          <source>Still in the <bpt id="47db090b-b550-4fe9-990f-ffc6107012e0">&lt;strong&gt;</bpt>MainActivity<ept id="47db090b-b550-4fe9-990f-ffc6107012e0">&lt;/strong&gt;</ept> class, update the <bpt id="300e09ac-90fa-4246-a523-5f8a21989f83">&lt;code&gt;</bpt>getAuthorizationHeader()<ept id="300e09ac-90fa-4246-a523-5f8a21989f83">&lt;/code&gt;</ept> method to contain the following code:</source>
          <target state="new">Still in the <bpt id="47db090b-b550-4fe9-990f-ffc6107012e0">&lt;strong&gt;</bpt>MainActivity<ept id="47db090b-b550-4fe9-990f-ffc6107012e0">&lt;/strong&gt;</ept> class, update the <bpt id="300e09ac-90fa-4246-a523-5f8a21989f83">&lt;code&gt;</bpt>getAuthorizationHeader()<ept id="300e09ac-90fa-4246-a523-5f8a21989f83">&lt;/code&gt;</ept> method to contain the following code:</target>
        </trans-unit>
        <trans-unit id="740ecd76-55c3-4186-9f1a-001c3a538a6c" xml:space="preserve">
          <source>Add the following <bpt id="f117882b-d59a-44c6-ab20-ed602e745dba">&lt;code&gt;</bpt>import<ept id="f117882b-d59a-44c6-ab20-ed602e745dba">&lt;/code&gt;</ept> statements at the top of the <bpt id="c27b4929-226b-4b75-b2fb-9981e9318898">&lt;strong&gt;</bpt>MainActivity<ept id="c27b4929-226b-4b75-b2fb-9981e9318898">&lt;/strong&gt;</ept> file:</source>
          <target state="new">Add the following <bpt id="f117882b-d59a-44c6-ab20-ed602e745dba">&lt;code&gt;</bpt>import<ept id="f117882b-d59a-44c6-ab20-ed602e745dba">&lt;/code&gt;</ept> statements at the top of the <bpt id="c27b4929-226b-4b75-b2fb-9981e9318898">&lt;strong&gt;</bpt>MainActivity<ept id="c27b4929-226b-4b75-b2fb-9981e9318898">&lt;/strong&gt;</ept> file:</target>
        </trans-unit>
        <trans-unit id="a808c238-3066-4df5-be65-9ac9ffe8340f" xml:space="preserve">
          <source>Now we will change the handler that is called when the notification is received.</source>
          <target state="new">Now we will change the handler that is called when the notification is received.</target>
        </trans-unit>
        <trans-unit id="2c5c9a7b-5d1b-4ce3-8a91-b7d22f370049" xml:space="preserve">
          <source>In the <bpt id="12283487-70d0-4a48-904c-a56463057b90">&lt;strong&gt;</bpt>MyHandler<ept id="12283487-70d0-4a48-904c-a56463057b90">&lt;/strong&gt;</ept> class change the <bpt id="7d0645e8-8786-4ac6-b15b-1c20fc9a1dbd">&lt;code&gt;</bpt>OnReceive()<ept id="7d0645e8-8786-4ac6-b15b-1c20fc9a1dbd">&lt;/code&gt;</ept> method to contain:</source>
          <target state="new">In the <bpt id="12283487-70d0-4a48-904c-a56463057b90">&lt;strong&gt;</bpt>MyHandler<ept id="12283487-70d0-4a48-904c-a56463057b90">&lt;/strong&gt;</ept> class change the <bpt id="7d0645e8-8786-4ac6-b15b-1c20fc9a1dbd">&lt;code&gt;</bpt>OnReceive()<ept id="7d0645e8-8786-4ac6-b15b-1c20fc9a1dbd">&lt;/code&gt;</ept> method to contain:</target>
        </trans-unit>
        <trans-unit id="51e77e5c-7a5e-43e1-a6f1-5e19eb58edad" xml:space="preserve">
          <source>Then add the <bpt id="0dcfd51b-8f2b-4557-8e77-7110bce3dddb">&lt;code&gt;</bpt>retrieveNotification()<ept id="0dcfd51b-8f2b-4557-8e77-7110bce3dddb">&lt;/code&gt;</ept> method, replacing the placeholder <bpt id="99c765e2-dacc-420a-93b4-f3f53cf89a85">&lt;code&gt;</bpt>{back-end endpoint}<ept id="99c765e2-dacc-420a-93b4-f3f53cf89a85">&lt;/code&gt;</ept> with the back-end endpoint obtained while deploying your back-end:</source>
          <target state="new">Then add the <bpt id="0dcfd51b-8f2b-4557-8e77-7110bce3dddb">&lt;code&gt;</bpt>retrieveNotification()<ept id="0dcfd51b-8f2b-4557-8e77-7110bce3dddb">&lt;/code&gt;</ept> method, replacing the placeholder <bpt id="99c765e2-dacc-420a-93b4-f3f53cf89a85">&lt;code&gt;</bpt>{back-end endpoint}<ept id="99c765e2-dacc-420a-93b4-f3f53cf89a85">&lt;/code&gt;</ept> with the back-end endpoint obtained while deploying your back-end:</target>
        </trans-unit>
        <trans-unit id="bebed972-d3ca-42e5-8c4a-6121e9089dce" xml:space="preserve">
          <source>This method calls your app back-end to retrieve the notification content using the credentials stored in the shared preferences and displays it as a normal notification.</source>
          <target state="new">This method calls your app back-end to retrieve the notification content using the credentials stored in the shared preferences and displays it as a normal notification.</target>
        </trans-unit>
        <trans-unit id="9c374cf8-b2a2-4b06-9255-94de7aea62a8" xml:space="preserve">
          <source>The notification looks to the app user exactly like any other push notification.</source>
          <target state="new">The notification looks to the app user exactly like any other push notification.</target>
        </trans-unit>
        <trans-unit id="6662e20d-5343-4dc0-83a9-d8fdb90f8e66" xml:space="preserve">
          <source>Note that it is preferable to handle the cases of missing authentication header property or rejection by the back-end.</source>
          <target state="new">Note that it is preferable to handle the cases of missing authentication header property or rejection by the back-end.</target>
        </trans-unit>
        <trans-unit id="c3ae954b-246f-425b-baf9-423525c64176" xml:space="preserve">
          <source>The specific handling of these cases depend mostly on your target user experience.</source>
          <target state="new">The specific handling of these cases depend mostly on your target user experience.</target>
        </trans-unit>
        <trans-unit id="bf7ed9e0-2b53-4a6e-86c1-0f30a7af17b2" xml:space="preserve">
          <source>One option is to display a notification with a generic prompt for the user to authenticate to retrieve the actual notification.</source>
          <target state="new">One option is to display a notification with a generic prompt for the user to authenticate to retrieve the actual notification.</target>
        </trans-unit>
        <trans-unit id="55ca5dc1-3b47-405e-a882-0c86aff3b369" xml:space="preserve">
          <source>To run the application, do the following:</source>
          <target state="new">To run the application, do the following:</target>
        </trans-unit>
        <trans-unit id="83b176aa-ba9a-4d54-8cbf-7a026ec57885" xml:space="preserve">
          <source>Make sure <bpt id="7d5575de-9d52-4fff-80fc-d81a6987caf4">&lt;strong&gt;</bpt>AppBackend<ept id="7d5575de-9d52-4fff-80fc-d81a6987caf4">&lt;/strong&gt;</ept> is deployed in Azure.</source>
          <target state="new">Make sure <bpt id="7d5575de-9d52-4fff-80fc-d81a6987caf4">&lt;strong&gt;</bpt>AppBackend<ept id="7d5575de-9d52-4fff-80fc-d81a6987caf4">&lt;/strong&gt;</ept> is deployed in Azure.</target>
        </trans-unit>
        <trans-unit id="bf75fad7-7d5d-4bf9-b6b7-a5ee50a0faca" xml:space="preserve">
          <source>If using Visual Studio, run the <bpt id="daccff49-b9a9-4337-aa0d-653f5a9e1914">&lt;strong&gt;</bpt>AppBackend<ept id="daccff49-b9a9-4337-aa0d-653f5a9e1914">&lt;/strong&gt;</ept> Web API application.</source>
          <target state="new">If using Visual Studio, run the <bpt id="daccff49-b9a9-4337-aa0d-653f5a9e1914">&lt;strong&gt;</bpt>AppBackend<ept id="daccff49-b9a9-4337-aa0d-653f5a9e1914">&lt;/strong&gt;</ept> Web API application.</target>
        </trans-unit>
        <trans-unit id="a3f1d445-5193-4ea8-9db3-84d66993bc7f" xml:space="preserve">
          <source>An ASP.NET web page is displayed.</source>
          <target state="new">An ASP.NET web page is displayed.</target>
        </trans-unit>
        <trans-unit id="d63d3688-e3d3-4f46-9658-34b19d846a8b" xml:space="preserve">
          <source>In Eclipse, run the app on a physical Android device or the emulator.</source>
          <target state="new">In Eclipse, run the app on a physical Android device or the emulator.</target>
        </trans-unit>
        <trans-unit id="439aba5e-4b47-43da-9548-d7716aeffb26" xml:space="preserve">
          <source>In the Android app UI, enter a username and password.</source>
          <target state="new">In the Android app UI, enter a username and password.</target>
        </trans-unit>
        <trans-unit id="1c222cb5-14ab-46f0-870c-dc1fe060dcef" xml:space="preserve">
          <source>These can be any string, but they must be the same value.</source>
          <target state="new">These can be any string, but they must be the same value.</target>
        </trans-unit>
        <trans-unit id="de4fac41-b905-4147-b706-b7717937f2d8" xml:space="preserve">
          <source>In the Android app UI, click <bpt id="4eaa027f-8b91-46c2-b192-ef308d1dae28">&lt;strong&gt;</bpt>Log in<ept id="4eaa027f-8b91-46c2-b192-ef308d1dae28">&lt;/strong&gt;</ept>.</source>
          <target state="new">In the Android app UI, click <bpt id="4eaa027f-8b91-46c2-b192-ef308d1dae28">&lt;strong&gt;</bpt>Log in<ept id="4eaa027f-8b91-46c2-b192-ef308d1dae28">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="27fae8e7-df46-4903-a83f-50c6a39fc7b7" xml:space="preserve">
          <source>Then click <bpt id="da2c5135-2185-4f45-b92b-08dab1d332dc">&lt;strong&gt;</bpt>Send push<ept id="da2c5135-2185-4f45-b92b-08dab1d332dc">&lt;/strong&gt;</ept>.</source>
          <target state="new">Then click <bpt id="da2c5135-2185-4f45-b92b-08dab1d332dc">&lt;strong&gt;</bpt>Send push<ept id="da2c5135-2185-4f45-b92b-08dab1d332dc">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>