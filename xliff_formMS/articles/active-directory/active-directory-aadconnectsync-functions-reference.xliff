<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="5df533bb-b1f9-466d-99d0-6a49e4c23676" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="5df533bb-b1f9-466d-99d0-6a49e4c23676" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="9f4c4f50-6035-4333-afcb-a6e3b928198b">
        <trans-unit id="0ecbeb5a-87b2-4237-8fa3-d11c852f605a" xml:space="preserve">
          <source>Azure AD Connect Sync: Functions Reference</source>
          <target state="new">Azure AD Connect Sync: Functions Reference</target>
        </trans-unit>
        <trans-unit id="da017504-c958-4089-91bf-ab608ada041f" xml:space="preserve">
          <source>Reference of declarative provisioning expressions in Azure AD Connect Sync.</source>
          <target state="new">Reference of declarative provisioning expressions in Azure AD Connect Sync.</target>
        </trans-unit>
        <trans-unit id="fd56f2f5-3957-46d2-9ec3-745369f2a109" xml:space="preserve">
          <source>In Azure Active Directory Sync, functions are used to manipulate an attribute value during synchronization. &lt;br&gt;
The Syntax of the functions is expressed using the following format: &lt;br&gt;
<bpt id="18af29fb-2760-4f6a-a472-bea988b8b11f">&lt;code&gt;</bpt>&lt;output type&gt; FunctionName(&lt;input type&gt; &lt;position name&gt;, ..)<ept id="18af29fb-2760-4f6a-a472-bea988b8b11f">&lt;/code&gt;</ept></source>
          <target state="new">In Azure Active Directory Sync, functions are used to manipulate an attribute value during synchronization. &lt;br&gt;
The Syntax of the functions is expressed using the following format: &lt;br&gt;
<bpt id="18af29fb-2760-4f6a-a472-bea988b8b11f">&lt;code&gt;</bpt>&lt;output type&gt; FunctionName(&lt;input type&gt; &lt;position name&gt;, ..)<ept id="18af29fb-2760-4f6a-a472-bea988b8b11f">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0305c09a-6761-432a-82a8-1221f9a26408" xml:space="preserve">
          <source>If a function is overloaded and accepts multiple syntaxes, all valid syntaxes are listed.&lt;br&gt; 
The functions are strongly typed and they verify that the type passed in matches the documented type.&lt;br&gt;
An error is thrown if the type does not match.</source>
          <target state="new">If a function is overloaded and accepts multiple syntaxes, all valid syntaxes are listed.&lt;br&gt; 
The functions are strongly typed and they verify that the type passed in matches the documented type.&lt;br&gt;
An error is thrown if the type does not match.</target>
        </trans-unit>
        <trans-unit id="6e056534-6f90-438f-abc9-285694dc7c00" xml:space="preserve">
          <source>The types are expressed with the following syntax:</source>
          <target state="new">The types are expressed with the following syntax:</target>
        </trans-unit>
        <trans-unit id="59bb39b0-34a0-4d65-9f0c-43cca8587c4e" xml:space="preserve">
          <source><bpt id="0a9b5067-bb87-424f-931f-f93aa3dcc702">&lt;strong&gt;</bpt>bin<ept id="0a9b5067-bb87-424f-931f-f93aa3dcc702">&lt;/strong&gt;</ept> – Binary</source>
          <target state="new"><bpt id="0a9b5067-bb87-424f-931f-f93aa3dcc702">&lt;strong&gt;</bpt>bin<ept id="0a9b5067-bb87-424f-931f-f93aa3dcc702">&lt;/strong&gt;</ept> – Binary</target>
        </trans-unit>
        <trans-unit id="264227d7-fc8a-4116-af12-0fb54902d499" xml:space="preserve">
          <source><bpt id="d2f45672-b4ed-4efa-a1b3-d8c9589a1a87">&lt;strong&gt;</bpt>bool<ept id="d2f45672-b4ed-4efa-a1b3-d8c9589a1a87">&lt;/strong&gt;</ept> – Boolean</source>
          <target state="new"><bpt id="d2f45672-b4ed-4efa-a1b3-d8c9589a1a87">&lt;strong&gt;</bpt>bool<ept id="d2f45672-b4ed-4efa-a1b3-d8c9589a1a87">&lt;/strong&gt;</ept> – Boolean</target>
        </trans-unit>
        <trans-unit id="9a7b9fc3-696e-4c79-b274-33e0e42846dd" xml:space="preserve">
          <source><bpt id="cb386df1-655c-4da2-a062-5c133f97012b">&lt;strong&gt;</bpt>dt<ept id="cb386df1-655c-4da2-a062-5c133f97012b">&lt;/strong&gt;</ept> – UTC Date/Time</source>
          <target state="new"><bpt id="cb386df1-655c-4da2-a062-5c133f97012b">&lt;strong&gt;</bpt>dt<ept id="cb386df1-655c-4da2-a062-5c133f97012b">&lt;/strong&gt;</ept> – UTC Date/Time</target>
        </trans-unit>
        <trans-unit id="f6c2b51c-9dbd-4fd3-aa90-04d20660b06d" xml:space="preserve">
          <source><bpt id="4612c837-2ca3-46f6-b692-eadeda4f521d">&lt;strong&gt;</bpt>enum<ept id="4612c837-2ca3-46f6-b692-eadeda4f521d">&lt;/strong&gt;</ept> – Enumeration of known constants</source>
          <target state="new"><bpt id="4612c837-2ca3-46f6-b692-eadeda4f521d">&lt;strong&gt;</bpt>enum<ept id="4612c837-2ca3-46f6-b692-eadeda4f521d">&lt;/strong&gt;</ept> – Enumeration of known constants</target>
        </trans-unit>
        <trans-unit id="794cf8e9-e5a6-4c23-aa47-3e5a94ed8ea1" xml:space="preserve">
          <source><bpt id="5dcda13b-6813-4bdc-b19f-c5947ec3b025">&lt;strong&gt;</bpt>exp<ept id="5dcda13b-6813-4bdc-b19f-c5947ec3b025">&lt;/strong&gt;</ept> – Expression, which is expected to evaluate to a Boolean</source>
          <target state="new"><bpt id="5dcda13b-6813-4bdc-b19f-c5947ec3b025">&lt;strong&gt;</bpt>exp<ept id="5dcda13b-6813-4bdc-b19f-c5947ec3b025">&lt;/strong&gt;</ept> – Expression, which is expected to evaluate to a Boolean</target>
        </trans-unit>
        <trans-unit id="ea43b774-cc42-4574-baa6-69488c86eccf" xml:space="preserve">
          <source><bpt id="65e7d1b1-d657-4cfc-86e2-5ba416037d1c">&lt;strong&gt;</bpt>mvbin<ept id="65e7d1b1-d657-4cfc-86e2-5ba416037d1c">&lt;/strong&gt;</ept> – Multi Valued Binary</source>
          <target state="new"><bpt id="65e7d1b1-d657-4cfc-86e2-5ba416037d1c">&lt;strong&gt;</bpt>mvbin<ept id="65e7d1b1-d657-4cfc-86e2-5ba416037d1c">&lt;/strong&gt;</ept> – Multi Valued Binary</target>
        </trans-unit>
        <trans-unit id="2e2a5c85-fc4f-4acc-b73a-c2594021da85" xml:space="preserve">
          <source><bpt id="9fb07612-0bb2-4c34-b11c-f643dd087210">&lt;strong&gt;</bpt>mvstr<ept id="9fb07612-0bb2-4c34-b11c-f643dd087210">&lt;/strong&gt;</ept> – Multi Valued Reference</source>
          <target state="new"><bpt id="9fb07612-0bb2-4c34-b11c-f643dd087210">&lt;strong&gt;</bpt>mvstr<ept id="9fb07612-0bb2-4c34-b11c-f643dd087210">&lt;/strong&gt;</ept> – Multi Valued Reference</target>
        </trans-unit>
        <trans-unit id="cdf4846c-aa6d-4392-8e61-bd40d05737b8" xml:space="preserve">
          <source><bpt id="db513ff7-9fbf-450a-854c-00bab1854d3d">&lt;strong&gt;</bpt>num<ept id="db513ff7-9fbf-450a-854c-00bab1854d3d">&lt;/strong&gt;</ept> – Numeric</source>
          <target state="new"><bpt id="db513ff7-9fbf-450a-854c-00bab1854d3d">&lt;strong&gt;</bpt>num<ept id="db513ff7-9fbf-450a-854c-00bab1854d3d">&lt;/strong&gt;</ept> – Numeric</target>
        </trans-unit>
        <trans-unit id="78956511-5e27-47ec-b02c-aad1a7c1e2d2" xml:space="preserve">
          <source><bpt id="d51e6561-9907-4a22-a0b3-6a76da67a7a7">&lt;strong&gt;</bpt>ref<ept id="d51e6561-9907-4a22-a0b3-6a76da67a7a7">&lt;/strong&gt;</ept> – Single Valued Reference</source>
          <target state="new"><bpt id="d51e6561-9907-4a22-a0b3-6a76da67a7a7">&lt;strong&gt;</bpt>ref<ept id="d51e6561-9907-4a22-a0b3-6a76da67a7a7">&lt;/strong&gt;</ept> – Single Valued Reference</target>
        </trans-unit>
        <trans-unit id="7716bc51-0539-4cb0-9ecb-f93e2e09d86a" xml:space="preserve">
          <source><bpt id="5e1afe56-5ae6-4326-b523-d10fc9b56d51">&lt;strong&gt;</bpt>str<ept id="5e1afe56-5ae6-4326-b523-d10fc9b56d51">&lt;/strong&gt;</ept> – Single Valued String</source>
          <target state="new"><bpt id="5e1afe56-5ae6-4326-b523-d10fc9b56d51">&lt;strong&gt;</bpt>str<ept id="5e1afe56-5ae6-4326-b523-d10fc9b56d51">&lt;/strong&gt;</ept> – Single Valued String</target>
        </trans-unit>
        <trans-unit id="b2fcb430-1eaf-4d2b-bb46-abc83edb3aea" xml:space="preserve">
          <source><bpt id="cd80eff1-5e31-479b-beea-0c01a3a1640d">&lt;strong&gt;</bpt>var<ept id="cd80eff1-5e31-479b-beea-0c01a3a1640d">&lt;/strong&gt;</ept> – A variant of (almost) any other type</source>
          <target state="new"><bpt id="cd80eff1-5e31-479b-beea-0c01a3a1640d">&lt;strong&gt;</bpt>var<ept id="cd80eff1-5e31-479b-beea-0c01a3a1640d">&lt;/strong&gt;</ept> – A variant of (almost) any other type</target>
        </trans-unit>
        <trans-unit id="573b90cb-f244-4551-aa69-5f91da4ae80f" xml:space="preserve">
          <source><bpt id="62469340-9853-4aee-9979-ae205283eb3c">&lt;strong&gt;</bpt>void<ept id="62469340-9853-4aee-9979-ae205283eb3c">&lt;/strong&gt;</ept> – doesn’t return a value</source>
          <target state="new"><bpt id="62469340-9853-4aee-9979-ae205283eb3c">&lt;strong&gt;</bpt>void<ept id="62469340-9853-4aee-9979-ae205283eb3c">&lt;/strong&gt;</ept> – doesn’t return a value</target>
        </trans-unit>
        <trans-unit id="e2360849-de3b-4a71-aec4-af566fe3ad41" xml:space="preserve">
          <source><bpt id="9345d8f4-b55d-46ff-9bc6-9faa7183c895">&lt;strong&gt;</bpt>Conversion:<ept id="9345d8f4-b55d-46ff-9bc6-9faa7183c895">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="9345d8f4-b55d-46ff-9bc6-9faa7183c895">&lt;strong&gt;</bpt>Conversion:<ept id="9345d8f4-b55d-46ff-9bc6-9faa7183c895">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="acce04f9-5d3c-4b2a-a18a-0c536b54d20c" xml:space="preserve">
          <source><bpt id="9fbea212-6eb5-42fe-8465-d3a07e278c25">&lt;linkText&gt;</bpt>CBool<ept id="9fbea212-6eb5-42fe-8465-d3a07e278c25">&lt;/linkText&gt;</ept><bpt id="9fbea212-6eb5-42fe-8465-d3a07e278c25">&lt;title&gt;</bpt><ept id="9fbea212-6eb5-42fe-8465-d3a07e278c25">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="0071d260-30ec-47f0-973d-05609675064f">&lt;linkText&gt;</bpt>CDate<ept id="0071d260-30ec-47f0-973d-05609675064f">&lt;/linkText&gt;</ept><bpt id="0071d260-30ec-47f0-973d-05609675064f">&lt;title&gt;</bpt><ept id="0071d260-30ec-47f0-973d-05609675064f">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="5dae667f-8986-4fac-8fcd-1757703f850f">&lt;linkText&gt;</bpt>CGuid<ept id="5dae667f-8986-4fac-8fcd-1757703f850f">&lt;/linkText&gt;</ept><bpt id="5dae667f-8986-4fac-8fcd-1757703f850f">&lt;title&gt;</bpt><ept id="5dae667f-8986-4fac-8fcd-1757703f850f">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="ca2cc867-aacf-41c0-90a8-ead365c34ce9">&lt;linkText&gt;</bpt>ConvertFromBase64<ept id="ca2cc867-aacf-41c0-90a8-ead365c34ce9">&lt;/linkText&gt;</ept><bpt id="ca2cc867-aacf-41c0-90a8-ead365c34ce9">&lt;title&gt;</bpt><ept id="ca2cc867-aacf-41c0-90a8-ead365c34ce9">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="276f6929-6caa-43c0-b0b2-6da410cbac79">&lt;linkText&gt;</bpt>ConvertToBase64<ept id="276f6929-6caa-43c0-b0b2-6da410cbac79">&lt;/linkText&gt;</ept><bpt id="276f6929-6caa-43c0-b0b2-6da410cbac79">&lt;title&gt;</bpt><ept id="276f6929-6caa-43c0-b0b2-6da410cbac79">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="183679a7-8e32-476c-95e1-cd8f70fd7b68">&lt;linkText&gt;</bpt>ConvertFromUTF8Hex<ept id="183679a7-8e32-476c-95e1-cd8f70fd7b68">&lt;/linkText&gt;</ept><bpt id="183679a7-8e32-476c-95e1-cd8f70fd7b68">&lt;title&gt;</bpt><ept id="183679a7-8e32-476c-95e1-cd8f70fd7b68">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="ae6d419a-fddf-42ff-8b06-7d319b7e2295">&lt;linkText&gt;</bpt>ConvertToUTF8Hex<ept id="ae6d419a-fddf-42ff-8b06-7d319b7e2295">&lt;/linkText&gt;</ept><bpt id="ae6d419a-fddf-42ff-8b06-7d319b7e2295">&lt;title&gt;</bpt><ept id="ae6d419a-fddf-42ff-8b06-7d319b7e2295">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="4fe2ebbb-429a-451d-a620-739bb86d329b">&lt;linkText&gt;</bpt>CNum<ept id="4fe2ebbb-429a-451d-a620-739bb86d329b">&lt;/linkText&gt;</ept><bpt id="4fe2ebbb-429a-451d-a620-739bb86d329b">&lt;title&gt;</bpt><ept id="4fe2ebbb-429a-451d-a620-739bb86d329b">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="f64b1692-e6fe-43e4-9aea-2910c208440e">&lt;linkText&gt;</bpt>CRef<ept id="f64b1692-e6fe-43e4-9aea-2910c208440e">&lt;/linkText&gt;</ept><bpt id="f64b1692-e6fe-43e4-9aea-2910c208440e">&lt;title&gt;</bpt><ept id="f64b1692-e6fe-43e4-9aea-2910c208440e">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="c3f968d3-7a11-45c9-885f-b1557c8a4d9d">&lt;linkText&gt;</bpt>CStr<ept id="c3f968d3-7a11-45c9-885f-b1557c8a4d9d">&lt;/linkText&gt;</ept><bpt id="c3f968d3-7a11-45c9-885f-b1557c8a4d9d">&lt;title&gt;</bpt><ept id="c3f968d3-7a11-45c9-885f-b1557c8a4d9d">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="ef0eb4de-49e2-4060-b3ef-7fcf9a2065af">&lt;linkText&gt;</bpt>StringFromGuid<ept id="ef0eb4de-49e2-4060-b3ef-7fcf9a2065af">&lt;/linkText&gt;</ept><bpt id="ef0eb4de-49e2-4060-b3ef-7fcf9a2065af">&lt;title&gt;</bpt><ept id="ef0eb4de-49e2-4060-b3ef-7fcf9a2065af">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="0085a78d-3acb-480a-ac05-8bb32c7d0c10">&lt;linkText&gt;</bpt>StringFromSid<ept id="0085a78d-3acb-480a-ac05-8bb32c7d0c10">&lt;/linkText&gt;</ept><bpt id="0085a78d-3acb-480a-ac05-8bb32c7d0c10">&lt;title&gt;</bpt><ept id="0085a78d-3acb-480a-ac05-8bb32c7d0c10">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="9fbea212-6eb5-42fe-8465-d3a07e278c25">&lt;linkText&gt;</bpt>CBool<ept id="9fbea212-6eb5-42fe-8465-d3a07e278c25">&lt;/linkText&gt;</ept><bpt id="9fbea212-6eb5-42fe-8465-d3a07e278c25">&lt;title&gt;</bpt><ept id="9fbea212-6eb5-42fe-8465-d3a07e278c25">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="0071d260-30ec-47f0-973d-05609675064f">&lt;linkText&gt;</bpt>CDate<ept id="0071d260-30ec-47f0-973d-05609675064f">&lt;/linkText&gt;</ept><bpt id="0071d260-30ec-47f0-973d-05609675064f">&lt;title&gt;</bpt><ept id="0071d260-30ec-47f0-973d-05609675064f">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="5dae667f-8986-4fac-8fcd-1757703f850f">&lt;linkText&gt;</bpt>CGuid<ept id="5dae667f-8986-4fac-8fcd-1757703f850f">&lt;/linkText&gt;</ept><bpt id="5dae667f-8986-4fac-8fcd-1757703f850f">&lt;title&gt;</bpt><ept id="5dae667f-8986-4fac-8fcd-1757703f850f">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="ca2cc867-aacf-41c0-90a8-ead365c34ce9">&lt;linkText&gt;</bpt>ConvertFromBase64<ept id="ca2cc867-aacf-41c0-90a8-ead365c34ce9">&lt;/linkText&gt;</ept><bpt id="ca2cc867-aacf-41c0-90a8-ead365c34ce9">&lt;title&gt;</bpt><ept id="ca2cc867-aacf-41c0-90a8-ead365c34ce9">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="276f6929-6caa-43c0-b0b2-6da410cbac79">&lt;linkText&gt;</bpt>ConvertToBase64<ept id="276f6929-6caa-43c0-b0b2-6da410cbac79">&lt;/linkText&gt;</ept><bpt id="276f6929-6caa-43c0-b0b2-6da410cbac79">&lt;title&gt;</bpt><ept id="276f6929-6caa-43c0-b0b2-6da410cbac79">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="183679a7-8e32-476c-95e1-cd8f70fd7b68">&lt;linkText&gt;</bpt>ConvertFromUTF8Hex<ept id="183679a7-8e32-476c-95e1-cd8f70fd7b68">&lt;/linkText&gt;</ept><bpt id="183679a7-8e32-476c-95e1-cd8f70fd7b68">&lt;title&gt;</bpt><ept id="183679a7-8e32-476c-95e1-cd8f70fd7b68">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="ae6d419a-fddf-42ff-8b06-7d319b7e2295">&lt;linkText&gt;</bpt>ConvertToUTF8Hex<ept id="ae6d419a-fddf-42ff-8b06-7d319b7e2295">&lt;/linkText&gt;</ept><bpt id="ae6d419a-fddf-42ff-8b06-7d319b7e2295">&lt;title&gt;</bpt><ept id="ae6d419a-fddf-42ff-8b06-7d319b7e2295">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="4fe2ebbb-429a-451d-a620-739bb86d329b">&lt;linkText&gt;</bpt>CNum<ept id="4fe2ebbb-429a-451d-a620-739bb86d329b">&lt;/linkText&gt;</ept><bpt id="4fe2ebbb-429a-451d-a620-739bb86d329b">&lt;title&gt;</bpt><ept id="4fe2ebbb-429a-451d-a620-739bb86d329b">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="f64b1692-e6fe-43e4-9aea-2910c208440e">&lt;linkText&gt;</bpt>CRef<ept id="f64b1692-e6fe-43e4-9aea-2910c208440e">&lt;/linkText&gt;</ept><bpt id="f64b1692-e6fe-43e4-9aea-2910c208440e">&lt;title&gt;</bpt><ept id="f64b1692-e6fe-43e4-9aea-2910c208440e">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="c3f968d3-7a11-45c9-885f-b1557c8a4d9d">&lt;linkText&gt;</bpt>CStr<ept id="c3f968d3-7a11-45c9-885f-b1557c8a4d9d">&lt;/linkText&gt;</ept><bpt id="c3f968d3-7a11-45c9-885f-b1557c8a4d9d">&lt;title&gt;</bpt><ept id="c3f968d3-7a11-45c9-885f-b1557c8a4d9d">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="ef0eb4de-49e2-4060-b3ef-7fcf9a2065af">&lt;linkText&gt;</bpt>StringFromGuid<ept id="ef0eb4de-49e2-4060-b3ef-7fcf9a2065af">&lt;/linkText&gt;</ept><bpt id="ef0eb4de-49e2-4060-b3ef-7fcf9a2065af">&lt;title&gt;</bpt><ept id="ef0eb4de-49e2-4060-b3ef-7fcf9a2065af">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="0085a78d-3acb-480a-ac05-8bb32c7d0c10">&lt;linkText&gt;</bpt>StringFromSid<ept id="0085a78d-3acb-480a-ac05-8bb32c7d0c10">&lt;/linkText&gt;</ept><bpt id="0085a78d-3acb-480a-ac05-8bb32c7d0c10">&lt;title&gt;</bpt><ept id="0085a78d-3acb-480a-ac05-8bb32c7d0c10">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="4e8e5fcc-26a1-443b-b2f6-618cb31d8e18" xml:space="preserve">
          <source><bpt id="835dab91-78b2-4df2-9db1-9db36cf37dfa">&lt;strong&gt;</bpt>Date / Time:<ept id="835dab91-78b2-4df2-9db1-9db36cf37dfa">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="835dab91-78b2-4df2-9db1-9db36cf37dfa">&lt;strong&gt;</bpt>Date / Time:<ept id="835dab91-78b2-4df2-9db1-9db36cf37dfa">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="cf95162f-f8f2-4cea-987b-72c94dae50e3" xml:space="preserve">
          <source><bpt id="17804422-01b2-474b-918c-cbd137940a4f">&lt;linkText&gt;</bpt>DateAdd<ept id="17804422-01b2-474b-918c-cbd137940a4f">&lt;/linkText&gt;</ept><bpt id="17804422-01b2-474b-918c-cbd137940a4f">&lt;title&gt;</bpt><ept id="17804422-01b2-474b-918c-cbd137940a4f">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="05b9b445-e828-4597-b848-4ff9d7d5734c">&lt;linkText&gt;</bpt>DateFromNum<ept id="05b9b445-e828-4597-b848-4ff9d7d5734c">&lt;/linkText&gt;</ept><bpt id="05b9b445-e828-4597-b848-4ff9d7d5734c">&lt;title&gt;</bpt><ept id="05b9b445-e828-4597-b848-4ff9d7d5734c">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="40a3fd6a-e977-42fd-baca-519b8ee577a8">&lt;linkText&gt;</bpt>FormatDateTime<ept id="40a3fd6a-e977-42fd-baca-519b8ee577a8">&lt;/linkText&gt;</ept><bpt id="40a3fd6a-e977-42fd-baca-519b8ee577a8">&lt;title&gt;</bpt><ept id="40a3fd6a-e977-42fd-baca-519b8ee577a8">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="49c585f6-b7ec-42a2-82aa-d426f8d3e8de">&lt;linkText&gt;</bpt>Now<ept id="49c585f6-b7ec-42a2-82aa-d426f8d3e8de">&lt;/linkText&gt;</ept><bpt id="49c585f6-b7ec-42a2-82aa-d426f8d3e8de">&lt;title&gt;</bpt><ept id="49c585f6-b7ec-42a2-82aa-d426f8d3e8de">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="cee8c5f2-26ec-41cf-9f39-5b11bd3c8d4e">&lt;linkText&gt;</bpt>NumFromDate<ept id="cee8c5f2-26ec-41cf-9f39-5b11bd3c8d4e">&lt;/linkText&gt;</ept><bpt id="cee8c5f2-26ec-41cf-9f39-5b11bd3c8d4e">&lt;title&gt;</bpt><ept id="cee8c5f2-26ec-41cf-9f39-5b11bd3c8d4e">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="17804422-01b2-474b-918c-cbd137940a4f">&lt;linkText&gt;</bpt>DateAdd<ept id="17804422-01b2-474b-918c-cbd137940a4f">&lt;/linkText&gt;</ept><bpt id="17804422-01b2-474b-918c-cbd137940a4f">&lt;title&gt;</bpt><ept id="17804422-01b2-474b-918c-cbd137940a4f">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="05b9b445-e828-4597-b848-4ff9d7d5734c">&lt;linkText&gt;</bpt>DateFromNum<ept id="05b9b445-e828-4597-b848-4ff9d7d5734c">&lt;/linkText&gt;</ept><bpt id="05b9b445-e828-4597-b848-4ff9d7d5734c">&lt;title&gt;</bpt><ept id="05b9b445-e828-4597-b848-4ff9d7d5734c">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="40a3fd6a-e977-42fd-baca-519b8ee577a8">&lt;linkText&gt;</bpt>FormatDateTime<ept id="40a3fd6a-e977-42fd-baca-519b8ee577a8">&lt;/linkText&gt;</ept><bpt id="40a3fd6a-e977-42fd-baca-519b8ee577a8">&lt;title&gt;</bpt><ept id="40a3fd6a-e977-42fd-baca-519b8ee577a8">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="49c585f6-b7ec-42a2-82aa-d426f8d3e8de">&lt;linkText&gt;</bpt>Now<ept id="49c585f6-b7ec-42a2-82aa-d426f8d3e8de">&lt;/linkText&gt;</ept><bpt id="49c585f6-b7ec-42a2-82aa-d426f8d3e8de">&lt;title&gt;</bpt><ept id="49c585f6-b7ec-42a2-82aa-d426f8d3e8de">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="cee8c5f2-26ec-41cf-9f39-5b11bd3c8d4e">&lt;linkText&gt;</bpt>NumFromDate<ept id="cee8c5f2-26ec-41cf-9f39-5b11bd3c8d4e">&lt;/linkText&gt;</ept><bpt id="cee8c5f2-26ec-41cf-9f39-5b11bd3c8d4e">&lt;title&gt;</bpt><ept id="cee8c5f2-26ec-41cf-9f39-5b11bd3c8d4e">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9e2fcf9d-f9ec-4ee9-af2f-bc283963d854" xml:space="preserve">
          <source><bpt id="e99b8556-4b98-4393-a3f1-b73863164e66">&lt;strong&gt;</bpt>Directory<ept id="e99b8556-4b98-4393-a3f1-b73863164e66">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="e99b8556-4b98-4393-a3f1-b73863164e66">&lt;strong&gt;</bpt>Directory<ept id="e99b8556-4b98-4393-a3f1-b73863164e66">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="36e622de-4e17-4ba6-9b26-059ad4cee2ae" xml:space="preserve">
          <source><bpt id="e8b031cd-3546-48e8-b864-5b01b9d6c4f9">&lt;linkText&gt;</bpt>DNComponent<ept id="e8b031cd-3546-48e8-b864-5b01b9d6c4f9">&lt;/linkText&gt;</ept><bpt id="e8b031cd-3546-48e8-b864-5b01b9d6c4f9">&lt;title&gt;</bpt><ept id="e8b031cd-3546-48e8-b864-5b01b9d6c4f9">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="eb5bda14-1d22-445f-82df-277af3cd08d6">&lt;linkText&gt;</bpt>DNComponentRev<ept id="eb5bda14-1d22-445f-82df-277af3cd08d6">&lt;/linkText&gt;</ept><bpt id="eb5bda14-1d22-445f-82df-277af3cd08d6">&lt;title&gt;</bpt><ept id="eb5bda14-1d22-445f-82df-277af3cd08d6">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="fd2ad465-f446-4a77-8669-5d4289424911">&lt;linkText&gt;</bpt>EscapeDNComponent<ept id="fd2ad465-f446-4a77-8669-5d4289424911">&lt;/linkText&gt;</ept><bpt id="fd2ad465-f446-4a77-8669-5d4289424911">&lt;title&gt;</bpt><ept id="fd2ad465-f446-4a77-8669-5d4289424911">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="e8b031cd-3546-48e8-b864-5b01b9d6c4f9">&lt;linkText&gt;</bpt>DNComponent<ept id="e8b031cd-3546-48e8-b864-5b01b9d6c4f9">&lt;/linkText&gt;</ept><bpt id="e8b031cd-3546-48e8-b864-5b01b9d6c4f9">&lt;title&gt;</bpt><ept id="e8b031cd-3546-48e8-b864-5b01b9d6c4f9">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="eb5bda14-1d22-445f-82df-277af3cd08d6">&lt;linkText&gt;</bpt>DNComponentRev<ept id="eb5bda14-1d22-445f-82df-277af3cd08d6">&lt;/linkText&gt;</ept><bpt id="eb5bda14-1d22-445f-82df-277af3cd08d6">&lt;title&gt;</bpt><ept id="eb5bda14-1d22-445f-82df-277af3cd08d6">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="fd2ad465-f446-4a77-8669-5d4289424911">&lt;linkText&gt;</bpt>EscapeDNComponent<ept id="fd2ad465-f446-4a77-8669-5d4289424911">&lt;/linkText&gt;</ept><bpt id="fd2ad465-f446-4a77-8669-5d4289424911">&lt;title&gt;</bpt><ept id="fd2ad465-f446-4a77-8669-5d4289424911">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="28871ebb-e85e-4fbc-ac19-111017018e7c" xml:space="preserve">
          <source><bpt id="d94e5978-3398-4437-90d8-f5314a390326">&lt;strong&gt;</bpt>Insprection:<ept id="d94e5978-3398-4437-90d8-f5314a390326">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="d94e5978-3398-4437-90d8-f5314a390326">&lt;strong&gt;</bpt>Insprection:<ept id="d94e5978-3398-4437-90d8-f5314a390326">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="177b2e24-d896-4a01-a2d6-eb07fe8dcfdd" xml:space="preserve">
          <source><bpt id="bb7a3b08-b66c-4000-a1c9-b02cdc7a1917">&lt;linkText&gt;</bpt>IsBitSet<ept id="bb7a3b08-b66c-4000-a1c9-b02cdc7a1917">&lt;/linkText&gt;</ept><bpt id="bb7a3b08-b66c-4000-a1c9-b02cdc7a1917">&lt;title&gt;</bpt><ept id="bb7a3b08-b66c-4000-a1c9-b02cdc7a1917">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="95b63601-59bc-4aa6-a5bb-e7cfdf2d7706">&lt;linkText&gt;</bpt>IsDate<ept id="95b63601-59bc-4aa6-a5bb-e7cfdf2d7706">&lt;/linkText&gt;</ept><bpt id="95b63601-59bc-4aa6-a5bb-e7cfdf2d7706">&lt;title&gt;</bpt><ept id="95b63601-59bc-4aa6-a5bb-e7cfdf2d7706">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="bfa8459a-5210-4bcd-8065-7c1256fa24b4">&lt;linkText&gt;</bpt>IsEmpty<ept id="bfa8459a-5210-4bcd-8065-7c1256fa24b4">&lt;/linkText&gt;</ept><bpt id="bfa8459a-5210-4bcd-8065-7c1256fa24b4">&lt;title&gt;</bpt><ept id="bfa8459a-5210-4bcd-8065-7c1256fa24b4">&lt;/title&gt;</ept>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="4b36a336-6a22-44cd-82bc-7bddc91c9b5e">&lt;linkText&gt;</bpt>IsGuid<ept id="4b36a336-6a22-44cd-82bc-7bddc91c9b5e">&lt;/linkText&gt;</ept><bpt id="4b36a336-6a22-44cd-82bc-7bddc91c9b5e">&lt;title&gt;</bpt><ept id="4b36a336-6a22-44cd-82bc-7bddc91c9b5e">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="6f448760-adf5-4148-bd81-2ed82b5112ac">&lt;linkText&gt;</bpt>IsNull<ept id="6f448760-adf5-4148-bd81-2ed82b5112ac">&lt;/linkText&gt;</ept><bpt id="6f448760-adf5-4148-bd81-2ed82b5112ac">&lt;title&gt;</bpt><ept id="6f448760-adf5-4148-bd81-2ed82b5112ac">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="d9f3562a-6ea0-4800-99ae-4b636e60b03c">&lt;linkText&gt;</bpt>IsNullOrEmpty<ept id="d9f3562a-6ea0-4800-99ae-4b636e60b03c">&lt;/linkText&gt;</ept><bpt id="d9f3562a-6ea0-4800-99ae-4b636e60b03c">&lt;title&gt;</bpt><ept id="d9f3562a-6ea0-4800-99ae-4b636e60b03c">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="38dbb875-fd0d-4548-9e64-de6d4a846140">&lt;linkText&gt;</bpt>IsNumeric<ept id="38dbb875-fd0d-4548-9e64-de6d4a846140">&lt;/linkText&gt;</ept><bpt id="38dbb875-fd0d-4548-9e64-de6d4a846140">&lt;title&gt;</bpt><ept id="38dbb875-fd0d-4548-9e64-de6d4a846140">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="7ef56ab8-d390-4422-b03b-1d50f8cf32d3">&lt;linkText&gt;</bpt>IsPresent<ept id="7ef56ab8-d390-4422-b03b-1d50f8cf32d3">&lt;/linkText&gt;</ept><bpt id="7ef56ab8-d390-4422-b03b-1d50f8cf32d3">&lt;title&gt;</bpt><ept id="7ef56ab8-d390-4422-b03b-1d50f8cf32d3">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="d106283f-45a1-4188-b0ab-0eca797e3643">&lt;linkText&gt;</bpt>IsString<ept id="d106283f-45a1-4188-b0ab-0eca797e3643">&lt;/linkText&gt;</ept><bpt id="d106283f-45a1-4188-b0ab-0eca797e3643">&lt;title&gt;</bpt><ept id="d106283f-45a1-4188-b0ab-0eca797e3643">&lt;/title&gt;</ept> </source>
          <target state="new"><bpt id="bb7a3b08-b66c-4000-a1c9-b02cdc7a1917">&lt;linkText&gt;</bpt>IsBitSet<ept id="bb7a3b08-b66c-4000-a1c9-b02cdc7a1917">&lt;/linkText&gt;</ept><bpt id="bb7a3b08-b66c-4000-a1c9-b02cdc7a1917">&lt;title&gt;</bpt><ept id="bb7a3b08-b66c-4000-a1c9-b02cdc7a1917">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="95b63601-59bc-4aa6-a5bb-e7cfdf2d7706">&lt;linkText&gt;</bpt>IsDate<ept id="95b63601-59bc-4aa6-a5bb-e7cfdf2d7706">&lt;/linkText&gt;</ept><bpt id="95b63601-59bc-4aa6-a5bb-e7cfdf2d7706">&lt;title&gt;</bpt><ept id="95b63601-59bc-4aa6-a5bb-e7cfdf2d7706">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="bfa8459a-5210-4bcd-8065-7c1256fa24b4">&lt;linkText&gt;</bpt>IsEmpty<ept id="bfa8459a-5210-4bcd-8065-7c1256fa24b4">&lt;/linkText&gt;</ept><bpt id="bfa8459a-5210-4bcd-8065-7c1256fa24b4">&lt;title&gt;</bpt><ept id="bfa8459a-5210-4bcd-8065-7c1256fa24b4">&lt;/title&gt;</ept>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="4b36a336-6a22-44cd-82bc-7bddc91c9b5e">&lt;linkText&gt;</bpt>IsGuid<ept id="4b36a336-6a22-44cd-82bc-7bddc91c9b5e">&lt;/linkText&gt;</ept><bpt id="4b36a336-6a22-44cd-82bc-7bddc91c9b5e">&lt;title&gt;</bpt><ept id="4b36a336-6a22-44cd-82bc-7bddc91c9b5e">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="6f448760-adf5-4148-bd81-2ed82b5112ac">&lt;linkText&gt;</bpt>IsNull<ept id="6f448760-adf5-4148-bd81-2ed82b5112ac">&lt;/linkText&gt;</ept><bpt id="6f448760-adf5-4148-bd81-2ed82b5112ac">&lt;title&gt;</bpt><ept id="6f448760-adf5-4148-bd81-2ed82b5112ac">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="d9f3562a-6ea0-4800-99ae-4b636e60b03c">&lt;linkText&gt;</bpt>IsNullOrEmpty<ept id="d9f3562a-6ea0-4800-99ae-4b636e60b03c">&lt;/linkText&gt;</ept><bpt id="d9f3562a-6ea0-4800-99ae-4b636e60b03c">&lt;title&gt;</bpt><ept id="d9f3562a-6ea0-4800-99ae-4b636e60b03c">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="38dbb875-fd0d-4548-9e64-de6d4a846140">&lt;linkText&gt;</bpt>IsNumeric<ept id="38dbb875-fd0d-4548-9e64-de6d4a846140">&lt;/linkText&gt;</ept><bpt id="38dbb875-fd0d-4548-9e64-de6d4a846140">&lt;title&gt;</bpt><ept id="38dbb875-fd0d-4548-9e64-de6d4a846140">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="7ef56ab8-d390-4422-b03b-1d50f8cf32d3">&lt;linkText&gt;</bpt>IsPresent<ept id="7ef56ab8-d390-4422-b03b-1d50f8cf32d3">&lt;/linkText&gt;</ept><bpt id="7ef56ab8-d390-4422-b03b-1d50f8cf32d3">&lt;title&gt;</bpt><ept id="7ef56ab8-d390-4422-b03b-1d50f8cf32d3">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="d106283f-45a1-4188-b0ab-0eca797e3643">&lt;linkText&gt;</bpt>IsString<ept id="d106283f-45a1-4188-b0ab-0eca797e3643">&lt;/linkText&gt;</ept><bpt id="d106283f-45a1-4188-b0ab-0eca797e3643">&lt;title&gt;</bpt><ept id="d106283f-45a1-4188-b0ab-0eca797e3643">&lt;/title&gt;</ept> </target>
        </trans-unit>
        <trans-unit id="fcb1abd0-8450-4b95-9f01-df46014ae87e" xml:space="preserve">
          <source><bpt id="f257f173-fdd2-41a4-96e9-e0cd02368ea1">&lt;strong&gt;</bpt>Math:<ept id="f257f173-fdd2-41a4-96e9-e0cd02368ea1">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="f257f173-fdd2-41a4-96e9-e0cd02368ea1">&lt;strong&gt;</bpt>Math:<ept id="f257f173-fdd2-41a4-96e9-e0cd02368ea1">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="e8d647ac-f1b0-4bc9-bf8d-e0a7f5ba711b" xml:space="preserve">
          <source><bpt id="96e2f097-6938-4a52-83a6-5df9a53796fe">&lt;linkText&gt;</bpt>BitAnd<ept id="96e2f097-6938-4a52-83a6-5df9a53796fe">&lt;/linkText&gt;</ept><bpt id="96e2f097-6938-4a52-83a6-5df9a53796fe">&lt;title&gt;</bpt><ept id="96e2f097-6938-4a52-83a6-5df9a53796fe">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="10428d65-f1be-4353-acaf-8eda782ef759">&lt;linkText&gt;</bpt>BitOr<ept id="10428d65-f1be-4353-acaf-8eda782ef759">&lt;/linkText&gt;</ept><bpt id="10428d65-f1be-4353-acaf-8eda782ef759">&lt;title&gt;</bpt><ept id="10428d65-f1be-4353-acaf-8eda782ef759">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="72087cea-9df9-48cd-b5ab-3aff08f5043f">&lt;linkText&gt;</bpt>RandomNum<ept id="72087cea-9df9-48cd-b5ab-3aff08f5043f">&lt;/linkText&gt;</ept><bpt id="72087cea-9df9-48cd-b5ab-3aff08f5043f">&lt;title&gt;</bpt><ept id="72087cea-9df9-48cd-b5ab-3aff08f5043f">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="96e2f097-6938-4a52-83a6-5df9a53796fe">&lt;linkText&gt;</bpt>BitAnd<ept id="96e2f097-6938-4a52-83a6-5df9a53796fe">&lt;/linkText&gt;</ept><bpt id="96e2f097-6938-4a52-83a6-5df9a53796fe">&lt;title&gt;</bpt><ept id="96e2f097-6938-4a52-83a6-5df9a53796fe">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="10428d65-f1be-4353-acaf-8eda782ef759">&lt;linkText&gt;</bpt>BitOr<ept id="10428d65-f1be-4353-acaf-8eda782ef759">&lt;/linkText&gt;</ept><bpt id="10428d65-f1be-4353-acaf-8eda782ef759">&lt;title&gt;</bpt><ept id="10428d65-f1be-4353-acaf-8eda782ef759">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="72087cea-9df9-48cd-b5ab-3aff08f5043f">&lt;linkText&gt;</bpt>RandomNum<ept id="72087cea-9df9-48cd-b5ab-3aff08f5043f">&lt;/linkText&gt;</ept><bpt id="72087cea-9df9-48cd-b5ab-3aff08f5043f">&lt;title&gt;</bpt><ept id="72087cea-9df9-48cd-b5ab-3aff08f5043f">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="4d6960a9-c029-4cf1-a3dd-77f9edc8f2bf" xml:space="preserve">
          <source><bpt id="e06dc539-2f97-4132-a8a2-0416c751543a">&lt;strong&gt;</bpt>Multi-valued<ept id="e06dc539-2f97-4132-a8a2-0416c751543a">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="e06dc539-2f97-4132-a8a2-0416c751543a">&lt;strong&gt;</bpt>Multi-valued<ept id="e06dc539-2f97-4132-a8a2-0416c751543a">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="5c40f5c6-40e8-4629-9ee0-671085805603" xml:space="preserve">
          <source><bpt id="f32afdff-2b1c-4b1b-8928-88f0c1829ff3">&lt;linkText&gt;</bpt>Contains<ept id="f32afdff-2b1c-4b1b-8928-88f0c1829ff3">&lt;/linkText&gt;</ept><bpt id="f32afdff-2b1c-4b1b-8928-88f0c1829ff3">&lt;title&gt;</bpt><ept id="f32afdff-2b1c-4b1b-8928-88f0c1829ff3">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="6b99acb9-4ffc-4309-bd0d-49a66d82eb55">&lt;linkText&gt;</bpt>Count<ept id="6b99acb9-4ffc-4309-bd0d-49a66d82eb55">&lt;/linkText&gt;</ept><bpt id="6b99acb9-4ffc-4309-bd0d-49a66d82eb55">&lt;title&gt;</bpt><ept id="6b99acb9-4ffc-4309-bd0d-49a66d82eb55">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="b871ae7f-eb71-4aeb-89fa-0753121f40ea">&lt;linkText&gt;</bpt>Item<ept id="b871ae7f-eb71-4aeb-89fa-0753121f40ea">&lt;/linkText&gt;</ept><bpt id="b871ae7f-eb71-4aeb-89fa-0753121f40ea">&lt;title&gt;</bpt><ept id="b871ae7f-eb71-4aeb-89fa-0753121f40ea">&lt;/title&gt;</ept>   &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="00cc68d6-7221-4f25-9072-5d28da82681c">&lt;linkText&gt;</bpt>ItemOrNull<ept id="00cc68d6-7221-4f25-9072-5d28da82681c">&lt;/linkText&gt;</ept><bpt id="00cc68d6-7221-4f25-9072-5d28da82681c">&lt;title&gt;</bpt><ept id="00cc68d6-7221-4f25-9072-5d28da82681c">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="737eff4f-7bf8-42bd-9dda-e9628191f0ec">&lt;linkText&gt;</bpt>Join<ept id="737eff4f-7bf8-42bd-9dda-e9628191f0ec">&lt;/linkText&gt;</ept><bpt id="737eff4f-7bf8-42bd-9dda-e9628191f0ec">&lt;title&gt;</bpt><ept id="737eff4f-7bf8-42bd-9dda-e9628191f0ec">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="af4aeb45-950c-4031-881a-5f869459eceb">&lt;linkText&gt;</bpt>RemoveDuplicates<ept id="af4aeb45-950c-4031-881a-5f869459eceb">&lt;/linkText&gt;</ept><bpt id="af4aeb45-950c-4031-881a-5f869459eceb">&lt;title&gt;</bpt><ept id="af4aeb45-950c-4031-881a-5f869459eceb">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="1b2a3280-fd36-4a3d-8694-f08d6ba14b60">&lt;linkText&gt;</bpt>Split<ept id="1b2a3280-fd36-4a3d-8694-f08d6ba14b60">&lt;/linkText&gt;</ept><bpt id="1b2a3280-fd36-4a3d-8694-f08d6ba14b60">&lt;title&gt;</bpt><ept id="1b2a3280-fd36-4a3d-8694-f08d6ba14b60">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="f32afdff-2b1c-4b1b-8928-88f0c1829ff3">&lt;linkText&gt;</bpt>Contains<ept id="f32afdff-2b1c-4b1b-8928-88f0c1829ff3">&lt;/linkText&gt;</ept><bpt id="f32afdff-2b1c-4b1b-8928-88f0c1829ff3">&lt;title&gt;</bpt><ept id="f32afdff-2b1c-4b1b-8928-88f0c1829ff3">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="6b99acb9-4ffc-4309-bd0d-49a66d82eb55">&lt;linkText&gt;</bpt>Count<ept id="6b99acb9-4ffc-4309-bd0d-49a66d82eb55">&lt;/linkText&gt;</ept><bpt id="6b99acb9-4ffc-4309-bd0d-49a66d82eb55">&lt;title&gt;</bpt><ept id="6b99acb9-4ffc-4309-bd0d-49a66d82eb55">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="b871ae7f-eb71-4aeb-89fa-0753121f40ea">&lt;linkText&gt;</bpt>Item<ept id="b871ae7f-eb71-4aeb-89fa-0753121f40ea">&lt;/linkText&gt;</ept><bpt id="b871ae7f-eb71-4aeb-89fa-0753121f40ea">&lt;title&gt;</bpt><ept id="b871ae7f-eb71-4aeb-89fa-0753121f40ea">&lt;/title&gt;</ept>   &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="00cc68d6-7221-4f25-9072-5d28da82681c">&lt;linkText&gt;</bpt>ItemOrNull<ept id="00cc68d6-7221-4f25-9072-5d28da82681c">&lt;/linkText&gt;</ept><bpt id="00cc68d6-7221-4f25-9072-5d28da82681c">&lt;title&gt;</bpt><ept id="00cc68d6-7221-4f25-9072-5d28da82681c">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="737eff4f-7bf8-42bd-9dda-e9628191f0ec">&lt;linkText&gt;</bpt>Join<ept id="737eff4f-7bf8-42bd-9dda-e9628191f0ec">&lt;/linkText&gt;</ept><bpt id="737eff4f-7bf8-42bd-9dda-e9628191f0ec">&lt;title&gt;</bpt><ept id="737eff4f-7bf8-42bd-9dda-e9628191f0ec">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="af4aeb45-950c-4031-881a-5f869459eceb">&lt;linkText&gt;</bpt>RemoveDuplicates<ept id="af4aeb45-950c-4031-881a-5f869459eceb">&lt;/linkText&gt;</ept><bpt id="af4aeb45-950c-4031-881a-5f869459eceb">&lt;title&gt;</bpt><ept id="af4aeb45-950c-4031-881a-5f869459eceb">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="1b2a3280-fd36-4a3d-8694-f08d6ba14b60">&lt;linkText&gt;</bpt>Split<ept id="1b2a3280-fd36-4a3d-8694-f08d6ba14b60">&lt;/linkText&gt;</ept><bpt id="1b2a3280-fd36-4a3d-8694-f08d6ba14b60">&lt;title&gt;</bpt><ept id="1b2a3280-fd36-4a3d-8694-f08d6ba14b60">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="505bad7d-0702-4de2-8758-b49403cd615b" xml:space="preserve">
          <source><bpt id="09ab1141-c518-4e39-ab0f-8c2fa0f1f1ea">&lt;strong&gt;</bpt>Program Flow:<ept id="09ab1141-c518-4e39-ab0f-8c2fa0f1f1ea">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="09ab1141-c518-4e39-ab0f-8c2fa0f1f1ea">&lt;strong&gt;</bpt>Program Flow:<ept id="09ab1141-c518-4e39-ab0f-8c2fa0f1f1ea">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="374ecaa7-4e41-45e3-883a-5c47a876b592" xml:space="preserve">
          <source><bpt id="f9747070-b5d6-412f-9898-8f5fa21e1c65">&lt;linkText&gt;</bpt>Error<ept id="f9747070-b5d6-412f-9898-8f5fa21e1c65">&lt;/linkText&gt;</ept><bpt id="f9747070-b5d6-412f-9898-8f5fa21e1c65">&lt;title&gt;</bpt><ept id="f9747070-b5d6-412f-9898-8f5fa21e1c65">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="020973c2-d566-4c61-9fa8-fb355cbb823b">&lt;linkText&gt;</bpt>IIF<ept id="020973c2-d566-4c61-9fa8-fb355cbb823b">&lt;/linkText&gt;</ept><bpt id="020973c2-d566-4c61-9fa8-fb355cbb823b">&lt;title&gt;</bpt><ept id="020973c2-d566-4c61-9fa8-fb355cbb823b">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="431394a7-7c65-43b7-9c8b-532fd9de49be">&lt;linkText&gt;</bpt>Switch<ept id="431394a7-7c65-43b7-9c8b-532fd9de49be">&lt;/linkText&gt;</ept><bpt id="431394a7-7c65-43b7-9c8b-532fd9de49be">&lt;title&gt;</bpt><ept id="431394a7-7c65-43b7-9c8b-532fd9de49be">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="f9747070-b5d6-412f-9898-8f5fa21e1c65">&lt;linkText&gt;</bpt>Error<ept id="f9747070-b5d6-412f-9898-8f5fa21e1c65">&lt;/linkText&gt;</ept><bpt id="f9747070-b5d6-412f-9898-8f5fa21e1c65">&lt;title&gt;</bpt><ept id="f9747070-b5d6-412f-9898-8f5fa21e1c65">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="020973c2-d566-4c61-9fa8-fb355cbb823b">&lt;linkText&gt;</bpt>IIF<ept id="020973c2-d566-4c61-9fa8-fb355cbb823b">&lt;/linkText&gt;</ept><bpt id="020973c2-d566-4c61-9fa8-fb355cbb823b">&lt;title&gt;</bpt><ept id="020973c2-d566-4c61-9fa8-fb355cbb823b">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="431394a7-7c65-43b7-9c8b-532fd9de49be">&lt;linkText&gt;</bpt>Switch<ept id="431394a7-7c65-43b7-9c8b-532fd9de49be">&lt;/linkText&gt;</ept><bpt id="431394a7-7c65-43b7-9c8b-532fd9de49be">&lt;title&gt;</bpt><ept id="431394a7-7c65-43b7-9c8b-532fd9de49be">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="162e2e9d-b2cd-4d93-82a9-bf3c8c63d856" xml:space="preserve">
          <source><bpt id="72d2ccb6-1aa9-4fd8-b7f3-50fd37f3c537">&lt;strong&gt;</bpt>Text<ept id="72d2ccb6-1aa9-4fd8-b7f3-50fd37f3c537">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="72d2ccb6-1aa9-4fd8-b7f3-50fd37f3c537">&lt;strong&gt;</bpt>Text<ept id="72d2ccb6-1aa9-4fd8-b7f3-50fd37f3c537">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="445ba65a-95be-49b6-ac83-cc9b1e64c9c9" xml:space="preserve">
          <source><bpt id="bd457bda-c32e-4995-b861-2b491abcf9ef">&lt;linkText&gt;</bpt>GUID<ept id="bd457bda-c32e-4995-b861-2b491abcf9ef">&lt;/linkText&gt;</ept><bpt id="bd457bda-c32e-4995-b861-2b491abcf9ef">&lt;title&gt;</bpt><ept id="bd457bda-c32e-4995-b861-2b491abcf9ef">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="9a4ea398-ec33-46e2-9383-4abfa3cf3f06">&lt;linkText&gt;</bpt>InStr<ept id="9a4ea398-ec33-46e2-9383-4abfa3cf3f06">&lt;/linkText&gt;</ept><bpt id="9a4ea398-ec33-46e2-9383-4abfa3cf3f06">&lt;title&gt;</bpt><ept id="9a4ea398-ec33-46e2-9383-4abfa3cf3f06">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="6072203f-252d-4756-b7e7-24aa2ad4e630">&lt;linkText&gt;</bpt>InStrRev<ept id="6072203f-252d-4756-b7e7-24aa2ad4e630">&lt;/linkText&gt;</ept><bpt id="6072203f-252d-4756-b7e7-24aa2ad4e630">&lt;title&gt;</bpt><ept id="6072203f-252d-4756-b7e7-24aa2ad4e630">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="daa411d9-6c53-4ebe-bfeb-e10ea24bd6c9">&lt;linkText&gt;</bpt>LCase<ept id="daa411d9-6c53-4ebe-bfeb-e10ea24bd6c9">&lt;/linkText&gt;</ept><bpt id="daa411d9-6c53-4ebe-bfeb-e10ea24bd6c9">&lt;title&gt;</bpt><ept id="daa411d9-6c53-4ebe-bfeb-e10ea24bd6c9">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="bf36967b-ab70-4fad-b94c-c71af4661b51">&lt;linkText&gt;</bpt>Left<ept id="bf36967b-ab70-4fad-b94c-c71af4661b51">&lt;/linkText&gt;</ept><bpt id="bf36967b-ab70-4fad-b94c-c71af4661b51">&lt;title&gt;</bpt><ept id="bf36967b-ab70-4fad-b94c-c71af4661b51">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="c9227118-29b2-4063-b479-322e9260665f">&lt;linkText&gt;</bpt>Len<ept id="c9227118-29b2-4063-b479-322e9260665f">&lt;/linkText&gt;</ept><bpt id="c9227118-29b2-4063-b479-322e9260665f">&lt;title&gt;</bpt><ept id="c9227118-29b2-4063-b479-322e9260665f">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="d0943b8f-da82-4bf2-8eb4-74d6e16af4cd">&lt;linkText&gt;</bpt>LTrim<ept id="d0943b8f-da82-4bf2-8eb4-74d6e16af4cd">&lt;/linkText&gt;</ept><bpt id="d0943b8f-da82-4bf2-8eb4-74d6e16af4cd">&lt;title&gt;</bpt><ept id="d0943b8f-da82-4bf2-8eb4-74d6e16af4cd">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="dbad9021-72c0-40e6-ab85-2003e89ddb7c">&lt;linkText&gt;</bpt>Mid<ept id="dbad9021-72c0-40e6-ab85-2003e89ddb7c">&lt;/linkText&gt;</ept><bpt id="dbad9021-72c0-40e6-ab85-2003e89ddb7c">&lt;title&gt;</bpt><ept id="dbad9021-72c0-40e6-ab85-2003e89ddb7c">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="3b099004-65ef-445c-b837-c2bec54cefa7">&lt;linkText&gt;</bpt>PadLeft<ept id="3b099004-65ef-445c-b837-c2bec54cefa7">&lt;/linkText&gt;</ept><bpt id="3b099004-65ef-445c-b837-c2bec54cefa7">&lt;title&gt;</bpt><ept id="3b099004-65ef-445c-b837-c2bec54cefa7">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="8d8b5b23-8da0-41f2-a6b3-7349301ca43b">&lt;linkText&gt;</bpt>PadRight<ept id="8d8b5b23-8da0-41f2-a6b3-7349301ca43b">&lt;/linkText&gt;</ept><bpt id="8d8b5b23-8da0-41f2-a6b3-7349301ca43b">&lt;title&gt;</bpt><ept id="8d8b5b23-8da0-41f2-a6b3-7349301ca43b">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="b4cc45cf-1068-4876-bb30-503768c145f4">&lt;linkText&gt;</bpt>PCase<ept id="b4cc45cf-1068-4876-bb30-503768c145f4">&lt;/linkText&gt;</ept><bpt id="b4cc45cf-1068-4876-bb30-503768c145f4">&lt;title&gt;</bpt><ept id="b4cc45cf-1068-4876-bb30-503768c145f4">&lt;/title&gt;</ept>   &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="d1188c99-1d7d-43df-b6e3-5d1219b6513f">&lt;linkText&gt;</bpt>Replace<ept id="d1188c99-1d7d-43df-b6e3-5d1219b6513f">&lt;/linkText&gt;</ept><bpt id="d1188c99-1d7d-43df-b6e3-5d1219b6513f">&lt;title&gt;</bpt><ept id="d1188c99-1d7d-43df-b6e3-5d1219b6513f">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="44b68eac-5864-4540-b367-c41aebd5d859">&lt;linkText&gt;</bpt>ReplaceChars<ept id="44b68eac-5864-4540-b367-c41aebd5d859">&lt;/linkText&gt;</ept><bpt id="44b68eac-5864-4540-b367-c41aebd5d859">&lt;title&gt;</bpt><ept id="44b68eac-5864-4540-b367-c41aebd5d859">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="832c56ac-1858-42a8-9be1-c38ed3e5d323">&lt;linkText&gt;</bpt>Right<ept id="832c56ac-1858-42a8-9be1-c38ed3e5d323">&lt;/linkText&gt;</ept><bpt id="832c56ac-1858-42a8-9be1-c38ed3e5d323">&lt;title&gt;</bpt><ept id="832c56ac-1858-42a8-9be1-c38ed3e5d323">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="8d83abc7-638e-4a48-970b-e5b8f19859e5">&lt;linkText&gt;</bpt>RTrim<ept id="8d83abc7-638e-4a48-970b-e5b8f19859e5">&lt;/linkText&gt;</ept><bpt id="8d83abc7-638e-4a48-970b-e5b8f19859e5">&lt;title&gt;</bpt><ept id="8d83abc7-638e-4a48-970b-e5b8f19859e5">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="5daaf149-ca26-4b23-baca-fb44d6318bf7">&lt;linkText&gt;</bpt>Trim<ept id="5daaf149-ca26-4b23-baca-fb44d6318bf7">&lt;/linkText&gt;</ept><bpt id="5daaf149-ca26-4b23-baca-fb44d6318bf7">&lt;title&gt;</bpt><ept id="5daaf149-ca26-4b23-baca-fb44d6318bf7">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="d62e98c9-a4a3-4ebe-94ee-439a1f5e3d55">&lt;linkText&gt;</bpt>UCase<ept id="d62e98c9-a4a3-4ebe-94ee-439a1f5e3d55">&lt;/linkText&gt;</ept><bpt id="d62e98c9-a4a3-4ebe-94ee-439a1f5e3d55">&lt;title&gt;</bpt><ept id="d62e98c9-a4a3-4ebe-94ee-439a1f5e3d55">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="762aa433-ea43-4d07-8abf-3218322923b6">&lt;linkText&gt;</bpt>Word<ept id="762aa433-ea43-4d07-8abf-3218322923b6">&lt;/linkText&gt;</ept><bpt id="762aa433-ea43-4d07-8abf-3218322923b6">&lt;title&gt;</bpt><ept id="762aa433-ea43-4d07-8abf-3218322923b6">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="bd457bda-c32e-4995-b861-2b491abcf9ef">&lt;linkText&gt;</bpt>GUID<ept id="bd457bda-c32e-4995-b861-2b491abcf9ef">&lt;/linkText&gt;</ept><bpt id="bd457bda-c32e-4995-b861-2b491abcf9ef">&lt;title&gt;</bpt><ept id="bd457bda-c32e-4995-b861-2b491abcf9ef">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="9a4ea398-ec33-46e2-9383-4abfa3cf3f06">&lt;linkText&gt;</bpt>InStr<ept id="9a4ea398-ec33-46e2-9383-4abfa3cf3f06">&lt;/linkText&gt;</ept><bpt id="9a4ea398-ec33-46e2-9383-4abfa3cf3f06">&lt;title&gt;</bpt><ept id="9a4ea398-ec33-46e2-9383-4abfa3cf3f06">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="6072203f-252d-4756-b7e7-24aa2ad4e630">&lt;linkText&gt;</bpt>InStrRev<ept id="6072203f-252d-4756-b7e7-24aa2ad4e630">&lt;/linkText&gt;</ept><bpt id="6072203f-252d-4756-b7e7-24aa2ad4e630">&lt;title&gt;</bpt><ept id="6072203f-252d-4756-b7e7-24aa2ad4e630">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="daa411d9-6c53-4ebe-bfeb-e10ea24bd6c9">&lt;linkText&gt;</bpt>LCase<ept id="daa411d9-6c53-4ebe-bfeb-e10ea24bd6c9">&lt;/linkText&gt;</ept><bpt id="daa411d9-6c53-4ebe-bfeb-e10ea24bd6c9">&lt;title&gt;</bpt><ept id="daa411d9-6c53-4ebe-bfeb-e10ea24bd6c9">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="bf36967b-ab70-4fad-b94c-c71af4661b51">&lt;linkText&gt;</bpt>Left<ept id="bf36967b-ab70-4fad-b94c-c71af4661b51">&lt;/linkText&gt;</ept><bpt id="bf36967b-ab70-4fad-b94c-c71af4661b51">&lt;title&gt;</bpt><ept id="bf36967b-ab70-4fad-b94c-c71af4661b51">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="c9227118-29b2-4063-b479-322e9260665f">&lt;linkText&gt;</bpt>Len<ept id="c9227118-29b2-4063-b479-322e9260665f">&lt;/linkText&gt;</ept><bpt id="c9227118-29b2-4063-b479-322e9260665f">&lt;title&gt;</bpt><ept id="c9227118-29b2-4063-b479-322e9260665f">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="d0943b8f-da82-4bf2-8eb4-74d6e16af4cd">&lt;linkText&gt;</bpt>LTrim<ept id="d0943b8f-da82-4bf2-8eb4-74d6e16af4cd">&lt;/linkText&gt;</ept><bpt id="d0943b8f-da82-4bf2-8eb4-74d6e16af4cd">&lt;title&gt;</bpt><ept id="d0943b8f-da82-4bf2-8eb4-74d6e16af4cd">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="dbad9021-72c0-40e6-ab85-2003e89ddb7c">&lt;linkText&gt;</bpt>Mid<ept id="dbad9021-72c0-40e6-ab85-2003e89ddb7c">&lt;/linkText&gt;</ept><bpt id="dbad9021-72c0-40e6-ab85-2003e89ddb7c">&lt;title&gt;</bpt><ept id="dbad9021-72c0-40e6-ab85-2003e89ddb7c">&lt;/title&gt;</ept>  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="3b099004-65ef-445c-b837-c2bec54cefa7">&lt;linkText&gt;</bpt>PadLeft<ept id="3b099004-65ef-445c-b837-c2bec54cefa7">&lt;/linkText&gt;</ept><bpt id="3b099004-65ef-445c-b837-c2bec54cefa7">&lt;title&gt;</bpt><ept id="3b099004-65ef-445c-b837-c2bec54cefa7">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="8d8b5b23-8da0-41f2-a6b3-7349301ca43b">&lt;linkText&gt;</bpt>PadRight<ept id="8d8b5b23-8da0-41f2-a6b3-7349301ca43b">&lt;/linkText&gt;</ept><bpt id="8d8b5b23-8da0-41f2-a6b3-7349301ca43b">&lt;title&gt;</bpt><ept id="8d8b5b23-8da0-41f2-a6b3-7349301ca43b">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="b4cc45cf-1068-4876-bb30-503768c145f4">&lt;linkText&gt;</bpt>PCase<ept id="b4cc45cf-1068-4876-bb30-503768c145f4">&lt;/linkText&gt;</ept><bpt id="b4cc45cf-1068-4876-bb30-503768c145f4">&lt;title&gt;</bpt><ept id="b4cc45cf-1068-4876-bb30-503768c145f4">&lt;/title&gt;</ept>   &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="d1188c99-1d7d-43df-b6e3-5d1219b6513f">&lt;linkText&gt;</bpt>Replace<ept id="d1188c99-1d7d-43df-b6e3-5d1219b6513f">&lt;/linkText&gt;</ept><bpt id="d1188c99-1d7d-43df-b6e3-5d1219b6513f">&lt;title&gt;</bpt><ept id="d1188c99-1d7d-43df-b6e3-5d1219b6513f">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="44b68eac-5864-4540-b367-c41aebd5d859">&lt;linkText&gt;</bpt>ReplaceChars<ept id="44b68eac-5864-4540-b367-c41aebd5d859">&lt;/linkText&gt;</ept><bpt id="44b68eac-5864-4540-b367-c41aebd5d859">&lt;title&gt;</bpt><ept id="44b68eac-5864-4540-b367-c41aebd5d859">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="832c56ac-1858-42a8-9be1-c38ed3e5d323">&lt;linkText&gt;</bpt>Right<ept id="832c56ac-1858-42a8-9be1-c38ed3e5d323">&lt;/linkText&gt;</ept><bpt id="832c56ac-1858-42a8-9be1-c38ed3e5d323">&lt;title&gt;</bpt><ept id="832c56ac-1858-42a8-9be1-c38ed3e5d323">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="8d83abc7-638e-4a48-970b-e5b8f19859e5">&lt;linkText&gt;</bpt>RTrim<ept id="8d83abc7-638e-4a48-970b-e5b8f19859e5">&lt;/linkText&gt;</ept><bpt id="8d83abc7-638e-4a48-970b-e5b8f19859e5">&lt;title&gt;</bpt><ept id="8d83abc7-638e-4a48-970b-e5b8f19859e5">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="5daaf149-ca26-4b23-baca-fb44d6318bf7">&lt;linkText&gt;</bpt>Trim<ept id="5daaf149-ca26-4b23-baca-fb44d6318bf7">&lt;/linkText&gt;</ept><bpt id="5daaf149-ca26-4b23-baca-fb44d6318bf7">&lt;title&gt;</bpt><ept id="5daaf149-ca26-4b23-baca-fb44d6318bf7">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="d62e98c9-a4a3-4ebe-94ee-439a1f5e3d55">&lt;linkText&gt;</bpt>UCase<ept id="d62e98c9-a4a3-4ebe-94ee-439a1f5e3d55">&lt;/linkText&gt;</ept><bpt id="d62e98c9-a4a3-4ebe-94ee-439a1f5e3d55">&lt;title&gt;</bpt><ept id="d62e98c9-a4a3-4ebe-94ee-439a1f5e3d55">&lt;/title&gt;</ept> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <bpt id="762aa433-ea43-4d07-8abf-3218322923b6">&lt;linkText&gt;</bpt>Word<ept id="762aa433-ea43-4d07-8abf-3218322923b6">&lt;/linkText&gt;</ept><bpt id="762aa433-ea43-4d07-8abf-3218322923b6">&lt;title&gt;</bpt><ept id="762aa433-ea43-4d07-8abf-3218322923b6">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="14d8d2d7-4e11-44c2-a7a0-008e05687304" xml:space="preserve">
          <source><bpt id="281db93f-4ef0-4ab5-a7e2-f72eceb8efb7">&lt;strong&gt;</bpt>Description:<ept id="281db93f-4ef0-4ab5-a7e2-f72eceb8efb7">&lt;/strong&gt;</ept>&lt;br&gt; 
The BitAnd function sets specified bits on a value.</source>
          <target state="new"><bpt id="281db93f-4ef0-4ab5-a7e2-f72eceb8efb7">&lt;strong&gt;</bpt>Description:<ept id="281db93f-4ef0-4ab5-a7e2-f72eceb8efb7">&lt;/strong&gt;</ept>&lt;br&gt; 
The BitAnd function sets specified bits on a value.</target>
        </trans-unit>
        <trans-unit id="090256db-6882-486a-a8ea-50db71ddbd67" xml:space="preserve">
          <source><bpt id="eb5236c0-6e91-4800-9d5e-08a914b1cd4b">&lt;strong&gt;</bpt>Syntax:<ept id="eb5236c0-6e91-4800-9d5e-08a914b1cd4b">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="b8afb41e-c1ed-4bea-b0c6-67e53aff4e0c">&lt;code&gt;</bpt>num BitAnd(num value1, num value2)<ept id="b8afb41e-c1ed-4bea-b0c6-67e53aff4e0c">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="eb5236c0-6e91-4800-9d5e-08a914b1cd4b">&lt;strong&gt;</bpt>Syntax:<ept id="eb5236c0-6e91-4800-9d5e-08a914b1cd4b">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="b8afb41e-c1ed-4bea-b0c6-67e53aff4e0c">&lt;code&gt;</bpt>num BitAnd(num value1, num value2)<ept id="b8afb41e-c1ed-4bea-b0c6-67e53aff4e0c">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6ccb76bb-a4f7-446d-ba46-9c65338e1db3" xml:space="preserve">
          <source>value1, value2: numeric values which should be AND’ed together</source>
          <target state="new">value1, value2: numeric values which should be AND’ed together</target>
        </trans-unit>
        <trans-unit id="90db660f-101a-4aaa-b4aa-02ed1a245f71" xml:space="preserve">
          <source><bpt id="f9b88d4c-492c-455e-a53b-4f0e8adc6e4a">&lt;strong&gt;</bpt>Remarks:<ept id="f9b88d4c-492c-455e-a53b-4f0e8adc6e4a">&lt;/strong&gt;</ept>&lt;br&gt;
This function converts both parameters to the binary representation and sets a bit to:</source>
          <target state="new"><bpt id="f9b88d4c-492c-455e-a53b-4f0e8adc6e4a">&lt;strong&gt;</bpt>Remarks:<ept id="f9b88d4c-492c-455e-a53b-4f0e8adc6e4a">&lt;/strong&gt;</ept>&lt;br&gt;
This function converts both parameters to the binary representation and sets a bit to:</target>
        </trans-unit>
        <trans-unit id="93c8b7dc-49ab-49e4-9276-7ac5f28e2185" xml:space="preserve">
          <source>0 - if one or both of the corresponding bits in <bpt id="8a5dc749-5715-4bbb-bcb7-e248ff49bc7d">&lt;em&gt;</bpt>mask<ept id="8a5dc749-5715-4bbb-bcb7-e248ff49bc7d">&lt;/em&gt;</ept> and <bpt id="3050eeaa-9f10-4ad8-a4f2-8945b2a26583">&lt;em&gt;</bpt>flag<ept id="3050eeaa-9f10-4ad8-a4f2-8945b2a26583">&lt;/em&gt;</ept> are 0</source>
          <target state="new">0 - if one or both of the corresponding bits in <bpt id="8a5dc749-5715-4bbb-bcb7-e248ff49bc7d">&lt;em&gt;</bpt>mask<ept id="8a5dc749-5715-4bbb-bcb7-e248ff49bc7d">&lt;/em&gt;</ept> and <bpt id="3050eeaa-9f10-4ad8-a4f2-8945b2a26583">&lt;em&gt;</bpt>flag<ept id="3050eeaa-9f10-4ad8-a4f2-8945b2a26583">&lt;/em&gt;</ept> are 0</target>
        </trans-unit>
        <trans-unit id="e390cbd6-352d-4431-b2c1-a81b961b364a" xml:space="preserve">
          <source>1 - if both of the corresponding bits are 1.</source>
          <target state="new">1 - if both of the corresponding bits are 1.</target>
        </trans-unit>
        <trans-unit id="c8fd11ca-05dc-4aef-8031-42160f74c95f" xml:space="preserve">
          <source>In other words, it returns 0 in all cases except when the corresponding bits of both parameters are 1.</source>
          <target state="new">In other words, it returns 0 in all cases except when the corresponding bits of both parameters are 1.</target>
        </trans-unit>
        <trans-unit id="0b2baf28-998c-4d6d-ac86-f97d07058b54" xml:space="preserve">
          <source><bpt id="c383a23b-9511-40cc-aa11-fe1c264b9005">&lt;strong&gt;</bpt>Example:<ept id="c383a23b-9511-40cc-aa11-fe1c264b9005">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="5475da41-7c2a-4b0a-a66a-ca600f3b5e8a">&lt;code&gt;</bpt>BitAnd(&amp;HF, &amp;HF7)<ept id="5475da41-7c2a-4b0a-a66a-ca600f3b5e8a">&lt;/code&gt;</ept>&lt;br&gt;
Returns 7 because hexadecimal “F” AND “F7” evaluate to this value.</source>
          <target state="new"><bpt id="c383a23b-9511-40cc-aa11-fe1c264b9005">&lt;strong&gt;</bpt>Example:<ept id="c383a23b-9511-40cc-aa11-fe1c264b9005">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="5475da41-7c2a-4b0a-a66a-ca600f3b5e8a">&lt;code&gt;</bpt>BitAnd(&amp;HF, &amp;HF7)<ept id="5475da41-7c2a-4b0a-a66a-ca600f3b5e8a">&lt;/code&gt;</ept>&lt;br&gt;
Returns 7 because hexadecimal “F” AND “F7” evaluate to this value.</target>
        </trans-unit>
        <trans-unit id="3cf1a5ca-5378-4c2a-865a-1ed55c119759" xml:space="preserve">
          <source><bpt id="7a60f8ea-9498-4d0c-a1ff-d053b7424895">&lt;strong&gt;</bpt>Description:<ept id="7a60f8ea-9498-4d0c-a1ff-d053b7424895">&lt;/strong&gt;</ept> &lt;br&gt;
The BitOr function sets specified bits on a value. </source>
          <target state="new"><bpt id="7a60f8ea-9498-4d0c-a1ff-d053b7424895">&lt;strong&gt;</bpt>Description:<ept id="7a60f8ea-9498-4d0c-a1ff-d053b7424895">&lt;/strong&gt;</ept> &lt;br&gt;
The BitOr function sets specified bits on a value. </target>
        </trans-unit>
        <trans-unit id="e89d71d7-ddde-4bf8-a234-2790ced048cf" xml:space="preserve">
          <source><bpt id="b39df318-0186-4e7b-a9fe-776f33ea2a57">&lt;strong&gt;</bpt>Syntax:<ept id="b39df318-0186-4e7b-a9fe-776f33ea2a57">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="5f68cf54-4da2-4309-a0ee-5d80c83453ef">&lt;code&gt;</bpt>num BitOr(num value1, num value2)<ept id="5f68cf54-4da2-4309-a0ee-5d80c83453ef">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="b39df318-0186-4e7b-a9fe-776f33ea2a57">&lt;strong&gt;</bpt>Syntax:<ept id="b39df318-0186-4e7b-a9fe-776f33ea2a57">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="5f68cf54-4da2-4309-a0ee-5d80c83453ef">&lt;code&gt;</bpt>num BitOr(num value1, num value2)<ept id="5f68cf54-4da2-4309-a0ee-5d80c83453ef">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="43c710f6-cad9-4856-ac61-b5222ee443a4" xml:space="preserve">
          <source>value1, value2: numeric values that should be OR’ed together </source>
          <target state="new">value1, value2: numeric values that should be OR’ed together </target>
        </trans-unit>
        <trans-unit id="c504797e-e9f1-4448-8106-4f123f242686" xml:space="preserve">
          <source><bpt id="90446657-6f3b-4ce4-a01f-110b8c89a311">&lt;strong&gt;</bpt>Remarks:<ept id="90446657-6f3b-4ce4-a01f-110b8c89a311">&lt;/strong&gt;</ept> &lt;br&gt;
This function converts both parameters to the binary representation and sets a bit to 1 if one or both of the corresponding bits in mask and flag are 1, and to 0 if both of the corresponding bits are 0. &lt;br&gt;
In other words, it returns 1 in all cases except where the corresponding bits of both parameters are 0. </source>
          <target state="new"><bpt id="90446657-6f3b-4ce4-a01f-110b8c89a311">&lt;strong&gt;</bpt>Remarks:<ept id="90446657-6f3b-4ce4-a01f-110b8c89a311">&lt;/strong&gt;</ept> &lt;br&gt;
This function converts both parameters to the binary representation and sets a bit to 1 if one or both of the corresponding bits in mask and flag are 1, and to 0 if both of the corresponding bits are 0. &lt;br&gt;
In other words, it returns 1 in all cases except where the corresponding bits of both parameters are 0. </target>
        </trans-unit>
        <trans-unit id="d4d52c03-48f2-4ba0-b504-5f180634c28d" xml:space="preserve">
          <source><bpt id="09a26893-9463-42cc-8629-19ea60e3ebd7">&lt;strong&gt;</bpt>Description:<ept id="09a26893-9463-42cc-8629-19ea60e3ebd7">&lt;/strong&gt;</ept>&lt;br&gt;
The CBool function returns a Boolean based on the evaluated expression</source>
          <target state="new"><bpt id="09a26893-9463-42cc-8629-19ea60e3ebd7">&lt;strong&gt;</bpt>Description:<ept id="09a26893-9463-42cc-8629-19ea60e3ebd7">&lt;/strong&gt;</ept>&lt;br&gt;
The CBool function returns a Boolean based on the evaluated expression</target>
        </trans-unit>
        <trans-unit id="335c28ea-55b7-47d1-9018-ee3009118c22" xml:space="preserve">
          <source><bpt id="fa905399-22ce-4753-994a-166923b1e057">&lt;strong&gt;</bpt>Syntax:<ept id="fa905399-22ce-4753-994a-166923b1e057">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="d215521f-ba6a-4513-a612-926dd342d623">&lt;code&gt;</bpt>bool CBool(exp Expression)<ept id="d215521f-ba6a-4513-a612-926dd342d623">&lt;/code&gt;</ept> </source>
          <target state="new"><bpt id="fa905399-22ce-4753-994a-166923b1e057">&lt;strong&gt;</bpt>Syntax:<ept id="fa905399-22ce-4753-994a-166923b1e057">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="d215521f-ba6a-4513-a612-926dd342d623">&lt;code&gt;</bpt>bool CBool(exp Expression)<ept id="d215521f-ba6a-4513-a612-926dd342d623">&lt;/code&gt;</ept> </target>
        </trans-unit>
        <trans-unit id="cdd3b8fc-e45d-4a93-86e5-d6d9b087fece" xml:space="preserve">
          <source><bpt id="de88b053-88fa-437f-872a-e41195f7c332">&lt;strong&gt;</bpt>Remarks:<ept id="de88b053-88fa-437f-872a-e41195f7c332">&lt;/strong&gt;</ept>&lt;br&gt;
If the expression evaluates to a nonzero value then CBool returns True else it returns False.</source>
          <target state="new"><bpt id="de88b053-88fa-437f-872a-e41195f7c332">&lt;strong&gt;</bpt>Remarks:<ept id="de88b053-88fa-437f-872a-e41195f7c332">&lt;/strong&gt;</ept>&lt;br&gt;
If the expression evaluates to a nonzero value then CBool returns True else it returns False.</target>
        </trans-unit>
        <trans-unit id="c4ae3586-50bf-42ce-b778-a84a06e7258e" xml:space="preserve">
          <source><bpt id="29fcb294-146f-4858-a2eb-1da3f98c5492">&lt;strong&gt;</bpt>Example:<ept id="29fcb294-146f-4858-a2eb-1da3f98c5492">&lt;/strong&gt;</ept>&lt;br&gt;
<bpt id="7f8eb20d-f31a-47f2-aa2c-9245fba5e26d">&lt;code&gt;</bpt>CBool([attrib1] = [attrib2])<ept id="7f8eb20d-f31a-47f2-aa2c-9245fba5e26d">&lt;/code&gt;</ept> &lt;br&gt;</source>
          <target state="new"><bpt id="29fcb294-146f-4858-a2eb-1da3f98c5492">&lt;strong&gt;</bpt>Example:<ept id="29fcb294-146f-4858-a2eb-1da3f98c5492">&lt;/strong&gt;</ept>&lt;br&gt;
<bpt id="7f8eb20d-f31a-47f2-aa2c-9245fba5e26d">&lt;code&gt;</bpt>CBool([attrib1] = [attrib2])<ept id="7f8eb20d-f31a-47f2-aa2c-9245fba5e26d">&lt;/code&gt;</ept> &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="f39d0a5e-140f-4054-a08c-dcbb65331f6f" xml:space="preserve">
          <source>Returns True if both attributes have the same value.</source>
          <target state="new">Returns True if both attributes have the same value.</target>
        </trans-unit>
        <trans-unit id="8602935b-f49d-409e-8ac0-8e5d63a6e9c8" xml:space="preserve">
          <source><bpt id="ce631586-e893-46d1-859a-91c70e15f12d">&lt;strong&gt;</bpt>Description:<ept id="ce631586-e893-46d1-859a-91c70e15f12d">&lt;/strong&gt;</ept>&lt;br&gt;
The CDate function returns a UTC DateTime from a string. DateTime is not a native attribute type in Sync but is used by some functions.</source>
          <target state="new"><bpt id="ce631586-e893-46d1-859a-91c70e15f12d">&lt;strong&gt;</bpt>Description:<ept id="ce631586-e893-46d1-859a-91c70e15f12d">&lt;/strong&gt;</ept>&lt;br&gt;
The CDate function returns a UTC DateTime from a string. DateTime is not a native attribute type in Sync but is used by some functions.</target>
        </trans-unit>
        <trans-unit id="cdc4714b-b1a4-4a2f-a224-08409f6453f4" xml:space="preserve">
          <source><bpt id="76010981-f218-4e78-aee8-e402436b09ef">&lt;strong&gt;</bpt>Syntax:<ept id="76010981-f218-4e78-aee8-e402436b09ef">&lt;/strong&gt;</ept>&lt;br&gt;
<bpt id="01b1a54a-a0fb-4d9e-be25-53da26da73b0">&lt;code&gt;</bpt>dt CDate(str value)<ept id="01b1a54a-a0fb-4d9e-be25-53da26da73b0">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="76010981-f218-4e78-aee8-e402436b09ef">&lt;strong&gt;</bpt>Syntax:<ept id="76010981-f218-4e78-aee8-e402436b09ef">&lt;/strong&gt;</ept>&lt;br&gt;
<bpt id="01b1a54a-a0fb-4d9e-be25-53da26da73b0">&lt;code&gt;</bpt>dt CDate(str value)<ept id="01b1a54a-a0fb-4d9e-be25-53da26da73b0">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f1dfc5b8-91ca-454c-a5e2-148ac690d98a" xml:space="preserve">
          <source>Value: A string with a date, time, and optionally time zone</source>
          <target state="new">Value: A string with a date, time, and optionally time zone</target>
        </trans-unit>
        <trans-unit id="fa885f67-e8cb-47a0-883b-daff841beaa3" xml:space="preserve">
          <source><bpt id="0a588031-c758-454e-9f62-b94d6a158afe">&lt;strong&gt;</bpt>Remarks:<ept id="0a588031-c758-454e-9f62-b94d6a158afe">&lt;/strong&gt;</ept>&lt;br&gt;
The returned string is always in UTC. </source>
          <target state="new"><bpt id="0a588031-c758-454e-9f62-b94d6a158afe">&lt;strong&gt;</bpt>Remarks:<ept id="0a588031-c758-454e-9f62-b94d6a158afe">&lt;/strong&gt;</ept>&lt;br&gt;
The returned string is always in UTC. </target>
        </trans-unit>
        <trans-unit id="3e8c0f7e-67b5-4594-ad3e-247990ce58bd" xml:space="preserve">
          <source><bpt id="db7b3e3c-c560-459d-aab4-5d8e080df3b2">&lt;strong&gt;</bpt>Example:<ept id="db7b3e3c-c560-459d-aab4-5d8e080df3b2">&lt;/strong&gt;</ept>&lt;br&gt;
<bpt id="4a00feea-f718-4686-85ae-2bbdab680522">&lt;code&gt;</bpt>CDate([employeeStartTime])<ept id="4a00feea-f718-4686-85ae-2bbdab680522">&lt;/code&gt;</ept> &lt;br&gt;
Returns a DateTime based on the employee’s start time</source>
          <target state="new"><bpt id="db7b3e3c-c560-459d-aab4-5d8e080df3b2">&lt;strong&gt;</bpt>Example:<ept id="db7b3e3c-c560-459d-aab4-5d8e080df3b2">&lt;/strong&gt;</ept>&lt;br&gt;
<bpt id="4a00feea-f718-4686-85ae-2bbdab680522">&lt;code&gt;</bpt>CDate([employeeStartTime])<ept id="4a00feea-f718-4686-85ae-2bbdab680522">&lt;/code&gt;</ept> &lt;br&gt;
Returns a DateTime based on the employee’s start time</target>
        </trans-unit>
        <trans-unit id="df50f87e-3900-4152-8e85-957173b5a957" xml:space="preserve">
          <source><bpt id="6b910fd0-e3ce-47f7-8a9b-617948e3b576">&lt;code&gt;</bpt>CDate("2013-01-10 4:00 PM -8")<ept id="6b910fd0-e3ce-47f7-8a9b-617948e3b576">&lt;/code&gt;</ept> &lt;br&gt;
Returns a DateTime representing "2013-01-11 12:00 AM"</source>
          <target state="new"><bpt id="6b910fd0-e3ce-47f7-8a9b-617948e3b576">&lt;code&gt;</bpt>CDate("2013-01-10 4:00 PM -8")<ept id="6b910fd0-e3ce-47f7-8a9b-617948e3b576">&lt;/code&gt;</ept> &lt;br&gt;
Returns a DateTime representing "2013-01-11 12:00 AM"</target>
        </trans-unit>
        <trans-unit id="e723224e-875d-4ac6-b549-d02ef5d5197b" xml:space="preserve">
          <source><bpt id="b0caae0c-20af-4507-8f31-e0234acb6a57">&lt;strong&gt;</bpt>Description:<ept id="b0caae0c-20af-4507-8f31-e0234acb6a57">&lt;/strong&gt;</ept>&lt;br&gt; 
The CGuid function converts the string representation of a GUID to its binary representation.</source>
          <target state="new"><bpt id="b0caae0c-20af-4507-8f31-e0234acb6a57">&lt;strong&gt;</bpt>Description:<ept id="b0caae0c-20af-4507-8f31-e0234acb6a57">&lt;/strong&gt;</ept>&lt;br&gt; 
The CGuid function converts the string representation of a GUID to its binary representation.</target>
        </trans-unit>
        <trans-unit id="1db20004-51a8-4158-966a-0528038b1427" xml:space="preserve">
          <source><bpt id="4cb960e8-1390-40ae-9166-97ed37789574">&lt;strong&gt;</bpt>Syntax:<ept id="4cb960e8-1390-40ae-9166-97ed37789574">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="18b8bea4-77df-48fa-b276-327c623ba054">&lt;code&gt;</bpt>bin CGuid(str GUID)GUID<ept id="18b8bea4-77df-48fa-b276-327c623ba054">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="4cb960e8-1390-40ae-9166-97ed37789574">&lt;strong&gt;</bpt>Syntax:<ept id="4cb960e8-1390-40ae-9166-97ed37789574">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="18b8bea4-77df-48fa-b276-327c623ba054">&lt;code&gt;</bpt>bin CGuid(str GUID)GUID<ept id="18b8bea4-77df-48fa-b276-327c623ba054">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0ae002ee-ec10-4b99-a101-fbe5591ef283" xml:space="preserve">
          <source>A String formatted in this pattern: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx or {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}</source>
          <target state="new">A String formatted in this pattern: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx or {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}</target>
        </trans-unit>
        <trans-unit id="cfb55da7-7034-4eae-95d3-765adb0fa851" xml:space="preserve">
          <source><bpt id="394afc96-45e0-4da4-9e3e-0d0ca318a2a9">&lt;strong&gt;</bpt>Description:<ept id="394afc96-45e0-4da4-9e3e-0d0ca318a2a9">&lt;/strong&gt;</ept>&lt;br&gt; 
The Contains function finds a string inside a multi-valued attribute</source>
          <target state="new"><bpt id="394afc96-45e0-4da4-9e3e-0d0ca318a2a9">&lt;strong&gt;</bpt>Description:<ept id="394afc96-45e0-4da4-9e3e-0d0ca318a2a9">&lt;/strong&gt;</ept>&lt;br&gt; 
The Contains function finds a string inside a multi-valued attribute</target>
        </trans-unit>
        <trans-unit id="2fef7bf9-5691-4fbb-a6e5-322b0213bb2d" xml:space="preserve">
          <source><bpt id="3add029b-6f42-42f6-a19d-6d30cc4bc54d">&lt;strong&gt;</bpt>Syntax:<ept id="3add029b-6f42-42f6-a19d-6d30cc4bc54d">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="ec9e3b87-7ff2-4660-8878-9109c1051ec8">&lt;code&gt;</bpt>num Contains (mvstring attribute, str search)<ept id="ec9e3b87-7ff2-4660-8878-9109c1051ec8">&lt;/code&gt;</ept> - case sensitive&lt;br&gt;
<bpt id="e3c3f4ec-315a-47bd-a6a7-ac5e863f92fb">&lt;code&gt;</bpt>num Contains (mvstring attribute, str search, enum Casetype)<ept id="e3c3f4ec-315a-47bd-a6a7-ac5e863f92fb">&lt;/code&gt;</ept>&lt;br&gt;
<bpt id="cd51d584-f73b-4567-9a7b-658204121f09">&lt;code&gt;</bpt>num Contains (mvref attribute, str search)<ept id="cd51d584-f73b-4567-9a7b-658204121f09">&lt;/code&gt;</ept> - case sensitive</source>
          <target state="new"><bpt id="3add029b-6f42-42f6-a19d-6d30cc4bc54d">&lt;strong&gt;</bpt>Syntax:<ept id="3add029b-6f42-42f6-a19d-6d30cc4bc54d">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="ec9e3b87-7ff2-4660-8878-9109c1051ec8">&lt;code&gt;</bpt>num Contains (mvstring attribute, str search)<ept id="ec9e3b87-7ff2-4660-8878-9109c1051ec8">&lt;/code&gt;</ept> - case sensitive&lt;br&gt;
<bpt id="e3c3f4ec-315a-47bd-a6a7-ac5e863f92fb">&lt;code&gt;</bpt>num Contains (mvstring attribute, str search, enum Casetype)<ept id="e3c3f4ec-315a-47bd-a6a7-ac5e863f92fb">&lt;/code&gt;</ept>&lt;br&gt;
<bpt id="cd51d584-f73b-4567-9a7b-658204121f09">&lt;code&gt;</bpt>num Contains (mvref attribute, str search)<ept id="cd51d584-f73b-4567-9a7b-658204121f09">&lt;/code&gt;</ept> - case sensitive</target>
        </trans-unit>
        <trans-unit id="49f304d6-85c9-41ec-b202-f38a09314c4a" xml:space="preserve">
          <source>attribute: the multi-valued attribute to search.&lt;br&gt;</source>
          <target state="new">attribute: the multi-valued attribute to search.&lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="d9a90fee-94db-4155-b2a5-94291de4f0af" xml:space="preserve">
          <source>search: string to find in the attribute.&lt;br&gt;</source>
          <target state="new">search: string to find in the attribute.&lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="92670320-bc59-4ebe-b8e6-663a2de6976b" xml:space="preserve">
          <source>Casetype: CaseInsensitive or CaseSensitive.&lt;br&gt;</source>
          <target state="new">Casetype: CaseInsensitive or CaseSensitive.&lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="f0c84601-c25a-42a6-b94d-17391745c536" xml:space="preserve">
          <source>Returns index in the multi-valued attribute where the string was found.</source>
          <target state="new">Returns index in the multi-valued attribute where the string was found.</target>
        </trans-unit>
        <trans-unit id="baeca48d-6417-4c40-81d0-374518868d48" xml:space="preserve">
          <source>0 is returned if the string is not found.</source>
          <target state="new">0 is returned if the string is not found.</target>
        </trans-unit>
        <trans-unit id="0513dc5d-97bf-47c4-88b3-f0f9ab322856" xml:space="preserve">
          <source><bpt id="8f79fa3f-69b1-49d3-be20-4ba0f31dc8db">&lt;strong&gt;</bpt>Remarks:<ept id="8f79fa3f-69b1-49d3-be20-4ba0f31dc8db">&lt;/strong&gt;</ept>&lt;br&gt; 
For multi-valued string attributes the search will find substrings in the values.&lt;br&gt;
For reference attributes, the searched string must exactly match the value to be considered a match. </source>
          <target state="new"><bpt id="8f79fa3f-69b1-49d3-be20-4ba0f31dc8db">&lt;strong&gt;</bpt>Remarks:<ept id="8f79fa3f-69b1-49d3-be20-4ba0f31dc8db">&lt;/strong&gt;</ept>&lt;br&gt; 
For multi-valued string attributes the search will find substrings in the values.&lt;br&gt;
For reference attributes, the searched string must exactly match the value to be considered a match. </target>
        </trans-unit>
        <trans-unit id="c1a7ca91-4a63-4471-8ee9-ecb694489fed" xml:space="preserve">
          <source><bpt id="eb9a3e2f-a4e6-4bd2-9372-3eaca4f77778">&lt;strong&gt;</bpt>Example:<ept id="eb9a3e2f-a4e6-4bd2-9372-3eaca4f77778">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="3c17ca73-fff2-4e72-8ef5-8572bcbd611b">&lt;code&gt;</bpt>IIF(Contains([proxyAddresses],”SMTP:”)&gt;0,[proxyAddresses],Error(“No primary SMTP address found.”))<ept id="3c17ca73-fff2-4e72-8ef5-8572bcbd611b">&lt;/code&gt;</ept>&lt;br&gt;
If the proxyAddresses attribute has a primary email address (indicated by uppercase “SMTP:”) then return the proxyAddress attribute, else return an error.</source>
          <target state="new"><bpt id="eb9a3e2f-a4e6-4bd2-9372-3eaca4f77778">&lt;strong&gt;</bpt>Example:<ept id="eb9a3e2f-a4e6-4bd2-9372-3eaca4f77778">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="3c17ca73-fff2-4e72-8ef5-8572bcbd611b">&lt;code&gt;</bpt>IIF(Contains([proxyAddresses],”SMTP:”)&gt;0,[proxyAddresses],Error(“No primary SMTP address found.”))<ept id="3c17ca73-fff2-4e72-8ef5-8572bcbd611b">&lt;/code&gt;</ept>&lt;br&gt;
If the proxyAddresses attribute has a primary email address (indicated by uppercase “SMTP:”) then return the proxyAddress attribute, else return an error.</target>
        </trans-unit>
        <trans-unit id="370d6cc1-aa44-45c5-bd16-dc5325234879" xml:space="preserve">
          <source><bpt id="f70d85ff-3cf6-4788-9595-3419d17f8bd5">&lt;strong&gt;</bpt>Description:<ept id="f70d85ff-3cf6-4788-9595-3419d17f8bd5">&lt;/strong&gt;</ept>&lt;br&gt; 
The ConvertFromBase64 function converts the specified base64 encoded value to a regular string.</source>
          <target state="new"><bpt id="f70d85ff-3cf6-4788-9595-3419d17f8bd5">&lt;strong&gt;</bpt>Description:<ept id="f70d85ff-3cf6-4788-9595-3419d17f8bd5">&lt;/strong&gt;</ept>&lt;br&gt; 
The ConvertFromBase64 function converts the specified base64 encoded value to a regular string.</target>
        </trans-unit>
        <trans-unit id="945c79cf-7826-4f52-9a75-d04bcc20612a" xml:space="preserve">
          <source><bpt id="c7650670-a430-4a8a-a34b-199ff315ec09">&lt;strong&gt;</bpt>Syntax:<ept id="c7650670-a430-4a8a-a34b-199ff315ec09">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="180e9585-921b-4e47-81ad-ff5dcb0bbfe0">&lt;code&gt;</bpt>str ConvertFromBase64(str source)<ept id="180e9585-921b-4e47-81ad-ff5dcb0bbfe0">&lt;/code&gt;</ept> - assumes Unicode for encoding &lt;br&gt;
<bpt id="2a07a083-e9e6-4b1a-ba22-3979221adfb4">&lt;code&gt;</bpt>str ConvertFromBase64(str source, enum Encoding)<ept id="2a07a083-e9e6-4b1a-ba22-3979221adfb4">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="c7650670-a430-4a8a-a34b-199ff315ec09">&lt;strong&gt;</bpt>Syntax:<ept id="c7650670-a430-4a8a-a34b-199ff315ec09">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="180e9585-921b-4e47-81ad-ff5dcb0bbfe0">&lt;code&gt;</bpt>str ConvertFromBase64(str source)<ept id="180e9585-921b-4e47-81ad-ff5dcb0bbfe0">&lt;/code&gt;</ept> - assumes Unicode for encoding &lt;br&gt;
<bpt id="2a07a083-e9e6-4b1a-ba22-3979221adfb4">&lt;code&gt;</bpt>str ConvertFromBase64(str source, enum Encoding)<ept id="2a07a083-e9e6-4b1a-ba22-3979221adfb4">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f70f5de3-aaf0-4af9-a6a9-b98b5338811f" xml:space="preserve">
          <source>source: Base64 encoded string&lt;br&gt;</source>
          <target state="new">source: Base64 encoded string&lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="18805385-4c34-422b-ad7e-f648f0f7f3dd" xml:space="preserve">
          <source>Encoding: Unicode, ASCII, UTF8</source>
          <target state="new">Encoding: Unicode, ASCII, UTF8</target>
        </trans-unit>
        <trans-unit id="9a6f1817-6254-4d0a-b78b-5815b61f11ba" xml:space="preserve">
          <source><bpt id="a1d42872-fda8-4065-92dc-f43448844105">&lt;strong&gt;</bpt>Example<ept id="a1d42872-fda8-4065-92dc-f43448844105">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="27748e25-7e20-4d86-b548-b16c691725a9">&lt;code&gt;</bpt>ConvertFromBase64("SABlAGwAbABvACAAdwBvAHIAbABkACEA")<ept id="27748e25-7e20-4d86-b548-b16c691725a9">&lt;/code&gt;</ept>&lt;br&gt;
<bpt id="6fe0bc57-484a-4901-9601-1877cc455c9b">&lt;code&gt;</bpt>ConvertFromBase64("SGVsbG8gd29ybGQh", UTF8)<ept id="6fe0bc57-484a-4901-9601-1877cc455c9b">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="a1d42872-fda8-4065-92dc-f43448844105">&lt;strong&gt;</bpt>Example<ept id="a1d42872-fda8-4065-92dc-f43448844105">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="27748e25-7e20-4d86-b548-b16c691725a9">&lt;code&gt;</bpt>ConvertFromBase64("SABlAGwAbABvACAAdwBvAHIAbABkACEA")<ept id="27748e25-7e20-4d86-b548-b16c691725a9">&lt;/code&gt;</ept>&lt;br&gt;
<bpt id="6fe0bc57-484a-4901-9601-1877cc455c9b">&lt;code&gt;</bpt>ConvertFromBase64("SGVsbG8gd29ybGQh", UTF8)<ept id="6fe0bc57-484a-4901-9601-1877cc455c9b">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="5de35949-fd9e-43ee-9a39-94a9dd8d4e80" xml:space="preserve">
          <source>Both examples return "<bpt id="944fef81-84c9-4e62-b8b2-792a39e55253">&lt;em&gt;</bpt>Hello world!<ept id="944fef81-84c9-4e62-b8b2-792a39e55253">&lt;/em&gt;</ept>"</source>
          <target state="new">Both examples return "<bpt id="944fef81-84c9-4e62-b8b2-792a39e55253">&lt;em&gt;</bpt>Hello world!<ept id="944fef81-84c9-4e62-b8b2-792a39e55253">&lt;/em&gt;</ept>"</target>
        </trans-unit>
        <trans-unit id="6d56cf00-3534-4280-93eb-e32840e04125" xml:space="preserve">
          <source><bpt id="49d052cf-0b08-4ec8-9e75-43b676e0f6af">&lt;strong&gt;</bpt>Description:<ept id="49d052cf-0b08-4ec8-9e75-43b676e0f6af">&lt;/strong&gt;</ept>&lt;br&gt; 
The ConvertFromUTF8Hex function converts the specified UTF8 Hex encoded value to a string.</source>
          <target state="new"><bpt id="49d052cf-0b08-4ec8-9e75-43b676e0f6af">&lt;strong&gt;</bpt>Description:<ept id="49d052cf-0b08-4ec8-9e75-43b676e0f6af">&lt;/strong&gt;</ept>&lt;br&gt; 
The ConvertFromUTF8Hex function converts the specified UTF8 Hex encoded value to a string.</target>
        </trans-unit>
        <trans-unit id="1e516be0-105f-4762-95df-d27617785bdd" xml:space="preserve">
          <source><bpt id="e3d60a3c-977e-4fc8-853d-d844737bfe9f">&lt;strong&gt;</bpt>Syntax:<ept id="e3d60a3c-977e-4fc8-853d-d844737bfe9f">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="1010b41b-85c4-4865-a2f2-eb754ba95a2a">&lt;code&gt;</bpt>str ConvertFromUTF8Hex(str source)<ept id="1010b41b-85c4-4865-a2f2-eb754ba95a2a">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="e3d60a3c-977e-4fc8-853d-d844737bfe9f">&lt;strong&gt;</bpt>Syntax:<ept id="e3d60a3c-977e-4fc8-853d-d844737bfe9f">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="1010b41b-85c4-4865-a2f2-eb754ba95a2a">&lt;code&gt;</bpt>str ConvertFromUTF8Hex(str source)<ept id="1010b41b-85c4-4865-a2f2-eb754ba95a2a">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="72257df0-6579-4e1b-8b18-2665ea28a467" xml:space="preserve">
          <source>source: UTF8 2-byte encoded sting</source>
          <target state="new">source: UTF8 2-byte encoded sting</target>
        </trans-unit>
        <trans-unit id="e1d91393-f78e-4063-bf2b-e8e8daaadbde" xml:space="preserve">
          <source><bpt id="72596a32-7b84-4c0e-9ac9-6fb1b943bedb">&lt;strong&gt;</bpt>Remarks:<ept id="72596a32-7b84-4c0e-9ac9-6fb1b943bedb">&lt;/strong&gt;</ept>&lt;br&gt; 
The difference between this function and ConvertFromBase64([],UTF8) in that the result is friendly for the DN attribute.&lt;br&gt;
This format is used by Azure Active Directory as DN.</source>
          <target state="new"><bpt id="72596a32-7b84-4c0e-9ac9-6fb1b943bedb">&lt;strong&gt;</bpt>Remarks:<ept id="72596a32-7b84-4c0e-9ac9-6fb1b943bedb">&lt;/strong&gt;</ept>&lt;br&gt; 
The difference between this function and ConvertFromBase64([],UTF8) in that the result is friendly for the DN attribute.&lt;br&gt;
This format is used by Azure Active Directory as DN.</target>
        </trans-unit>
        <trans-unit id="f88561e5-6b29-4e03-a888-dde6253a660e" xml:space="preserve">
          <source><bpt id="91c57580-6476-4c8b-83d8-27bf91483b9e">&lt;strong&gt;</bpt>Example:<ept id="91c57580-6476-4c8b-83d8-27bf91483b9e">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="4ae77162-1554-49e2-8505-c3eaa799229d">&lt;code&gt;</bpt>ConvertFromUTF8Hex("48656C6C6F20776F726C6421")<ept id="4ae77162-1554-49e2-8505-c3eaa799229d">&lt;/code&gt;</ept>&lt;br&gt;
Returns "<bpt id="4d5aaa7f-0275-42df-88f4-cf846f51ea30">&lt;em&gt;</bpt>Hello world!<ept id="4d5aaa7f-0275-42df-88f4-cf846f51ea30">&lt;/em&gt;</ept>"</source>
          <target state="new"><bpt id="91c57580-6476-4c8b-83d8-27bf91483b9e">&lt;strong&gt;</bpt>Example:<ept id="91c57580-6476-4c8b-83d8-27bf91483b9e">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="4ae77162-1554-49e2-8505-c3eaa799229d">&lt;code&gt;</bpt>ConvertFromUTF8Hex("48656C6C6F20776F726C6421")<ept id="4ae77162-1554-49e2-8505-c3eaa799229d">&lt;/code&gt;</ept>&lt;br&gt;
Returns "<bpt id="4d5aaa7f-0275-42df-88f4-cf846f51ea30">&lt;em&gt;</bpt>Hello world!<ept id="4d5aaa7f-0275-42df-88f4-cf846f51ea30">&lt;/em&gt;</ept>"</target>
        </trans-unit>
        <trans-unit id="a7691632-c80e-4108-b7ad-38c900c34c43" xml:space="preserve">
          <source><bpt id="4652bee1-d3cb-48fd-883f-d53a4c257edd">&lt;strong&gt;</bpt>Description:<ept id="4652bee1-d3cb-48fd-883f-d53a4c257edd">&lt;/strong&gt;</ept> &lt;br&gt;
The ConvertToBase64 function converts a string to a Unicode base64 string.&lt;br&gt;
Converts the value of an array of integers to its equivalent string representation that is encoded with base-64 digits.</source>
          <target state="new"><bpt id="4652bee1-d3cb-48fd-883f-d53a4c257edd">&lt;strong&gt;</bpt>Description:<ept id="4652bee1-d3cb-48fd-883f-d53a4c257edd">&lt;/strong&gt;</ept> &lt;br&gt;
The ConvertToBase64 function converts a string to a Unicode base64 string.&lt;br&gt;
Converts the value of an array of integers to its equivalent string representation that is encoded with base-64 digits.</target>
        </trans-unit>
        <trans-unit id="31738915-eb8a-40ee-acc1-ba18fa9c5c88" xml:space="preserve">
          <source><bpt id="0afcd057-7df0-4717-a89a-0c9d9ec8b09e">&lt;strong&gt;</bpt>Syntax:<ept id="0afcd057-7df0-4717-a89a-0c9d9ec8b09e">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="0694e0d9-3f35-400f-a8db-844b261c9f08">&lt;code&gt;</bpt>str ConvertToBase64(str source)<ept id="0694e0d9-3f35-400f-a8db-844b261c9f08">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="0afcd057-7df0-4717-a89a-0c9d9ec8b09e">&lt;strong&gt;</bpt>Syntax:<ept id="0afcd057-7df0-4717-a89a-0c9d9ec8b09e">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="0694e0d9-3f35-400f-a8db-844b261c9f08">&lt;code&gt;</bpt>str ConvertToBase64(str source)<ept id="0694e0d9-3f35-400f-a8db-844b261c9f08">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="22992bb6-edb5-4741-9e17-67c5cc2f0010" xml:space="preserve">
          <source><bpt id="a9eedc36-c217-40a8-9e53-08c82b494be0">&lt;strong&gt;</bpt>Example:<ept id="a9eedc36-c217-40a8-9e53-08c82b494be0">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="4fe0576f-e855-4834-a5f6-c63e2be422b7">&lt;code&gt;</bpt>ConvertToBase64("Hello world!")<ept id="4fe0576f-e855-4834-a5f6-c63e2be422b7">&lt;/code&gt;</ept> &lt;br&gt;
Returns "SABlAGwAbABvACAAdwBvAHIAbABkACEA"</source>
          <target state="new"><bpt id="a9eedc36-c217-40a8-9e53-08c82b494be0">&lt;strong&gt;</bpt>Example:<ept id="a9eedc36-c217-40a8-9e53-08c82b494be0">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="4fe0576f-e855-4834-a5f6-c63e2be422b7">&lt;code&gt;</bpt>ConvertToBase64("Hello world!")<ept id="4fe0576f-e855-4834-a5f6-c63e2be422b7">&lt;/code&gt;</ept> &lt;br&gt;
Returns "SABlAGwAbABvACAAdwBvAHIAbABkACEA"</target>
        </trans-unit>
        <trans-unit id="f7f95767-7a9e-469b-8942-6d86a19bb036" xml:space="preserve">
          <source><bpt id="8ef57c98-2eb7-45de-9063-48a3b4551d63">&lt;strong&gt;</bpt>Description:<ept id="8ef57c98-2eb7-45de-9063-48a3b4551d63">&lt;/strong&gt;</ept>&lt;br&gt; 
The ConvertToUTF8Hex function converts a string to a UTF8 Hex encoded value.</source>
          <target state="new"><bpt id="8ef57c98-2eb7-45de-9063-48a3b4551d63">&lt;strong&gt;</bpt>Description:<ept id="8ef57c98-2eb7-45de-9063-48a3b4551d63">&lt;/strong&gt;</ept>&lt;br&gt; 
The ConvertToUTF8Hex function converts a string to a UTF8 Hex encoded value.</target>
        </trans-unit>
        <trans-unit id="c24531c6-dbb7-4b83-bcb3-c36c19ad957a" xml:space="preserve">
          <source><bpt id="da3b575d-1c55-4809-957c-31eed07ed328">&lt;strong&gt;</bpt>Syntax:<ept id="da3b575d-1c55-4809-957c-31eed07ed328">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="0739cca7-3da4-4dff-9766-fed001cd197e">&lt;code&gt;</bpt>str ConvertToUTF8Hex(str source)<ept id="0739cca7-3da4-4dff-9766-fed001cd197e">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="da3b575d-1c55-4809-957c-31eed07ed328">&lt;strong&gt;</bpt>Syntax:<ept id="da3b575d-1c55-4809-957c-31eed07ed328">&lt;/strong&gt;</ept>&lt;br&gt; 
<bpt id="0739cca7-3da4-4dff-9766-fed001cd197e">&lt;code&gt;</bpt>str ConvertToUTF8Hex(str source)<ept id="0739cca7-3da4-4dff-9766-fed001cd197e">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="3aac00e9-dd8f-455c-b806-fd312df72ad7" xml:space="preserve">
          <source><bpt id="855c5544-2bf1-4210-a901-ef79c6df0b2f">&lt;strong&gt;</bpt>Remarks:<ept id="855c5544-2bf1-4210-a901-ef79c6df0b2f">&lt;/strong&gt;</ept>&lt;br&gt; 
The output format of this function is used by Azure Active Directory as DN attribute format.</source>
          <target state="new"><bpt id="855c5544-2bf1-4210-a901-ef79c6df0b2f">&lt;strong&gt;</bpt>Remarks:<ept id="855c5544-2bf1-4210-a901-ef79c6df0b2f">&lt;/strong&gt;</ept>&lt;br&gt; 
The output format of this function is used by Azure Active Directory as DN attribute format.</target>
        </trans-unit>
        <trans-unit id="ab1db3e5-b6b8-44be-9909-dbf4b2bea4d4" xml:space="preserve">
          <source><bpt id="cf80ce1c-6ad5-4f39-b4dd-cc884dc08a9d">&lt;strong&gt;</bpt>Example:<ept id="cf80ce1c-6ad5-4f39-b4dd-cc884dc08a9d">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="04b27208-15f4-493a-8127-e9da256d652e">&lt;code&gt;</bpt>ConvertToUTF8Hex("Hello world!")<ept id="04b27208-15f4-493a-8127-e9da256d652e">&lt;/code&gt;</ept> &lt;br&gt;
Returns 48656C6C6F20776F726C6421</source>
          <target state="new"><bpt id="cf80ce1c-6ad5-4f39-b4dd-cc884dc08a9d">&lt;strong&gt;</bpt>Example:<ept id="cf80ce1c-6ad5-4f39-b4dd-cc884dc08a9d">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="04b27208-15f4-493a-8127-e9da256d652e">&lt;code&gt;</bpt>ConvertToUTF8Hex("Hello world!")<ept id="04b27208-15f4-493a-8127-e9da256d652e">&lt;/code&gt;</ept> &lt;br&gt;
Returns 48656C6C6F20776F726C6421</target>
        </trans-unit>
        <trans-unit id="d3ecb76a-0bae-403f-9621-e20a868e359b" xml:space="preserve">
          <source><bpt id="9bf16710-1733-487f-a15b-0663c5fe8116">&lt;strong&gt;</bpt>Description:<ept id="9bf16710-1733-487f-a15b-0663c5fe8116">&lt;/strong&gt;</ept>&lt;br&gt; 
The Count function returns the number of elements in a multi-valued attribute</source>
          <target state="new"><bpt id="9bf16710-1733-487f-a15b-0663c5fe8116">&lt;strong&gt;</bpt>Description:<ept id="9bf16710-1733-487f-a15b-0663c5fe8116">&lt;/strong&gt;</ept>&lt;br&gt; 
The Count function returns the number of elements in a multi-valued attribute</target>
        </trans-unit>
        <trans-unit id="52057b85-b49b-4357-b837-1f105cce6792" xml:space="preserve">
          <source><bpt id="1b702a79-85e7-4273-8a45-745dba0ab689">&lt;strong&gt;</bpt>Syntax:<ept id="1b702a79-85e7-4273-8a45-745dba0ab689">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="64d49635-ad7d-47e3-baa9-304d187dd088">&lt;code&gt;</bpt>num Count(mvstr attribute)<ept id="64d49635-ad7d-47e3-baa9-304d187dd088">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="1b702a79-85e7-4273-8a45-745dba0ab689">&lt;strong&gt;</bpt>Syntax:<ept id="1b702a79-85e7-4273-8a45-745dba0ab689">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="64d49635-ad7d-47e3-baa9-304d187dd088">&lt;code&gt;</bpt>num Count(mvstr attribute)<ept id="64d49635-ad7d-47e3-baa9-304d187dd088">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0ab8b001-a80a-4c33-9fa1-a0742d155a7a" xml:space="preserve">
          <source><bpt id="fa80227d-40a0-4e6a-bf9b-7330fc71d0bd">&lt;strong&gt;</bpt>Description:<ept id="fa80227d-40a0-4e6a-bf9b-7330fc71d0bd">&lt;/strong&gt;</ept> &lt;br&gt; 
The CNum function takes a string and returns a numeric data type.</source>
          <target state="new"><bpt id="fa80227d-40a0-4e6a-bf9b-7330fc71d0bd">&lt;strong&gt;</bpt>Description:<ept id="fa80227d-40a0-4e6a-bf9b-7330fc71d0bd">&lt;/strong&gt;</ept> &lt;br&gt; 
The CNum function takes a string and returns a numeric data type.</target>
        </trans-unit>
        <trans-unit id="a31a0145-986b-4231-b10f-809afc60a5b6" xml:space="preserve">
          <source><bpt id="143d045a-70cb-416b-b190-182e12c481fc">&lt;strong&gt;</bpt>Syntax:<ept id="143d045a-70cb-416b-b190-182e12c481fc">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="c33d9c42-5870-4af5-89bc-bbf1fb37cc19">&lt;code&gt;</bpt>num CNum(str value)<ept id="c33d9c42-5870-4af5-89bc-bbf1fb37cc19">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="143d045a-70cb-416b-b190-182e12c481fc">&lt;strong&gt;</bpt>Syntax:<ept id="143d045a-70cb-416b-b190-182e12c481fc">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="c33d9c42-5870-4af5-89bc-bbf1fb37cc19">&lt;code&gt;</bpt>num CNum(str value)<ept id="c33d9c42-5870-4af5-89bc-bbf1fb37cc19">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="51c87605-c36f-41f6-b138-7dcd4d6d131b" xml:space="preserve">
          <source><bpt id="bdbd425d-b3e0-4189-895f-a77db46a339c">&lt;strong&gt;</bpt>Description:<ept id="bdbd425d-b3e0-4189-895f-a77db46a339c">&lt;/strong&gt;</ept> &lt;br&gt; 
Converts a string to a reference attribute</source>
          <target state="new"><bpt id="bdbd425d-b3e0-4189-895f-a77db46a339c">&lt;strong&gt;</bpt>Description:<ept id="bdbd425d-b3e0-4189-895f-a77db46a339c">&lt;/strong&gt;</ept> &lt;br&gt; 
Converts a string to a reference attribute</target>
        </trans-unit>
        <trans-unit id="94f66272-3e87-469d-b7a9-0ac8d4d42ffe" xml:space="preserve">
          <source><bpt id="eb6d11c7-58e5-43ac-918b-79a8f14a0662">&lt;strong&gt;</bpt>Syntax:<ept id="eb6d11c7-58e5-43ac-918b-79a8f14a0662">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="36c80723-1179-4f3b-95d9-4e4aec412f7c">&lt;code&gt;</bpt>ref CRef(str value)<ept id="36c80723-1179-4f3b-95d9-4e4aec412f7c">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="eb6d11c7-58e5-43ac-918b-79a8f14a0662">&lt;strong&gt;</bpt>Syntax:<ept id="eb6d11c7-58e5-43ac-918b-79a8f14a0662">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="36c80723-1179-4f3b-95d9-4e4aec412f7c">&lt;code&gt;</bpt>ref CRef(str value)<ept id="36c80723-1179-4f3b-95d9-4e4aec412f7c">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d45a2bff-cc07-4b9c-9d61-9ccfcd457a67" xml:space="preserve">
          <source><bpt id="f285029e-79be-4dc5-9ab3-9884502a0cd6">&lt;strong&gt;</bpt>Example:<ept id="f285029e-79be-4dc5-9ab3-9884502a0cd6">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="951b2792-05f5-42fe-bc08-7aacde0905fe">&lt;code&gt;</bpt>CRef(“CN=LC Services,CN=Microsoft,CN=lcspool01, CN=Pools,CN=RTC Service,” &amp; %Forest.LDAP%)<ept id="951b2792-05f5-42fe-bc08-7aacde0905fe">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="f285029e-79be-4dc5-9ab3-9884502a0cd6">&lt;strong&gt;</bpt>Example:<ept id="f285029e-79be-4dc5-9ab3-9884502a0cd6">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="951b2792-05f5-42fe-bc08-7aacde0905fe">&lt;code&gt;</bpt>CRef(“CN=LC Services,CN=Microsoft,CN=lcspool01, CN=Pools,CN=RTC Service,” &amp; %Forest.LDAP%)<ept id="951b2792-05f5-42fe-bc08-7aacde0905fe">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d1f35c6c-aa24-4bc2-9825-2e255380982b" xml:space="preserve">
          <source><bpt id="8d2ace59-7c59-4a51-a812-aa178676ec3f">&lt;strong&gt;</bpt>Description:<ept id="8d2ace59-7c59-4a51-a812-aa178676ec3f">&lt;/strong&gt;</ept> &lt;br&gt; 
The CStr function converts to a string data type.</source>
          <target state="new"><bpt id="8d2ace59-7c59-4a51-a812-aa178676ec3f">&lt;strong&gt;</bpt>Description:<ept id="8d2ace59-7c59-4a51-a812-aa178676ec3f">&lt;/strong&gt;</ept> &lt;br&gt; 
The CStr function converts to a string data type.</target>
        </trans-unit>
        <trans-unit id="f3986c43-3ec0-40cc-b5ee-b370c421f66c" xml:space="preserve">
          <source><bpt id="56e39d81-b98a-4074-8b6c-2320658e15fe">&lt;strong&gt;</bpt>Syntax:<ept id="56e39d81-b98a-4074-8b6c-2320658e15fe">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="0931ae43-977f-466f-9b3e-43068da86b2b">&lt;code&gt;</bpt>str CStr(num value)<ept id="0931ae43-977f-466f-9b3e-43068da86b2b">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="aa344232-02aa-4515-8fb1-1c71d36ab43a">&lt;code&gt;</bpt>str CStr(ref value)<ept id="aa344232-02aa-4515-8fb1-1c71d36ab43a">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="2225cc08-36a5-4b62-a1e4-124117642aea">&lt;code&gt;</bpt>str CStr(bool value)<ept id="2225cc08-36a5-4b62-a1e4-124117642aea">&lt;/code&gt;</ept> &lt;br&gt;</source>
          <target state="new"><bpt id="56e39d81-b98a-4074-8b6c-2320658e15fe">&lt;strong&gt;</bpt>Syntax:<ept id="56e39d81-b98a-4074-8b6c-2320658e15fe">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="0931ae43-977f-466f-9b3e-43068da86b2b">&lt;code&gt;</bpt>str CStr(num value)<ept id="0931ae43-977f-466f-9b3e-43068da86b2b">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="aa344232-02aa-4515-8fb1-1c71d36ab43a">&lt;code&gt;</bpt>str CStr(ref value)<ept id="aa344232-02aa-4515-8fb1-1c71d36ab43a">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="2225cc08-36a5-4b62-a1e4-124117642aea">&lt;code&gt;</bpt>str CStr(bool value)<ept id="2225cc08-36a5-4b62-a1e4-124117642aea">&lt;/code&gt;</ept> &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="08234b6c-c3c3-4630-9c3c-a6958703df23" xml:space="preserve">
          <source>value: Can be a numeric value, reference attribute, or Boolean.</source>
          <target state="new">value: Can be a numeric value, reference attribute, or Boolean.</target>
        </trans-unit>
        <trans-unit id="ccf5480f-91a3-4ba0-b59e-8efe38286bb0" xml:space="preserve">
          <source><bpt id="357add62-6f85-4f67-a987-1536d89af393">&lt;strong&gt;</bpt>Example:<ept id="357add62-6f85-4f67-a987-1536d89af393">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="cd14d134-2aee-4af1-a351-e1a9e932048e">&lt;code&gt;</bpt>CStr([dn]) &lt;br&gt;<ept id="cd14d134-2aee-4af1-a351-e1a9e932048e">&lt;/code&gt;</ept>
Could return “cn=Joe,dc=contoso,dc=com”</source>
          <target state="new"><bpt id="357add62-6f85-4f67-a987-1536d89af393">&lt;strong&gt;</bpt>Example:<ept id="357add62-6f85-4f67-a987-1536d89af393">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="cd14d134-2aee-4af1-a351-e1a9e932048e">&lt;code&gt;</bpt>CStr([dn]) &lt;br&gt;<ept id="cd14d134-2aee-4af1-a351-e1a9e932048e">&lt;/code&gt;</ept>
Could return “cn=Joe,dc=contoso,dc=com”</target>
        </trans-unit>
        <trans-unit id="055ef315-c756-4b67-96ec-655225c05303" xml:space="preserve">
          <source><bpt id="9c6f4638-671c-4be1-8997-13c350afc7a3">&lt;strong&gt;</bpt>Description:<ept id="9c6f4638-671c-4be1-8997-13c350afc7a3">&lt;/strong&gt;</ept> &lt;br&gt; 
Returns a Date containing a date to which a specified time interval has been added.</source>
          <target state="new"><bpt id="9c6f4638-671c-4be1-8997-13c350afc7a3">&lt;strong&gt;</bpt>Description:<ept id="9c6f4638-671c-4be1-8997-13c350afc7a3">&lt;/strong&gt;</ept> &lt;br&gt; 
Returns a Date containing a date to which a specified time interval has been added.</target>
        </trans-unit>
        <trans-unit id="0db118a3-35f6-46aa-a343-3875f2ddc412" xml:space="preserve">
          <source><bpt id="144ddb52-47fa-4088-9196-184cb2fab0dd">&lt;strong&gt;</bpt>Syntax:<ept id="144ddb52-47fa-4088-9196-184cb2fab0dd">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="6c82540d-4035-4d3c-b69e-7e765432a6a6">&lt;code&gt;</bpt>dt DateAdd(str interval, num value, dt date)<ept id="6c82540d-4035-4d3c-b69e-7e765432a6a6">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="144ddb52-47fa-4088-9196-184cb2fab0dd">&lt;strong&gt;</bpt>Syntax:<ept id="144ddb52-47fa-4088-9196-184cb2fab0dd">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="6c82540d-4035-4d3c-b69e-7e765432a6a6">&lt;code&gt;</bpt>dt DateAdd(str interval, num value, dt date)<ept id="6c82540d-4035-4d3c-b69e-7e765432a6a6">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ffd8b15b-148a-4a0a-8f48-5663d91be4ff" xml:space="preserve">
          <source>interval: String expression that is the interval of time you want to add.</source>
          <target state="new">interval: String expression that is the interval of time you want to add.</target>
        </trans-unit>
        <trans-unit id="a73a317a-3299-4d45-8869-8951e62bde3b" xml:space="preserve">
          <source>The string must have one of the following values:</source>
          <target state="new">The string must have one of the following values:</target>
        </trans-unit>
        <trans-unit id="4e07e052-6c46-435e-a67d-bddfd08890ee" xml:space="preserve">
          <source>yyyy Year</source>
          <target state="new">yyyy Year</target>
        </trans-unit>
        <trans-unit id="125237ca-4555-4d3c-b469-9f101e92f716" xml:space="preserve">
          <source>q Quarter</source>
          <target state="new">q Quarter</target>
        </trans-unit>
        <trans-unit id="7d3507d6-aa54-4ea0-bf70-1eb7ea224688" xml:space="preserve">
          <source>m Month</source>
          <target state="new">m Month</target>
        </trans-unit>
        <trans-unit id="3213c6ca-4943-4009-b316-2c88ef7395b4" xml:space="preserve">
          <source>y Day of year</source>
          <target state="new">y Day of year</target>
        </trans-unit>
        <trans-unit id="eb5a4f35-a772-48a6-9934-b893c6e38e65" xml:space="preserve">
          <source>d Day</source>
          <target state="new">d Day</target>
        </trans-unit>
        <trans-unit id="cb188743-6de3-4ca1-8cc1-1bcf019c338e" xml:space="preserve">
          <source>w Weekday</source>
          <target state="new">w Weekday</target>
        </trans-unit>
        <trans-unit id="f1a91b2f-f633-4298-96bc-4d8129cd5e63" xml:space="preserve">
          <source>ww Week</source>
          <target state="new">ww Week</target>
        </trans-unit>
        <trans-unit id="4eabaf77-ab28-4b54-9693-cc09c627e4d9" xml:space="preserve">
          <source>h Hour</source>
          <target state="new">h Hour</target>
        </trans-unit>
        <trans-unit id="6ed1a1d9-ac0b-479c-97d7-7ac580180074" xml:space="preserve">
          <source>n Minute</source>
          <target state="new">n Minute</target>
        </trans-unit>
        <trans-unit id="444447b2-b72c-46c3-a64e-95e65849119b" xml:space="preserve">
          <source>s Second</source>
          <target state="new">s Second</target>
        </trans-unit>
        <trans-unit id="58d950c6-783a-4779-98b8-2458429557df" xml:space="preserve">
          <source>value: The number of units you want to add.</source>
          <target state="new">value: The number of units you want to add.</target>
        </trans-unit>
        <trans-unit id="8529e6e3-844d-4c7d-8d38-ec480aaf12ea" xml:space="preserve">
          <source>It can be positive (to get dates in the future) or negative (to get dates in the past).</source>
          <target state="new">It can be positive (to get dates in the future) or negative (to get dates in the past).</target>
        </trans-unit>
        <trans-unit id="65144648-7b0c-4171-850b-9669bbe92be4" xml:space="preserve">
          <source>date: DateTime representing date to which the interval is added.</source>
          <target state="new">date: DateTime representing date to which the interval is added.</target>
        </trans-unit>
        <trans-unit id="0b03c557-528b-42d8-98e2-b0abc151c8ac" xml:space="preserve">
          <source><bpt id="7d66dd16-3f30-4cae-a27c-94972454079b">&lt;strong&gt;</bpt>Example:<ept id="7d66dd16-3f30-4cae-a27c-94972454079b">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="75410466-72c2-4a4a-9ce0-cdbc44a9dfea">&lt;code&gt;</bpt>DateAdd("m", 3, CDate("2001-01-01"))<ept id="75410466-72c2-4a4a-9ce0-cdbc44a9dfea">&lt;/code&gt;</ept> &lt;br&gt;
Adds 3 months and returns a DateTime representing "2001-04-01”</source>
          <target state="new"><bpt id="7d66dd16-3f30-4cae-a27c-94972454079b">&lt;strong&gt;</bpt>Example:<ept id="7d66dd16-3f30-4cae-a27c-94972454079b">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="75410466-72c2-4a4a-9ce0-cdbc44a9dfea">&lt;code&gt;</bpt>DateAdd("m", 3, CDate("2001-01-01"))<ept id="75410466-72c2-4a4a-9ce0-cdbc44a9dfea">&lt;/code&gt;</ept> &lt;br&gt;
Adds 3 months and returns a DateTime representing "2001-04-01”</target>
        </trans-unit>
        <trans-unit id="032ec5c1-1422-4c51-8ff0-69b4c959a69d" xml:space="preserve">
          <source><bpt id="66c8ef2e-8895-4e96-8af6-8a8954220515">&lt;strong&gt;</bpt>Description:<ept id="66c8ef2e-8895-4e96-8af6-8a8954220515">&lt;/strong&gt;</ept> &lt;br&gt;
The DateFromNum function converts a value in AD’s date format to a DateTime type.</source>
          <target state="new"><bpt id="66c8ef2e-8895-4e96-8af6-8a8954220515">&lt;strong&gt;</bpt>Description:<ept id="66c8ef2e-8895-4e96-8af6-8a8954220515">&lt;/strong&gt;</ept> &lt;br&gt;
The DateFromNum function converts a value in AD’s date format to a DateTime type.</target>
        </trans-unit>
        <trans-unit id="5972a332-b73f-496c-8616-7a541a68f08f" xml:space="preserve">
          <source><bpt id="7a3e8777-8a3d-44b2-acb8-5fe774b14086">&lt;strong&gt;</bpt>Syntax:<ept id="7a3e8777-8a3d-44b2-acb8-5fe774b14086">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="36cc8065-f489-4396-b57b-b5bd81f64f59">&lt;code&gt;</bpt>dt DateFromNum(num value)<ept id="36cc8065-f489-4396-b57b-b5bd81f64f59">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="7a3e8777-8a3d-44b2-acb8-5fe774b14086">&lt;strong&gt;</bpt>Syntax:<ept id="7a3e8777-8a3d-44b2-acb8-5fe774b14086">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="36cc8065-f489-4396-b57b-b5bd81f64f59">&lt;code&gt;</bpt>dt DateFromNum(num value)<ept id="36cc8065-f489-4396-b57b-b5bd81f64f59">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="98a5f267-7ea8-4b87-b5dc-e182ef939118" xml:space="preserve">
          <source><bpt id="a9000688-c8ef-438f-a57e-5ee1b348902a">&lt;strong&gt;</bpt>Example:<ept id="a9000688-c8ef-438f-a57e-5ee1b348902a">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="ee3adcdf-6b9c-452d-a948-3278e0104220">&lt;code&gt;</bpt>DateFromNum([lastLogonTimestamp])<ept id="ee3adcdf-6b9c-452d-a948-3278e0104220">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="f4856fd6-32e4-40ce-ac42-a6444a79d1ec">&lt;code&gt;</bpt>DateFromNum(129699324000000000)<ept id="f4856fd6-32e4-40ce-ac42-a6444a79d1ec">&lt;/code&gt;</ept> &lt;br&gt;
Returns a DateTime representing 2012-01-01 23:00:00</source>
          <target state="new"><bpt id="a9000688-c8ef-438f-a57e-5ee1b348902a">&lt;strong&gt;</bpt>Example:<ept id="a9000688-c8ef-438f-a57e-5ee1b348902a">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="ee3adcdf-6b9c-452d-a948-3278e0104220">&lt;code&gt;</bpt>DateFromNum([lastLogonTimestamp])<ept id="ee3adcdf-6b9c-452d-a948-3278e0104220">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="f4856fd6-32e4-40ce-ac42-a6444a79d1ec">&lt;code&gt;</bpt>DateFromNum(129699324000000000)<ept id="f4856fd6-32e4-40ce-ac42-a6444a79d1ec">&lt;/code&gt;</ept> &lt;br&gt;
Returns a DateTime representing 2012-01-01 23:00:00</target>
        </trans-unit>
        <trans-unit id="96b81989-87bf-46a7-aaa8-ca506cf99779" xml:space="preserve">
          <source><bpt id="6bef5b1c-0856-4d8f-ae4a-3063244c9dc6">&lt;strong&gt;</bpt>Description:<ept id="6bef5b1c-0856-4d8f-ae4a-3063244c9dc6">&lt;/strong&gt;</ept> &lt;br&gt; 
The DNComponent function returns the value of a specified DN component going from left.</source>
          <target state="new"><bpt id="6bef5b1c-0856-4d8f-ae4a-3063244c9dc6">&lt;strong&gt;</bpt>Description:<ept id="6bef5b1c-0856-4d8f-ae4a-3063244c9dc6">&lt;/strong&gt;</ept> &lt;br&gt; 
The DNComponent function returns the value of a specified DN component going from left.</target>
        </trans-unit>
        <trans-unit id="71595f34-33ad-48a2-94af-24b7d5c5ccc2" xml:space="preserve">
          <source><bpt id="ce57445d-5613-4dd1-9a9c-ac67dca49c5f">&lt;strong&gt;</bpt>Syntax:<ept id="ce57445d-5613-4dd1-9a9c-ac67dca49c5f">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="58308211-e657-4016-a211-57448343514c">&lt;code&gt;</bpt>str DNComponent(ref dn, num ComponentNumber)<ept id="58308211-e657-4016-a211-57448343514c">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="ce57445d-5613-4dd1-9a9c-ac67dca49c5f">&lt;strong&gt;</bpt>Syntax:<ept id="ce57445d-5613-4dd1-9a9c-ac67dca49c5f">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="58308211-e657-4016-a211-57448343514c">&lt;code&gt;</bpt>str DNComponent(ref dn, num ComponentNumber)<ept id="58308211-e657-4016-a211-57448343514c">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f55d0f18-9803-4716-999c-3a097807dd2b" xml:space="preserve">
          <source>dn: the reference attribute to interpret</source>
          <target state="new">dn: the reference attribute to interpret</target>
        </trans-unit>
        <trans-unit id="7b560f04-b9ce-4c25-b452-9c940294c847" xml:space="preserve">
          <source>ComponentNumber: The component in the DN to return</source>
          <target state="new">ComponentNumber: The component in the DN to return</target>
        </trans-unit>
        <trans-unit id="bd20df8a-fcf9-4f57-8ef4-21038c5ffedb" xml:space="preserve">
          <source><bpt id="5a244cfe-a832-4a79-a755-15cb8a815a91">&lt;strong&gt;</bpt>Example:<ept id="5a244cfe-a832-4a79-a755-15cb8a815a91">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="a6da7b90-4a3c-4785-9096-899ebb7adde6">&lt;code&gt;</bpt>DNComponent([dn],1)<ept id="a6da7b90-4a3c-4785-9096-899ebb7adde6">&lt;/code&gt;</ept>  &lt;br&gt;
If dn is “cn=Joe,ou=…, it returns Joe</source>
          <target state="new"><bpt id="5a244cfe-a832-4a79-a755-15cb8a815a91">&lt;strong&gt;</bpt>Example:<ept id="5a244cfe-a832-4a79-a755-15cb8a815a91">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="a6da7b90-4a3c-4785-9096-899ebb7adde6">&lt;code&gt;</bpt>DNComponent([dn],1)<ept id="a6da7b90-4a3c-4785-9096-899ebb7adde6">&lt;/code&gt;</ept>  &lt;br&gt;
If dn is “cn=Joe,ou=…, it returns Joe</target>
        </trans-unit>
        <trans-unit id="9ed32901-4208-4db6-919d-910d55778856" xml:space="preserve">
          <source><bpt id="33152679-15d4-43f2-997b-7e3b42cef9ce">&lt;strong&gt;</bpt>Description:<ept id="33152679-15d4-43f2-997b-7e3b42cef9ce">&lt;/strong&gt;</ept> &lt;br&gt; 
The DNComponentRev function returns the value of a specified DN component going from right (the end).</source>
          <target state="new"><bpt id="33152679-15d4-43f2-997b-7e3b42cef9ce">&lt;strong&gt;</bpt>Description:<ept id="33152679-15d4-43f2-997b-7e3b42cef9ce">&lt;/strong&gt;</ept> &lt;br&gt; 
The DNComponentRev function returns the value of a specified DN component going from right (the end).</target>
        </trans-unit>
        <trans-unit id="c2982c5e-e584-4c82-b9e0-a699c6b5171a" xml:space="preserve">
          <source><bpt id="0fa95fce-7de9-4be6-ae4f-297442eabcc6">&lt;strong&gt;</bpt>Syntax:<ept id="0fa95fce-7de9-4be6-ae4f-297442eabcc6">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="24d19585-4a84-4195-95db-10b416733711">&lt;code&gt;</bpt>str DNComponentRev(ref dn, num ComponentNumber)<ept id="24d19585-4a84-4195-95db-10b416733711">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="b022787f-6155-40b0-9f43-85bc712adc6c">&lt;code&gt;</bpt>str DNComponentRev(ref dn, num ComponentNumber, enum Options)<ept id="b022787f-6155-40b0-9f43-85bc712adc6c">&lt;/code&gt;</ept> </source>
          <target state="new"><bpt id="0fa95fce-7de9-4be6-ae4f-297442eabcc6">&lt;strong&gt;</bpt>Syntax:<ept id="0fa95fce-7de9-4be6-ae4f-297442eabcc6">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="24d19585-4a84-4195-95db-10b416733711">&lt;code&gt;</bpt>str DNComponentRev(ref dn, num ComponentNumber)<ept id="24d19585-4a84-4195-95db-10b416733711">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="b022787f-6155-40b0-9f43-85bc712adc6c">&lt;code&gt;</bpt>str DNComponentRev(ref dn, num ComponentNumber, enum Options)<ept id="b022787f-6155-40b0-9f43-85bc712adc6c">&lt;/code&gt;</ept> </target>
        </trans-unit>
        <trans-unit id="59ae33e9-e8f9-46af-8837-37a8d6897afa" xml:space="preserve">
          <source>dn: the reference attribute to interpret</source>
          <target state="new">dn: the reference attribute to interpret</target>
        </trans-unit>
        <trans-unit id="ac2e1b4d-edbf-4cb8-9f09-9249f9b15a49" xml:space="preserve">
          <source>ComponentNumber - The component in the DN to return</source>
          <target state="new">ComponentNumber - The component in the DN to return</target>
        </trans-unit>
        <trans-unit id="359e49c9-7e48-4d9b-8154-201e29c18ebe" xml:space="preserve">
          <source>Options: DC – Ignore all components with “dc=”</source>
          <target state="new">Options: DC – Ignore all components with “dc=”</target>
        </trans-unit>
        <trans-unit id="a8ad6409-542c-4992-a967-8a30760f931d" xml:space="preserve">
          <source><bpt id="58bdd4e8-83f8-4bdc-95df-f7566b6435f7">&lt;strong&gt;</bpt>Example:<ept id="58bdd4e8-83f8-4bdc-95df-f7566b6435f7">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="e63f9dff-27bb-48ac-b487-f89f0aaae91e">&lt;code&gt;</bpt>If dn is “cn=Joe,ou=Atlanta,ou=GA,ou=US, dc=contoso,dc=com” then DNComponentRev([dn],3)<ept id="e63f9dff-27bb-48ac-b487-f89f0aaae91e">&lt;/code&gt;</ept> &lt;br&gt;  <bpt id="5ab7c1d1-61e2-470c-be88-c7ba040e33dd">&lt;code&gt;</bpt>DNComponentRev([dn],1,”DC”)<ept id="5ab7c1d1-61e2-470c-be88-c7ba040e33dd">&lt;/code&gt;</ept> &lt;br&gt;
Both return US.</source>
          <target state="new"><bpt id="58bdd4e8-83f8-4bdc-95df-f7566b6435f7">&lt;strong&gt;</bpt>Example:<ept id="58bdd4e8-83f8-4bdc-95df-f7566b6435f7">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="e63f9dff-27bb-48ac-b487-f89f0aaae91e">&lt;code&gt;</bpt>If dn is “cn=Joe,ou=Atlanta,ou=GA,ou=US, dc=contoso,dc=com” then DNComponentRev([dn],3)<ept id="e63f9dff-27bb-48ac-b487-f89f0aaae91e">&lt;/code&gt;</ept> &lt;br&gt;  <bpt id="5ab7c1d1-61e2-470c-be88-c7ba040e33dd">&lt;code&gt;</bpt>DNComponentRev([dn],1,”DC”)<ept id="5ab7c1d1-61e2-470c-be88-c7ba040e33dd">&lt;/code&gt;</ept> &lt;br&gt;
Both return US.</target>
        </trans-unit>
        <trans-unit id="6ab8331d-6c94-4ba2-8e2a-52b817c876d9" xml:space="preserve">
          <source><bpt id="47576688-3f1f-4067-b40a-3cc3c3b05f57">&lt;strong&gt;</bpt>Description:<ept id="47576688-3f1f-4067-b40a-3cc3c3b05f57">&lt;/strong&gt;</ept> &lt;br&gt; 
The Error function is used to return a custom error.</source>
          <target state="new"><bpt id="47576688-3f1f-4067-b40a-3cc3c3b05f57">&lt;strong&gt;</bpt>Description:<ept id="47576688-3f1f-4067-b40a-3cc3c3b05f57">&lt;/strong&gt;</ept> &lt;br&gt; 
The Error function is used to return a custom error.</target>
        </trans-unit>
        <trans-unit id="ff407a36-d7e1-4176-bc18-e3c7a4bbe3f2" xml:space="preserve">
          <source><bpt id="621a9cd9-780b-4f6a-a633-99252ed34ea5">&lt;strong&gt;</bpt>Syntax:<ept id="621a9cd9-780b-4f6a-a633-99252ed34ea5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="49e4699d-5bb6-4cbf-bad7-54371dfccece">&lt;code&gt;</bpt>void Error(str ErrorMessage)<ept id="49e4699d-5bb6-4cbf-bad7-54371dfccece">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="621a9cd9-780b-4f6a-a633-99252ed34ea5">&lt;strong&gt;</bpt>Syntax:<ept id="621a9cd9-780b-4f6a-a633-99252ed34ea5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="49e4699d-5bb6-4cbf-bad7-54371dfccece">&lt;code&gt;</bpt>void Error(str ErrorMessage)<ept id="49e4699d-5bb6-4cbf-bad7-54371dfccece">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="4fc80d9f-d861-4d33-95b6-bcf4c9d3b377" xml:space="preserve">
          <source><bpt id="bf84336f-6917-4fbb-98c3-1e861839bfd1">&lt;strong&gt;</bpt>Example:<ept id="bf84336f-6917-4fbb-98c3-1e861839bfd1">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="7aad2fe5-127f-406c-8dcd-5acf6df52213">&lt;code&gt;</bpt>IIF(IsPresent([accountName]),[accountName],Error(“AccountName is required”))<ept id="7aad2fe5-127f-406c-8dcd-5acf6df52213">&lt;/code&gt;</ept> &lt;br&gt;
If the attribute accountName is not present, throw an error on the object.</source>
          <target state="new"><bpt id="bf84336f-6917-4fbb-98c3-1e861839bfd1">&lt;strong&gt;</bpt>Example:<ept id="bf84336f-6917-4fbb-98c3-1e861839bfd1">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="7aad2fe5-127f-406c-8dcd-5acf6df52213">&lt;code&gt;</bpt>IIF(IsPresent([accountName]),[accountName],Error(“AccountName is required”))<ept id="7aad2fe5-127f-406c-8dcd-5acf6df52213">&lt;/code&gt;</ept> &lt;br&gt;
If the attribute accountName is not present, throw an error on the object.</target>
        </trans-unit>
        <trans-unit id="d9861241-bcea-4f4a-91de-5216431febbb" xml:space="preserve">
          <source><bpt id="8e99c5fc-2d45-4317-8869-e4fe938d5b41">&lt;strong&gt;</bpt>Description:<ept id="8e99c5fc-2d45-4317-8869-e4fe938d5b41">&lt;/strong&gt;</ept> &lt;br&gt; 
The EscapeDNComponent function takes one component of a DN and escapes it so it can be represented in LDAP.</source>
          <target state="new"><bpt id="8e99c5fc-2d45-4317-8869-e4fe938d5b41">&lt;strong&gt;</bpt>Description:<ept id="8e99c5fc-2d45-4317-8869-e4fe938d5b41">&lt;/strong&gt;</ept> &lt;br&gt; 
The EscapeDNComponent function takes one component of a DN and escapes it so it can be represented in LDAP.</target>
        </trans-unit>
        <trans-unit id="533b6905-6101-4a1e-841c-9f9da72e1275" xml:space="preserve">
          <source><bpt id="8e208649-5a97-4720-9eca-85baa6a2e0e1">&lt;strong&gt;</bpt>Syntax:<ept id="8e208649-5a97-4720-9eca-85baa6a2e0e1">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="b6d87e29-136b-46d8-8240-27b8eb1c02ae">&lt;code&gt;</bpt>str EscapeDNComponent(str value)<ept id="b6d87e29-136b-46d8-8240-27b8eb1c02ae">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="8e208649-5a97-4720-9eca-85baa6a2e0e1">&lt;strong&gt;</bpt>Syntax:<ept id="8e208649-5a97-4720-9eca-85baa6a2e0e1">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="b6d87e29-136b-46d8-8240-27b8eb1c02ae">&lt;code&gt;</bpt>str EscapeDNComponent(str value)<ept id="b6d87e29-136b-46d8-8240-27b8eb1c02ae">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="13742a25-3ea3-4576-80fe-6c3f88160b11" xml:space="preserve">
          <source><bpt id="15d76291-f21d-4d01-a0bb-120be6757815">&lt;strong&gt;</bpt>Example:<ept id="15d76291-f21d-4d01-a0bb-120be6757815">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="05df1df6-00cb-4ce8-9168-e269ed6892af">&lt;code&gt;</bpt>EscapeDNComponent(“cn=” &amp; [displayName]) &amp; “,” &amp; %ForestLDAP%<ept id="05df1df6-00cb-4ce8-9168-e269ed6892af">&lt;/code&gt;</ept> &lt;br&gt;
Makes sure the object can be created in an LDAP directory even if the displayName attribute has characters which must be escaped in LDAP.</source>
          <target state="new"><bpt id="15d76291-f21d-4d01-a0bb-120be6757815">&lt;strong&gt;</bpt>Example:<ept id="15d76291-f21d-4d01-a0bb-120be6757815">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="05df1df6-00cb-4ce8-9168-e269ed6892af">&lt;code&gt;</bpt>EscapeDNComponent(“cn=” &amp; [displayName]) &amp; “,” &amp; %ForestLDAP%<ept id="05df1df6-00cb-4ce8-9168-e269ed6892af">&lt;/code&gt;</ept> &lt;br&gt;
Makes sure the object can be created in an LDAP directory even if the displayName attribute has characters which must be escaped in LDAP.</target>
        </trans-unit>
        <trans-unit id="18ee3aaf-5232-4e35-b1cf-23bc4889f792" xml:space="preserve">
          <source><bpt id="df6e39a1-5051-4bf9-8d11-db77d309f1e0">&lt;strong&gt;</bpt>Description:<ept id="df6e39a1-5051-4bf9-8d11-db77d309f1e0">&lt;/strong&gt;</ept> &lt;br&gt;
The FormatDateTime function is used to format a DateTime to a string with a specified format</source>
          <target state="new"><bpt id="df6e39a1-5051-4bf9-8d11-db77d309f1e0">&lt;strong&gt;</bpt>Description:<ept id="df6e39a1-5051-4bf9-8d11-db77d309f1e0">&lt;/strong&gt;</ept> &lt;br&gt;
The FormatDateTime function is used to format a DateTime to a string with a specified format</target>
        </trans-unit>
        <trans-unit id="9c012bf4-a534-4b42-9257-66167a3ef747" xml:space="preserve">
          <source><bpt id="6bc12e3c-3ee4-49c7-8cad-27c3fae409c5">&lt;strong&gt;</bpt>Syntax:<ept id="6bc12e3c-3ee4-49c7-8cad-27c3fae409c5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="bbd234aa-f392-42be-86d6-effd6745bdb5">&lt;code&gt;</bpt>str FormatDateTime(dt value, str format)<ept id="bbd234aa-f392-42be-86d6-effd6745bdb5">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="6bc12e3c-3ee4-49c7-8cad-27c3fae409c5">&lt;strong&gt;</bpt>Syntax:<ept id="6bc12e3c-3ee4-49c7-8cad-27c3fae409c5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="bbd234aa-f392-42be-86d6-effd6745bdb5">&lt;code&gt;</bpt>str FormatDateTime(dt value, str format)<ept id="bbd234aa-f392-42be-86d6-effd6745bdb5">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d2e65dde-1932-4f23-bf20-aa9608b2dd27" xml:space="preserve">
          <source>value: a value in the DateTime format &lt;br&gt;</source>
          <target state="new">value: a value in the DateTime format &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="87a21580-e2dc-42d6-b22a-3bf26db3c01f" xml:space="preserve">
          <source>format: a string representing the format to convert to.</source>
          <target state="new">format: a string representing the format to convert to.</target>
        </trans-unit>
        <trans-unit id="5d6b7536-9d7e-47e0-84ad-a80639e20923" xml:space="preserve">
          <source><bpt id="d7141ec4-35ae-4db8-b91e-2b82d202cbc2">&lt;strong&gt;</bpt>Remarks:<ept id="d7141ec4-35ae-4db8-b91e-2b82d202cbc2">&lt;/strong&gt;</ept> &lt;br&gt; 
The possible values for the format can be found here: [User-Defined Date/Time Formats (Format Function)](http://msdn2.microsoft.com/library/73ctwf33\(VS.90\).aspx) </source>
          <target state="new"><bpt id="d7141ec4-35ae-4db8-b91e-2b82d202cbc2">&lt;strong&gt;</bpt>Remarks:<ept id="d7141ec4-35ae-4db8-b91e-2b82d202cbc2">&lt;/strong&gt;</ept> &lt;br&gt; 
The possible values for the format can be found here: [User-Defined Date/Time Formats (Format Function)](http://msdn2.microsoft.com/library/73ctwf33\(VS.90\).aspx) </target>
        </trans-unit>
        <trans-unit id="fda5f8dc-d904-4b92-9acf-5d01f9750a10" xml:space="preserve">
          <source><bpt id="c2580a98-7056-4202-97c7-d8ead7ef16f3">&lt;strong&gt;</bpt>Example:<ept id="c2580a98-7056-4202-97c7-d8ead7ef16f3">&lt;/strong&gt;</ept> &lt;br&gt; </source>
          <target state="new"><bpt id="c2580a98-7056-4202-97c7-d8ead7ef16f3">&lt;strong&gt;</bpt>Example:<ept id="c2580a98-7056-4202-97c7-d8ead7ef16f3">&lt;/strong&gt;</ept> &lt;br&gt; </target>
        </trans-unit>
        <trans-unit id="3560a326-ec9a-411e-8002-543084c53187" xml:space="preserve">
          <source><bpt id="017af1fe-8fed-487a-a52d-1e2b15c2f0a9">&lt;code&gt;</bpt>FormatDateTime(CDate(“12/25/2007”),”yyyy-mm-dd”)<ept id="017af1fe-8fed-487a-a52d-1e2b15c2f0a9">&lt;/code&gt;</ept> &lt;br&gt;
Results in “2007-12-25”.</source>
          <target state="new"><bpt id="017af1fe-8fed-487a-a52d-1e2b15c2f0a9">&lt;code&gt;</bpt>FormatDateTime(CDate(“12/25/2007”),”yyyy-mm-dd”)<ept id="017af1fe-8fed-487a-a52d-1e2b15c2f0a9">&lt;/code&gt;</ept> &lt;br&gt;
Results in “2007-12-25”.</target>
        </trans-unit>
        <trans-unit id="a76eaadb-ea61-4640-a5f6-e9af85808dcf" xml:space="preserve">
          <source><bpt id="cd69b984-e221-4145-b4e4-a729743fe41e">&lt;code&gt;</bpt>FormatDateTime(DateFromNum([pwdLastSet]),”yyyyMMddHHmmss.0Z”)<ept id="cd69b984-e221-4145-b4e4-a729743fe41e">&lt;/code&gt;</ept> &lt;br&gt;
Can result in “20140905081453.0Z”</source>
          <target state="new"><bpt id="cd69b984-e221-4145-b4e4-a729743fe41e">&lt;code&gt;</bpt>FormatDateTime(DateFromNum([pwdLastSet]),”yyyyMMddHHmmss.0Z”)<ept id="cd69b984-e221-4145-b4e4-a729743fe41e">&lt;/code&gt;</ept> &lt;br&gt;
Can result in “20140905081453.0Z”</target>
        </trans-unit>
        <trans-unit id="e4184a5e-cdb4-42ed-a680-ab7c735697d1" xml:space="preserve">
          <source><bpt id="c71b9bed-3af0-49c8-a66f-846e980687f3">&lt;strong&gt;</bpt>Description:<ept id="c71b9bed-3af0-49c8-a66f-846e980687f3">&lt;/strong&gt;</ept> &lt;br&gt; 
The function GUID generates a new random GUID</source>
          <target state="new"><bpt id="c71b9bed-3af0-49c8-a66f-846e980687f3">&lt;strong&gt;</bpt>Description:<ept id="c71b9bed-3af0-49c8-a66f-846e980687f3">&lt;/strong&gt;</ept> &lt;br&gt; 
The function GUID generates a new random GUID</target>
        </trans-unit>
        <trans-unit id="88a029ee-3cf4-47a9-98a5-507b0792a826" xml:space="preserve">
          <source><bpt id="ade44732-09f7-4c63-a708-81151525cd22">&lt;strong&gt;</bpt>Syntax:<ept id="ade44732-09f7-4c63-a708-81151525cd22">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8387cbab-ab85-4308-8a25-5a2e209db631">&lt;code&gt;</bpt>str GUID()<ept id="8387cbab-ab85-4308-8a25-5a2e209db631">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="ade44732-09f7-4c63-a708-81151525cd22">&lt;strong&gt;</bpt>Syntax:<ept id="ade44732-09f7-4c63-a708-81151525cd22">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8387cbab-ab85-4308-8a25-5a2e209db631">&lt;code&gt;</bpt>str GUID()<ept id="8387cbab-ab85-4308-8a25-5a2e209db631">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="851af088-f5f4-4dc8-94d8-188f8ab4783a" xml:space="preserve">
          <source><bpt id="14ea13fa-1c93-496a-9ad8-fec3a3ac5f33">&lt;strong&gt;</bpt>Description:<ept id="14ea13fa-1c93-496a-9ad8-fec3a3ac5f33">&lt;/strong&gt;</ept> &lt;br&gt;  
The IIF function returns one of a set of possible values based on a specified condition.</source>
          <target state="new"><bpt id="14ea13fa-1c93-496a-9ad8-fec3a3ac5f33">&lt;strong&gt;</bpt>Description:<ept id="14ea13fa-1c93-496a-9ad8-fec3a3ac5f33">&lt;/strong&gt;</ept> &lt;br&gt;  
The IIF function returns one of a set of possible values based on a specified condition.</target>
        </trans-unit>
        <trans-unit id="c2d53938-c5a3-428c-89d8-00e1c197ffb7" xml:space="preserve">
          <source><bpt id="a674d030-3992-42dd-b91d-4f66fc77f44c">&lt;strong&gt;</bpt>Syntax:<ept id="a674d030-3992-42dd-b91d-4f66fc77f44c">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="78449fa3-5c47-4322-a0ad-7e2d23381b54">&lt;code&gt;</bpt>var IIF(exp condition, var valueIfTrue, var valueIfFalse)<ept id="78449fa3-5c47-4322-a0ad-7e2d23381b54">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="a674d030-3992-42dd-b91d-4f66fc77f44c">&lt;strong&gt;</bpt>Syntax:<ept id="a674d030-3992-42dd-b91d-4f66fc77f44c">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="78449fa3-5c47-4322-a0ad-7e2d23381b54">&lt;code&gt;</bpt>var IIF(exp condition, var valueIfTrue, var valueIfFalse)<ept id="78449fa3-5c47-4322-a0ad-7e2d23381b54">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b926aa40-f675-4b68-9860-e1ae9694555f" xml:space="preserve">
          <source>condition: any value or expression that can be evaluated to true or false.</source>
          <target state="new">condition: any value or expression that can be evaluated to true or false.</target>
        </trans-unit>
        <trans-unit id="a05dd12c-04da-4a53-8d74-617fdeedf9be" xml:space="preserve">
          <source>valueIfTrue: a value that will be returned if condition evaluates to true.</source>
          <target state="new">valueIfTrue: a value that will be returned if condition evaluates to true.</target>
        </trans-unit>
        <trans-unit id="a62b98b3-1e77-4a56-a847-13adab25319b" xml:space="preserve">
          <source>valueIfFalse: a value that will be returned if condition evaluates to false.</source>
          <target state="new">valueIfFalse: a value that will be returned if condition evaluates to false.</target>
        </trans-unit>
        <trans-unit id="971b24c1-7387-4bc6-9883-4a29ed0f83aa" xml:space="preserve">
          <source><bpt id="80e8cbac-318f-4d0c-b87a-1f6648cec6a8">&lt;strong&gt;</bpt>Example:<ept id="80e8cbac-318f-4d0c-b87a-1f6648cec6a8">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="b8267059-aa88-4fe1-b9bd-b6d2a538b669">&lt;code&gt;</bpt>IIF([employeeType]=“Intern”,”t-“&amp;[alias],[alias])<ept id="b8267059-aa88-4fe1-b9bd-b6d2a538b669">&lt;/code&gt;</ept> &lt;br&gt;
Returns the alias of a user with “t-“ added to the beginning of it if the user is an intern, else returns the user’s alias as is.</source>
          <target state="new"><bpt id="80e8cbac-318f-4d0c-b87a-1f6648cec6a8">&lt;strong&gt;</bpt>Example:<ept id="80e8cbac-318f-4d0c-b87a-1f6648cec6a8">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="b8267059-aa88-4fe1-b9bd-b6d2a538b669">&lt;code&gt;</bpt>IIF([employeeType]=“Intern”,”t-“&amp;[alias],[alias])<ept id="b8267059-aa88-4fe1-b9bd-b6d2a538b669">&lt;/code&gt;</ept> &lt;br&gt;
Returns the alias of a user with “t-“ added to the beginning of it if the user is an intern, else returns the user’s alias as is.</target>
        </trans-unit>
        <trans-unit id="cb9d55bc-e55a-4593-9a9f-d3c1bc970790" xml:space="preserve">
          <source><bpt id="6d7e9c1b-8d87-4805-9f5b-71d69b883696">&lt;strong&gt;</bpt>Description:<ept id="6d7e9c1b-8d87-4805-9f5b-71d69b883696">&lt;/strong&gt;</ept> &lt;br&gt; 
The InStr function finds the first occurrence of a substring in a string</source>
          <target state="new"><bpt id="6d7e9c1b-8d87-4805-9f5b-71d69b883696">&lt;strong&gt;</bpt>Description:<ept id="6d7e9c1b-8d87-4805-9f5b-71d69b883696">&lt;/strong&gt;</ept> &lt;br&gt; 
The InStr function finds the first occurrence of a substring in a string</target>
        </trans-unit>
        <trans-unit id="95f0ac7d-37d3-482d-907b-2f040dfc47da" xml:space="preserve">
          <source><bpt id="44b9a8e0-6970-4afc-9b19-788d2bd9541f">&lt;strong&gt;</bpt>Syntax:<ept id="44b9a8e0-6970-4afc-9b19-788d2bd9541f">&lt;/strong&gt;</ept> &lt;br&gt; </source>
          <target state="new"><bpt id="44b9a8e0-6970-4afc-9b19-788d2bd9541f">&lt;strong&gt;</bpt>Syntax:<ept id="44b9a8e0-6970-4afc-9b19-788d2bd9541f">&lt;/strong&gt;</ept> &lt;br&gt; </target>
        </trans-unit>
        <trans-unit id="f86bedcc-0e4b-432e-a2b4-8c7beead01ce" xml:space="preserve">
          <source><bpt id="93ea24cb-43ac-49fd-8d7a-72479889b4ec">&lt;code&gt;</bpt>num InStr(str stringcheck, str stringmatch)<ept id="93ea24cb-43ac-49fd-8d7a-72479889b4ec">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="3cab1479-889b-4d5a-bffe-905071dec5f8">&lt;code&gt;</bpt>num InStr(str stringcheck, str stringmatch, num start)<ept id="3cab1479-889b-4d5a-bffe-905071dec5f8">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="14673c4e-43ca-4db8-911a-fdc1cc0b778c">&lt;code&gt;</bpt>num InStr(str stringcheck, str stringmatch, num start , enum compare)<ept id="14673c4e-43ca-4db8-911a-fdc1cc0b778c">&lt;/code&gt;</ept> </source>
          <target state="new"><bpt id="93ea24cb-43ac-49fd-8d7a-72479889b4ec">&lt;code&gt;</bpt>num InStr(str stringcheck, str stringmatch)<ept id="93ea24cb-43ac-49fd-8d7a-72479889b4ec">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="3cab1479-889b-4d5a-bffe-905071dec5f8">&lt;code&gt;</bpt>num InStr(str stringcheck, str stringmatch, num start)<ept id="3cab1479-889b-4d5a-bffe-905071dec5f8">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="14673c4e-43ca-4db8-911a-fdc1cc0b778c">&lt;code&gt;</bpt>num InStr(str stringcheck, str stringmatch, num start , enum compare)<ept id="14673c4e-43ca-4db8-911a-fdc1cc0b778c">&lt;/code&gt;</ept> </target>
        </trans-unit>
        <trans-unit id="b62c9634-4550-489b-9366-1cb566d3d098" xml:space="preserve">
          <source>stringcheck: string to be searched &lt;br&gt;</source>
          <target state="new">stringcheck: string to be searched &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="71ed71a2-b7ea-45d7-b7d9-96b1a69a162b" xml:space="preserve">
          <source>stringmatch: string to be found &lt;br&gt;</source>
          <target state="new">stringmatch: string to be found &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="6c708dc7-8318-46e6-adaa-487edbf7a130" xml:space="preserve">
          <source>start: starting position to find the substring &lt;br&gt;</source>
          <target state="new">start: starting position to find the substring &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="6d85e5e6-87bf-4c3c-82a6-465a2d99e28b" xml:space="preserve">
          <source>compare: vbTextCompare or vbBinaryCompare</source>
          <target state="new">compare: vbTextCompare or vbBinaryCompare</target>
        </trans-unit>
        <trans-unit id="6f854b61-c291-4895-ae0e-33de87fda18f" xml:space="preserve">
          <source><bpt id="52ed67fd-db1d-4db7-b616-b7f23a19c4a7">&lt;strong&gt;</bpt>Remarks:<ept id="52ed67fd-db1d-4db7-b616-b7f23a19c4a7">&lt;/strong&gt;</ept> &lt;br&gt; 
Returns the position where the substring was found or 0 if not found. </source>
          <target state="new"><bpt id="52ed67fd-db1d-4db7-b616-b7f23a19c4a7">&lt;strong&gt;</bpt>Remarks:<ept id="52ed67fd-db1d-4db7-b616-b7f23a19c4a7">&lt;/strong&gt;</ept> &lt;br&gt; 
Returns the position where the substring was found or 0 if not found. </target>
        </trans-unit>
        <trans-unit id="84d48543-58a7-42e8-b53a-f82f539e5529" xml:space="preserve">
          <source><bpt id="80175ce2-e0e7-4bc9-91d4-ab8894dbf6a7">&lt;strong&gt;</bpt>Example:<ept id="80175ce2-e0e7-4bc9-91d4-ab8894dbf6a7">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="c9a6d189-c02c-40c4-a13b-d114a7a2c7fc">&lt;code&gt;</bpt>InStr("The quick brown fox","quick")<ept id="c9a6d189-c02c-40c4-a13b-d114a7a2c7fc">&lt;/code&gt;</ept> &lt;br&gt;
Evalues to 5 </source>
          <target state="new"><bpt id="80175ce2-e0e7-4bc9-91d4-ab8894dbf6a7">&lt;strong&gt;</bpt>Example:<ept id="80175ce2-e0e7-4bc9-91d4-ab8894dbf6a7">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="c9a6d189-c02c-40c4-a13b-d114a7a2c7fc">&lt;code&gt;</bpt>InStr("The quick brown fox","quick")<ept id="c9a6d189-c02c-40c4-a13b-d114a7a2c7fc">&lt;/code&gt;</ept> &lt;br&gt;
Evalues to 5 </target>
        </trans-unit>
        <trans-unit id="9bc6731e-0f40-419b-8355-68bbef47cd12" xml:space="preserve">
          <source><bpt id="4ac89ea5-d348-4dfc-91ff-685b31f21550">&lt;code&gt;</bpt>InStr("repEated","e",3,vbBinaryCompare)<ept id="4ac89ea5-d348-4dfc-91ff-685b31f21550">&lt;/code&gt;</ept> &lt;br&gt;
Evaluates to 7</source>
          <target state="new"><bpt id="4ac89ea5-d348-4dfc-91ff-685b31f21550">&lt;code&gt;</bpt>InStr("repEated","e",3,vbBinaryCompare)<ept id="4ac89ea5-d348-4dfc-91ff-685b31f21550">&lt;/code&gt;</ept> &lt;br&gt;
Evaluates to 7</target>
        </trans-unit>
        <trans-unit id="09635f8d-5335-4c1e-b03e-0bc26bfddb76" xml:space="preserve">
          <source><bpt id="4c876638-8c32-4678-a335-eb8025187811">&lt;strong&gt;</bpt>Description:<ept id="4c876638-8c32-4678-a335-eb8025187811">&lt;/strong&gt;</ept> &lt;br&gt; 
The InStrRev function finds the last occurrence of a substring in a string</source>
          <target state="new"><bpt id="4c876638-8c32-4678-a335-eb8025187811">&lt;strong&gt;</bpt>Description:<ept id="4c876638-8c32-4678-a335-eb8025187811">&lt;/strong&gt;</ept> &lt;br&gt; 
The InStrRev function finds the last occurrence of a substring in a string</target>
        </trans-unit>
        <trans-unit id="65ca0f4e-1173-4f35-89d7-40ac0814131c" xml:space="preserve">
          <source><bpt id="760fb00d-3a84-438f-8209-e3ab5b395d76">&lt;strong&gt;</bpt>Syntax:<ept id="760fb00d-3a84-438f-8209-e3ab5b395d76">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="77e57daf-742b-4ccb-a536-af8429d49db6">&lt;code&gt;</bpt>num InstrRev(str stringcheck, str stringmatch)<ept id="77e57daf-742b-4ccb-a536-af8429d49db6">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="0192fa6d-19ba-485d-9a1b-a336efecc7c8">&lt;code&gt;</bpt>num InstrRev(str stringcheck, str stringmatch, num start)<ept id="0192fa6d-19ba-485d-9a1b-a336efecc7c8">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="5e44b114-e5fa-4443-9696-7740c3b3f1ac">&lt;code&gt;</bpt>num InstrRev(str stringcheck, str stringmatch, num start, enum compare)<ept id="5e44b114-e5fa-4443-9696-7740c3b3f1ac">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="760fb00d-3a84-438f-8209-e3ab5b395d76">&lt;strong&gt;</bpt>Syntax:<ept id="760fb00d-3a84-438f-8209-e3ab5b395d76">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="77e57daf-742b-4ccb-a536-af8429d49db6">&lt;code&gt;</bpt>num InstrRev(str stringcheck, str stringmatch)<ept id="77e57daf-742b-4ccb-a536-af8429d49db6">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="0192fa6d-19ba-485d-9a1b-a336efecc7c8">&lt;code&gt;</bpt>num InstrRev(str stringcheck, str stringmatch, num start)<ept id="0192fa6d-19ba-485d-9a1b-a336efecc7c8">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="5e44b114-e5fa-4443-9696-7740c3b3f1ac">&lt;code&gt;</bpt>num InstrRev(str stringcheck, str stringmatch, num start, enum compare)<ept id="5e44b114-e5fa-4443-9696-7740c3b3f1ac">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="58123154-655a-4dea-9697-70bc3c88e491" xml:space="preserve">
          <source>stringcheck: string to be searched &lt;br&gt;</source>
          <target state="new">stringcheck: string to be searched &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="8898b66b-b6d4-4a34-8713-d12ffa183657" xml:space="preserve">
          <source>stringmatch: string to be found &lt;br&gt;</source>
          <target state="new">stringmatch: string to be found &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="923ede15-4cef-4860-8dec-06fe7df77249" xml:space="preserve">
          <source>start: starting position to find the substring &lt;br&gt;</source>
          <target state="new">start: starting position to find the substring &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="bc2769ae-aa0d-467e-b1d4-acece5719ddd" xml:space="preserve">
          <source>compare: vbTextCompare or vbBinaryCompare</source>
          <target state="new">compare: vbTextCompare or vbBinaryCompare</target>
        </trans-unit>
        <trans-unit id="50420a10-1ac3-461b-b9a3-1dc6496809b5" xml:space="preserve">
          <source><bpt id="4bc3981a-6555-40bc-8aa4-4d1e99f93c17">&lt;strong&gt;</bpt>Remarks:<ept id="4bc3981a-6555-40bc-8aa4-4d1e99f93c17">&lt;/strong&gt;</ept> &lt;br&gt; 
Returns the position where the substring was found or 0 if not found.</source>
          <target state="new"><bpt id="4bc3981a-6555-40bc-8aa4-4d1e99f93c17">&lt;strong&gt;</bpt>Remarks:<ept id="4bc3981a-6555-40bc-8aa4-4d1e99f93c17">&lt;/strong&gt;</ept> &lt;br&gt; 
Returns the position where the substring was found or 0 if not found.</target>
        </trans-unit>
        <trans-unit id="be7d5236-42c6-40fb-8136-18712ec7dbdf" xml:space="preserve">
          <source><bpt id="b3e04f98-0971-4f18-8de5-ab790a4422fd">&lt;strong&gt;</bpt>Example:<ept id="b3e04f98-0971-4f18-8de5-ab790a4422fd">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="59a021a3-86a7-44f6-854f-80441bf41a00">&lt;code&gt;</bpt>InStrRev("abbcdbbbef","bb")<ept id="59a021a3-86a7-44f6-854f-80441bf41a00">&lt;/code&gt;</ept> &lt;br&gt;
Returns 7</source>
          <target state="new"><bpt id="b3e04f98-0971-4f18-8de5-ab790a4422fd">&lt;strong&gt;</bpt>Example:<ept id="b3e04f98-0971-4f18-8de5-ab790a4422fd">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="59a021a3-86a7-44f6-854f-80441bf41a00">&lt;code&gt;</bpt>InStrRev("abbcdbbbef","bb")<ept id="59a021a3-86a7-44f6-854f-80441bf41a00">&lt;/code&gt;</ept> &lt;br&gt;
Returns 7</target>
        </trans-unit>
        <trans-unit id="70178fe6-c945-443d-becf-f93ed97e5cd4" xml:space="preserve">
          <source><bpt id="214eaac8-4832-4767-9ae6-decd04944dc9">&lt;strong&gt;</bpt>Description:<ept id="214eaac8-4832-4767-9ae6-decd04944dc9">&lt;/strong&gt;</ept> &lt;br&gt; 
The function IsBitSet Tests if a bit is set or not</source>
          <target state="new"><bpt id="214eaac8-4832-4767-9ae6-decd04944dc9">&lt;strong&gt;</bpt>Description:<ept id="214eaac8-4832-4767-9ae6-decd04944dc9">&lt;/strong&gt;</ept> &lt;br&gt; 
The function IsBitSet Tests if a bit is set or not</target>
        </trans-unit>
        <trans-unit id="77e80c7e-9027-4bfc-ad8d-65ef25ddb256" xml:space="preserve">
          <source><bpt id="9fd280f4-2561-4ad5-9a81-a0cf81c80ea4">&lt;strong&gt;</bpt>Syntax:<ept id="9fd280f4-2561-4ad5-9a81-a0cf81c80ea4">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="432a82f0-5317-49e4-a627-ea0ce33ecdb0">&lt;code&gt;</bpt>bool IsBitSet(num value, num flag)<ept id="432a82f0-5317-49e4-a627-ea0ce33ecdb0">&lt;/code&gt;</ept> </source>
          <target state="new"><bpt id="9fd280f4-2561-4ad5-9a81-a0cf81c80ea4">&lt;strong&gt;</bpt>Syntax:<ept id="9fd280f4-2561-4ad5-9a81-a0cf81c80ea4">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="432a82f0-5317-49e4-a627-ea0ce33ecdb0">&lt;code&gt;</bpt>bool IsBitSet(num value, num flag)<ept id="432a82f0-5317-49e4-a627-ea0ce33ecdb0">&lt;/code&gt;</ept> </target>
        </trans-unit>
        <trans-unit id="7ef67d96-7593-4931-b4e2-c0c48a74607a" xml:space="preserve">
          <source>value: a numeric value that is evaluated.flag: a numeric value that has the bit to be evaluated</source>
          <target state="new">value: a numeric value that is evaluated.flag: a numeric value that has the bit to be evaluated</target>
        </trans-unit>
        <trans-unit id="c1ab931a-8681-4781-bc9f-b5b13b810b9e" xml:space="preserve">
          <source><bpt id="761de1c2-f684-4dc1-9197-8ee99edbbbff">&lt;strong&gt;</bpt>Example:<ept id="761de1c2-f684-4dc1-9197-8ee99edbbbff">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="9cd7c220-ba51-4206-8358-69d18d5fe999">&lt;code&gt;</bpt>IsBitSet(&amp;HF,4)<ept id="9cd7c220-ba51-4206-8358-69d18d5fe999">&lt;/code&gt;</ept> &lt;br&gt;
Returns True because bit “4” is set in the hexadecimal value “F”</source>
          <target state="new"><bpt id="761de1c2-f684-4dc1-9197-8ee99edbbbff">&lt;strong&gt;</bpt>Example:<ept id="761de1c2-f684-4dc1-9197-8ee99edbbbff">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="9cd7c220-ba51-4206-8358-69d18d5fe999">&lt;code&gt;</bpt>IsBitSet(&amp;HF,4)<ept id="9cd7c220-ba51-4206-8358-69d18d5fe999">&lt;/code&gt;</ept> &lt;br&gt;
Returns True because bit “4” is set in the hexadecimal value “F”</target>
        </trans-unit>
        <trans-unit id="dc4c5e95-06b8-4d03-9b75-233123cb27f6" xml:space="preserve">
          <source><bpt id="96f2ac09-7a2e-4437-ba6f-4dcd590d88fd">&lt;strong&gt;</bpt>Description:<ept id="96f2ac09-7a2e-4437-ba6f-4dcd590d88fd">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsDate function evaluates to True if the expression can be evaluates as a DateTime type.</source>
          <target state="new"><bpt id="96f2ac09-7a2e-4437-ba6f-4dcd590d88fd">&lt;strong&gt;</bpt>Description:<ept id="96f2ac09-7a2e-4437-ba6f-4dcd590d88fd">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsDate function evaluates to True if the expression can be evaluates as a DateTime type.</target>
        </trans-unit>
        <trans-unit id="43b16ca0-1160-4efa-ac73-3228f8083e63" xml:space="preserve">
          <source><bpt id="9ce2c6bf-0ac5-4346-8397-87d4de682fc2">&lt;strong&gt;</bpt>Syntax:<ept id="9ce2c6bf-0ac5-4346-8397-87d4de682fc2">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8fc41aa2-c74f-4c02-8445-ec452bd9a907">&lt;code&gt;</bpt>bool IsDate(var Expression)<ept id="8fc41aa2-c74f-4c02-8445-ec452bd9a907">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="9ce2c6bf-0ac5-4346-8397-87d4de682fc2">&lt;strong&gt;</bpt>Syntax:<ept id="9ce2c6bf-0ac5-4346-8397-87d4de682fc2">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8fc41aa2-c74f-4c02-8445-ec452bd9a907">&lt;code&gt;</bpt>bool IsDate(var Expression)<ept id="8fc41aa2-c74f-4c02-8445-ec452bd9a907">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="484a0809-3465-493d-853b-471ea19f115f" xml:space="preserve">
          <source><bpt id="3960129a-d1f5-4c26-bbb4-4212f336d4da">&lt;strong&gt;</bpt>Remarks:<ept id="3960129a-d1f5-4c26-bbb4-4212f336d4da">&lt;/strong&gt;</ept> &lt;br&gt; 
Used to determine if CDate() will be successful.</source>
          <target state="new"><bpt id="3960129a-d1f5-4c26-bbb4-4212f336d4da">&lt;strong&gt;</bpt>Remarks:<ept id="3960129a-d1f5-4c26-bbb4-4212f336d4da">&lt;/strong&gt;</ept> &lt;br&gt; 
Used to determine if CDate() will be successful.</target>
        </trans-unit>
        <trans-unit id="91444fdd-5e7b-42de-876a-662ea4143009" xml:space="preserve">
          <source><bpt id="688e26d0-18b7-4699-af59-3c2c0680716b">&lt;strong&gt;</bpt>Description:<ept id="688e26d0-18b7-4699-af59-3c2c0680716b">&lt;/strong&gt;</ept> &lt;br&gt;  
The IsEmpty function evaluates to True if the attribute is present in the CS or MV but evaluates to an empty string.</source>
          <target state="new"><bpt id="688e26d0-18b7-4699-af59-3c2c0680716b">&lt;strong&gt;</bpt>Description:<ept id="688e26d0-18b7-4699-af59-3c2c0680716b">&lt;/strong&gt;</ept> &lt;br&gt;  
The IsEmpty function evaluates to True if the attribute is present in the CS or MV but evaluates to an empty string.</target>
        </trans-unit>
        <trans-unit id="596eb023-47e9-48d2-9dea-34c6ca60e35b" xml:space="preserve">
          <source><bpt id="1cddddad-f030-427c-8171-f53dc7314bc6">&lt;strong&gt;</bpt>Syntax:<ept id="1cddddad-f030-427c-8171-f53dc7314bc6">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="1e0784f4-85b3-4817-b19a-f89423357264">&lt;code&gt;</bpt>bool IsEmpty(var Expression)<ept id="1e0784f4-85b3-4817-b19a-f89423357264">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="1cddddad-f030-427c-8171-f53dc7314bc6">&lt;strong&gt;</bpt>Syntax:<ept id="1cddddad-f030-427c-8171-f53dc7314bc6">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="1e0784f4-85b3-4817-b19a-f89423357264">&lt;code&gt;</bpt>bool IsEmpty(var Expression)<ept id="1e0784f4-85b3-4817-b19a-f89423357264">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="5232dfd3-d81c-413f-8b53-ec6a81ddee22" xml:space="preserve">
          <source><bpt id="6efa0b96-c9c6-4815-bc7a-1e89d6b43aa9">&lt;strong&gt;</bpt>Description:<ept id="6efa0b96-c9c6-4815-bc7a-1e89d6b43aa9">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsGuid function evaluated to true if the string could be converted to a GUID.</source>
          <target state="new"><bpt id="6efa0b96-c9c6-4815-bc7a-1e89d6b43aa9">&lt;strong&gt;</bpt>Description:<ept id="6efa0b96-c9c6-4815-bc7a-1e89d6b43aa9">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsGuid function evaluated to true if the string could be converted to a GUID.</target>
        </trans-unit>
        <trans-unit id="5950ca50-ba42-400a-8d72-aac16a2cd552" xml:space="preserve">
          <source><bpt id="1ded465e-4d30-4ce6-a485-a9a769473232">&lt;strong&gt;</bpt>Syntax:<ept id="1ded465e-4d30-4ce6-a485-a9a769473232">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="c8b117b7-2f9c-43c0-b3c3-df2093db57f3">&lt;code&gt;</bpt>bool IsGuid(str GUID)<ept id="c8b117b7-2f9c-43c0-b3c3-df2093db57f3">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="1ded465e-4d30-4ce6-a485-a9a769473232">&lt;strong&gt;</bpt>Syntax:<ept id="1ded465e-4d30-4ce6-a485-a9a769473232">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="c8b117b7-2f9c-43c0-b3c3-df2093db57f3">&lt;code&gt;</bpt>bool IsGuid(str GUID)<ept id="c8b117b7-2f9c-43c0-b3c3-df2093db57f3">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ba2360af-95e2-4dcb-bfbf-620fa00dcc93" xml:space="preserve">
          <source><bpt id="b3a3af54-0b7a-42db-a52e-845f35b6d991">&lt;strong&gt;</bpt>Remarks:<ept id="b3a3af54-0b7a-42db-a52e-845f35b6d991">&lt;/strong&gt;</ept> &lt;br&gt; 
A GUID is defined as a string following one of these patterns: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx or {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}</source>
          <target state="new"><bpt id="b3a3af54-0b7a-42db-a52e-845f35b6d991">&lt;strong&gt;</bpt>Remarks:<ept id="b3a3af54-0b7a-42db-a52e-845f35b6d991">&lt;/strong&gt;</ept> &lt;br&gt; 
A GUID is defined as a string following one of these patterns: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx or {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}</target>
        </trans-unit>
        <trans-unit id="4a394235-f801-445f-bfe9-be847a35faea" xml:space="preserve">
          <source>Used to determine if CGuid() will be successful.</source>
          <target state="new">Used to determine if CGuid() will be successful.</target>
        </trans-unit>
        <trans-unit id="8340a3c3-ad34-404e-8634-085353a77977" xml:space="preserve">
          <source><bpt id="0f7da515-4507-4a83-9c0d-9a333dcd3f59">&lt;strong&gt;</bpt>Example:<ept id="0f7da515-4507-4a83-9c0d-9a333dcd3f59">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="11b83c00-d39e-4a9d-8b11-d9f16a0890b9">&lt;code&gt;</bpt>IIF(IsGuid([strAttribute]),CGuid([strAttribute]),NULL)<ept id="11b83c00-d39e-4a9d-8b11-d9f16a0890b9">&lt;/code&gt;</ept> &lt;br&gt;
If the StrAttribute has a GUID format, return a binary representation, otherwise return a Null.</source>
          <target state="new"><bpt id="0f7da515-4507-4a83-9c0d-9a333dcd3f59">&lt;strong&gt;</bpt>Example:<ept id="0f7da515-4507-4a83-9c0d-9a333dcd3f59">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="11b83c00-d39e-4a9d-8b11-d9f16a0890b9">&lt;code&gt;</bpt>IIF(IsGuid([strAttribute]),CGuid([strAttribute]),NULL)<ept id="11b83c00-d39e-4a9d-8b11-d9f16a0890b9">&lt;/code&gt;</ept> &lt;br&gt;
If the StrAttribute has a GUID format, return a binary representation, otherwise return a Null.</target>
        </trans-unit>
        <trans-unit id="647eeb81-99eb-4008-8507-e932db55aca5" xml:space="preserve">
          <source><bpt id="82aaca16-bb2c-4371-a0fe-f2cdf2f0b837">&lt;strong&gt;</bpt>Description:<ept id="82aaca16-bb2c-4371-a0fe-f2cdf2f0b837">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsNull function returns true if the expression evaluates to Null. </source>
          <target state="new"><bpt id="82aaca16-bb2c-4371-a0fe-f2cdf2f0b837">&lt;strong&gt;</bpt>Description:<ept id="82aaca16-bb2c-4371-a0fe-f2cdf2f0b837">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsNull function returns true if the expression evaluates to Null. </target>
        </trans-unit>
        <trans-unit id="7a93fa5a-db64-454b-a0e8-6102c63e5254" xml:space="preserve">
          <source><bpt id="3972e35d-16d1-4e99-a92d-af6a1cf292c5">&lt;strong&gt;</bpt>Syntax:<ept id="3972e35d-16d1-4e99-a92d-af6a1cf292c5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="465ea39f-d7cc-4685-9c4b-c28cdcd17e03">&lt;code&gt;</bpt>bool IsNull(var Expression)<ept id="465ea39f-d7cc-4685-9c4b-c28cdcd17e03">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="3972e35d-16d1-4e99-a92d-af6a1cf292c5">&lt;strong&gt;</bpt>Syntax:<ept id="3972e35d-16d1-4e99-a92d-af6a1cf292c5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="465ea39f-d7cc-4685-9c4b-c28cdcd17e03">&lt;code&gt;</bpt>bool IsNull(var Expression)<ept id="465ea39f-d7cc-4685-9c4b-c28cdcd17e03">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="05ad520c-d682-46d7-a7cf-3496bb3ef996" xml:space="preserve">
          <source><bpt id="d11f6c0e-2a21-4a5c-91d1-deca331af30b">&lt;strong&gt;</bpt>Remarks:<ept id="d11f6c0e-2a21-4a5c-91d1-deca331af30b">&lt;/strong&gt;</ept> &lt;br&gt; 
For an attribute, a Null is expressed by the absence of the attribute. </source>
          <target state="new"><bpt id="d11f6c0e-2a21-4a5c-91d1-deca331af30b">&lt;strong&gt;</bpt>Remarks:<ept id="d11f6c0e-2a21-4a5c-91d1-deca331af30b">&lt;/strong&gt;</ept> &lt;br&gt; 
For an attribute, a Null is expressed by the absence of the attribute. </target>
        </trans-unit>
        <trans-unit id="ea37d52e-ce4e-45ae-afda-725fcf3fd0bf" xml:space="preserve">
          <source><bpt id="e4f6b72b-ef9b-4835-91a8-0a9fed9659dc">&lt;strong&gt;</bpt>Example:<ept id="e4f6b72b-ef9b-4835-91a8-0a9fed9659dc">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="5a1b4aad-a5a8-44a5-9375-98bd4d529734">&lt;code&gt;</bpt>IsNull([displayName])<ept id="5a1b4aad-a5a8-44a5-9375-98bd4d529734">&lt;/code&gt;</ept> &lt;br&gt;
Returns True if the attribute is not present in the CS or MV.</source>
          <target state="new"><bpt id="e4f6b72b-ef9b-4835-91a8-0a9fed9659dc">&lt;strong&gt;</bpt>Example:<ept id="e4f6b72b-ef9b-4835-91a8-0a9fed9659dc">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="5a1b4aad-a5a8-44a5-9375-98bd4d529734">&lt;code&gt;</bpt>IsNull([displayName])<ept id="5a1b4aad-a5a8-44a5-9375-98bd4d529734">&lt;/code&gt;</ept> &lt;br&gt;
Returns True if the attribute is not present in the CS or MV.</target>
        </trans-unit>
        <trans-unit id="2775026e-1fc2-4242-b2cb-32180ba15d16" xml:space="preserve">
          <source><bpt id="56c6e498-3e4e-4ca0-bf79-cbd113d94a09">&lt;strong&gt;</bpt>Description:<ept id="56c6e498-3e4e-4ca0-bf79-cbd113d94a09">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsNullOrEmpty function returns true if the expression is null or an empty string.</source>
          <target state="new"><bpt id="56c6e498-3e4e-4ca0-bf79-cbd113d94a09">&lt;strong&gt;</bpt>Description:<ept id="56c6e498-3e4e-4ca0-bf79-cbd113d94a09">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsNullOrEmpty function returns true if the expression is null or an empty string.</target>
        </trans-unit>
        <trans-unit id="bd1efbc9-0de5-4541-bafb-5b8b94204061" xml:space="preserve">
          <source><bpt id="b42a3b59-2795-44a4-906d-e8dd6bc46d52">&lt;strong&gt;</bpt>Syntax:<ept id="b42a3b59-2795-44a4-906d-e8dd6bc46d52">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="3bc38ba5-bb95-402d-874a-7929138d99dd">&lt;code&gt;</bpt>bool IsNullOrEmpty(var Expression)<ept id="3bc38ba5-bb95-402d-874a-7929138d99dd">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="b42a3b59-2795-44a4-906d-e8dd6bc46d52">&lt;strong&gt;</bpt>Syntax:<ept id="b42a3b59-2795-44a4-906d-e8dd6bc46d52">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="3bc38ba5-bb95-402d-874a-7929138d99dd">&lt;code&gt;</bpt>bool IsNullOrEmpty(var Expression)<ept id="3bc38ba5-bb95-402d-874a-7929138d99dd">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="80ac234b-3dbf-4862-99d8-0a771db47906" xml:space="preserve">
          <source><bpt id="9d3ca190-f06f-47e1-81e4-60907cc13a4c">&lt;strong&gt;</bpt>Remarks:<ept id="9d3ca190-f06f-47e1-81e4-60907cc13a4c">&lt;/strong&gt;</ept> &lt;br&gt; 
For an attribute, this would evaluate to True if the attribute is absent or is present but is an empty string.&lt;br&gt;
The inverse of this function is named IsPresent.</source>
          <target state="new"><bpt id="9d3ca190-f06f-47e1-81e4-60907cc13a4c">&lt;strong&gt;</bpt>Remarks:<ept id="9d3ca190-f06f-47e1-81e4-60907cc13a4c">&lt;/strong&gt;</ept> &lt;br&gt; 
For an attribute, this would evaluate to True if the attribute is absent or is present but is an empty string.&lt;br&gt;
The inverse of this function is named IsPresent.</target>
        </trans-unit>
        <trans-unit id="840e94e6-7148-46a7-bf85-91f989b6779d" xml:space="preserve">
          <source><bpt id="666ae45f-bf26-4bc8-95b6-2f21c5919627">&lt;strong&gt;</bpt>Example:<ept id="666ae45f-bf26-4bc8-95b6-2f21c5919627">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="fa611b0e-acb1-4dcb-9fc2-4aaa29a5af66">&lt;code&gt;</bpt>IsNull([displayName])<ept id="fa611b0e-acb1-4dcb-9fc2-4aaa29a5af66">&lt;/code&gt;</ept> &lt;br&gt;
Returns True if the attribute is not present or is an empty string in the CS or MV.</source>
          <target state="new"><bpt id="666ae45f-bf26-4bc8-95b6-2f21c5919627">&lt;strong&gt;</bpt>Example:<ept id="666ae45f-bf26-4bc8-95b6-2f21c5919627">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="fa611b0e-acb1-4dcb-9fc2-4aaa29a5af66">&lt;code&gt;</bpt>IsNull([displayName])<ept id="fa611b0e-acb1-4dcb-9fc2-4aaa29a5af66">&lt;/code&gt;</ept> &lt;br&gt;
Returns True if the attribute is not present or is an empty string in the CS or MV.</target>
        </trans-unit>
        <trans-unit id="02469f1a-32bc-412c-8910-90ac6fb947cc" xml:space="preserve">
          <source><bpt id="31008836-3e0c-4016-9a1d-d6c347c1eb41">&lt;strong&gt;</bpt>Description:<ept id="31008836-3e0c-4016-9a1d-d6c347c1eb41">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsNumeric function returns a Boolean value indicating whether an expression can be evaluated as a number type.</source>
          <target state="new"><bpt id="31008836-3e0c-4016-9a1d-d6c347c1eb41">&lt;strong&gt;</bpt>Description:<ept id="31008836-3e0c-4016-9a1d-d6c347c1eb41">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsNumeric function returns a Boolean value indicating whether an expression can be evaluated as a number type.</target>
        </trans-unit>
        <trans-unit id="f0036ea1-2d7d-4761-8d20-93bb2f6b6f07" xml:space="preserve">
          <source><bpt id="c17978bb-3412-4c77-be0e-801c0fa48957">&lt;strong&gt;</bpt>Syntax:<ept id="c17978bb-3412-4c77-be0e-801c0fa48957">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="fd8e9c9b-97be-4048-bc71-6318ad793d43">&lt;code&gt;</bpt>bool IsNumeric(var Expression)<ept id="fd8e9c9b-97be-4048-bc71-6318ad793d43">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="c17978bb-3412-4c77-be0e-801c0fa48957">&lt;strong&gt;</bpt>Syntax:<ept id="c17978bb-3412-4c77-be0e-801c0fa48957">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="fd8e9c9b-97be-4048-bc71-6318ad793d43">&lt;code&gt;</bpt>bool IsNumeric(var Expression)<ept id="fd8e9c9b-97be-4048-bc71-6318ad793d43">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="eb93b60d-9431-409a-ab33-2423c5d8a81c" xml:space="preserve">
          <source><bpt id="a77013bf-9292-4e92-8deb-0358a2be0a9d">&lt;strong&gt;</bpt>Remarks:<ept id="a77013bf-9292-4e92-8deb-0358a2be0a9d">&lt;/strong&gt;</ept> &lt;br&gt; 
Used to determine if CNum() will be successful to parse the expression.</source>
          <target state="new"><bpt id="a77013bf-9292-4e92-8deb-0358a2be0a9d">&lt;strong&gt;</bpt>Remarks:<ept id="a77013bf-9292-4e92-8deb-0358a2be0a9d">&lt;/strong&gt;</ept> &lt;br&gt; 
Used to determine if CNum() will be successful to parse the expression.</target>
        </trans-unit>
        <trans-unit id="c55e5980-57f5-4ef2-bfc9-2667b0372ddc" xml:space="preserve">
          <source><bpt id="42f93c3e-7f53-45d2-9273-5c2c9c706e1f">&lt;strong&gt;</bpt>Description:<ept id="42f93c3e-7f53-45d2-9273-5c2c9c706e1f">&lt;/strong&gt;</ept> &lt;br&gt;
The IsString function evaluates to True if the expression can be evaluated to a string type.</source>
          <target state="new"><bpt id="42f93c3e-7f53-45d2-9273-5c2c9c706e1f">&lt;strong&gt;</bpt>Description:<ept id="42f93c3e-7f53-45d2-9273-5c2c9c706e1f">&lt;/strong&gt;</ept> &lt;br&gt;
The IsString function evaluates to True if the expression can be evaluated to a string type.</target>
        </trans-unit>
        <trans-unit id="749bd574-e332-4e6d-9628-cc626c62949f" xml:space="preserve">
          <source><bpt id="1e9642b4-f66c-48eb-b45f-e54ec2137c8a">&lt;strong&gt;</bpt>Syntax:<ept id="1e9642b4-f66c-48eb-b45f-e54ec2137c8a">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="55394f35-8b68-4f10-8335-f06b63f98537">&lt;code&gt;</bpt>bool IsString(var expression)<ept id="55394f35-8b68-4f10-8335-f06b63f98537">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="1e9642b4-f66c-48eb-b45f-e54ec2137c8a">&lt;strong&gt;</bpt>Syntax:<ept id="1e9642b4-f66c-48eb-b45f-e54ec2137c8a">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="55394f35-8b68-4f10-8335-f06b63f98537">&lt;code&gt;</bpt>bool IsString(var expression)<ept id="55394f35-8b68-4f10-8335-f06b63f98537">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="bb6ab1db-b9b8-459f-a614-2a6c92fd2f2f" xml:space="preserve">
          <source><bpt id="6bba4023-b606-45e7-ac01-d73542f79c32">&lt;strong&gt;</bpt>Remarks:<ept id="6bba4023-b606-45e7-ac01-d73542f79c32">&lt;/strong&gt;</ept> &lt;br&gt; 
Used to determine if CStr() will be successful to parse the expression.</source>
          <target state="new"><bpt id="6bba4023-b606-45e7-ac01-d73542f79c32">&lt;strong&gt;</bpt>Remarks:<ept id="6bba4023-b606-45e7-ac01-d73542f79c32">&lt;/strong&gt;</ept> &lt;br&gt; 
Used to determine if CStr() will be successful to parse the expression.</target>
        </trans-unit>
        <trans-unit id="d5fdaafc-d6e5-4208-ab9e-f5f5b450174f" xml:space="preserve">
          <source><bpt id="b0d543ac-536d-404a-aff6-f5ed5beeedfd">&lt;strong&gt;</bpt>Description:<ept id="b0d543ac-536d-404a-aff6-f5ed5beeedfd">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsPresent function returns true if the expression evaluates to a string which is not Null and is not empty.</source>
          <target state="new"><bpt id="b0d543ac-536d-404a-aff6-f5ed5beeedfd">&lt;strong&gt;</bpt>Description:<ept id="b0d543ac-536d-404a-aff6-f5ed5beeedfd">&lt;/strong&gt;</ept> &lt;br&gt; 
The IsPresent function returns true if the expression evaluates to a string which is not Null and is not empty.</target>
        </trans-unit>
        <trans-unit id="2d730521-ba96-4fe9-86c4-d33bbc4013c7" xml:space="preserve">
          <source><bpt id="a6320688-26b5-4cbe-99cb-b28593dfa5f0">&lt;strong&gt;</bpt>Syntax:<ept id="a6320688-26b5-4cbe-99cb-b28593dfa5f0">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="a12c540f-6647-4e39-9018-725bb851d79b">&lt;code&gt;</bpt>bool IsPresent(var expression)<ept id="a12c540f-6647-4e39-9018-725bb851d79b">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="a6320688-26b5-4cbe-99cb-b28593dfa5f0">&lt;strong&gt;</bpt>Syntax:<ept id="a6320688-26b5-4cbe-99cb-b28593dfa5f0">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="a12c540f-6647-4e39-9018-725bb851d79b">&lt;code&gt;</bpt>bool IsPresent(var expression)<ept id="a12c540f-6647-4e39-9018-725bb851d79b">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8c1db03b-2a62-4775-9da2-05d05e940768" xml:space="preserve">
          <source><bpt id="334a4e0d-59a5-48d1-a4c9-c7d5fbb708ae">&lt;strong&gt;</bpt>Remarks:<ept id="334a4e0d-59a5-48d1-a4c9-c7d5fbb708ae">&lt;/strong&gt;</ept> &lt;br&gt; 
The inverse of this function is named IsNullOrEmpty.</source>
          <target state="new"><bpt id="334a4e0d-59a5-48d1-a4c9-c7d5fbb708ae">&lt;strong&gt;</bpt>Remarks:<ept id="334a4e0d-59a5-48d1-a4c9-c7d5fbb708ae">&lt;/strong&gt;</ept> &lt;br&gt; 
The inverse of this function is named IsNullOrEmpty.</target>
        </trans-unit>
        <trans-unit id="005f7a86-fa86-4c81-97e9-7afd154ca032" xml:space="preserve">
          <source><bpt id="d9d3594c-d98f-452d-a6ec-2f219355edaa">&lt;strong&gt;</bpt>Example:<ept id="d9d3594c-d98f-452d-a6ec-2f219355edaa">&lt;/strong&gt;</ept> &lt;br&gt; </source>
          <target state="new"><bpt id="d9d3594c-d98f-452d-a6ec-2f219355edaa">&lt;strong&gt;</bpt>Example:<ept id="d9d3594c-d98f-452d-a6ec-2f219355edaa">&lt;/strong&gt;</ept> &lt;br&gt; </target>
        </trans-unit>
        <trans-unit id="3664e70e-b7e4-4118-b815-8b45f8e79c3b" xml:space="preserve">
          <source><bpt id="706b36a0-3e06-479c-956e-4b75f3cb0448">&lt;code&gt;</bpt>Switch(IsPresent([directManager]),[directManager], IsPresent([skiplevelManager]),[skiplevelManager], IsPresent([director]),[director])<ept id="706b36a0-3e06-479c-956e-4b75f3cb0448">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="706b36a0-3e06-479c-956e-4b75f3cb0448">&lt;code&gt;</bpt>Switch(IsPresent([directManager]),[directManager], IsPresent([skiplevelManager]),[skiplevelManager], IsPresent([director]),[director])<ept id="706b36a0-3e06-479c-956e-4b75f3cb0448">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8729885a-d503-44f8-b15f-5d8074ebf112" xml:space="preserve">
          <source><bpt id="cc79ff97-2880-457e-8a2e-d7e260ae2228">&lt;strong&gt;</bpt>Description:<ept id="cc79ff97-2880-457e-8a2e-d7e260ae2228">&lt;/strong&gt;</ept> &lt;br&gt; 
The Item function returns one item from a multi-valued string/attribute. </source>
          <target state="new"><bpt id="cc79ff97-2880-457e-8a2e-d7e260ae2228">&lt;strong&gt;</bpt>Description:<ept id="cc79ff97-2880-457e-8a2e-d7e260ae2228">&lt;/strong&gt;</ept> &lt;br&gt; 
The Item function returns one item from a multi-valued string/attribute. </target>
        </trans-unit>
        <trans-unit id="ddca87e2-b09e-41be-a3bc-b7f3ee33b3a1" xml:space="preserve">
          <source><bpt id="2d1e53a5-1f5a-4da9-a9d4-389603e9a7be">&lt;strong&gt;</bpt>Syntax:<ept id="2d1e53a5-1f5a-4da9-a9d4-389603e9a7be">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="86a65224-7ca0-4dd2-9b9c-7edc77a515cc">&lt;code&gt;</bpt>var Item(mvstr attribute, num index)<ept id="86a65224-7ca0-4dd2-9b9c-7edc77a515cc">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="2d1e53a5-1f5a-4da9-a9d4-389603e9a7be">&lt;strong&gt;</bpt>Syntax:<ept id="2d1e53a5-1f5a-4da9-a9d4-389603e9a7be">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="86a65224-7ca0-4dd2-9b9c-7edc77a515cc">&lt;code&gt;</bpt>var Item(mvstr attribute, num index)<ept id="86a65224-7ca0-4dd2-9b9c-7edc77a515cc">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="e30ed686-dbda-4d0f-9b02-9410f1af7ffe" xml:space="preserve">
          <source>attribute: multi-valued attribute &lt;br&gt;</source>
          <target state="new">attribute: multi-valued attribute &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="a14f3606-1275-4aff-95bb-bc23ae09211a" xml:space="preserve">
          <source>index: index to an item in the multi-valued string.</source>
          <target state="new">index: index to an item in the multi-valued string.</target>
        </trans-unit>
        <trans-unit id="add43bbe-0b99-4330-b3b4-facfed1a26f2" xml:space="preserve">
          <source><bpt id="7c38f38a-9232-4fc1-8cb3-aa12e0e23642">&lt;strong&gt;</bpt>Remarks:<ept id="7c38f38a-9232-4fc1-8cb3-aa12e0e23642">&lt;/strong&gt;</ept> &lt;br&gt; 
The Item function is useful together with the Contains function since the latter function will return the index to an item in the multi-valued attribute.</source>
          <target state="new"><bpt id="7c38f38a-9232-4fc1-8cb3-aa12e0e23642">&lt;strong&gt;</bpt>Remarks:<ept id="7c38f38a-9232-4fc1-8cb3-aa12e0e23642">&lt;/strong&gt;</ept> &lt;br&gt; 
The Item function is useful together with the Contains function since the latter function will return the index to an item in the multi-valued attribute.</target>
        </trans-unit>
        <trans-unit id="e51d9ff0-c2da-462e-9d4f-ac6e71346293" xml:space="preserve">
          <source>Throws an error if index is out of bounds.</source>
          <target state="new">Throws an error if index is out of bounds.</target>
        </trans-unit>
        <trans-unit id="f3bbdd91-ac3e-4706-91cd-06f35ecd36ac" xml:space="preserve">
          <source><bpt id="dd571ca4-089b-431f-9ff9-3d67d1e23028">&lt;strong&gt;</bpt>Example:<ept id="dd571ca4-089b-431f-9ff9-3d67d1e23028">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="71825b98-4f7d-49a5-9293-5ae405813203">&lt;code&gt;</bpt>Mid(Item([proxyAddress],Contains([proxyAddress], ”SMTP:”)),6)<ept id="71825b98-4f7d-49a5-9293-5ae405813203">&lt;/code&gt;</ept>  &lt;br&gt;
Returns the primary email address.</source>
          <target state="new"><bpt id="dd571ca4-089b-431f-9ff9-3d67d1e23028">&lt;strong&gt;</bpt>Example:<ept id="dd571ca4-089b-431f-9ff9-3d67d1e23028">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="71825b98-4f7d-49a5-9293-5ae405813203">&lt;code&gt;</bpt>Mid(Item([proxyAddress],Contains([proxyAddress], ”SMTP:”)),6)<ept id="71825b98-4f7d-49a5-9293-5ae405813203">&lt;/code&gt;</ept>  &lt;br&gt;
Returns the primary email address.</target>
        </trans-unit>
        <trans-unit id="a1ddc582-88d2-493e-bed6-555fa8f1a20d" xml:space="preserve">
          <source><bpt id="6d77f3e8-1856-4d40-a0c2-e83e437a8de9">&lt;strong&gt;</bpt>Description:<ept id="6d77f3e8-1856-4d40-a0c2-e83e437a8de9">&lt;/strong&gt;</ept> &lt;br&gt; 
The ItemOrNull function returns one item from a multi-valued string/attribute. </source>
          <target state="new"><bpt id="6d77f3e8-1856-4d40-a0c2-e83e437a8de9">&lt;strong&gt;</bpt>Description:<ept id="6d77f3e8-1856-4d40-a0c2-e83e437a8de9">&lt;/strong&gt;</ept> &lt;br&gt; 
The ItemOrNull function returns one item from a multi-valued string/attribute. </target>
        </trans-unit>
        <trans-unit id="5f14bbb3-670e-439f-866e-97cfee246932" xml:space="preserve">
          <source><bpt id="21be14a0-b9a1-4eef-be19-1066519e8c8f">&lt;strong&gt;</bpt>Syntax:<ept id="21be14a0-b9a1-4eef-be19-1066519e8c8f">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="2bb51b6f-22a6-4a97-85ab-780ca82c3d75">&lt;code&gt;</bpt>var ItemOrNull(mvstr attribute, num index)<ept id="2bb51b6f-22a6-4a97-85ab-780ca82c3d75">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="21be14a0-b9a1-4eef-be19-1066519e8c8f">&lt;strong&gt;</bpt>Syntax:<ept id="21be14a0-b9a1-4eef-be19-1066519e8c8f">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="2bb51b6f-22a6-4a97-85ab-780ca82c3d75">&lt;code&gt;</bpt>var ItemOrNull(mvstr attribute, num index)<ept id="2bb51b6f-22a6-4a97-85ab-780ca82c3d75">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="526db2bd-e830-4ad8-9f7f-9b1083c1781e" xml:space="preserve">
          <source>attribute: multi-valued attribute &lt;br&gt;</source>
          <target state="new">attribute: multi-valued attribute &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="66812b5d-61f1-4055-80f2-2ccc9b9e7254" xml:space="preserve">
          <source>index: index to an item in the multi-valued string.</source>
          <target state="new">index: index to an item in the multi-valued string.</target>
        </trans-unit>
        <trans-unit id="f24e027d-fc57-4ac9-b9a2-434de7eceed1" xml:space="preserve">
          <source><bpt id="76e9d5a5-88cd-4d1b-b55b-bdcc31d1ef92">&lt;strong&gt;</bpt>Remarks:<ept id="76e9d5a5-88cd-4d1b-b55b-bdcc31d1ef92">&lt;/strong&gt;</ept> &lt;br&gt; 
The ItemOrNull function is useful together with the Contains function since the latter function will return the index to an item in the multi-valued attribute.</source>
          <target state="new"><bpt id="76e9d5a5-88cd-4d1b-b55b-bdcc31d1ef92">&lt;strong&gt;</bpt>Remarks:<ept id="76e9d5a5-88cd-4d1b-b55b-bdcc31d1ef92">&lt;/strong&gt;</ept> &lt;br&gt; 
The ItemOrNull function is useful together with the Contains function since the latter function will return the index to an item in the multi-valued attribute.</target>
        </trans-unit>
        <trans-unit id="9a98c484-9228-4566-893c-1c31452f7a16" xml:space="preserve">
          <source>Returns a Null value if index is out of bounds.</source>
          <target state="new">Returns a Null value if index is out of bounds.</target>
        </trans-unit>
        <trans-unit id="112f2415-3784-4dcb-9547-eb5f9ffaa0ea" xml:space="preserve">
          <source><bpt id="ebaead02-0dec-43a1-bd0e-0dba632ca93f">&lt;strong&gt;</bpt>Description:<ept id="ebaead02-0dec-43a1-bd0e-0dba632ca93f">&lt;/strong&gt;</ept> &lt;br&gt; 
The Join function takes a multi-valued string and returns a single-valued string with specified separator inserted between each item.</source>
          <target state="new"><bpt id="ebaead02-0dec-43a1-bd0e-0dba632ca93f">&lt;strong&gt;</bpt>Description:<ept id="ebaead02-0dec-43a1-bd0e-0dba632ca93f">&lt;/strong&gt;</ept> &lt;br&gt; 
The Join function takes a multi-valued string and returns a single-valued string with specified separator inserted between each item.</target>
        </trans-unit>
        <trans-unit id="6a26bb5d-388a-40a9-8618-bb44563b8f53" xml:space="preserve">
          <source><bpt id="4edafc08-8755-446d-b71a-422382513013">&lt;strong&gt;</bpt>Syntax:<ept id="4edafc08-8755-446d-b71a-422382513013">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="9643e6b7-d1ae-4640-ac7a-0c890cab8255">&lt;code&gt;</bpt>str Join(mvstr attribute)<ept id="9643e6b7-d1ae-4640-ac7a-0c890cab8255">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="e97b2dad-8c28-45ba-b135-05ba4f27429a">&lt;code&gt;</bpt>str Join(mvstr attribute, str Delimiter)<ept id="e97b2dad-8c28-45ba-b135-05ba4f27429a">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="4edafc08-8755-446d-b71a-422382513013">&lt;strong&gt;</bpt>Syntax:<ept id="4edafc08-8755-446d-b71a-422382513013">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="9643e6b7-d1ae-4640-ac7a-0c890cab8255">&lt;code&gt;</bpt>str Join(mvstr attribute)<ept id="9643e6b7-d1ae-4640-ac7a-0c890cab8255">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="e97b2dad-8c28-45ba-b135-05ba4f27429a">&lt;code&gt;</bpt>str Join(mvstr attribute, str Delimiter)<ept id="e97b2dad-8c28-45ba-b135-05ba4f27429a">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ee1fb216-f221-4547-ad6a-0646a058b978" xml:space="preserve">
          <source>attribute: Multi-valued attribute containing strings to be joined. &lt;br&gt;</source>
          <target state="new">attribute: Multi-valued attribute containing strings to be joined. &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="58c5c6e8-b9e7-4290-b26d-9c74e048c305" xml:space="preserve">
          <source>delimiter: Any string, used to separate the substrings in the returned string.</source>
          <target state="new">delimiter: Any string, used to separate the substrings in the returned string.</target>
        </trans-unit>
        <trans-unit id="a958d409-7718-432d-8f1c-f243714be139" xml:space="preserve">
          <source>If omitted, the space character (" ") is used.</source>
          <target state="new">If omitted, the space character (" ") is used.</target>
        </trans-unit>
        <trans-unit id="4ee34b49-15a1-4e61-a880-69c9ec0267d4" xml:space="preserve">
          <source>If Delimiter is a zero-length string ("") or Nothing, all items in the list are concatenated with no delimiters.</source>
          <target state="new">If Delimiter is a zero-length string ("") or Nothing, all items in the list are concatenated with no delimiters.</target>
        </trans-unit>
        <trans-unit id="3d3fe460-b1c9-4ae6-ac0e-a966175b57e9" xml:space="preserve">
          <source><bpt id="7ca8f59d-52d0-47d6-8a2d-1c3469b0a254">&lt;strong&gt;</bpt>Remarks<ept id="7ca8f59d-52d0-47d6-8a2d-1c3469b0a254">&lt;/strong&gt;</ept>&lt;br&gt; 
There is parity between the Join and Split functions. The Join function takes an array of strings and joins them using a delimiter string, to return a single string. The Split function takes a string and separates it at the delimiter, to return an array of strings. However, a key difference is that Join can concatenate strings with any delimiter string, Split can only separate strings using a single character delimiter.</source>
          <target state="new"><bpt id="7ca8f59d-52d0-47d6-8a2d-1c3469b0a254">&lt;strong&gt;</bpt>Remarks<ept id="7ca8f59d-52d0-47d6-8a2d-1c3469b0a254">&lt;/strong&gt;</ept>&lt;br&gt; 
There is parity between the Join and Split functions. The Join function takes an array of strings and joins them using a delimiter string, to return a single string. The Split function takes a string and separates it at the delimiter, to return an array of strings. However, a key difference is that Join can concatenate strings with any delimiter string, Split can only separate strings using a single character delimiter.</target>
        </trans-unit>
        <trans-unit id="97f2b45c-67e0-4cbd-b67f-c9b886a21c48" xml:space="preserve">
          <source><bpt id="96f9417a-4917-4968-aa60-00b9d531f186">&lt;strong&gt;</bpt>Example:<ept id="96f9417a-4917-4968-aa60-00b9d531f186">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8d9b8cb5-5b76-464d-9abc-c821df16027a">&lt;code&gt;</bpt>Join([proxyAddresses],”,”)<ept id="8d9b8cb5-5b76-464d-9abc-c821df16027a">&lt;/code&gt;</ept> &lt;br&gt;
Could return: “SMTP:john.doe@contoso.com,smtp:jd@contoso.com”</source>
          <target state="new"><bpt id="96f9417a-4917-4968-aa60-00b9d531f186">&lt;strong&gt;</bpt>Example:<ept id="96f9417a-4917-4968-aa60-00b9d531f186">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8d9b8cb5-5b76-464d-9abc-c821df16027a">&lt;code&gt;</bpt>Join([proxyAddresses],”,”)<ept id="8d9b8cb5-5b76-464d-9abc-c821df16027a">&lt;/code&gt;</ept> &lt;br&gt;
Could return: “SMTP:john.doe@contoso.com,smtp:jd@contoso.com”</target>
        </trans-unit>
        <trans-unit id="504370f0-68ed-402d-86db-eadb2f6a2e89" xml:space="preserve">
          <source><bpt id="b1893659-b353-4185-877b-a4bca04723ec">&lt;strong&gt;</bpt>Description:<ept id="b1893659-b353-4185-877b-a4bca04723ec">&lt;/strong&gt;</ept> &lt;br&gt; 
The LCase function converts all characters in a string to lower case.</source>
          <target state="new"><bpt id="b1893659-b353-4185-877b-a4bca04723ec">&lt;strong&gt;</bpt>Description:<ept id="b1893659-b353-4185-877b-a4bca04723ec">&lt;/strong&gt;</ept> &lt;br&gt; 
The LCase function converts all characters in a string to lower case.</target>
        </trans-unit>
        <trans-unit id="0df54313-81ef-43b6-b186-a28424abb4cf" xml:space="preserve">
          <source><bpt id="f791d0df-72c2-422f-b18d-2d371dde7e1b">&lt;strong&gt;</bpt>Syntax:<ept id="f791d0df-72c2-422f-b18d-2d371dde7e1b">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="a8c7f15f-2aaa-44ae-b7ce-c26515eea16c">&lt;code&gt;</bpt>str LCase(str value)<ept id="a8c7f15f-2aaa-44ae-b7ce-c26515eea16c">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="f791d0df-72c2-422f-b18d-2d371dde7e1b">&lt;strong&gt;</bpt>Syntax:<ept id="f791d0df-72c2-422f-b18d-2d371dde7e1b">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="a8c7f15f-2aaa-44ae-b7ce-c26515eea16c">&lt;code&gt;</bpt>str LCase(str value)<ept id="a8c7f15f-2aaa-44ae-b7ce-c26515eea16c">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="82b23e30-1419-46e3-bd2c-0971361e4b0d" xml:space="preserve">
          <source><bpt id="c32baa22-1d4a-4737-92b0-db998f155154">&lt;strong&gt;</bpt>Example:<ept id="c32baa22-1d4a-4737-92b0-db998f155154">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="c4eab035-d806-4dbf-8593-abd4d01d110a">&lt;code&gt;</bpt>LCase(“TeSt”)<ept id="c4eab035-d806-4dbf-8593-abd4d01d110a">&lt;/code&gt;</ept> &lt;br&gt;
Returns “test”.</source>
          <target state="new"><bpt id="c32baa22-1d4a-4737-92b0-db998f155154">&lt;strong&gt;</bpt>Example:<ept id="c32baa22-1d4a-4737-92b0-db998f155154">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="c4eab035-d806-4dbf-8593-abd4d01d110a">&lt;code&gt;</bpt>LCase(“TeSt”)<ept id="c4eab035-d806-4dbf-8593-abd4d01d110a">&lt;/code&gt;</ept> &lt;br&gt;
Returns “test”.</target>
        </trans-unit>
        <trans-unit id="b249e601-05a7-41dc-85f6-0ce2070c0e2b" xml:space="preserve">
          <source><bpt id="afb8949e-32d6-437e-980b-73fc40d6b121">&lt;strong&gt;</bpt>Description:<ept id="afb8949e-32d6-437e-980b-73fc40d6b121">&lt;/strong&gt;</ept> &lt;br&gt; 
The Left function returns a specified number of characters from the left of a string.</source>
          <target state="new"><bpt id="afb8949e-32d6-437e-980b-73fc40d6b121">&lt;strong&gt;</bpt>Description:<ept id="afb8949e-32d6-437e-980b-73fc40d6b121">&lt;/strong&gt;</ept> &lt;br&gt; 
The Left function returns a specified number of characters from the left of a string.</target>
        </trans-unit>
        <trans-unit id="d294859c-a6b4-4661-9d29-72ac79bc751c" xml:space="preserve">
          <source><bpt id="80ebe199-948e-4852-978b-50815d7559ee">&lt;strong&gt;</bpt>Syntax:<ept id="80ebe199-948e-4852-978b-50815d7559ee">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="3942859b-67ae-434d-8e7c-e5b78875aa85">&lt;code&gt;</bpt>str Left(str string, num NumChars)<ept id="3942859b-67ae-434d-8e7c-e5b78875aa85">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="80ebe199-948e-4852-978b-50815d7559ee">&lt;strong&gt;</bpt>Syntax:<ept id="80ebe199-948e-4852-978b-50815d7559ee">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="3942859b-67ae-434d-8e7c-e5b78875aa85">&lt;code&gt;</bpt>str Left(str string, num NumChars)<ept id="3942859b-67ae-434d-8e7c-e5b78875aa85">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="41e35454-2a81-4e8e-a96f-9dc0a82a40ce" xml:space="preserve">
          <source>string: the string to return characters from &lt;br&gt;</source>
          <target state="new">string: the string to return characters from &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="1eca28a0-d5be-47a2-9a63-fb83d855dede" xml:space="preserve">
          <source>NumChars: a number identifying the number of characters to return from the beginning (left) of string</source>
          <target state="new">NumChars: a number identifying the number of characters to return from the beginning (left) of string</target>
        </trans-unit>
        <trans-unit id="218df795-1780-44d4-ac37-cadc5146583a" xml:space="preserve">
          <source><bpt id="e69c99db-b596-485f-8410-bd7ba6bbf88c">&lt;strong&gt;</bpt>Remarks:<ept id="e69c99db-b596-485f-8410-bd7ba6bbf88c">&lt;/strong&gt;</ept> &lt;br&gt; 
A string containing the first numChars characters in string: </source>
          <target state="new"><bpt id="e69c99db-b596-485f-8410-bd7ba6bbf88c">&lt;strong&gt;</bpt>Remarks:<ept id="e69c99db-b596-485f-8410-bd7ba6bbf88c">&lt;/strong&gt;</ept> &lt;br&gt; 
A string containing the first numChars characters in string: </target>
        </trans-unit>
        <trans-unit id="0b2f16c2-045d-4853-a565-875a42376590" xml:space="preserve">
          <source>If numChars = 0, return empty string.</source>
          <target state="new">If numChars = 0, return empty string.</target>
        </trans-unit>
        <trans-unit id="e8e85ad3-809e-4726-8780-5e73aa5db81a" xml:space="preserve">
          <source>If numChars &lt; 0, return input string.</source>
          <target state="new">If numChars &lt; 0, return input string.</target>
        </trans-unit>
        <trans-unit id="5bfb675d-d17f-4085-bd47-296ae33c79e2" xml:space="preserve">
          <source>If string is null, return empty string.</source>
          <target state="new">If string is null, return empty string.</target>
        </trans-unit>
        <trans-unit id="66c52adc-5ded-46c3-9675-6b5453b53593" xml:space="preserve">
          <source>If string contains fewer characters than the number specified in numChars, a string identical to string (ie. containing all characters in parameter 1) is returned.</source>
          <target state="new">If string contains fewer characters than the number specified in numChars, a string identical to string (ie. containing all characters in parameter 1) is returned.</target>
        </trans-unit>
        <trans-unit id="fc89dc23-5e39-417f-919c-d9beefb22827" xml:space="preserve">
          <source><bpt id="f75e7980-c06f-4a8c-9cfe-e4e0a615b2e5">&lt;strong&gt;</bpt>Example:<ept id="f75e7980-c06f-4a8c-9cfe-e4e0a615b2e5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="0c6bdf18-a4b1-4631-b703-2dc94179cef6">&lt;code&gt;</bpt>Left(“John Doe”, 3)<ept id="0c6bdf18-a4b1-4631-b703-2dc94179cef6">&lt;/code&gt;</ept> &lt;br&gt;
Returns “Joh”.</source>
          <target state="new"><bpt id="f75e7980-c06f-4a8c-9cfe-e4e0a615b2e5">&lt;strong&gt;</bpt>Example:<ept id="f75e7980-c06f-4a8c-9cfe-e4e0a615b2e5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="0c6bdf18-a4b1-4631-b703-2dc94179cef6">&lt;code&gt;</bpt>Left(“John Doe”, 3)<ept id="0c6bdf18-a4b1-4631-b703-2dc94179cef6">&lt;/code&gt;</ept> &lt;br&gt;
Returns “Joh”.</target>
        </trans-unit>
        <trans-unit id="5417cc90-ec52-457d-8bac-412bad1f521b" xml:space="preserve">
          <source><bpt id="a207adc0-ba0a-45e2-a6c7-f671b64b5fab">&lt;strong&gt;</bpt>Description:<ept id="a207adc0-ba0a-45e2-a6c7-f671b64b5fab">&lt;/strong&gt;</ept> &lt;br&gt; 
The Len function returns number of characters in a string.</source>
          <target state="new"><bpt id="a207adc0-ba0a-45e2-a6c7-f671b64b5fab">&lt;strong&gt;</bpt>Description:<ept id="a207adc0-ba0a-45e2-a6c7-f671b64b5fab">&lt;/strong&gt;</ept> &lt;br&gt; 
The Len function returns number of characters in a string.</target>
        </trans-unit>
        <trans-unit id="3a5e7a02-20ff-4e7a-aa3a-29d42529f17f" xml:space="preserve">
          <source><bpt id="a58496a2-6a41-40c9-96ee-8e0f80e41b47">&lt;strong&gt;</bpt>Syntax:<ept id="a58496a2-6a41-40c9-96ee-8e0f80e41b47">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="db008c3b-7a4e-40c6-85a1-4843eaa05005">&lt;code&gt;</bpt>num Len(str value)<ept id="db008c3b-7a4e-40c6-85a1-4843eaa05005">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="a58496a2-6a41-40c9-96ee-8e0f80e41b47">&lt;strong&gt;</bpt>Syntax:<ept id="a58496a2-6a41-40c9-96ee-8e0f80e41b47">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="db008c3b-7a4e-40c6-85a1-4843eaa05005">&lt;code&gt;</bpt>num Len(str value)<ept id="db008c3b-7a4e-40c6-85a1-4843eaa05005">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d61951c8-6530-4cb0-9b8c-7ab6d0c006f7" xml:space="preserve">
          <source><bpt id="232ec858-324c-47b0-8070-374314fa4662">&lt;strong&gt;</bpt>Example:<ept id="232ec858-324c-47b0-8070-374314fa4662">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="a870c7e5-4e73-45db-880d-b3644fd1914b">&lt;code&gt;</bpt>Len(“John Doe”)<ept id="a870c7e5-4e73-45db-880d-b3644fd1914b">&lt;/code&gt;</ept> &lt;br&gt;
Returns 8</source>
          <target state="new"><bpt id="232ec858-324c-47b0-8070-374314fa4662">&lt;strong&gt;</bpt>Example:<ept id="232ec858-324c-47b0-8070-374314fa4662">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="a870c7e5-4e73-45db-880d-b3644fd1914b">&lt;code&gt;</bpt>Len(“John Doe”)<ept id="a870c7e5-4e73-45db-880d-b3644fd1914b">&lt;/code&gt;</ept> &lt;br&gt;
Returns 8</target>
        </trans-unit>
        <trans-unit id="fefed131-8c4d-4676-a19e-c31d106a4e5b" xml:space="preserve">
          <source><bpt id="4286c596-4cba-4e29-b002-aab489001e1f">&lt;strong&gt;</bpt>Description:<ept id="4286c596-4cba-4e29-b002-aab489001e1f">&lt;/strong&gt;</ept> &lt;br&gt; 
The LTrim function removes leading white spaces from a string.</source>
          <target state="new"><bpt id="4286c596-4cba-4e29-b002-aab489001e1f">&lt;strong&gt;</bpt>Description:<ept id="4286c596-4cba-4e29-b002-aab489001e1f">&lt;/strong&gt;</ept> &lt;br&gt; 
The LTrim function removes leading white spaces from a string.</target>
        </trans-unit>
        <trans-unit id="7532f02b-c9d4-459d-b520-c01ef6c00a2e" xml:space="preserve">
          <source><bpt id="e0ceae3a-4717-4bd7-8930-590965529d8e">&lt;strong&gt;</bpt>Syntax:<ept id="e0ceae3a-4717-4bd7-8930-590965529d8e">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="9c44d78f-1941-445a-8b18-fa9522d1eaa3">&lt;code&gt;</bpt>str LTrim(str value)<ept id="9c44d78f-1941-445a-8b18-fa9522d1eaa3">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="e0ceae3a-4717-4bd7-8930-590965529d8e">&lt;strong&gt;</bpt>Syntax:<ept id="e0ceae3a-4717-4bd7-8930-590965529d8e">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="9c44d78f-1941-445a-8b18-fa9522d1eaa3">&lt;code&gt;</bpt>str LTrim(str value)<ept id="9c44d78f-1941-445a-8b18-fa9522d1eaa3">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="dbdb4dd3-5368-4dee-b195-445d9454fd62" xml:space="preserve">
          <source><bpt id="d646bf94-3abc-48c6-8c4e-335b6049780b">&lt;strong&gt;</bpt>Example:<ept id="d646bf94-3abc-48c6-8c4e-335b6049780b">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="e733a126-b3b9-44c6-94ef-d183a7ae79db">&lt;code&gt;</bpt>LTrim(“ Test ”)<ept id="e733a126-b3b9-44c6-94ef-d183a7ae79db">&lt;/code&gt;</ept> &lt;br&gt;
Returns “Test ”</source>
          <target state="new"><bpt id="d646bf94-3abc-48c6-8c4e-335b6049780b">&lt;strong&gt;</bpt>Example:<ept id="d646bf94-3abc-48c6-8c4e-335b6049780b">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="e733a126-b3b9-44c6-94ef-d183a7ae79db">&lt;code&gt;</bpt>LTrim(“ Test ”)<ept id="e733a126-b3b9-44c6-94ef-d183a7ae79db">&lt;/code&gt;</ept> &lt;br&gt;
Returns “Test ”</target>
        </trans-unit>
        <trans-unit id="51497d2d-fdbe-4d0d-9dee-1f48019c2492" xml:space="preserve">
          <source><bpt id="6511a8d6-3ee1-42bc-a930-140702cd4cc6">&lt;strong&gt;</bpt>Description:<ept id="6511a8d6-3ee1-42bc-a930-140702cd4cc6">&lt;/strong&gt;</ept> &lt;br&gt; 
The Mid function returns a specified number of characters from a specified position in a string.</source>
          <target state="new"><bpt id="6511a8d6-3ee1-42bc-a930-140702cd4cc6">&lt;strong&gt;</bpt>Description:<ept id="6511a8d6-3ee1-42bc-a930-140702cd4cc6">&lt;/strong&gt;</ept> &lt;br&gt; 
The Mid function returns a specified number of characters from a specified position in a string.</target>
        </trans-unit>
        <trans-unit id="874b735d-8666-4be5-87dc-98d3e760fa7d" xml:space="preserve">
          <source><bpt id="8313f8f5-fea4-4108-8e25-492d9bf5c5bf">&lt;strong&gt;</bpt>Syntax:<ept id="8313f8f5-fea4-4108-8e25-492d9bf5c5bf">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="1d9ce214-a881-472f-9a77-163266ae9b22">&lt;code&gt;</bpt>str Mid(str string, num start, num NumChars)<ept id="1d9ce214-a881-472f-9a77-163266ae9b22">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="8313f8f5-fea4-4108-8e25-492d9bf5c5bf">&lt;strong&gt;</bpt>Syntax:<ept id="8313f8f5-fea4-4108-8e25-492d9bf5c5bf">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="1d9ce214-a881-472f-9a77-163266ae9b22">&lt;code&gt;</bpt>str Mid(str string, num start, num NumChars)<ept id="1d9ce214-a881-472f-9a77-163266ae9b22">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="3518ff4c-b330-44bb-a122-0a884f98d5be" xml:space="preserve">
          <source>string: the string to return characters from &lt;br&gt;</source>
          <target state="new">string: the string to return characters from &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="e5a647cd-956f-416d-8393-244477b47e34" xml:space="preserve">
          <source>start: a number identifying the starting position in string to return characters from</source>
          <target state="new">start: a number identifying the starting position in string to return characters from</target>
        </trans-unit>
        <trans-unit id="9e6d5774-06a5-48c8-ab38-4fb05d3bf812" xml:space="preserve">
          <source>NumChars: a number identifying the number of characters to return from position in string</source>
          <target state="new">NumChars: a number identifying the number of characters to return from position in string</target>
        </trans-unit>
        <trans-unit id="7aa54ec9-d507-4b98-8e2b-a5c464f1aeef" xml:space="preserve">
          <source><bpt id="50012a86-8e3c-4137-a4a3-c939b4eaf2cb">&lt;strong&gt;</bpt>Remarks:<ept id="50012a86-8e3c-4137-a4a3-c939b4eaf2cb">&lt;/strong&gt;</ept> &lt;br&gt; 
Return numChars characters starting from position start in string.&lt;br&gt;
A string containing numChars characters from position start in string: </source>
          <target state="new"><bpt id="50012a86-8e3c-4137-a4a3-c939b4eaf2cb">&lt;strong&gt;</bpt>Remarks:<ept id="50012a86-8e3c-4137-a4a3-c939b4eaf2cb">&lt;/strong&gt;</ept> &lt;br&gt; 
Return numChars characters starting from position start in string.&lt;br&gt;
A string containing numChars characters from position start in string: </target>
        </trans-unit>
        <trans-unit id="7eeac24c-d9d9-423a-af0a-fd522dace383" xml:space="preserve">
          <source>If numChars = 0, return empty string.</source>
          <target state="new">If numChars = 0, return empty string.</target>
        </trans-unit>
        <trans-unit id="a2a895ca-bf7e-4d29-95c1-a69031aa1646" xml:space="preserve">
          <source>If numChars &lt; 0, return input string.</source>
          <target state="new">If numChars &lt; 0, return input string.</target>
        </trans-unit>
        <trans-unit id="ddf43664-bd11-4f9c-b023-be5283e76c56" xml:space="preserve">
          <source>If start &gt; the length of string, return input string.</source>
          <target state="new">If start &gt; the length of string, return input string.</target>
        </trans-unit>
        <trans-unit id="e42a7c05-3bbf-4434-a079-46846e91c75b" xml:space="preserve">
          <source>If start &lt;= 0, return input string.</source>
          <target state="new">If start &lt;= 0, return input string.</target>
        </trans-unit>
        <trans-unit id="c72f1f7a-7135-4c14-8268-6b275f815709" xml:space="preserve">
          <source>If string is null, return empty string.</source>
          <target state="new">If string is null, return empty string.</target>
        </trans-unit>
        <trans-unit id="2e994824-d9e8-4670-989c-0d5425f7f21f" xml:space="preserve">
          <source>If there are not numChar characters remaining in string from position start, as many characters as can be returned are returned.</source>
          <target state="new">If there are not numChar characters remaining in string from position start, as many characters as can be returned are returned.</target>
        </trans-unit>
        <trans-unit id="1d1dec0c-b0ee-48be-a6b4-24a16af7efde" xml:space="preserve">
          <source><bpt id="fb137f22-afd8-4987-95ea-61a8c138e8c6">&lt;strong&gt;</bpt>Example:<ept id="fb137f22-afd8-4987-95ea-61a8c138e8c6">&lt;/strong&gt;</ept> &lt;br&gt; </source>
          <target state="new"><bpt id="fb137f22-afd8-4987-95ea-61a8c138e8c6">&lt;strong&gt;</bpt>Example:<ept id="fb137f22-afd8-4987-95ea-61a8c138e8c6">&lt;/strong&gt;</ept> &lt;br&gt; </target>
        </trans-unit>
        <trans-unit id="9a53b475-e7d1-42c1-a048-464e24ef1fe9" xml:space="preserve">
          <source><bpt id="dcb5bd53-b68c-4886-9d68-37a17e082940">&lt;code&gt;</bpt>Mid(“John Doe”, 3, 5)<ept id="dcb5bd53-b68c-4886-9d68-37a17e082940">&lt;/code&gt;</ept> &lt;br&gt;
Returns “hn Do”.</source>
          <target state="new"><bpt id="dcb5bd53-b68c-4886-9d68-37a17e082940">&lt;code&gt;</bpt>Mid(“John Doe”, 3, 5)<ept id="dcb5bd53-b68c-4886-9d68-37a17e082940">&lt;/code&gt;</ept> &lt;br&gt;
Returns “hn Do”.</target>
        </trans-unit>
        <trans-unit id="266b2396-54cc-4ec4-b206-7258e927dc7e" xml:space="preserve">
          <source><bpt id="43e53e04-2dbc-400a-8c41-c4c85ccd7b54">&lt;code&gt;</bpt>Mid(“John Doe”, 6, 999)<ept id="43e53e04-2dbc-400a-8c41-c4c85ccd7b54">&lt;/code&gt;</ept> &lt;br&gt;
Returns “Doe”</source>
          <target state="new"><bpt id="43e53e04-2dbc-400a-8c41-c4c85ccd7b54">&lt;code&gt;</bpt>Mid(“John Doe”, 6, 999)<ept id="43e53e04-2dbc-400a-8c41-c4c85ccd7b54">&lt;/code&gt;</ept> &lt;br&gt;
Returns “Doe”</target>
        </trans-unit>
        <trans-unit id="fe4d15ce-ec5e-4011-8ede-cb380dbe4d7b" xml:space="preserve">
          <source><bpt id="e98f0454-80e5-47c7-969a-22ce1eb8bf10">&lt;strong&gt;</bpt>Description:<ept id="e98f0454-80e5-47c7-969a-22ce1eb8bf10">&lt;/strong&gt;</ept> &lt;br&gt; 
The Now function returns a DateTime specifying the current date and time, according your computer's system date and time.</source>
          <target state="new"><bpt id="e98f0454-80e5-47c7-969a-22ce1eb8bf10">&lt;strong&gt;</bpt>Description:<ept id="e98f0454-80e5-47c7-969a-22ce1eb8bf10">&lt;/strong&gt;</ept> &lt;br&gt; 
The Now function returns a DateTime specifying the current date and time, according your computer's system date and time.</target>
        </trans-unit>
        <trans-unit id="f27cd762-6d60-499a-81f3-a60ad4ec89f8" xml:space="preserve">
          <source><bpt id="03100806-b7cf-40b8-94aa-0d5f2243140f">&lt;strong&gt;</bpt>Syntax:<ept id="03100806-b7cf-40b8-94aa-0d5f2243140f">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="895f83d9-df35-47cc-9b7d-4b5eb7be58b2">&lt;code&gt;</bpt>dt Now()<ept id="895f83d9-df35-47cc-9b7d-4b5eb7be58b2">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="03100806-b7cf-40b8-94aa-0d5f2243140f">&lt;strong&gt;</bpt>Syntax:<ept id="03100806-b7cf-40b8-94aa-0d5f2243140f">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="895f83d9-df35-47cc-9b7d-4b5eb7be58b2">&lt;code&gt;</bpt>dt Now()<ept id="895f83d9-df35-47cc-9b7d-4b5eb7be58b2">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="e2e577f3-192a-4d2d-b459-493710a36501" xml:space="preserve">
          <source><bpt id="4f3daba6-66b8-4bdd-b3fc-28ddc187f13d">&lt;strong&gt;</bpt>Description:<ept id="4f3daba6-66b8-4bdd-b3fc-28ddc187f13d">&lt;/strong&gt;</ept> &lt;br&gt; 
The NumFromDate function returns a date in AD’s date format.</source>
          <target state="new"><bpt id="4f3daba6-66b8-4bdd-b3fc-28ddc187f13d">&lt;strong&gt;</bpt>Description:<ept id="4f3daba6-66b8-4bdd-b3fc-28ddc187f13d">&lt;/strong&gt;</ept> &lt;br&gt; 
The NumFromDate function returns a date in AD’s date format.</target>
        </trans-unit>
        <trans-unit id="c1a56411-6987-4ec5-a1e0-d0dc4b9e4428" xml:space="preserve">
          <source><bpt id="467db2b0-472c-4e59-a9e2-abadd54a2b51">&lt;strong&gt;</bpt>Syntax:<ept id="467db2b0-472c-4e59-a9e2-abadd54a2b51">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="e897613a-32db-4756-a0a8-4a5114e7ca6a">&lt;code&gt;</bpt>num NumFromDate(dt value)<ept id="e897613a-32db-4756-a0a8-4a5114e7ca6a">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="467db2b0-472c-4e59-a9e2-abadd54a2b51">&lt;strong&gt;</bpt>Syntax:<ept id="467db2b0-472c-4e59-a9e2-abadd54a2b51">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="e897613a-32db-4756-a0a8-4a5114e7ca6a">&lt;code&gt;</bpt>num NumFromDate(dt value)<ept id="e897613a-32db-4756-a0a8-4a5114e7ca6a">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8b408eec-16fb-4b95-93c9-3555ca35c144" xml:space="preserve">
          <source><bpt id="c51b1f41-92b9-4b38-ad1b-55fa0eb773b3">&lt;strong&gt;</bpt>Example:<ept id="c51b1f41-92b9-4b38-ad1b-55fa0eb773b3">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="68770940-2270-4a3e-8a5d-bf516b520e52">&lt;code&gt;</bpt>NumFromDate(CDate("2012-01-01 23:00:00"))<ept id="68770940-2270-4a3e-8a5d-bf516b520e52">&lt;/code&gt;</ept> &lt;br&gt;
Returns 129699324000000000</source>
          <target state="new"><bpt id="c51b1f41-92b9-4b38-ad1b-55fa0eb773b3">&lt;strong&gt;</bpt>Example:<ept id="c51b1f41-92b9-4b38-ad1b-55fa0eb773b3">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="68770940-2270-4a3e-8a5d-bf516b520e52">&lt;code&gt;</bpt>NumFromDate(CDate("2012-01-01 23:00:00"))<ept id="68770940-2270-4a3e-8a5d-bf516b520e52">&lt;/code&gt;</ept> &lt;br&gt;
Returns 129699324000000000</target>
        </trans-unit>
        <trans-unit id="3bfa040d-512f-44e2-abac-e8f65f86b931" xml:space="preserve">
          <source><bpt id="c32bef9c-19a2-4968-86e5-cc1a1d677b33">&lt;strong&gt;</bpt>Description:<ept id="c32bef9c-19a2-4968-86e5-cc1a1d677b33">&lt;/strong&gt;</ept> &lt;br&gt; 
The PadLeft function left-pads a string to a specified length using a provided padding character.</source>
          <target state="new"><bpt id="c32bef9c-19a2-4968-86e5-cc1a1d677b33">&lt;strong&gt;</bpt>Description:<ept id="c32bef9c-19a2-4968-86e5-cc1a1d677b33">&lt;/strong&gt;</ept> &lt;br&gt; 
The PadLeft function left-pads a string to a specified length using a provided padding character.</target>
        </trans-unit>
        <trans-unit id="a151ab9e-01ed-4f53-87ef-0c9eaddf9478" xml:space="preserve">
          <source><bpt id="c881aaed-eb92-4e35-a61d-2da001a073b8">&lt;strong&gt;</bpt>Syntax:<ept id="c881aaed-eb92-4e35-a61d-2da001a073b8">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="2fb7ee26-3b23-408b-8d85-5edcbfba1b3d">&lt;code&gt;</bpt>str PadLeft(str string, num length, str padCharacter)<ept id="2fb7ee26-3b23-408b-8d85-5edcbfba1b3d">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="c881aaed-eb92-4e35-a61d-2da001a073b8">&lt;strong&gt;</bpt>Syntax:<ept id="c881aaed-eb92-4e35-a61d-2da001a073b8">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="2fb7ee26-3b23-408b-8d85-5edcbfba1b3d">&lt;code&gt;</bpt>str PadLeft(str string, num length, str padCharacter)<ept id="2fb7ee26-3b23-408b-8d85-5edcbfba1b3d">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="29c49868-d091-4bf8-988e-51f77d691917" xml:space="preserve">
          <source>string: the string to pad. &lt;br&gt;</source>
          <target state="new">string: the string to pad. &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="1b55dd68-f716-4086-b3b6-e90a985bd563" xml:space="preserve">
          <source>length: An integer representing the desired length of string. &lt;br&gt;</source>
          <target state="new">length: An integer representing the desired length of string. &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="4083049e-4a41-4407-813f-d762adf309f0" xml:space="preserve">
          <source>padCharacter: A string consisting of a single character to use as the pad character</source>
          <target state="new">padCharacter: A string consisting of a single character to use as the pad character</target>
        </trans-unit>
        <trans-unit id="2a690289-e4f6-4658-a673-d592bc3fa94f" xml:space="preserve">
          <source>If the length of string is less than length, then padCharacter is repeatedly appended to the beginning (left) of string until it has a length equal to length.</source>
          <target state="new">If the length of string is less than length, then padCharacter is repeatedly appended to the beginning (left) of string until it has a length equal to length.</target>
        </trans-unit>
        <trans-unit id="ffdef07d-428b-40cc-98e8-b24371446c79" xml:space="preserve">
          <source>PadCharacter can be a space character, but it cannot be a null value.</source>
          <target state="new">PadCharacter can be a space character, but it cannot be a null value.</target>
        </trans-unit>
        <trans-unit id="14836b3f-bc90-4e87-8a5d-53441d9e25d3" xml:space="preserve">
          <source>If the length of string is equal to or greater than length, string is returned unchanged.</source>
          <target state="new">If the length of string is equal to or greater than length, string is returned unchanged.</target>
        </trans-unit>
        <trans-unit id="23813fce-52f9-47e0-a84e-8ebc72bc43d4" xml:space="preserve">
          <source>If string has a length greater than or equal to length, a string identical to string is returned.</source>
          <target state="new">If string has a length greater than or equal to length, a string identical to string is returned.</target>
        </trans-unit>
        <trans-unit id="ed331499-c2ff-4024-b059-a55664866e41" xml:space="preserve">
          <source>If the length of string is less than length, then a new string of the desired length is returned containing string padded with a padCharacter.</source>
          <target state="new">If the length of string is less than length, then a new string of the desired length is returned containing string padded with a padCharacter.</target>
        </trans-unit>
        <trans-unit id="d8e6d7b7-990d-4ef8-9a96-048405a499ad" xml:space="preserve">
          <source>If string is null, the function returns an empty string.</source>
          <target state="new">If string is null, the function returns an empty string.</target>
        </trans-unit>
        <trans-unit id="4974aa5e-e55e-4625-b401-24ef73d1e69d" xml:space="preserve">
          <source><bpt id="2bed04f0-7ef8-4e3c-971f-a0094890e2e3">&lt;strong&gt;</bpt>Example:<ept id="2bed04f0-7ef8-4e3c-971f-a0094890e2e3">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="bc5e7ac3-64bf-42a5-86fd-57c9a2252d14">&lt;code&gt;</bpt>PadLeft(“User”, 10, “0”)<ept id="bc5e7ac3-64bf-42a5-86fd-57c9a2252d14">&lt;/code&gt;</ept> &lt;br&gt;
Returns “000000User”.</source>
          <target state="new"><bpt id="2bed04f0-7ef8-4e3c-971f-a0094890e2e3">&lt;strong&gt;</bpt>Example:<ept id="2bed04f0-7ef8-4e3c-971f-a0094890e2e3">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="bc5e7ac3-64bf-42a5-86fd-57c9a2252d14">&lt;code&gt;</bpt>PadLeft(“User”, 10, “0”)<ept id="bc5e7ac3-64bf-42a5-86fd-57c9a2252d14">&lt;/code&gt;</ept> &lt;br&gt;
Returns “000000User”.</target>
        </trans-unit>
        <trans-unit id="d310c854-df8c-4303-b41c-e9436a38ba94" xml:space="preserve">
          <source><bpt id="6711541f-280e-406d-a719-7d97d8d2a8ee">&lt;strong&gt;</bpt>Description:<ept id="6711541f-280e-406d-a719-7d97d8d2a8ee">&lt;/strong&gt;</ept> &lt;br&gt; 
The PadRight function right-pads a string to a specified length using a provided padding character.</source>
          <target state="new"><bpt id="6711541f-280e-406d-a719-7d97d8d2a8ee">&lt;strong&gt;</bpt>Description:<ept id="6711541f-280e-406d-a719-7d97d8d2a8ee">&lt;/strong&gt;</ept> &lt;br&gt; 
The PadRight function right-pads a string to a specified length using a provided padding character.</target>
        </trans-unit>
        <trans-unit id="294049f6-357b-4171-9552-1799ed4cfe5c" xml:space="preserve">
          <source><bpt id="18f08465-72d5-40d5-9b47-49278de28517">&lt;strong&gt;</bpt>Syntax:<ept id="18f08465-72d5-40d5-9b47-49278de28517">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="9936ac7d-cc6b-4633-b6d1-093cdc65c1ed">&lt;code&gt;</bpt>str PadRight(str string, num length, str padCharacter)<ept id="9936ac7d-cc6b-4633-b6d1-093cdc65c1ed">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="18f08465-72d5-40d5-9b47-49278de28517">&lt;strong&gt;</bpt>Syntax:<ept id="18f08465-72d5-40d5-9b47-49278de28517">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="9936ac7d-cc6b-4633-b6d1-093cdc65c1ed">&lt;code&gt;</bpt>str PadRight(str string, num length, str padCharacter)<ept id="9936ac7d-cc6b-4633-b6d1-093cdc65c1ed">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="93b5c518-f59d-4270-b0ad-8bdfb045b6bc" xml:space="preserve">
          <source>string: the string to pad.</source>
          <target state="new">string: the string to pad.</target>
        </trans-unit>
        <trans-unit id="91100968-fb5b-430b-ab7f-e03083a20885" xml:space="preserve">
          <source>length: An integer representing the desired length of string.</source>
          <target state="new">length: An integer representing the desired length of string.</target>
        </trans-unit>
        <trans-unit id="6f2a55e5-c86a-4407-b179-6349535136fd" xml:space="preserve">
          <source>padCharacter: A string consisting of a single character to use as the pad character</source>
          <target state="new">padCharacter: A string consisting of a single character to use as the pad character</target>
        </trans-unit>
        <trans-unit id="2fd361e5-d136-4790-a391-e4d0635ce0d1" xml:space="preserve">
          <source><bpt id="c5edd0eb-199e-4c13-a6ca-e1dd3ad4fbbc">&lt;strong&gt;</bpt>Remarks:<ept id="c5edd0eb-199e-4c13-a6ca-e1dd3ad4fbbc">&lt;/strong&gt;</ept> </source>
          <target state="new"><bpt id="c5edd0eb-199e-4c13-a6ca-e1dd3ad4fbbc">&lt;strong&gt;</bpt>Remarks:<ept id="c5edd0eb-199e-4c13-a6ca-e1dd3ad4fbbc">&lt;/strong&gt;</ept> </target>
        </trans-unit>
        <trans-unit id="a7bb1f1d-2d66-4d72-9a06-b83ef80c6d58" xml:space="preserve">
          <source>If the length of string is less than length, then padCharacter is repeatedly appended to the end (right) of string until it has a length equal to length.</source>
          <target state="new">If the length of string is less than length, then padCharacter is repeatedly appended to the end (right) of string until it has a length equal to length.</target>
        </trans-unit>
        <trans-unit id="e8d1ca84-23c9-4b39-b89a-f88102c2f7d6" xml:space="preserve">
          <source>padCharacter can be a space character, but it cannot be a null value.</source>
          <target state="new">padCharacter can be a space character, but it cannot be a null value.</target>
        </trans-unit>
        <trans-unit id="f99fff1b-0dc6-4af5-9162-e78eac15e43a" xml:space="preserve">
          <source>If the length of string is equal to or greater than length, string is returned unchanged.</source>
          <target state="new">If the length of string is equal to or greater than length, string is returned unchanged.</target>
        </trans-unit>
        <trans-unit id="be33d76b-290d-4d58-b127-6b9b51a51c2c" xml:space="preserve">
          <source>If string has a length greater than or equal to length, a string identical to string is returned.</source>
          <target state="new">If string has a length greater than or equal to length, a string identical to string is returned.</target>
        </trans-unit>
        <trans-unit id="46ea6a8c-3a8f-4ad7-a55f-202eaaad23bf" xml:space="preserve">
          <source>If the length of string is less than length, then a new string of the desired length is returned containing string padded with a padCharacter.</source>
          <target state="new">If the length of string is less than length, then a new string of the desired length is returned containing string padded with a padCharacter.</target>
        </trans-unit>
        <trans-unit id="8be40733-adb5-4c2d-ae6f-519bc3e5be5c" xml:space="preserve">
          <source>If string is null, the function returns an empty string.</source>
          <target state="new">If string is null, the function returns an empty string.</target>
        </trans-unit>
        <trans-unit id="d8546aa7-eb50-4ac1-84f3-38e2091bfdc2" xml:space="preserve">
          <source><bpt id="0584562b-347b-4e6e-9386-4a75a0d52c88">&lt;strong&gt;</bpt>Example:<ept id="0584562b-347b-4e6e-9386-4a75a0d52c88">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="c08f4166-c0f6-4e94-b26d-3af64acdceea">&lt;code&gt;</bpt>PadRight(“User”, 10, “0”)<ept id="c08f4166-c0f6-4e94-b26d-3af64acdceea">&lt;/code&gt;</ept> &lt;br&gt;
Returns “User000000”.</source>
          <target state="new"><bpt id="0584562b-347b-4e6e-9386-4a75a0d52c88">&lt;strong&gt;</bpt>Example:<ept id="0584562b-347b-4e6e-9386-4a75a0d52c88">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="c08f4166-c0f6-4e94-b26d-3af64acdceea">&lt;code&gt;</bpt>PadRight(“User”, 10, “0”)<ept id="c08f4166-c0f6-4e94-b26d-3af64acdceea">&lt;/code&gt;</ept> &lt;br&gt;
Returns “User000000”.</target>
        </trans-unit>
        <trans-unit id="703e5d46-dff4-4d04-aff6-41a19a0f8125" xml:space="preserve">
          <source><bpt id="f0fa7ff7-493c-4ed1-aee2-f3f66a1ce542">&lt;strong&gt;</bpt>Description:<ept id="f0fa7ff7-493c-4ed1-aee2-f3f66a1ce542">&lt;/strong&gt;</ept> &lt;br&gt; 
The PCase function converts the first character of each space delimited word in a string to upper case, and all other characters are converted to lower case.</source>
          <target state="new"><bpt id="f0fa7ff7-493c-4ed1-aee2-f3f66a1ce542">&lt;strong&gt;</bpt>Description:<ept id="f0fa7ff7-493c-4ed1-aee2-f3f66a1ce542">&lt;/strong&gt;</ept> &lt;br&gt; 
The PCase function converts the first character of each space delimited word in a string to upper case, and all other characters are converted to lower case.</target>
        </trans-unit>
        <trans-unit id="edf6e0f2-98a9-4dc4-af09-d05c7d4a5c0d" xml:space="preserve">
          <source><bpt id="a5c49222-9bc0-41ad-ac06-9707412e70f7">&lt;strong&gt;</bpt>Syntax:<ept id="a5c49222-9bc0-41ad-ac06-9707412e70f7">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="f39bf02c-4ec3-4bf5-8491-f9b73f8a04ac">&lt;code&gt;</bpt>String PCase(string)<ept id="f39bf02c-4ec3-4bf5-8491-f9b73f8a04ac">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="a5c49222-9bc0-41ad-ac06-9707412e70f7">&lt;strong&gt;</bpt>Syntax:<ept id="a5c49222-9bc0-41ad-ac06-9707412e70f7">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="f39bf02c-4ec3-4bf5-8491-f9b73f8a04ac">&lt;code&gt;</bpt>String PCase(string)<ept id="f39bf02c-4ec3-4bf5-8491-f9b73f8a04ac">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="3bc1d694-97dd-4db8-8882-16771ad57c5d" xml:space="preserve">
          <source><bpt id="7c6dcb49-cf67-4f58-b459-06ff798b65fc">&lt;strong&gt;</bpt>Example:<ept id="7c6dcb49-cf67-4f58-b459-06ff798b65fc">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8362822b-0344-4306-9c49-a9cc5ec80c98">&lt;code&gt;</bpt>PCase(“TEsT”)<ept id="8362822b-0344-4306-9c49-a9cc5ec80c98">&lt;/code&gt;</ept> &lt;br&gt; 
Returns “Test”.</source>
          <target state="new"><bpt id="7c6dcb49-cf67-4f58-b459-06ff798b65fc">&lt;strong&gt;</bpt>Example:<ept id="7c6dcb49-cf67-4f58-b459-06ff798b65fc">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8362822b-0344-4306-9c49-a9cc5ec80c98">&lt;code&gt;</bpt>PCase(“TEsT”)<ept id="8362822b-0344-4306-9c49-a9cc5ec80c98">&lt;/code&gt;</ept> &lt;br&gt; 
Returns “Test”.</target>
        </trans-unit>
        <trans-unit id="5b46d983-8b6b-432a-91c7-7773a0bad5b1" xml:space="preserve">
          <source><bpt id="e90cfe63-9c38-4431-b340-6a56fbe719f0">&lt;strong&gt;</bpt>Description:<ept id="e90cfe63-9c38-4431-b340-6a56fbe719f0">&lt;/strong&gt;</ept> &lt;br&gt; 
The RandomNum function returns a random number between a specified interval.</source>
          <target state="new"><bpt id="e90cfe63-9c38-4431-b340-6a56fbe719f0">&lt;strong&gt;</bpt>Description:<ept id="e90cfe63-9c38-4431-b340-6a56fbe719f0">&lt;/strong&gt;</ept> &lt;br&gt; 
The RandomNum function returns a random number between a specified interval.</target>
        </trans-unit>
        <trans-unit id="0d13294d-d8a3-4642-a6c0-b60368d14ad8" xml:space="preserve">
          <source><bpt id="26e78d2c-f786-4eb7-870a-acdd1354f176">&lt;strong&gt;</bpt>Syntax:<ept id="26e78d2c-f786-4eb7-870a-acdd1354f176">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="3bf588bb-c687-4b3d-82ee-0ee73cbe27ab">&lt;code&gt;</bpt>num RandomNum(num start, num end)<ept id="3bf588bb-c687-4b3d-82ee-0ee73cbe27ab">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="26e78d2c-f786-4eb7-870a-acdd1354f176">&lt;strong&gt;</bpt>Syntax:<ept id="26e78d2c-f786-4eb7-870a-acdd1354f176">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="3bf588bb-c687-4b3d-82ee-0ee73cbe27ab">&lt;code&gt;</bpt>num RandomNum(num start, num end)<ept id="3bf588bb-c687-4b3d-82ee-0ee73cbe27ab">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="703da2ac-3c84-4889-aff6-b652e6cf8107" xml:space="preserve">
          <source>start: a number identifying the lower limit of the random value to generate &lt;br&gt;</source>
          <target state="new">start: a number identifying the lower limit of the random value to generate &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="6013ecf2-9877-42ff-b608-646e5ba6e103" xml:space="preserve">
          <source>end: a number identifying the upper limit of the random value to generate</source>
          <target state="new">end: a number identifying the upper limit of the random value to generate</target>
        </trans-unit>
        <trans-unit id="71843e2f-0bc7-446b-b614-ecfdb66aa65b" xml:space="preserve">
          <source><bpt id="82fa4bf5-6ab2-4a70-98f4-eacde051fa02">&lt;strong&gt;</bpt>Example:<ept id="82fa4bf5-6ab2-4a70-98f4-eacde051fa02">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="1945f8f4-2ba3-40c5-9007-d32b9161ec40">&lt;code&gt;</bpt>Random(100,999)<ept id="1945f8f4-2ba3-40c5-9007-d32b9161ec40">&lt;/code&gt;</ept> &lt;br&gt; 
Returns 734.</source>
          <target state="new"><bpt id="82fa4bf5-6ab2-4a70-98f4-eacde051fa02">&lt;strong&gt;</bpt>Example:<ept id="82fa4bf5-6ab2-4a70-98f4-eacde051fa02">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="1945f8f4-2ba3-40c5-9007-d32b9161ec40">&lt;code&gt;</bpt>Random(100,999)<ept id="1945f8f4-2ba3-40c5-9007-d32b9161ec40">&lt;/code&gt;</ept> &lt;br&gt; 
Returns 734.</target>
        </trans-unit>
        <trans-unit id="57a862ba-9da3-4684-a9c1-964da008cd5a" xml:space="preserve">
          <source><bpt id="b6b5e408-97a2-461a-af06-55719e6d7af9">&lt;strong&gt;</bpt>Description:<ept id="b6b5e408-97a2-461a-af06-55719e6d7af9">&lt;/strong&gt;</ept> &lt;br&gt; 
The RemoveDuplicates function takes a multi-valued string and make sure each value is unique.</source>
          <target state="new"><bpt id="b6b5e408-97a2-461a-af06-55719e6d7af9">&lt;strong&gt;</bpt>Description:<ept id="b6b5e408-97a2-461a-af06-55719e6d7af9">&lt;/strong&gt;</ept> &lt;br&gt; 
The RemoveDuplicates function takes a multi-valued string and make sure each value is unique.</target>
        </trans-unit>
        <trans-unit id="df2c8907-e74c-454f-a7cd-3f0f26779b2e" xml:space="preserve">
          <source><bpt id="6d18d387-7ca0-4799-a1c7-162bac6be0f3">&lt;strong&gt;</bpt>Syntax:<ept id="6d18d387-7ca0-4799-a1c7-162bac6be0f3">&lt;/strong&gt;</ept> &lt;br&gt;  
<bpt id="8ec90905-14d4-4ef2-98e1-7ede38efebb6">&lt;code&gt;</bpt>mvstr RemoveDuplicates(mvstr attribute)<ept id="8ec90905-14d4-4ef2-98e1-7ede38efebb6">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="6d18d387-7ca0-4799-a1c7-162bac6be0f3">&lt;strong&gt;</bpt>Syntax:<ept id="6d18d387-7ca0-4799-a1c7-162bac6be0f3">&lt;/strong&gt;</ept> &lt;br&gt;  
<bpt id="8ec90905-14d4-4ef2-98e1-7ede38efebb6">&lt;code&gt;</bpt>mvstr RemoveDuplicates(mvstr attribute)<ept id="8ec90905-14d4-4ef2-98e1-7ede38efebb6">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6f481dfc-50c1-40a2-a4e2-f90c051c62f9" xml:space="preserve">
          <source><bpt id="ca5d46c6-723c-4440-8a47-e6c321ead6f0">&lt;strong&gt;</bpt>Example:<ept id="ca5d46c6-723c-4440-8a47-e6c321ead6f0">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="94a08ec1-8519-4c50-8fb7-1f72298c3923">&lt;code&gt;</bpt>RemoveDuplicates([proxyAddresses])<ept id="94a08ec1-8519-4c50-8fb7-1f72298c3923">&lt;/code&gt;</ept> &lt;br&gt;
Returns a sanitized proxyAddress attribute where all duplicate values have been removed.</source>
          <target state="new"><bpt id="ca5d46c6-723c-4440-8a47-e6c321ead6f0">&lt;strong&gt;</bpt>Example:<ept id="ca5d46c6-723c-4440-8a47-e6c321ead6f0">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="94a08ec1-8519-4c50-8fb7-1f72298c3923">&lt;code&gt;</bpt>RemoveDuplicates([proxyAddresses])<ept id="94a08ec1-8519-4c50-8fb7-1f72298c3923">&lt;/code&gt;</ept> &lt;br&gt;
Returns a sanitized proxyAddress attribute where all duplicate values have been removed.</target>
        </trans-unit>
        <trans-unit id="c6cf42f2-4f7a-406a-b69c-3b7bf5bf525d" xml:space="preserve">
          <source><bpt id="4361837d-d70f-412a-997c-95cb099c2eef">&lt;strong&gt;</bpt>Description:<ept id="4361837d-d70f-412a-997c-95cb099c2eef">&lt;/strong&gt;</ept> &lt;br&gt; 
The Replace function replaces all occurrences of a string to another string.</source>
          <target state="new"><bpt id="4361837d-d70f-412a-997c-95cb099c2eef">&lt;strong&gt;</bpt>Description:<ept id="4361837d-d70f-412a-997c-95cb099c2eef">&lt;/strong&gt;</ept> &lt;br&gt; 
The Replace function replaces all occurrences of a string to another string.</target>
        </trans-unit>
        <trans-unit id="473dbe0b-75ba-4d7d-bcae-051c89fb62f3" xml:space="preserve">
          <source><bpt id="b35c816a-8a01-4dec-bb9a-3fd3fd6d2df5">&lt;strong&gt;</bpt>Syntax:<ept id="b35c816a-8a01-4dec-bb9a-3fd3fd6d2df5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="6dd52993-70aa-4075-8adf-d51e769ee208">&lt;code&gt;</bpt>str Replace(str string, str OldValue, str NewValue)<ept id="6dd52993-70aa-4075-8adf-d51e769ee208">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="b35c816a-8a01-4dec-bb9a-3fd3fd6d2df5">&lt;strong&gt;</bpt>Syntax:<ept id="b35c816a-8a01-4dec-bb9a-3fd3fd6d2df5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="6dd52993-70aa-4075-8adf-d51e769ee208">&lt;code&gt;</bpt>str Replace(str string, str OldValue, str NewValue)<ept id="6dd52993-70aa-4075-8adf-d51e769ee208">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ade0ef93-f719-4127-a091-65af58036181" xml:space="preserve">
          <source>string: A string to replace values in. &lt;br&gt;</source>
          <target state="new">string: A string to replace values in. &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="661a66bc-0940-4d24-b591-b85ed4ff5b89" xml:space="preserve">
          <source>OldValue: The string to search for and to replace. &lt;br&gt;</source>
          <target state="new">OldValue: The string to search for and to replace. &lt;br&gt;</target>
        </trans-unit>
        <trans-unit id="087db0a7-d1bc-44ee-ba34-5ab0520f8915" xml:space="preserve">
          <source>NewValue: The string to replace to.</source>
          <target state="new">NewValue: The string to replace to.</target>
        </trans-unit>
        <trans-unit id="9c106491-d358-4f6d-b980-2ed055d2994e" xml:space="preserve">
          <source><bpt id="94899bcb-96ef-4052-b557-486374b7933d">&lt;strong&gt;</bpt>Remarks:<ept id="94899bcb-96ef-4052-b557-486374b7933d">&lt;/strong&gt;</ept> &lt;br&gt; 
The function recognizes the following special monikers:</source>
          <target state="new"><bpt id="94899bcb-96ef-4052-b557-486374b7933d">&lt;strong&gt;</bpt>Remarks:<ept id="94899bcb-96ef-4052-b557-486374b7933d">&lt;/strong&gt;</ept> &lt;br&gt; 
The function recognizes the following special monikers:</target>
        </trans-unit>
        <trans-unit id="a27b1284-8934-454a-8553-2fee8101fd26" xml:space="preserve">
          <source>\n – New Line </source>
          <target state="new">\n – New Line </target>
        </trans-unit>
        <trans-unit id="84307a10-a864-4a43-8e06-82dfb16fb57f" xml:space="preserve">
          <source>\r – Carriage Return</source>
          <target state="new">\r – Carriage Return</target>
        </trans-unit>
        <trans-unit id="66180ec4-38f7-4ecd-9635-d91f72a1677a" xml:space="preserve">
          <source>\t – Tab</source>
          <target state="new">\t – Tab</target>
        </trans-unit>
        <trans-unit id="c61abe97-9b5d-4287-b069-60299a016933" xml:space="preserve">
          <source><bpt id="d1962fa3-e9c5-4b76-b69e-cebf0bc3bfc7">&lt;strong&gt;</bpt>Example:<ept id="d1962fa3-e9c5-4b76-b69e-cebf0bc3bfc7">&lt;/strong&gt;</ept> &lt;br&gt; </source>
          <target state="new"><bpt id="d1962fa3-e9c5-4b76-b69e-cebf0bc3bfc7">&lt;strong&gt;</bpt>Example:<ept id="d1962fa3-e9c5-4b76-b69e-cebf0bc3bfc7">&lt;/strong&gt;</ept> &lt;br&gt; </target>
        </trans-unit>
        <trans-unit id="8723a0dd-8846-43e0-875a-cefc9e364323" xml:space="preserve">
          <source><bpt id="94a7aebb-5679-42ec-b592-47577159a3df">&lt;code&gt;</bpt>Replace([address],”\r\n”,”, “)<ept id="94a7aebb-5679-42ec-b592-47577159a3df">&lt;/code&gt;</ept> &lt;br&gt; 
Replaces CRLF with a comma and space, and could lead to “One Microsoft Way, Redmond, WA, USA”</source>
          <target state="new"><bpt id="94a7aebb-5679-42ec-b592-47577159a3df">&lt;code&gt;</bpt>Replace([address],”\r\n”,”, “)<ept id="94a7aebb-5679-42ec-b592-47577159a3df">&lt;/code&gt;</ept> &lt;br&gt; 
Replaces CRLF with a comma and space, and could lead to “One Microsoft Way, Redmond, WA, USA”</target>
        </trans-unit>
        <trans-unit id="01255a73-f0cc-4adb-b2aa-1cb5ba600280" xml:space="preserve">
          <source><bpt id="d06c022c-7281-4f65-852c-24f13d2911b5">&lt;strong&gt;</bpt>Description:<ept id="d06c022c-7281-4f65-852c-24f13d2911b5">&lt;/strong&gt;</ept> &lt;br&gt; 
The ReplaceChars function replaces all occurrences of characters found in the ReplacePattern string.</source>
          <target state="new"><bpt id="d06c022c-7281-4f65-852c-24f13d2911b5">&lt;strong&gt;</bpt>Description:<ept id="d06c022c-7281-4f65-852c-24f13d2911b5">&lt;/strong&gt;</ept> &lt;br&gt; 
The ReplaceChars function replaces all occurrences of characters found in the ReplacePattern string.</target>
        </trans-unit>
        <trans-unit id="49a661a6-490d-4e23-a8da-e3ebcbe09d15" xml:space="preserve">
          <source><bpt id="610540af-773f-45a7-94b0-f08d69e22fe1">&lt;strong&gt;</bpt>Syntax:<ept id="610540af-773f-45a7-94b0-f08d69e22fe1">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="9b401101-9189-4d7c-8fc7-cda1fc14e50d">&lt;code&gt;</bpt>str ReplaceChars(str string, str ReplacePattern)<ept id="9b401101-9189-4d7c-8fc7-cda1fc14e50d">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="610540af-773f-45a7-94b0-f08d69e22fe1">&lt;strong&gt;</bpt>Syntax:<ept id="610540af-773f-45a7-94b0-f08d69e22fe1">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="9b401101-9189-4d7c-8fc7-cda1fc14e50d">&lt;code&gt;</bpt>str ReplaceChars(str string, str ReplacePattern)<ept id="9b401101-9189-4d7c-8fc7-cda1fc14e50d">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f712f4f3-51d4-423b-a387-1d9d7bdf4185" xml:space="preserve">
          <source>string: A string to replace characters in.</source>
          <target state="new">string: A string to replace characters in.</target>
        </trans-unit>
        <trans-unit id="78d978c7-e702-4537-94eb-c0447d968fa5" xml:space="preserve">
          <source>ReplacePattern: a string containing a dictionary with characters to replace.</source>
          <target state="new">ReplacePattern: a string containing a dictionary with characters to replace.</target>
        </trans-unit>
        <trans-unit id="9d105a54-b6b6-4a2e-b1c4-1d7224f4675c" xml:space="preserve">
          <source>The format is {source1}:{target1},{source2}:{target2},{sourceN},{targetN} where source is the character to find and target the string to replace with.</source>
          <target state="new">The format is {source1}:{target1},{source2}:{target2},{sourceN},{targetN} where source is the character to find and target the string to replace with.</target>
        </trans-unit>
        <trans-unit id="8f87a612-2ddc-4122-8cc8-e95131c2e139" xml:space="preserve">
          <source><bpt id="8263f930-47c6-463a-b789-07825bd24077">&lt;strong&gt;</bpt>Remarks:<ept id="8263f930-47c6-463a-b789-07825bd24077">&lt;/strong&gt;</ept> </source>
          <target state="new"><bpt id="8263f930-47c6-463a-b789-07825bd24077">&lt;strong&gt;</bpt>Remarks:<ept id="8263f930-47c6-463a-b789-07825bd24077">&lt;/strong&gt;</ept> </target>
        </trans-unit>
        <trans-unit id="1a81d9ab-e240-4b2a-a52a-b4d328d18431" xml:space="preserve">
          <source>The function takes each occurrence of defined sources and replaces them with the targets.</source>
          <target state="new">The function takes each occurrence of defined sources and replaces them with the targets.</target>
        </trans-unit>
        <trans-unit id="900394c7-91ee-4653-b0e1-c3df1bd65791" xml:space="preserve">
          <source>The source must be exactly one (unicode) character.</source>
          <target state="new">The source must be exactly one (unicode) character.</target>
        </trans-unit>
        <trans-unit id="659c2710-5f5e-4143-8622-4061bb3f8dd7" xml:space="preserve">
          <source>The source cannot be empty or longer than one character (parsing error).</source>
          <target state="new">The source cannot be empty or longer than one character (parsing error).</target>
        </trans-unit>
        <trans-unit id="708df6bf-0c5d-4163-8e6d-432cbd8b3b45" xml:space="preserve">
          <source>The target can have multiple characters, e.g. ö:oe, β:ss.</source>
          <target state="new">The target can have multiple characters, e.g. ö:oe, β:ss.</target>
        </trans-unit>
        <trans-unit id="adf07851-67bf-4af4-92b1-f9377eb82728" xml:space="preserve">
          <source>The target can be empty indicating that the character should be removed.</source>
          <target state="new">The target can be empty indicating that the character should be removed.</target>
        </trans-unit>
        <trans-unit id="0846ed4b-c51a-4dd4-84e5-904f763d0856" xml:space="preserve">
          <source>The source is case sensitive and must be an exact match.</source>
          <target state="new">The source is case sensitive and must be an exact match.</target>
        </trans-unit>
        <trans-unit id="15ee23f9-1193-4e35-a235-2ab530172a5f" xml:space="preserve">
          <source>The , (comma) and : (colon) are reserved characters and cannot be replaced using this function.</source>
          <target state="new">The , (comma) and : (colon) are reserved characters and cannot be replaced using this function.</target>
        </trans-unit>
        <trans-unit id="518fb6a8-577b-48be-9f98-b87d3f309a87" xml:space="preserve">
          <source>Spaces and other white characters in the ReplacePattern string are ignored.</source>
          <target state="new">Spaces and other white characters in the ReplacePattern string are ignored.</target>
        </trans-unit>
        <trans-unit id="eaaee332-fe6a-4941-b575-de7e30c0c55d" xml:space="preserve">
          <source><bpt id="dd3eba0b-3dfa-4997-9405-29ac03da33ee">&lt;strong&gt;</bpt>Example:<ept id="dd3eba0b-3dfa-4997-9405-29ac03da33ee">&lt;/strong&gt;</ept> &lt;br&gt; 
'%ReplaceString% = ’:,Å:A,Ä:A,Ö:O,å:a,ä:a,ö,o' </source>
          <target state="new"><bpt id="dd3eba0b-3dfa-4997-9405-29ac03da33ee">&lt;strong&gt;</bpt>Example:<ept id="dd3eba0b-3dfa-4997-9405-29ac03da33ee">&lt;/strong&gt;</ept> &lt;br&gt; 
'%ReplaceString% = ’:,Å:A,Ä:A,Ö:O,å:a,ä:a,ö,o' </target>
        </trans-unit>
        <trans-unit id="7650e64e-d73b-42ef-9d0b-1d527e7b2aa1" xml:space="preserve">
          <source><bpt id="a7929473-8ac5-4e57-8b00-112a93a0cda0">&lt;code&gt;</bpt>ReplaceChars(”Räksmörgås”,%ReplaceString%)<ept id="a7929473-8ac5-4e57-8b00-112a93a0cda0">&lt;/code&gt;</ept> &lt;br&gt;
Returns Raksmorgas</source>
          <target state="new"><bpt id="a7929473-8ac5-4e57-8b00-112a93a0cda0">&lt;code&gt;</bpt>ReplaceChars(”Räksmörgås”,%ReplaceString%)<ept id="a7929473-8ac5-4e57-8b00-112a93a0cda0">&lt;/code&gt;</ept> &lt;br&gt;
Returns Raksmorgas</target>
        </trans-unit>
        <trans-unit id="f6f781a7-1605-46b9-b713-13055d1fc190" xml:space="preserve">
          <source><bpt id="3a963015-4f1d-4cfb-8916-6e88230ab4f7">&lt;code&gt;</bpt>ReplaceChars(“O’Neil”,%ReplaceString%)<ept id="3a963015-4f1d-4cfb-8916-6e88230ab4f7">&lt;/code&gt;</ept> &lt;br&gt;
Returns “ONeil”, the single tick is defined to be removed.</source>
          <target state="new"><bpt id="3a963015-4f1d-4cfb-8916-6e88230ab4f7">&lt;code&gt;</bpt>ReplaceChars(“O’Neil”,%ReplaceString%)<ept id="3a963015-4f1d-4cfb-8916-6e88230ab4f7">&lt;/code&gt;</ept> &lt;br&gt;
Returns “ONeil”, the single tick is defined to be removed.</target>
        </trans-unit>
        <trans-unit id="2a779496-dec5-4d9e-9df4-9a8373680a92" xml:space="preserve">
          <source><bpt id="cd4ba859-2ae1-4c61-ba39-2ef231f1bc52">&lt;strong&gt;</bpt>Description:<ept id="cd4ba859-2ae1-4c61-ba39-2ef231f1bc52">&lt;/strong&gt;</ept> &lt;br&gt; 
The Right function returns a specified number of characters from the right (end) of a string.</source>
          <target state="new"><bpt id="cd4ba859-2ae1-4c61-ba39-2ef231f1bc52">&lt;strong&gt;</bpt>Description:<ept id="cd4ba859-2ae1-4c61-ba39-2ef231f1bc52">&lt;/strong&gt;</ept> &lt;br&gt; 
The Right function returns a specified number of characters from the right (end) of a string.</target>
        </trans-unit>
        <trans-unit id="ae0b39f9-2786-49d2-b75a-48479f73aeb5" xml:space="preserve">
          <source><bpt id="9b6bd2c3-695d-43c1-87a8-f6f0ea7d7963">&lt;strong&gt;</bpt>Syntax:<ept id="9b6bd2c3-695d-43c1-87a8-f6f0ea7d7963">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="392de819-605f-43ad-89cc-00761de97a6b">&lt;code&gt;</bpt>str Right(str string, num NumChars)<ept id="392de819-605f-43ad-89cc-00761de97a6b">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="9b6bd2c3-695d-43c1-87a8-f6f0ea7d7963">&lt;strong&gt;</bpt>Syntax:<ept id="9b6bd2c3-695d-43c1-87a8-f6f0ea7d7963">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="392de819-605f-43ad-89cc-00761de97a6b">&lt;code&gt;</bpt>str Right(str string, num NumChars)<ept id="392de819-605f-43ad-89cc-00761de97a6b">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="7dc2adb4-48d5-4460-9ca7-af4b2c16700c" xml:space="preserve">
          <source>string: the string to return characters from </source>
          <target state="new">string: the string to return characters from </target>
        </trans-unit>
        <trans-unit id="3ef1f49a-7dcf-430d-a1ed-93ecc1fa247f" xml:space="preserve">
          <source>NumChars: a number identifying the number of characters to return from the end (right) of string</source>
          <target state="new">NumChars: a number identifying the number of characters to return from the end (right) of string</target>
        </trans-unit>
        <trans-unit id="b3231388-3dd4-475d-8be8-a39790a58b5f" xml:space="preserve">
          <source><bpt id="cd2960e0-13f7-4cb8-97ff-880f759cffad">&lt;strong&gt;</bpt>Remarks:<ept id="cd2960e0-13f7-4cb8-97ff-880f759cffad">&lt;/strong&gt;</ept> &lt;br&gt;
NumChars characters are returned from the last position of string.</source>
          <target state="new"><bpt id="cd2960e0-13f7-4cb8-97ff-880f759cffad">&lt;strong&gt;</bpt>Remarks:<ept id="cd2960e0-13f7-4cb8-97ff-880f759cffad">&lt;/strong&gt;</ept> &lt;br&gt;
NumChars characters are returned from the last position of string.</target>
        </trans-unit>
        <trans-unit id="70ea2e2f-fdce-42a3-8b2f-481f2ae193c2" xml:space="preserve">
          <source>A string containing the last numChars characters in string:</source>
          <target state="new">A string containing the last numChars characters in string:</target>
        </trans-unit>
        <trans-unit id="6e7a431d-d242-4c3c-b443-a9ce1ee45c1a" xml:space="preserve">
          <source>If numChars = 0, return empty string.</source>
          <target state="new">If numChars = 0, return empty string.</target>
        </trans-unit>
        <trans-unit id="1fb5bd94-0904-4362-af5d-eabced88c358" xml:space="preserve">
          <source>If numChars &lt; 0, return input string.</source>
          <target state="new">If numChars &lt; 0, return input string.</target>
        </trans-unit>
        <trans-unit id="e33d010b-76e7-4229-8ea5-941ae3519591" xml:space="preserve">
          <source>If string is null, return empty string.</source>
          <target state="new">If string is null, return empty string.</target>
        </trans-unit>
        <trans-unit id="89d2a68e-94ad-4cb8-a4cb-b3377d9cccb4" xml:space="preserve">
          <source>If string contains fewer characters than the number specified in NumChars, a string identical to string is returned.</source>
          <target state="new">If string contains fewer characters than the number specified in NumChars, a string identical to string is returned.</target>
        </trans-unit>
        <trans-unit id="a482fdc2-6f71-45cc-9e16-bedcc0fa8b3d" xml:space="preserve">
          <source><bpt id="bde771d2-276b-4ecf-87d8-14bb2431e78f">&lt;strong&gt;</bpt>Example:<ept id="bde771d2-276b-4ecf-87d8-14bb2431e78f">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="6f328238-2b7c-4ce7-8b85-7fe66e26f173">&lt;code&gt;</bpt>Right(“John Doe”, 3)<ept id="6f328238-2b7c-4ce7-8b85-7fe66e26f173">&lt;/code&gt;</ept> &lt;br&gt;
Returns “Doe”.</source>
          <target state="new"><bpt id="bde771d2-276b-4ecf-87d8-14bb2431e78f">&lt;strong&gt;</bpt>Example:<ept id="bde771d2-276b-4ecf-87d8-14bb2431e78f">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="6f328238-2b7c-4ce7-8b85-7fe66e26f173">&lt;code&gt;</bpt>Right(“John Doe”, 3)<ept id="6f328238-2b7c-4ce7-8b85-7fe66e26f173">&lt;/code&gt;</ept> &lt;br&gt;
Returns “Doe”.</target>
        </trans-unit>
        <trans-unit id="07ea9ac6-5eef-4fc0-9413-ff01c6e547c1" xml:space="preserve">
          <source><bpt id="bc03fe51-b837-4b9d-a945-64c75a4a0b8b">&lt;strong&gt;</bpt>Description:<ept id="bc03fe51-b837-4b9d-a945-64c75a4a0b8b">&lt;/strong&gt;</ept> &lt;br&gt; 
The RTrim function removes trailing white spaces from a string.</source>
          <target state="new"><bpt id="bc03fe51-b837-4b9d-a945-64c75a4a0b8b">&lt;strong&gt;</bpt>Description:<ept id="bc03fe51-b837-4b9d-a945-64c75a4a0b8b">&lt;/strong&gt;</ept> &lt;br&gt; 
The RTrim function removes trailing white spaces from a string.</target>
        </trans-unit>
        <trans-unit id="3b2e9dc9-19f7-4af7-9454-d19fa992640f" xml:space="preserve">
          <source><bpt id="4c05e010-069a-43f2-8b47-e435f8332622">&lt;strong&gt;</bpt>Syntax:<ept id="4c05e010-069a-43f2-8b47-e435f8332622">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8a19cd17-3686-4e83-89d3-7db48c36b82a">&lt;code&gt;</bpt>str RTrim(str value)<ept id="8a19cd17-3686-4e83-89d3-7db48c36b82a">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="4c05e010-069a-43f2-8b47-e435f8332622">&lt;strong&gt;</bpt>Syntax:<ept id="4c05e010-069a-43f2-8b47-e435f8332622">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8a19cd17-3686-4e83-89d3-7db48c36b82a">&lt;code&gt;</bpt>str RTrim(str value)<ept id="8a19cd17-3686-4e83-89d3-7db48c36b82a">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="afa96b35-e16f-413a-9b2b-a4eb6ad34646" xml:space="preserve">
          <source><bpt id="36c2e1da-da09-4048-8a7a-24bc7338fec5">&lt;strong&gt;</bpt>Example:<ept id="36c2e1da-da09-4048-8a7a-24bc7338fec5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="6312044c-7dec-4983-9659-3789047946b7">&lt;code&gt;</bpt>RTrim(“ Test ”)<ept id="6312044c-7dec-4983-9659-3789047946b7">&lt;/code&gt;</ept> &lt;br&gt; 
Returns “ Test”.</source>
          <target state="new"><bpt id="36c2e1da-da09-4048-8a7a-24bc7338fec5">&lt;strong&gt;</bpt>Example:<ept id="36c2e1da-da09-4048-8a7a-24bc7338fec5">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="6312044c-7dec-4983-9659-3789047946b7">&lt;code&gt;</bpt>RTrim(“ Test ”)<ept id="6312044c-7dec-4983-9659-3789047946b7">&lt;/code&gt;</ept> &lt;br&gt; 
Returns “ Test”.</target>
        </trans-unit>
        <trans-unit id="e9aa0125-2d0f-4717-bb31-55793f09c9a8" xml:space="preserve">
          <source><bpt id="36eba234-3b04-4a9d-8dbc-f3f68acddaf5">&lt;strong&gt;</bpt>Description:<ept id="36eba234-3b04-4a9d-8dbc-f3f68acddaf5">&lt;/strong&gt;</ept> &lt;br&gt; 
The Split function takes a string separated with a delimiter and makes it a multi-valued string.</source>
          <target state="new"><bpt id="36eba234-3b04-4a9d-8dbc-f3f68acddaf5">&lt;strong&gt;</bpt>Description:<ept id="36eba234-3b04-4a9d-8dbc-f3f68acddaf5">&lt;/strong&gt;</ept> &lt;br&gt; 
The Split function takes a string separated with a delimiter and makes it a multi-valued string.</target>
        </trans-unit>
        <trans-unit id="c37d662f-0aad-4f91-98cb-99655dab9dec" xml:space="preserve">
          <source><bpt id="b6608b4a-30e9-46f1-b018-69a9e401c77a">&lt;strong&gt;</bpt>Syntax:<ept id="b6608b4a-30e9-46f1-b018-69a9e401c77a">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="3a504b54-d195-4a08-abf6-586987ee2c4d">&lt;code&gt;</bpt>mvstr Split(str value, str delimiter)<ept id="3a504b54-d195-4a08-abf6-586987ee2c4d">&lt;/code&gt;</ept> &lt;br?
<bpt id="f1c8265b-8cad-418b-9e47-55f685199e5e">&lt;code&gt;</bpt>mvstr Split(str value, str delimiter, num limit)<ept id="f1c8265b-8cad-418b-9e47-55f685199e5e">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="b6608b4a-30e9-46f1-b018-69a9e401c77a">&lt;strong&gt;</bpt>Syntax:<ept id="b6608b4a-30e9-46f1-b018-69a9e401c77a">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="3a504b54-d195-4a08-abf6-586987ee2c4d">&lt;code&gt;</bpt>mvstr Split(str value, str delimiter)<ept id="3a504b54-d195-4a08-abf6-586987ee2c4d">&lt;/code&gt;</ept> &lt;br?
<bpt id="f1c8265b-8cad-418b-9e47-55f685199e5e">&lt;code&gt;</bpt>mvstr Split(str value, str delimiter, num limit)<ept id="f1c8265b-8cad-418b-9e47-55f685199e5e">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ec168531-ab76-4e2f-b188-d1f86c76d79e" xml:space="preserve">
          <source>value: the string with a delimiter character to separate.</source>
          <target state="new">value: the string with a delimiter character to separate.</target>
        </trans-unit>
        <trans-unit id="6cecc5eb-c09d-4c70-9824-981694a3ea04" xml:space="preserve">
          <source>delimiter: single character to be used as the delimiter.</source>
          <target state="new">delimiter: single character to be used as the delimiter.</target>
        </trans-unit>
        <trans-unit id="8a893662-2014-4cfa-bbc5-6a67176a2cf5" xml:space="preserve">
          <source>limit: maximum number of values which will be returned.</source>
          <target state="new">limit: maximum number of values which will be returned.</target>
        </trans-unit>
        <trans-unit id="b388d1da-5668-48bf-8871-d894702d5192" xml:space="preserve">
          <source><bpt id="ddb3c390-2975-4688-9598-3042b6325c8d">&lt;strong&gt;</bpt>Example:<ept id="ddb3c390-2975-4688-9598-3042b6325c8d">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="2e541872-761b-4fc0-9f28-f1751a554a9f">&lt;code&gt;</bpt>Split(“SMTP:john.doe@contoso.com,smtp:jd@contoso.com”,”,”)<ept id="2e541872-761b-4fc0-9f28-f1751a554a9f">&lt;/code&gt;</ept> &lt;br&gt;
Returns a multi-valued string with 2 elements useful for the proxyAddress attribute</source>
          <target state="new"><bpt id="ddb3c390-2975-4688-9598-3042b6325c8d">&lt;strong&gt;</bpt>Example:<ept id="ddb3c390-2975-4688-9598-3042b6325c8d">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="2e541872-761b-4fc0-9f28-f1751a554a9f">&lt;code&gt;</bpt>Split(“SMTP:john.doe@contoso.com,smtp:jd@contoso.com”,”,”)<ept id="2e541872-761b-4fc0-9f28-f1751a554a9f">&lt;/code&gt;</ept> &lt;br&gt;
Returns a multi-valued string with 2 elements useful for the proxyAddress attribute</target>
        </trans-unit>
        <trans-unit id="b794d836-904f-4c0d-9e51-6d2d2d714162" xml:space="preserve">
          <source><bpt id="93b85f5f-7587-4384-9b42-0acc068c137b">&lt;strong&gt;</bpt>Description:<ept id="93b85f5f-7587-4384-9b42-0acc068c137b">&lt;/strong&gt;</ept> &lt;br&gt;
The StringFromGuid function takes a binary GUID and converts it to a string</source>
          <target state="new"><bpt id="93b85f5f-7587-4384-9b42-0acc068c137b">&lt;strong&gt;</bpt>Description:<ept id="93b85f5f-7587-4384-9b42-0acc068c137b">&lt;/strong&gt;</ept> &lt;br&gt;
The StringFromGuid function takes a binary GUID and converts it to a string</target>
        </trans-unit>
        <trans-unit id="307cf39c-51ce-46c3-a573-5f5f646b406a" xml:space="preserve">
          <source><bpt id="e27bb0aa-c6ff-4f6b-a789-c475b6f59179">&lt;strong&gt;</bpt>Syntax:<ept id="e27bb0aa-c6ff-4f6b-a789-c475b6f59179">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="c40c0d48-51d9-49fd-838e-257a3562c8ae">&lt;code&gt;</bpt>str StringFromGuid(bin GUID)<ept id="c40c0d48-51d9-49fd-838e-257a3562c8ae">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="e27bb0aa-c6ff-4f6b-a789-c475b6f59179">&lt;strong&gt;</bpt>Syntax:<ept id="e27bb0aa-c6ff-4f6b-a789-c475b6f59179">&lt;/strong&gt;</ept> &lt;br&gt;
<bpt id="c40c0d48-51d9-49fd-838e-257a3562c8ae">&lt;code&gt;</bpt>str StringFromGuid(bin GUID)<ept id="c40c0d48-51d9-49fd-838e-257a3562c8ae">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="bc22242e-556a-4aef-b4fb-9bb0f667a3c8" xml:space="preserve">
          <source><bpt id="bbabf4b6-068e-4b33-bec7-e8e18816097d">&lt;strong&gt;</bpt>Description:<ept id="bbabf4b6-068e-4b33-bec7-e8e18816097d">&lt;/strong&gt;</ept> &lt;br&gt; 
The StringFromSid function converts a byte array or a multi-valued byte array containing a security identifier to a string or multi-valued string.</source>
          <target state="new"><bpt id="bbabf4b6-068e-4b33-bec7-e8e18816097d">&lt;strong&gt;</bpt>Description:<ept id="bbabf4b6-068e-4b33-bec7-e8e18816097d">&lt;/strong&gt;</ept> &lt;br&gt; 
The StringFromSid function converts a byte array or a multi-valued byte array containing a security identifier to a string or multi-valued string.</target>
        </trans-unit>
        <trans-unit id="135ebd62-3083-48da-9044-89cf9144d2f2" xml:space="preserve">
          <source><bpt id="f2c777de-8b9c-4edd-9ccf-055b5f9df6f3">&lt;strong&gt;</bpt>Syntax:<ept id="f2c777de-8b9c-4edd-9ccf-055b5f9df6f3">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="680c4e67-c621-4205-a42c-7ec41e403d8c">&lt;code&gt;</bpt>str StringFromSid(bin ObjectSID)<ept id="680c4e67-c621-4205-a42c-7ec41e403d8c">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="76194119-8703-4eae-82a0-5a884c1fd903">&lt;code&gt;</bpt>mvstr StringFromSid(mvbin ObjectSID)<ept id="76194119-8703-4eae-82a0-5a884c1fd903">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="f2c777de-8b9c-4edd-9ccf-055b5f9df6f3">&lt;strong&gt;</bpt>Syntax:<ept id="f2c777de-8b9c-4edd-9ccf-055b5f9df6f3">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="680c4e67-c621-4205-a42c-7ec41e403d8c">&lt;code&gt;</bpt>str StringFromSid(bin ObjectSID)<ept id="680c4e67-c621-4205-a42c-7ec41e403d8c">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="76194119-8703-4eae-82a0-5a884c1fd903">&lt;code&gt;</bpt>mvstr StringFromSid(mvbin ObjectSID)<ept id="76194119-8703-4eae-82a0-5a884c1fd903">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="dea02905-a37e-42b6-a32d-497e957f68fd" xml:space="preserve">
          <source><bpt id="514f7614-11aa-4bf0-b9d0-ea7eaf6e4610">&lt;strong&gt;</bpt>Description:<ept id="514f7614-11aa-4bf0-b9d0-ea7eaf6e4610">&lt;/strong&gt;</ept> &lt;br&gt; 
The Switch function is used to return a single value based on evaluated conditions.</source>
          <target state="new"><bpt id="514f7614-11aa-4bf0-b9d0-ea7eaf6e4610">&lt;strong&gt;</bpt>Description:<ept id="514f7614-11aa-4bf0-b9d0-ea7eaf6e4610">&lt;/strong&gt;</ept> &lt;br&gt; 
The Switch function is used to return a single value based on evaluated conditions.</target>
        </trans-unit>
        <trans-unit id="ea78e42b-f1e4-4e48-9651-0b6e876b6ba0" xml:space="preserve">
          <source><bpt id="eeeec5dc-e574-435b-a191-9c2260707b96">&lt;strong&gt;</bpt>Syntax:<ept id="eeeec5dc-e574-435b-a191-9c2260707b96">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="fd6c3791-51c0-48b6-897c-de831a86d9b6">&lt;code&gt;</bpt>var Switch(exp expr1, var value1[, exp expr2, var value … [, exp expr, var valueN]])<ept id="fd6c3791-51c0-48b6-897c-de831a86d9b6">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="eeeec5dc-e574-435b-a191-9c2260707b96">&lt;strong&gt;</bpt>Syntax:<ept id="eeeec5dc-e574-435b-a191-9c2260707b96">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="fd6c3791-51c0-48b6-897c-de831a86d9b6">&lt;code&gt;</bpt>var Switch(exp expr1, var value1[, exp expr2, var value … [, exp expr, var valueN]])<ept id="fd6c3791-51c0-48b6-897c-de831a86d9b6">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="a81379fa-3a3a-4f7c-b207-e2af81a43f0d" xml:space="preserve">
          <source>expr: Variant expression you want to evaluate.</source>
          <target state="new">expr: Variant expression you want to evaluate.</target>
        </trans-unit>
        <trans-unit id="5be379ca-8483-4532-a474-dde0a94ecfd1" xml:space="preserve">
          <source>value: Value to be returned if the corresponding expression is True.</source>
          <target state="new">value: Value to be returned if the corresponding expression is True.</target>
        </trans-unit>
        <trans-unit id="815b68b1-f706-49dc-8052-c3d5989966f1" xml:space="preserve">
          <source><bpt id="9ac44ac2-2be9-4764-bdb6-cd9db072b31d">&lt;strong&gt;</bpt>Remarks:<ept id="9ac44ac2-2be9-4764-bdb6-cd9db072b31d">&lt;/strong&gt;</ept> &lt;br&gt; 
The Switch function argument list consists of pairs of expressions and values. The expressions are evaluated from left to right, and the value associated with the first expression to evaluate to True is returned. If the parts aren't properly paired, a run-time error occurs. </source>
          <target state="new"><bpt id="9ac44ac2-2be9-4764-bdb6-cd9db072b31d">&lt;strong&gt;</bpt>Remarks:<ept id="9ac44ac2-2be9-4764-bdb6-cd9db072b31d">&lt;/strong&gt;</ept> &lt;br&gt; 
The Switch function argument list consists of pairs of expressions and values. The expressions are evaluated from left to right, and the value associated with the first expression to evaluate to True is returned. If the parts aren't properly paired, a run-time error occurs. </target>
        </trans-unit>
        <trans-unit id="b7ea4243-ce98-4068-8db8-094361907f42" xml:space="preserve">
          <source>For example, if expr1 is True, Switch returns value1.</source>
          <target state="new">For example, if expr1 is True, Switch returns value1.</target>
        </trans-unit>
        <trans-unit id="2470989b-f7a1-408a-b6ee-070276f7a110" xml:space="preserve">
          <source>If expr-1 is False, but expr-2 is True, Switch returns value-2, and so on.</source>
          <target state="new">If expr-1 is False, but expr-2 is True, Switch returns value-2, and so on.</target>
        </trans-unit>
        <trans-unit id="5f35d285-a89e-4819-9eca-e709909f2b23" xml:space="preserve">
          <source>Switch returns a Nothing if:</source>
          <target state="new">Switch returns a Nothing if:</target>
        </trans-unit>
        <trans-unit id="2d92cf9f-d5b3-409b-9796-f7d545186dab" xml:space="preserve">
          <source>None of the expressions are True.</source>
          <target state="new">None of the expressions are True.</target>
        </trans-unit>
        <trans-unit id="038e6658-2500-4d60-beb9-828534fa9944" xml:space="preserve">
          <source>The first True expression has a corresponding value that is Null.</source>
          <target state="new">The first True expression has a corresponding value that is Null.</target>
        </trans-unit>
        <trans-unit id="b3efa5aa-6b29-484f-9132-1803d2baf4dc" xml:space="preserve">
          <source>Switch evaluates all of the expressions, even though it returns only one of them.</source>
          <target state="new">Switch evaluates all of the expressions, even though it returns only one of them.</target>
        </trans-unit>
        <trans-unit id="e2b28615-e2c2-4ef8-b003-c65b137e105f" xml:space="preserve">
          <source>For this reason, you should watch for undesirable side effects.</source>
          <target state="new">For this reason, you should watch for undesirable side effects.</target>
        </trans-unit>
        <trans-unit id="15ec9cd8-129c-41f0-b25c-02e82db4a0fb" xml:space="preserve">
          <source>For example, if the evaluation of any expression results in a division by zero error, an error occurs.</source>
          <target state="new">For example, if the evaluation of any expression results in a division by zero error, an error occurs.</target>
        </trans-unit>
        <trans-unit id="73834dd2-9e89-469b-b2c6-053042b61a47" xml:space="preserve">
          <source>Value can also be the Error function which would return a custom string.</source>
          <target state="new">Value can also be the Error function which would return a custom string.</target>
        </trans-unit>
        <trans-unit id="e8ad00d1-8001-439e-bf1c-febc5bb11afe" xml:space="preserve">
          <source><bpt id="caaa60ce-a0a8-4530-9ce6-d3faab017e80">&lt;strong&gt;</bpt>Example:<ept id="caaa60ce-a0a8-4530-9ce6-d3faab017e80">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="a19e5809-629e-4ed3-8ecf-e472b0ed1436">&lt;code&gt;</bpt>Switch([city] = "London", "English", [city] = "Rome", "Italian", [city] = "Paris", "French", True, Error(“Unknown city”))<ept id="a19e5809-629e-4ed3-8ecf-e472b0ed1436">&lt;/code&gt;</ept> &lt;br&gt;
Returns the language spoken in some major cities, otherwise returns an Error.</source>
          <target state="new"><bpt id="caaa60ce-a0a8-4530-9ce6-d3faab017e80">&lt;strong&gt;</bpt>Example:<ept id="caaa60ce-a0a8-4530-9ce6-d3faab017e80">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="a19e5809-629e-4ed3-8ecf-e472b0ed1436">&lt;code&gt;</bpt>Switch([city] = "London", "English", [city] = "Rome", "Italian", [city] = "Paris", "French", True, Error(“Unknown city”))<ept id="a19e5809-629e-4ed3-8ecf-e472b0ed1436">&lt;/code&gt;</ept> &lt;br&gt;
Returns the language spoken in some major cities, otherwise returns an Error.</target>
        </trans-unit>
        <trans-unit id="7a025781-c0bc-4429-a023-7ae212935926" xml:space="preserve">
          <source><bpt id="9345cbbe-bc16-40bb-b664-be8170408fa2">&lt;strong&gt;</bpt>Description:<ept id="9345cbbe-bc16-40bb-b664-be8170408fa2">&lt;/strong&gt;</ept> &lt;br&gt; 
The Trim function removes leading and trailing white spaces from a string.</source>
          <target state="new"><bpt id="9345cbbe-bc16-40bb-b664-be8170408fa2">&lt;strong&gt;</bpt>Description:<ept id="9345cbbe-bc16-40bb-b664-be8170408fa2">&lt;/strong&gt;</ept> &lt;br&gt; 
The Trim function removes leading and trailing white spaces from a string.</target>
        </trans-unit>
        <trans-unit id="5ad2242b-3c87-44e3-a00c-0ce8c47c61e0" xml:space="preserve">
          <source><bpt id="7591d78a-2513-4cdb-8fbb-a35726fd76e7">&lt;strong&gt;</bpt>Syntax:<ept id="7591d78a-2513-4cdb-8fbb-a35726fd76e7">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="7897e1a8-223d-4537-8855-5f99081f8e79">&lt;code&gt;</bpt>str Trim(str value)<ept id="7897e1a8-223d-4537-8855-5f99081f8e79">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="23c03547-5c2f-435a-a207-e612641ca0cc">&lt;code&gt;</bpt>mvstr Trim(mvstr value)<ept id="23c03547-5c2f-435a-a207-e612641ca0cc">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="7591d78a-2513-4cdb-8fbb-a35726fd76e7">&lt;strong&gt;</bpt>Syntax:<ept id="7591d78a-2513-4cdb-8fbb-a35726fd76e7">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="7897e1a8-223d-4537-8855-5f99081f8e79">&lt;code&gt;</bpt>str Trim(str value)<ept id="7897e1a8-223d-4537-8855-5f99081f8e79">&lt;/code&gt;</ept> &lt;br&gt;
<bpt id="23c03547-5c2f-435a-a207-e612641ca0cc">&lt;code&gt;</bpt>mvstr Trim(mvstr value)<ept id="23c03547-5c2f-435a-a207-e612641ca0cc">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b1d825a3-26e6-4d94-8206-8295a1a97dbc" xml:space="preserve">
          <source><bpt id="d55c158f-c21d-4c2b-9e87-def1847cdc31">&lt;strong&gt;</bpt>Example:<ept id="d55c158f-c21d-4c2b-9e87-def1847cdc31">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="6197c1a5-2b1a-4a2e-8402-1aa4900ffb9b">&lt;code&gt;</bpt>Trim(“ Test ”)<ept id="6197c1a5-2b1a-4a2e-8402-1aa4900ffb9b">&lt;/code&gt;</ept> &lt;br&gt;
Returns “Test”.</source>
          <target state="new"><bpt id="d55c158f-c21d-4c2b-9e87-def1847cdc31">&lt;strong&gt;</bpt>Example:<ept id="d55c158f-c21d-4c2b-9e87-def1847cdc31">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="6197c1a5-2b1a-4a2e-8402-1aa4900ffb9b">&lt;code&gt;</bpt>Trim(“ Test ”)<ept id="6197c1a5-2b1a-4a2e-8402-1aa4900ffb9b">&lt;/code&gt;</ept> &lt;br&gt;
Returns “Test”.</target>
        </trans-unit>
        <trans-unit id="a2a88143-a4d5-4606-bc1c-d78dbaa917c4" xml:space="preserve">
          <source><bpt id="cd092e24-0b0e-4a2f-b3a9-070da8c56fc7">&lt;code&gt;</bpt>Trim([proxyAddresses])<ept id="cd092e24-0b0e-4a2f-b3a9-070da8c56fc7">&lt;/code&gt;</ept> &lt;br&gt;
Removes leading and trailing spaces for each value in the proxyAddress attribute.</source>
          <target state="new"><bpt id="cd092e24-0b0e-4a2f-b3a9-070da8c56fc7">&lt;code&gt;</bpt>Trim([proxyAddresses])<ept id="cd092e24-0b0e-4a2f-b3a9-070da8c56fc7">&lt;/code&gt;</ept> &lt;br&gt;
Removes leading and trailing spaces for each value in the proxyAddress attribute.</target>
        </trans-unit>
        <trans-unit id="b720dd9f-3e44-4850-bed0-ba70f509e0e5" xml:space="preserve">
          <source><bpt id="947bc118-091f-40a8-81d9-5498a67fb283">&lt;strong&gt;</bpt>Description:<ept id="947bc118-091f-40a8-81d9-5498a67fb283">&lt;/strong&gt;</ept> &lt;br&gt;
The UCase function converts all characters in a string to upper case.</source>
          <target state="new"><bpt id="947bc118-091f-40a8-81d9-5498a67fb283">&lt;strong&gt;</bpt>Description:<ept id="947bc118-091f-40a8-81d9-5498a67fb283">&lt;/strong&gt;</ept> &lt;br&gt;
The UCase function converts all characters in a string to upper case.</target>
        </trans-unit>
        <trans-unit id="eec1bf54-48c5-4f28-8cbf-15f2f15c6b4d" xml:space="preserve">
          <source><bpt id="37a98c1e-c0ce-44f7-b97a-718efda40c1a">&lt;strong&gt;</bpt>Syntax:<ept id="37a98c1e-c0ce-44f7-b97a-718efda40c1a">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8a13b590-d4c9-438d-8829-06a013503c58">&lt;code&gt;</bpt>str UCase(str string)<ept id="8a13b590-d4c9-438d-8829-06a013503c58">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="37a98c1e-c0ce-44f7-b97a-718efda40c1a">&lt;strong&gt;</bpt>Syntax:<ept id="37a98c1e-c0ce-44f7-b97a-718efda40c1a">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="8a13b590-d4c9-438d-8829-06a013503c58">&lt;code&gt;</bpt>str UCase(str string)<ept id="8a13b590-d4c9-438d-8829-06a013503c58">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0e6cee6a-69cd-495c-837d-c972d02356af" xml:space="preserve">
          <source><bpt id="518fb1f6-1f4f-4bef-bf6b-2c41be9106a1">&lt;strong&gt;</bpt>Example:<ept id="518fb1f6-1f4f-4bef-bf6b-2c41be9106a1">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="f3e6c292-8e58-405a-bcef-cb0adb614e9d">&lt;code&gt;</bpt>UCase(“TeSt”)<ept id="f3e6c292-8e58-405a-bcef-cb0adb614e9d">&lt;/code&gt;</ept> &lt;br&gt;
Returns “TEST”.</source>
          <target state="new"><bpt id="518fb1f6-1f4f-4bef-bf6b-2c41be9106a1">&lt;strong&gt;</bpt>Example:<ept id="518fb1f6-1f4f-4bef-bf6b-2c41be9106a1">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="f3e6c292-8e58-405a-bcef-cb0adb614e9d">&lt;code&gt;</bpt>UCase(“TeSt”)<ept id="f3e6c292-8e58-405a-bcef-cb0adb614e9d">&lt;/code&gt;</ept> &lt;br&gt;
Returns “TEST”.</target>
        </trans-unit>
        <trans-unit id="8ba287b8-49af-445f-b374-3429ab0eb7f1" xml:space="preserve">
          <source><bpt id="3b156276-d26e-4501-a760-4cdab7a4477b">&lt;strong&gt;</bpt>Description:<ept id="3b156276-d26e-4501-a760-4cdab7a4477b">&lt;/strong&gt;</ept> &lt;br&gt; 
The Word function returns a word contained within a string, based on parameters describing the delimiters to use and the word number to return.</source>
          <target state="new"><bpt id="3b156276-d26e-4501-a760-4cdab7a4477b">&lt;strong&gt;</bpt>Description:<ept id="3b156276-d26e-4501-a760-4cdab7a4477b">&lt;/strong&gt;</ept> &lt;br&gt; 
The Word function returns a word contained within a string, based on parameters describing the delimiters to use and the word number to return.</target>
        </trans-unit>
        <trans-unit id="3e5cf8c2-dee0-4022-8d72-d55a6ab5eda6" xml:space="preserve">
          <source><bpt id="d9c54131-6c06-4c56-b6f9-38ced9cd3102">&lt;strong&gt;</bpt>Syntax:<ept id="d9c54131-6c06-4c56-b6f9-38ced9cd3102">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="589cebda-15cf-4b7b-aea2-9070b5edb2c2">&lt;code&gt;</bpt>str Word(str string, num WordNumber, str delimiters)<ept id="589cebda-15cf-4b7b-aea2-9070b5edb2c2">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="d9c54131-6c06-4c56-b6f9-38ced9cd3102">&lt;strong&gt;</bpt>Syntax:<ept id="d9c54131-6c06-4c56-b6f9-38ced9cd3102">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="589cebda-15cf-4b7b-aea2-9070b5edb2c2">&lt;code&gt;</bpt>str Word(str string, num WordNumber, str delimiters)<ept id="589cebda-15cf-4b7b-aea2-9070b5edb2c2">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9fd4bc7d-24b0-45d1-a4ee-f3210a0b5ac9" xml:space="preserve">
          <source>string: the string to return a word from.</source>
          <target state="new">string: the string to return a word from.</target>
        </trans-unit>
        <trans-unit id="704219b1-5548-4905-a909-b6a158140eaa" xml:space="preserve">
          <source>WordNumber: a number identifying which word number should be returned.</source>
          <target state="new">WordNumber: a number identifying which word number should be returned.</target>
        </trans-unit>
        <trans-unit id="a7321981-c518-41a2-b53b-128b45d4ed54" xml:space="preserve">
          <source>delimiters: a string representing the delimiter(s) that should be used to identify words</source>
          <target state="new">delimiters: a string representing the delimiter(s) that should be used to identify words</target>
        </trans-unit>
        <trans-unit id="e78cc081-8abc-4c18-82a5-27abc970bbd0" xml:space="preserve">
          <source><bpt id="d17d4885-eecd-47d8-8813-5e09e1d5473b">&lt;strong&gt;</bpt>Remarks:<ept id="d17d4885-eecd-47d8-8813-5e09e1d5473b">&lt;/strong&gt;</ept> &lt;br&gt; 
Each string of characters in string separated by the one of the characters in delimiters are identified as words: </source>
          <target state="new"><bpt id="d17d4885-eecd-47d8-8813-5e09e1d5473b">&lt;strong&gt;</bpt>Remarks:<ept id="d17d4885-eecd-47d8-8813-5e09e1d5473b">&lt;/strong&gt;</ept> &lt;br&gt; 
Each string of characters in string separated by the one of the characters in delimiters are identified as words: </target>
        </trans-unit>
        <trans-unit id="980bc5c8-9e69-4147-a0e3-4f714b6763f7" xml:space="preserve">
          <source>If number &lt; 1, returns empty string.</source>
          <target state="new">If number &lt; 1, returns empty string.</target>
        </trans-unit>
        <trans-unit id="41d03f98-288d-4d63-916a-9cdee72edd84" xml:space="preserve">
          <source>If string is null, returns empty string.</source>
          <target state="new">If string is null, returns empty string.</target>
        </trans-unit>
        <trans-unit id="67e96fac-565b-481c-9687-f3e32b7d9da1" xml:space="preserve">
          <source>If string contains less than number words, or string does not contain any words identified by delimeters, an empty string is returned.</source>
          <target state="new">If string contains less than number words, or string does not contain any words identified by delimeters, an empty string is returned.</target>
        </trans-unit>
        <trans-unit id="d85b9f34-8b29-4fe7-9d73-6757525a938b" xml:space="preserve">
          <source><bpt id="e1c2c190-47f5-4aae-807e-f526ac917bb7">&lt;strong&gt;</bpt>Example:<ept id="e1c2c190-47f5-4aae-807e-f526ac917bb7">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="85facab5-4d25-409e-8438-619ccc235f93">&lt;code&gt;</bpt>Word(“The quick brown fox”,3,” “)<ept id="85facab5-4d25-409e-8438-619ccc235f93">&lt;/code&gt;</ept> &lt;br&gt;
Returns “brown”</source>
          <target state="new"><bpt id="e1c2c190-47f5-4aae-807e-f526ac917bb7">&lt;strong&gt;</bpt>Example:<ept id="e1c2c190-47f5-4aae-807e-f526ac917bb7">&lt;/strong&gt;</ept> &lt;br&gt; 
<bpt id="85facab5-4d25-409e-8438-619ccc235f93">&lt;code&gt;</bpt>Word(“The quick brown fox”,3,” “)<ept id="85facab5-4d25-409e-8438-619ccc235f93">&lt;/code&gt;</ept> &lt;br&gt;
Returns “brown”</target>
        </trans-unit>
        <trans-unit id="32416b9a-a8e8-49fe-bdd6-160ac3ae596b" xml:space="preserve">
          <source><bpt id="350b4838-4052-4b43-bff6-839f519803f5">&lt;code&gt;</bpt>Word(“This,string!has&amp;many seperators”,3,”,!&amp;#”)<ept id="350b4838-4052-4b43-bff6-839f519803f5">&lt;/code&gt;</ept> &lt;br&gt;
Would return “has”</source>
          <target state="new"><bpt id="350b4838-4052-4b43-bff6-839f519803f5">&lt;code&gt;</bpt>Word(“This,string!has&amp;many seperators”,3,”,!&amp;#”)<ept id="350b4838-4052-4b43-bff6-839f519803f5">&lt;/code&gt;</ept> &lt;br&gt;
Would return “has”</target>
        </trans-unit>
        <trans-unit id="2a9ac64f-605b-4052-89d4-c5a91cd81540" xml:space="preserve">
          <source><bpt id="e55334e3-8c58-4af6-b370-9ac047df8828">&lt;linkText&gt;</bpt>Understanding Declarative Provisioning Expressions<ept id="e55334e3-8c58-4af6-b370-9ac047df8828">&lt;/linkText&gt;</ept><bpt id="e55334e3-8c58-4af6-b370-9ac047df8828">&lt;title&gt;</bpt><ept id="e55334e3-8c58-4af6-b370-9ac047df8828">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="e55334e3-8c58-4af6-b370-9ac047df8828">&lt;linkText&gt;</bpt>Understanding Declarative Provisioning Expressions<ept id="e55334e3-8c58-4af6-b370-9ac047df8828">&lt;/linkText&gt;</ept><bpt id="e55334e3-8c58-4af6-b370-9ac047df8828">&lt;title&gt;</bpt><ept id="e55334e3-8c58-4af6-b370-9ac047df8828">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="c71c2ad2-88a8-4b27-bee1-471dede65bce" xml:space="preserve">
          <source><bpt id="94bef195-32e4-4382-955e-73ae36fac761">&lt;linkText&gt;</bpt>Azure AD Connect Sync: Customizing Synchronization options<ept id="94bef195-32e4-4382-955e-73ae36fac761">&lt;/linkText&gt;</ept><bpt id="94bef195-32e4-4382-955e-73ae36fac761">&lt;title&gt;</bpt><ept id="94bef195-32e4-4382-955e-73ae36fac761">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="94bef195-32e4-4382-955e-73ae36fac761">&lt;linkText&gt;</bpt>Azure AD Connect Sync: Customizing Synchronization options<ept id="94bef195-32e4-4382-955e-73ae36fac761">&lt;/linkText&gt;</ept><bpt id="94bef195-32e4-4382-955e-73ae36fac761">&lt;title&gt;</bpt><ept id="94bef195-32e4-4382-955e-73ae36fac761">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="01fec17f-eab3-4b1b-b701-03b74e92b718" xml:space="preserve">
          <source><bpt id="9d059eb5-ce32-4af0-bd7a-250beafa4b66">&lt;linkText&gt;</bpt>Integrating your on-premises identities with Azure Active Directory<ept id="9d059eb5-ce32-4af0-bd7a-250beafa4b66">&lt;/linkText&gt;</ept><bpt id="9d059eb5-ce32-4af0-bd7a-250beafa4b66">&lt;title&gt;</bpt><ept id="9d059eb5-ce32-4af0-bd7a-250beafa4b66">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="9d059eb5-ce32-4af0-bd7a-250beafa4b66">&lt;linkText&gt;</bpt>Integrating your on-premises identities with Azure Active Directory<ept id="9d059eb5-ce32-4af0-bd7a-250beafa4b66">&lt;/linkText&gt;</ept><bpt id="9d059eb5-ce32-4af0-bd7a-250beafa4b66">&lt;title&gt;</bpt><ept id="9d059eb5-ce32-4af0-bd7a-250beafa4b66">&lt;/title&gt;</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>