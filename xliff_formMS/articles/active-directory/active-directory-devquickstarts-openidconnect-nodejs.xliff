<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="6329157f-7f4e-441c-8115-4bef69823442" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="6329157f-7f4e-441c-8115-4bef69823442" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="1e8e2d57-2cfd-492f-9fc4-04782bff3f00">
        <trans-unit id="04b37084-2323-4a2d-8414-d64fe040941a" xml:space="preserve">
          <source>Getting started with Azure AD sign in and sign out using node.js</source>
          <target state="new">Getting started with Azure AD sign in and sign out using node.js</target>
        </trans-unit>
        <trans-unit id="19696e43-098f-4c5a-889c-6e7507d5d6c1" xml:space="preserve">
          <source>How to build a node.js Express MVC Web App that integrates with Azure AD for sign in.</source>
          <target state="new">How to build a node.js Express MVC Web App that integrates with Azure AD for sign in.</target>
        </trans-unit>
        <trans-unit id="03ecca42-d045-43de-9b09-7c7a3b87d80f" xml:space="preserve">
          <source>Here we'll use Passport to:</source>
          <target state="new">Here we'll use Passport to:</target>
        </trans-unit>
        <trans-unit id="9dc12d34-04ae-4062-b19d-5a1ccca72461" xml:space="preserve">
          <source>Sign the user into the app using Azure AD and the v2.0 app model.</source>
          <target state="new">Sign the user into the app using Azure AD and the v2.0 app model.</target>
        </trans-unit>
        <trans-unit id="fbf89cee-db9e-455d-bed8-5a2c3a2bfe40" xml:space="preserve">
          <source>Display some information about the user.</source>
          <target state="new">Display some information about the user.</target>
        </trans-unit>
        <trans-unit id="e5ba8192-bcbe-4e73-9023-db724ede9c69" xml:space="preserve">
          <source>Sign the user out of the app.</source>
          <target state="new">Sign the user out of the app.</target>
        </trans-unit>
        <trans-unit id="8b1ece2e-0797-484b-8c30-0cbcb0720026" xml:space="preserve">
          <source><bpt id="a3e4c969-d9a2-45dc-af08-184d00286cb9">&lt;strong&gt;</bpt>Passport<ept id="a3e4c969-d9a2-45dc-af08-184d00286cb9">&lt;/strong&gt;</ept> is authentication middleware for Node.js.</source>
          <target state="new"><bpt id="a3e4c969-d9a2-45dc-af08-184d00286cb9">&lt;strong&gt;</bpt>Passport<ept id="a3e4c969-d9a2-45dc-af08-184d00286cb9">&lt;/strong&gt;</ept> is authentication middleware for Node.js.</target>
        </trans-unit>
        <trans-unit id="ee9c4dbd-ed2e-4583-89d9-ce31ae8cc857" xml:space="preserve">
          <source>Extremely flexible and modular, Passport can be unobtrusively dropped in to any Express-based or Resitify web application.</source>
          <target state="new">Extremely flexible and modular, Passport can be unobtrusively dropped in to any Express-based or Resitify web application.</target>
        </trans-unit>
        <trans-unit id="91825a0e-e799-4f89-b3b6-0ae94ff7ce07" xml:space="preserve">
          <source>A comprehensive set of strategies support authentication using a username and password, Facebook, Twitter, and more.</source>
          <target state="new">A comprehensive set of strategies support authentication using a username and password, Facebook, Twitter, and more.</target>
        </trans-unit>
        <trans-unit id="6e119c97-433c-4c4b-83f6-436004e4d29c" xml:space="preserve">
          <source>We have developed a strategy for Microsoft Azure Active Directory.</source>
          <target state="new">We have developed a strategy for Microsoft Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="a665d6ef-a42f-4b63-ac42-8902aa545d20" xml:space="preserve">
          <source>We will install this module and then add the Microsoft Azure Active Directory <bpt id="f6edffaa-84b7-4d31-8c34-b19aa766b13f">&lt;code&gt;</bpt>passport-azure-ad<ept id="f6edffaa-84b7-4d31-8c34-b19aa766b13f">&lt;/code&gt;</ept> plug-in.</source>
          <target state="new">We will install this module and then add the Microsoft Azure Active Directory <bpt id="f6edffaa-84b7-4d31-8c34-b19aa766b13f">&lt;code&gt;</bpt>passport-azure-ad<ept id="f6edffaa-84b7-4d31-8c34-b19aa766b13f">&lt;/code&gt;</ept> plug-in.</target>
        </trans-unit>
        <trans-unit id="e9c28b20-cc18-4177-9e37-6fda17b406ce" xml:space="preserve">
          <source>In order to do this, you'll need to:</source>
          <target state="new">In order to do this, you'll need to:</target>
        </trans-unit>
        <trans-unit id="241c377c-a32f-4b7b-8807-6844d055971b" xml:space="preserve">
          <source>Register an app.</source>
          <target state="new">Register an app.</target>
        </trans-unit>
        <trans-unit id="d4a0eaf5-fd7b-4dd3-9734-d8e3263bd5d6" xml:space="preserve">
          <source>Set up your app to use the Passport-azure-ad strategy.</source>
          <target state="new">Set up your app to use the Passport-azure-ad strategy.</target>
        </trans-unit>
        <trans-unit id="6007b79c-3443-4805-97e9-79f98dbf38c2" xml:space="preserve">
          <source>Use Passport to issue sign-in and sign-out requests to Azure AD.</source>
          <target state="new">Use Passport to issue sign-in and sign-out requests to Azure AD.</target>
        </trans-unit>
        <trans-unit id="c980530f-8d4f-4c61-9d37-131256021629" xml:space="preserve">
          <source>Print out data about the user.</source>
          <target state="new">Print out data about the user.</target>
        </trans-unit>
        <trans-unit id="8ec04ad8-b111-46ff-9f48-a2405ca43173" xml:space="preserve">
          <source>The code for this tutorial is maintained <bpt id="00ff5c6a-2599-4e98-8730-f27100b88690">&lt;linkText&gt;</bpt>on GitHub<ept id="00ff5c6a-2599-4e98-8730-f27100b88690">&lt;/linkText&gt;</ept><bpt id="00ff5c6a-2599-4e98-8730-f27100b88690">&lt;title&gt;</bpt><ept id="00ff5c6a-2599-4e98-8730-f27100b88690">&lt;/title&gt;</ept>.</source>
          <target state="new">The code for this tutorial is maintained <bpt id="00ff5c6a-2599-4e98-8730-f27100b88690">&lt;linkText&gt;</bpt>on GitHub<ept id="00ff5c6a-2599-4e98-8730-f27100b88690">&lt;/linkText&gt;</ept><bpt id="00ff5c6a-2599-4e98-8730-f27100b88690">&lt;title&gt;</bpt><ept id="00ff5c6a-2599-4e98-8730-f27100b88690">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="2997fc64-0723-4c6f-b8c6-49653a3a25d9" xml:space="preserve">
          <source>To follow along, you can <bpt id="2bceb07d-b2dd-42c0-bf51-924ce9bbb5be">&lt;linkText&gt;</bpt>download the app's skeleton as a .zip<ept id="2bceb07d-b2dd-42c0-bf51-924ce9bbb5be">&lt;/linkText&gt;</ept><bpt id="2bceb07d-b2dd-42c0-bf51-924ce9bbb5be">&lt;title&gt;</bpt><ept id="2bceb07d-b2dd-42c0-bf51-924ce9bbb5be">&lt;/title&gt;</ept> or clone the skeleton:</source>
          <target state="new">To follow along, you can <bpt id="2bceb07d-b2dd-42c0-bf51-924ce9bbb5be">&lt;linkText&gt;</bpt>download the app's skeleton as a .zip<ept id="2bceb07d-b2dd-42c0-bf51-924ce9bbb5be">&lt;/linkText&gt;</ept><bpt id="2bceb07d-b2dd-42c0-bf51-924ce9bbb5be">&lt;title&gt;</bpt><ept id="2bceb07d-b2dd-42c0-bf51-924ce9bbb5be">&lt;/title&gt;</ept> or clone the skeleton:</target>
        </trans-unit>
        <trans-unit id="23ff2ae1-75b8-4d01-b163-ea8fad5f8960" xml:space="preserve">
          <source>After that, use the strategy we just referenced to handle our login requests</source>
          <target state="new">After that, use the strategy we just referenced to handle our login requests</target>
        </trans-unit>
        <trans-unit id="792dbe79-63e3-40f3-83be-a34474315da6" xml:space="preserve">
          <source>Passport uses a similar pattern for all it’s Strategies (Twitter, Facebook, etc.)</source>
          <target state="new">Passport uses a similar pattern for all it’s Strategies (Twitter, Facebook, etc.)</target>
        </trans-unit>
        <trans-unit id="db917fbd-8561-4362-b622-8c19fffd5941" xml:space="preserve">
          <source>that all Strategy writers adhere to.</source>
          <target state="new">that all Strategy writers adhere to.</target>
        </trans-unit>
        <trans-unit id="a0ab05a3-0251-4504-ba8f-c095102b068e" xml:space="preserve">
          <source>Looking at the strategy you see we pass it a function() that has a token and a done as the parameters.</source>
          <target state="new">Looking at the strategy you see we pass it a function() that has a token and a done as the parameters.</target>
        </trans-unit>
        <trans-unit id="ea6f44f9-1dcd-4ff6-bc32-86d1c42302db" xml:space="preserve">
          <source>The strategy will dutifully come back to us once it does all it’s work.</source>
          <target state="new">The strategy will dutifully come back to us once it does all it’s work.</target>
        </trans-unit>
        <trans-unit id="e61b17a9-cce2-48aa-9ed5-85e87a2f127d" xml:space="preserve">
          <source>Once it does we’ll want to store the user and stash the token so we won’t need to ask for it again.</source>
          <target state="new">Once it does we’ll want to store the user and stash the token so we won’t need to ask for it again.</target>
        </trans-unit>
        <trans-unit id="9bd22d54-b02f-4ea2-8287-3ffd6f52af2e" xml:space="preserve">
          <source>The code above takes any user that happens to authenticate to our server.</source>
          <target state="new">The code above takes any user that happens to authenticate to our server.</target>
        </trans-unit>
        <trans-unit id="f6af94ab-599c-4bc6-9271-cdce720b4c5c" xml:space="preserve">
          <source>This is known as auto registration.</source>
          <target state="new">This is known as auto registration.</target>
        </trans-unit>
        <trans-unit id="58c40c64-e11c-4439-9300-135188f70abf" xml:space="preserve">
          <source>In production servers you wouldn’t want to let anyone in without first having them go through a registration process you decide.</source>
          <target state="new">In production servers you wouldn’t want to let anyone in without first having them go through a registration process you decide.</target>
        </trans-unit>
        <trans-unit id="6176c62e-bf3b-41b0-b18c-3f60f52f5a0b" xml:space="preserve">
          <source>This is usually the pattern you see in consumer apps who allow you to register with Facebook but then ask you to fill out additional information.</source>
          <target state="new">This is usually the pattern you see in consumer apps who allow you to register with Facebook but then ask you to fill out additional information.</target>
        </trans-unit>
        <trans-unit id="6a54857c-60fa-4e9b-ba96-157e831c7922" xml:space="preserve">
          <source>If this wasn’t a sample application, we could have just extracted the email from the token object that is returned and then asked them to fill out additional information.</source>
          <target state="new">If this wasn’t a sample application, we could have just extracted the email from the token object that is returned and then asked them to fill out additional information.</target>
        </trans-unit>
        <trans-unit id="73601a8b-0a2d-49bd-8f3c-ddceb0cec922" xml:space="preserve">
          <source>Since this is a test server we simply add them to the in-memory database.</source>
          <target state="new">Since this is a test server we simply add them to the in-memory database.</target>
        </trans-unit>
        <trans-unit id="d56cb35c-e632-49b9-9432-d61f823c67f5" xml:space="preserve">
          <source>Next, let's add the methods that will allow us to keep track of the logged in users as required by Passport.</source>
          <target state="new">Next, let's add the methods that will allow us to keep track of the logged in users as required by Passport.</target>
        </trans-unit>
        <trans-unit id="c39e91a3-86e5-45b9-acbb-492d537e3df9" xml:space="preserve">
          <source>This includes serializing and deserializing the user's information:</source>
          <target state="new">This includes serializing and deserializing the user's information:</target>
        </trans-unit>
        <trans-unit id="81c299e7-243c-44a1-8b9f-89f72534d75a" xml:space="preserve">
          <source>Next, let's add the code to load the express engine.</source>
          <target state="new">Next, let's add the code to load the express engine.</target>
        </trans-unit>
        <trans-unit id="82365215-9681-4575-9258-0794cdfbe04c" xml:space="preserve">
          <source>Here you see we use the default /views and /routes pattern that Express provides.</source>
          <target state="new">Here you see we use the default /views and /routes pattern that Express provides.</target>
        </trans-unit>
        <trans-unit id="cf3eb31f-9641-4abc-8a87-5f116b8ed488" xml:space="preserve">
          <source>Finally, let's add the routes that will hand off the actual login requests to the <bpt id="2b77708c-bf0d-482c-86c1-daed00460e02">&lt;code&gt;</bpt>passport-azure-ad<ept id="2b77708c-bf0d-482c-86c1-daed00460e02">&lt;/code&gt;</ept> engine:</source>
          <target state="new">Finally, let's add the routes that will hand off the actual login requests to the <bpt id="2b77708c-bf0d-482c-86c1-daed00460e02">&lt;code&gt;</bpt>passport-azure-ad<ept id="2b77708c-bf0d-482c-86c1-daed00460e02">&lt;/code&gt;</ept> engine:</target>
        </trans-unit>
        <trans-unit id="6c66a149-e9d5-4120-8eca-c453eddd873e" xml:space="preserve">
          <source>Let's review these in detail:</source>
          <target state="new">Let's review these in detail:</target>
        </trans-unit>
        <trans-unit id="803a53a1-540a-4cb2-b197-daea473cbb11" xml:space="preserve">
          <source>The <bpt id="133e50c8-2b4e-40b6-8cf3-82d2f988adf4">&lt;code&gt;</bpt>/<ept id="133e50c8-2b4e-40b6-8cf3-82d2f988adf4">&lt;/code&gt;</ept> route will redirect to the index.ejs view passing the user in the request (if it exists)</source>
          <target state="new">The <bpt id="133e50c8-2b4e-40b6-8cf3-82d2f988adf4">&lt;code&gt;</bpt>/<ept id="133e50c8-2b4e-40b6-8cf3-82d2f988adf4">&lt;/code&gt;</ept> route will redirect to the index.ejs view passing the user in the request (if it exists)</target>
        </trans-unit>
        <trans-unit id="061dd2bf-c802-4880-a0cd-974157e4fd03" xml:space="preserve">
          <source>The <bpt id="756efcde-255f-47c9-9e82-5742c5c2491f">&lt;code&gt;</bpt>/account<ept id="756efcde-255f-47c9-9e82-5742c5c2491f">&lt;/code&gt;</ept> route will first <bpt id="ff937359-3dba-4b41-9f92-ecce78d02194">&lt;strong&gt;</bpt>*ensure we are authenticated*<ept id="ff937359-3dba-4b41-9f92-ecce78d02194">&lt;/strong&gt;</ept> (we implement that below) and then pass the user in the request so that we can get additional information about the user.</source>
          <target state="new">The <bpt id="756efcde-255f-47c9-9e82-5742c5c2491f">&lt;code&gt;</bpt>/account<ept id="756efcde-255f-47c9-9e82-5742c5c2491f">&lt;/code&gt;</ept> route will first <bpt id="ff937359-3dba-4b41-9f92-ecce78d02194">&lt;strong&gt;</bpt>*ensure we are authenticated*<ept id="ff937359-3dba-4b41-9f92-ecce78d02194">&lt;/strong&gt;</ept> (we implement that below) and then pass the user in the request so that we can get additional information about the user.</target>
        </trans-unit>
        <trans-unit id="c3a73ac1-6d4b-4592-a29e-05f000b3c312" xml:space="preserve">
          <source>The <bpt id="f8a867ff-70f8-44a2-9dac-bf933a3e95c4">&lt;code&gt;</bpt>/login<ept id="f8a867ff-70f8-44a2-9dac-bf933a3e95c4">&lt;/code&gt;</ept> route will call our azuread-openidconnect authenticator from <bpt id="1413e160-b940-4f00-ace3-1cb8e50f74a2">&lt;code&gt;</bpt>passport-azuread<ept id="1413e160-b940-4f00-ace3-1cb8e50f74a2">&lt;/code&gt;</ept> and if that doesn't succeed will redirect the user back to /login</source>
          <target state="new">The <bpt id="f8a867ff-70f8-44a2-9dac-bf933a3e95c4">&lt;code&gt;</bpt>/login<ept id="f8a867ff-70f8-44a2-9dac-bf933a3e95c4">&lt;/code&gt;</ept> route will call our azuread-openidconnect authenticator from <bpt id="1413e160-b940-4f00-ace3-1cb8e50f74a2">&lt;code&gt;</bpt>passport-azuread<ept id="1413e160-b940-4f00-ace3-1cb8e50f74a2">&lt;/code&gt;</ept> and if that doesn't succeed will redirect the user back to /login</target>
        </trans-unit>
        <trans-unit id="3acf512d-36fd-4a40-b868-8c32a190ffd2" xml:space="preserve">
          <source>The <bpt id="4eec4115-9509-4be1-8d7f-9b76c30476d5">&lt;code&gt;</bpt>/logout<ept id="4eec4115-9509-4be1-8d7f-9b76c30476d5">&lt;/code&gt;</ept> will simply call the logout.ejs (and route) which clears cookies and then return the user back to index.ejs</source>
          <target state="new">The <bpt id="4eec4115-9509-4be1-8d7f-9b76c30476d5">&lt;code&gt;</bpt>/logout<ept id="4eec4115-9509-4be1-8d7f-9b76c30476d5">&lt;/code&gt;</ept> will simply call the logout.ejs (and route) which clears cookies and then return the user back to index.ejs</target>
        </trans-unit>
        <trans-unit id="d112849c-7f90-4f19-a449-0044230b3888" xml:space="preserve">
          <source>For the last part of <bpt id="465a5f3a-bbcf-4d8c-b683-e93547bec8b6">&lt;code&gt;</bpt>app.js<ept id="465a5f3a-bbcf-4d8c-b683-e93547bec8b6">&lt;/code&gt;</ept>, let's add the EnsureAuthenticated method that is used in <bpt id="39fa6423-8972-4b43-b72d-3311b01f5fe0">&lt;code&gt;</bpt>/account<ept id="39fa6423-8972-4b43-b72d-3311b01f5fe0">&lt;/code&gt;</ept> above.</source>
          <target state="new">For the last part of <bpt id="465a5f3a-bbcf-4d8c-b683-e93547bec8b6">&lt;code&gt;</bpt>app.js<ept id="465a5f3a-bbcf-4d8c-b683-e93547bec8b6">&lt;/code&gt;</ept>, let's add the EnsureAuthenticated method that is used in <bpt id="39fa6423-8972-4b43-b72d-3311b01f5fe0">&lt;code&gt;</bpt>/account<ept id="39fa6423-8972-4b43-b72d-3311b01f5fe0">&lt;/code&gt;</ept> above.</target>
        </trans-unit>
        <trans-unit id="37400408-2c46-4c70-88b5-732acf919c00" xml:space="preserve">
          <source>Finally, let's actually create the server itself in <bpt id="f49d8567-06af-4fd0-a876-981c9fc89010">&lt;code&gt;</bpt>app.js<ept id="f49d8567-06af-4fd0-a876-981c9fc89010">&lt;/code&gt;</ept>:</source>
          <target state="new">Finally, let's actually create the server itself in <bpt id="f49d8567-06af-4fd0-a876-981c9fc89010">&lt;code&gt;</bpt>app.js<ept id="f49d8567-06af-4fd0-a876-981c9fc89010">&lt;/code&gt;</ept>:</target>
        </trans-unit>
        <trans-unit id="381c4453-788c-4d1b-816f-0bdd3b5114a4" xml:space="preserve">
          <source>We have our <bpt id="4c8f192d-dd6e-4b72-bfe3-84370ddd2223">&lt;code&gt;</bpt>app.js<ept id="4c8f192d-dd6e-4b72-bfe3-84370ddd2223">&lt;/code&gt;</ept> complete.</source>
          <target state="new">We have our <bpt id="4c8f192d-dd6e-4b72-bfe3-84370ddd2223">&lt;code&gt;</bpt>app.js<ept id="4c8f192d-dd6e-4b72-bfe3-84370ddd2223">&lt;/code&gt;</ept> complete.</target>
        </trans-unit>
        <trans-unit id="7649da25-51ef-462b-8698-6223f4cb53ff" xml:space="preserve">
          <source>Now we simply need to add the routes and views that will show the information we get to the user as well as handle the <bpt id="887e4802-8550-4ab7-a08f-2ad795950dd9">&lt;code&gt;</bpt>/logout<ept id="887e4802-8550-4ab7-a08f-2ad795950dd9">&lt;/code&gt;</ept> and <bpt id="f4e5f24e-4459-4b79-984e-5d315f33b7bb">&lt;code&gt;</bpt>/login<ept id="f4e5f24e-4459-4b79-984e-5d315f33b7bb">&lt;/code&gt;</ept> routes we've created.</source>
          <target state="new">Now we simply need to add the routes and views that will show the information we get to the user as well as handle the <bpt id="887e4802-8550-4ab7-a08f-2ad795950dd9">&lt;code&gt;</bpt>/logout<ept id="887e4802-8550-4ab7-a08f-2ad795950dd9">&lt;/code&gt;</ept> and <bpt id="f4e5f24e-4459-4b79-984e-5d315f33b7bb">&lt;code&gt;</bpt>/login<ept id="f4e5f24e-4459-4b79-984e-5d315f33b7bb">&lt;/code&gt;</ept> routes we've created.</target>
        </trans-unit>
        <trans-unit id="018b8a9f-b0d4-4f7f-87ca-b312c2856e46" xml:space="preserve">
          <source>Create the <bpt id="26876b38-8bbc-4a0d-8f78-1b4ef262bd73">&lt;code&gt;</bpt>/routes/index.js<ept id="26876b38-8bbc-4a0d-8f78-1b4ef262bd73">&lt;/code&gt;</ept> route under the root directory.</source>
          <target state="new">Create the <bpt id="26876b38-8bbc-4a0d-8f78-1b4ef262bd73">&lt;code&gt;</bpt>/routes/index.js<ept id="26876b38-8bbc-4a0d-8f78-1b4ef262bd73">&lt;/code&gt;</ept> route under the root directory.</target>
        </trans-unit>
        <trans-unit id="11a1b50c-ae24-4857-ac84-9dafcb754ec5" xml:space="preserve">
          <source>Create the <bpt id="d82e81b1-fc35-44a5-91c7-97407ad52dad">&lt;code&gt;</bpt>/routes/user.js<ept id="d82e81b1-fc35-44a5-91c7-97407ad52dad">&lt;/code&gt;</ept> route under the root directory</source>
          <target state="new">Create the <bpt id="d82e81b1-fc35-44a5-91c7-97407ad52dad">&lt;code&gt;</bpt>/routes/user.js<ept id="d82e81b1-fc35-44a5-91c7-97407ad52dad">&lt;/code&gt;</ept> route under the root directory</target>
        </trans-unit>
        <trans-unit id="d38f9af3-c274-4f7f-8c69-fccc25456ca3" xml:space="preserve">
          <source>These simple routes will just pass along the request to our views, including the user if present.</source>
          <target state="new">These simple routes will just pass along the request to our views, including the user if present.</target>
        </trans-unit>
        <trans-unit id="d85cc06b-86e6-40d4-92d4-c798ac00d217" xml:space="preserve">
          <source>Create the <bpt id="d3da6a42-efc8-460f-882c-84a6504cd595">&lt;code&gt;</bpt>/views/index.ejs<ept id="d3da6a42-efc8-460f-882c-84a6504cd595">&lt;/code&gt;</ept> view under the root directory.</source>
          <target state="new">Create the <bpt id="d3da6a42-efc8-460f-882c-84a6504cd595">&lt;code&gt;</bpt>/views/index.ejs<ept id="d3da6a42-efc8-460f-882c-84a6504cd595">&lt;/code&gt;</ept> view under the root directory.</target>
        </trans-unit>
        <trans-unit id="1be2b308-fead-46a6-82ea-f83529e15699" xml:space="preserve">
          <source>this is a simple page that will call our login and logout methods and allow us to grab account information.</source>
          <target state="new">this is a simple page that will call our login and logout methods and allow us to grab account information.</target>
        </trans-unit>
        <trans-unit id="a4848542-5a61-4cf7-8631-1928d452aada" xml:space="preserve">
          <source>Notice that we can use the conditional <bpt id="78292f7f-7052-4bac-bad6-c21e4a90ab6a">&lt;code&gt;</bpt>if (!user)<ept id="78292f7f-7052-4bac-bad6-c21e4a90ab6a">&lt;/code&gt;</ept> as the user being passed through in the request is evidence we have a logged in user.</source>
          <target state="new">Notice that we can use the conditional <bpt id="78292f7f-7052-4bac-bad6-c21e4a90ab6a">&lt;code&gt;</bpt>if (!user)<ept id="78292f7f-7052-4bac-bad6-c21e4a90ab6a">&lt;/code&gt;</ept> as the user being passed through in the request is evidence we have a logged in user.</target>
        </trans-unit>
        <trans-unit id="6bfb1405-e205-4bdd-ac69-62943b44cd82" xml:space="preserve">
          <source>Create the <bpt id="eb677a8a-f7b8-495e-86e9-44a2896efc8a">&lt;code&gt;</bpt>/views/account.ejs<ept id="eb677a8a-f7b8-495e-86e9-44a2896efc8a">&lt;/code&gt;</ept> view under the root directory so that we can view additional information that <bpt id="dbc4065c-eb5d-41a1-9982-d3afc0f518d8">&lt;code&gt;</bpt>passport-azuread<ept id="dbc4065c-eb5d-41a1-9982-d3afc0f518d8">&lt;/code&gt;</ept> has put in the user request.</source>
          <target state="new">Create the <bpt id="eb677a8a-f7b8-495e-86e9-44a2896efc8a">&lt;code&gt;</bpt>/views/account.ejs<ept id="eb677a8a-f7b8-495e-86e9-44a2896efc8a">&lt;/code&gt;</ept> view under the root directory so that we can view additional information that <bpt id="dbc4065c-eb5d-41a1-9982-d3afc0f518d8">&lt;code&gt;</bpt>passport-azuread<ept id="dbc4065c-eb5d-41a1-9982-d3afc0f518d8">&lt;/code&gt;</ept> has put in the user request.</target>
        </trans-unit>
        <trans-unit id="bcec8bd9-cdf5-4090-9336-7ada39192c09" xml:space="preserve">
          <source>Finally, let's make this look pretty by adding a layout.</source>
          <target state="new">Finally, let's make this look pretty by adding a layout.</target>
        </trans-unit>
        <trans-unit id="fc5b3947-c939-4332-b423-5150f4ee29fa" xml:space="preserve">
          <source>Create the '/views/layout.ejs' view under the root directory</source>
          <target state="new">Create the '/views/layout.ejs' view under the root directory</target>
        </trans-unit>
        <trans-unit id="5c8532c8-d27e-4fb4-bbe2-0b4e7cb301f7" xml:space="preserve">
          <source>```HTML</source>
          <target state="new">```HTML</target>
        </trans-unit>
        <trans-unit id="acdb62d3-3dd0-4d0b-9f75-be71306a33b1" xml:space="preserve">
          <source>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Passport-OpenID Example&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;% if (!user) { %&gt;
            &lt;p&gt;
            &lt;a href="/"&gt;Home&lt;/a&gt; | 
            &lt;a href="/login"&gt;Log In&lt;/a&gt;
            &lt;/p&gt;
        &lt;% } else { %&gt;
            &lt;p&gt;
            &lt;a href="/"&gt;Home&lt;/a&gt; | 
            &lt;a href="/account"&gt;Account&lt;/a&gt; | 
            &lt;a href="/logout"&gt;Log Out&lt;/a&gt;
            &lt;/p&gt;
        &lt;% } %&gt;
        &lt;%- body %&gt;
    &lt;/body&gt;
&lt;/html&gt;```</source>
          <target state="new">&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Passport-OpenID Example&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;% if (!user) { %&gt;
            &lt;p&gt;
            &lt;a href="/"&gt;Home&lt;/a&gt; | 
            &lt;a href="/login"&gt;Log In&lt;/a&gt;
            &lt;/p&gt;
        &lt;% } else { %&gt;
            &lt;p&gt;
            &lt;a href="/"&gt;Home&lt;/a&gt; | 
            &lt;a href="/account"&gt;Account&lt;/a&gt; | 
            &lt;a href="/logout"&gt;Log Out&lt;/a&gt;
            &lt;/p&gt;
        &lt;% } %&gt;
        &lt;%- body %&gt;
    &lt;/body&gt;
&lt;/html&gt;```</target>
        </trans-unit>
        <trans-unit id="4fc71cf2-415c-41d3-8e39-78d726e28902" xml:space="preserve">
          <source>Finally, build and run your app!</source>
          <target state="new">Finally, build and run your app!</target>
        </trans-unit>
        <trans-unit id="12f975d4-fd08-4a20-aab0-cc6eacccc2e8" xml:space="preserve">
          <source>Run <bpt id="3367278a-d846-40c2-bf77-feea55ee2f43">&lt;code&gt;</bpt>node app.js<ept id="3367278a-d846-40c2-bf77-feea55ee2f43">&lt;/code&gt;</ept> and navigate to <bpt id="13c92ebd-3d32-4611-93d2-c6b5f89495a5">&lt;code&gt;</bpt>http://localhost:3000<ept id="13c92ebd-3d32-4611-93d2-c6b5f89495a5">&lt;/code&gt;</ept></source>
          <target state="new">Run <bpt id="3367278a-d846-40c2-bf77-feea55ee2f43">&lt;code&gt;</bpt>node app.js<ept id="3367278a-d846-40c2-bf77-feea55ee2f43">&lt;/code&gt;</ept> and navigate to <bpt id="13c92ebd-3d32-4611-93d2-c6b5f89495a5">&lt;code&gt;</bpt>http://localhost:3000<ept id="13c92ebd-3d32-4611-93d2-c6b5f89495a5">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="01756b7f-a334-4ca3-9134-7ccd2621d871" xml:space="preserve">
          <source>Sign in with either a personal Microsoft Account or a work or school account, and notice how the user's identity is reflected in the /account list.</source>
          <target state="new">Sign in with either a personal Microsoft Account or a work or school account, and notice how the user's identity is reflected in the /account list.</target>
        </trans-unit>
        <trans-unit id="fb912c24-fe91-47b1-b78a-eae751b533c9" xml:space="preserve">
          <source>You now have a web app secured using industry standard protocols that can authenticate users with both their personal and work/school accounts.</source>
          <target state="new">You now have a web app secured using industry standard protocols that can authenticate users with both their personal and work/school accounts.</target>
        </trans-unit>
        <trans-unit id="24d97ed2-6e81-43c8-ac27-1b2f557de1ef" xml:space="preserve">
          <source>For reference, the completed sample (without your configuration values) <bpt id="dbd8e922-65e5-4b94-a924-9e0c093f10b7">&lt;linkText&gt;</bpt>is provided as a .zip here<ept id="dbd8e922-65e5-4b94-a924-9e0c093f10b7">&lt;/linkText&gt;</ept><bpt id="dbd8e922-65e5-4b94-a924-9e0c093f10b7">&lt;title&gt;</bpt><ept id="dbd8e922-65e5-4b94-a924-9e0c093f10b7">&lt;/title&gt;</ept>, or you can clone it from GitHub:</source>
          <target state="new">For reference, the completed sample (without your configuration values) <bpt id="dbd8e922-65e5-4b94-a924-9e0c093f10b7">&lt;linkText&gt;</bpt>is provided as a .zip here<ept id="dbd8e922-65e5-4b94-a924-9e0c093f10b7">&lt;/linkText&gt;</ept><bpt id="dbd8e922-65e5-4b94-a924-9e0c093f10b7">&lt;title&gt;</bpt><ept id="dbd8e922-65e5-4b94-a924-9e0c093f10b7">&lt;/title&gt;</ept>, or you can clone it from GitHub:</target>
        </trans-unit>
        <trans-unit id="62ace927-60ec-40a6-85e9-b046934a751e" xml:space="preserve">
          <source><bpt id="e6e61c4b-5041-47c3-b39b-e5d53827fec4">&lt;code&gt;</bpt>git clone --branch complete https://github.com/AzureADQuickStarts/WebApp-OpenIDConnect-NodeJS.git<ept id="e6e61c4b-5041-47c3-b39b-e5d53827fec4">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="e6e61c4b-5041-47c3-b39b-e5d53827fec4">&lt;code&gt;</bpt>git clone --branch complete https://github.com/AzureADQuickStarts/WebApp-OpenIDConnect-NodeJS.git<ept id="e6e61c4b-5041-47c3-b39b-e5d53827fec4">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="c99638fc-f8c9-4e22-a6ac-bc5bdc94fe28" xml:space="preserve">
          <source>You can now move onto more advanced topics.</source>
          <target state="new">You can now move onto more advanced topics.</target>
        </trans-unit>
        <trans-unit id="7f551f11-8f91-4dd0-8e47-e1d5fc482809" xml:space="preserve">
          <source>You may want to try:</source>
          <target state="new">You may want to try:</target>
        </trans-unit>
        <trans-unit id="9b1fe35a-1cb8-4a61-9b9d-752eabf9e0ec" xml:space="preserve">
          <source><bpt id="22b6da33-8405-4b2a-9129-4ec1fec1f324">&lt;linkText&gt;</bpt>Secure a Web API with Azure AD &gt;&gt;<ept id="22b6da33-8405-4b2a-9129-4ec1fec1f324">&lt;/linkText&gt;</ept><bpt id="22b6da33-8405-4b2a-9129-4ec1fec1f324">&lt;title&gt;</bpt><ept id="22b6da33-8405-4b2a-9129-4ec1fec1f324">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="22b6da33-8405-4b2a-9129-4ec1fec1f324">&lt;linkText&gt;</bpt>Secure a Web API with Azure AD &gt;&gt;<ept id="22b6da33-8405-4b2a-9129-4ec1fec1f324">&lt;/linkText&gt;</ept><bpt id="22b6da33-8405-4b2a-9129-4ec1fec1f324">&lt;title&gt;</bpt><ept id="22b6da33-8405-4b2a-9129-4ec1fec1f324">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ef6f7aad-1dfa-4e47-91dc-a4ac0e29c90c" xml:space="preserve">
          <source><bpt id="ccc7353d-6efd-431a-b92c-cc670ffb64a3">&lt;token href="../../includes/active-directory-devquickstarts-additional-resources.md"&gt;</bpt><ept id="ccc7353d-6efd-431a-b92c-cc670ffb64a3">&lt;/token&gt;</ept></source>
          <target state="new"><bpt id="ccc7353d-6efd-431a-b92c-cc670ffb64a3">&lt;token href="../../includes/active-directory-devquickstarts-additional-resources.md"&gt;</bpt><ept id="ccc7353d-6efd-431a-b92c-cc670ffb64a3">&lt;/token&gt;</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>