<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="fbb82cce-1a5c-4017-baad-4c9028e5c260" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="fbb82cce-1a5c-4017-baad-4c9028e5c260" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="22619c12-aa53-4d7b-8c54-7909a5a3c6e8">
        <trans-unit id="8dd03ea6-dc1e-4bfe-bab3-ea6eadb421a6" xml:space="preserve">
          <source>Azure AD Connect Sync: Understanding Declarative Provisioning Expressions</source>
          <target state="new">Azure AD Connect Sync: Understanding Declarative Provisioning Expressions</target>
        </trans-unit>
        <trans-unit id="6c173500-9300-4ff3-a54d-7eeda86592a4" xml:space="preserve">
          <source>Explains the declarative provisioning expressions.</source>
          <target state="new">Explains the declarative provisioning expressions.</target>
        </trans-unit>
        <trans-unit id="a8b4914d-21d7-4558-9845-795884ceae75" xml:space="preserve">
          <source>The Azure Active Directory Connect Synchronization Service (Azure AD Connect Sync) builds on the declarative provisioning first introduced in Forefront Identity Manager 2010 to allow you to implement your complete identity integration business logic without the need to write code.</source>
          <target state="new">The Azure Active Directory Connect Synchronization Service (Azure AD Connect Sync) builds on the declarative provisioning first introduced in Forefront Identity Manager 2010 to allow you to implement your complete identity integration business logic without the need to write code.</target>
        </trans-unit>
        <trans-unit id="da6924ee-f326-4482-923a-903ad4610731" xml:space="preserve">
          <source>An essential part of declarative provisioning is the expression language used in attribute flows.</source>
          <target state="new">An essential part of declarative provisioning is the expression language used in attribute flows.</target>
        </trans-unit>
        <trans-unit id="c5666437-2fa9-48f6-a517-c5085c6e3ae6" xml:space="preserve">
          <source>The language used is a subset of Microsoft® Visual Basic® for Applications (VBA).</source>
          <target state="new">The language used is a subset of Microsoft® Visual Basic® for Applications (VBA).</target>
        </trans-unit>
        <trans-unit id="d609a881-896f-4be2-b215-204f481fa109" xml:space="preserve">
          <source>This language is used in Microsoft Office and users with experience of VBScript will also recognize it.</source>
          <target state="new">This language is used in Microsoft Office and users with experience of VBScript will also recognize it.</target>
        </trans-unit>
        <trans-unit id="12d79acb-3bf5-4d40-be05-dd6821c93bee" xml:space="preserve">
          <source>The Declarative Provisioning Expression Language is only using functions and is not a structured language; there are no methods or statements.</source>
          <target state="new">The Declarative Provisioning Expression Language is only using functions and is not a structured language; there are no methods or statements.</target>
        </trans-unit>
        <trans-unit id="0d9db371-73c8-40b9-b31a-9533ab9ce1a7" xml:space="preserve">
          <source>Functions will instead be nested to express program flow.</source>
          <target state="new">Functions will instead be nested to express program flow.</target>
        </trans-unit>
        <trans-unit id="57b2fad5-4d53-4279-b415-3c518bdd24e8" xml:space="preserve">
          <source>For more details, see [Welcome to the Visual Basic for Applications language reference for Office 2013](https://msdn.microsoft.com/library/gg264383(v=office.15).aspx).</source>
          <target state="new">For more details, see [Welcome to the Visual Basic for Applications language reference for Office 2013](https://msdn.microsoft.com/library/gg264383(v=office.15).aspx).</target>
        </trans-unit>
        <trans-unit id="356e2d54-fcc7-4ad1-b16b-f3401184bdc7" xml:space="preserve">
          <source>The attributes are strongly typed.</source>
          <target state="new">The attributes are strongly typed.</target>
        </trans-unit>
        <trans-unit id="76edffcf-00f9-40e3-927e-c47fefb55800" xml:space="preserve">
          <source>A function which expects a single-value string attribute will not accept multi-valued or attributes of a different type.</source>
          <target state="new">A function which expects a single-value string attribute will not accept multi-valued or attributes of a different type.</target>
        </trans-unit>
        <trans-unit id="4da8c0d0-e2e8-435d-aa41-2e0189c3dab9" xml:space="preserve">
          <source>It is also case sensitive.</source>
          <target state="new">It is also case sensitive.</target>
        </trans-unit>
        <trans-unit id="f750795d-1ed9-4fd9-a8f7-993255110b7f" xml:space="preserve">
          <source>Both function names and attribute names must have proper casing or an error will be thrown</source>
          <target state="new">Both function names and attribute names must have proper casing or an error will be thrown</target>
        </trans-unit>
        <trans-unit id="893e004e-a347-468f-b9c1-f9ae84e8f342" xml:space="preserve">
          <source>Functions have a name followed by arguments in brackets: FunctionName(&lt;&lt;argument 1&gt;&gt;,&lt;&lt;argument N&gt;&gt;).</source>
          <target state="new">Functions have a name followed by arguments in brackets: FunctionName(&lt;&lt;argument 1&gt;&gt;,&lt;&lt;argument N&gt;&gt;).</target>
        </trans-unit>
        <trans-unit id="27a9a0d1-da01-4da0-ae28-f70de952aa5e" xml:space="preserve">
          <source>Attributes are identified by square brackets: [attributeName]</source>
          <target state="new">Attributes are identified by square brackets: [attributeName]</target>
        </trans-unit>
        <trans-unit id="3e3a9941-51ff-4899-9c5f-1e173e76ea76" xml:space="preserve">
          <source>Parameters are identified by percent signs: %ParameterName%</source>
          <target state="new">Parameters are identified by percent signs: %ParameterName%</target>
        </trans-unit>
        <trans-unit id="07d0b3d1-eefb-4697-b35b-79e051a87144" xml:space="preserve">
          <source>String constants are surrounded by quotes: E.g. “Contoso”</source>
          <target state="new">String constants are surrounded by quotes: E.g. “Contoso”</target>
        </trans-unit>
        <trans-unit id="4505a453-6016-4cb5-a949-3616d79de5db" xml:space="preserve">
          <source>Numeric values are expressed without quotes and expected to be decimal. Hexadecimal values are prefixed with &amp;H. E.g. 98052, &amp;HFF</source>
          <target state="new">Numeric values are expressed without quotes and expected to be decimal. Hexadecimal values are prefixed with &amp;H. E.g. 98052, &amp;HFF</target>
        </trans-unit>
        <trans-unit id="6c0165ae-ea66-463d-9a01-9e32610c75f2" xml:space="preserve">
          <source>Boolean values are expressed with constants: True, False.</source>
          <target state="new">Boolean values are expressed with constants: True, False.</target>
        </trans-unit>
        <trans-unit id="0393f481-03c4-4a19-a47f-18c265035896" xml:space="preserve">
          <source>Built-in constants are expressed with only their name: NULL, CRLF, IgnoreThisFlow</source>
          <target state="new">Built-in constants are expressed with only their name: NULL, CRLF, IgnoreThisFlow</target>
        </trans-unit>
        <trans-unit id="7ad78c0e-85fc-4d3a-aa93-ff8ecdfd8b14" xml:space="preserve">
          <source>The following operators can be used:</source>
          <target state="new">The following operators can be used:</target>
        </trans-unit>
        <trans-unit id="249c2e2b-5849-4bfd-b282-2e4e5dd40e7f" xml:space="preserve">
          <source><bpt id="789a1be8-ebe2-4569-842c-09bf6d72d180">&lt;strong&gt;</bpt>Comparison<ept id="789a1be8-ebe2-4569-842c-09bf6d72d180">&lt;/strong&gt;</ept>: &lt;, &lt;=, &lt;&gt;, =, &gt;, &gt;=</source>
          <target state="new"><bpt id="789a1be8-ebe2-4569-842c-09bf6d72d180">&lt;strong&gt;</bpt>Comparison<ept id="789a1be8-ebe2-4569-842c-09bf6d72d180">&lt;/strong&gt;</ept>: &lt;, &lt;=, &lt;&gt;, =, &gt;, &gt;=</target>
        </trans-unit>
        <trans-unit id="942b7108-5ac6-483c-b3a4-0490d0bf74b4" xml:space="preserve">
          <source><bpt id="5412110e-e821-4b99-9913-d129f2bb168c">&lt;strong&gt;</bpt>Mathematics<ept id="5412110e-e821-4b99-9913-d129f2bb168c">&lt;/strong&gt;</ept>: +, -, *, -</source>
          <target state="new"><bpt id="5412110e-e821-4b99-9913-d129f2bb168c">&lt;strong&gt;</bpt>Mathematics<ept id="5412110e-e821-4b99-9913-d129f2bb168c">&lt;/strong&gt;</ept>: +, -, *, -</target>
        </trans-unit>
        <trans-unit id="9cc661c1-587a-4653-bcaa-3865c900e9c1" xml:space="preserve">
          <source><bpt id="af1fa0d5-30df-4bde-afda-bda735b96f77">&lt;strong&gt;</bpt>String<ept id="af1fa0d5-30df-4bde-afda-bda735b96f77">&lt;/strong&gt;</ept>: &amp; (concatenate)</source>
          <target state="new"><bpt id="af1fa0d5-30df-4bde-afda-bda735b96f77">&lt;strong&gt;</bpt>String<ept id="af1fa0d5-30df-4bde-afda-bda735b96f77">&lt;/strong&gt;</ept>: &amp; (concatenate)</target>
        </trans-unit>
        <trans-unit id="8dfc1742-b344-4766-a829-5e932d64441f" xml:space="preserve">
          <source><bpt id="92aa268b-33b2-42b7-9f62-76ecac134848">&lt;strong&gt;</bpt>Logical<ept id="92aa268b-33b2-42b7-9f62-76ecac134848">&lt;/strong&gt;</ept>: &amp;&amp; (and), || (or)</source>
          <target state="new"><bpt id="92aa268b-33b2-42b7-9f62-76ecac134848">&lt;strong&gt;</bpt>Logical<ept id="92aa268b-33b2-42b7-9f62-76ecac134848">&lt;/strong&gt;</ept>: &amp;&amp; (and), || (or)</target>
        </trans-unit>
        <trans-unit id="4afaad12-1dd2-4a7a-975c-7321a050b088" xml:space="preserve">
          <source><bpt id="ca50bd64-477d-4034-b486-3071e93c5411">&lt;strong&gt;</bpt>Evaluation order<ept id="ca50bd64-477d-4034-b486-3071e93c5411">&lt;/strong&gt;</ept>: ( )</source>
          <target state="new"><bpt id="ca50bd64-477d-4034-b486-3071e93c5411">&lt;strong&gt;</bpt>Evaluation order<ept id="ca50bd64-477d-4034-b486-3071e93c5411">&lt;/strong&gt;</ept>: ( )</target>
        </trans-unit>
        <trans-unit id="94210347-39f7-42a0-b2fc-e1170873f784" xml:space="preserve">
          <source>Operators are evaluated left to right. 2<bpt id="cf9d35bc-6ffe-4278-aea2-8fd963c30dc3">&lt;em&gt;</bpt>(5+3) is not the same as 2<ept id="cf9d35bc-6ffe-4278-aea2-8fd963c30dc3">&lt;/em&gt;</ept>5+3.&lt;br&gt; 
The brackets ( ) are used to change the evaluation order.</source>
          <target state="new">Operators are evaluated left to right. 2<bpt id="cf9d35bc-6ffe-4278-aea2-8fd963c30dc3">&lt;em&gt;</bpt>(5+3) is not the same as 2<ept id="cf9d35bc-6ffe-4278-aea2-8fd963c30dc3">&lt;/em&gt;</ept>5+3.&lt;br&gt; 
The brackets ( ) are used to change the evaluation order.</target>
        </trans-unit>
        <trans-unit id="5212b2f7-eaa3-4063-949b-88714dd711c5" xml:space="preserve">
          <source>A parameter is defined either by a Connector or by an administrator using PowerShell.</source>
          <target state="new">A parameter is defined either by a Connector or by an administrator using PowerShell.</target>
        </trans-unit>
        <trans-unit id="eb662417-5c5d-4925-b468-55ce7f6e95a2" xml:space="preserve">
          <source>Parameters will usually contain values which will be different from system to system, e.g. the name of the domain the user is located in.</source>
          <target state="new">Parameters will usually contain values which will be different from system to system, e.g. the name of the domain the user is located in.</target>
        </trans-unit>
        <trans-unit id="ee988ea4-083e-4de1-9d52-bb2550846799" xml:space="preserve">
          <source>These can be used in attribute flows.</source>
          <target state="new">These can be used in attribute flows.</target>
        </trans-unit>
        <trans-unit id="58c12a4b-8f24-4c03-b042-1717f67e4d05" xml:space="preserve">
          <source>The Active Directory Connector provided the following parameters for inbound Synchronization Rules:</source>
          <target state="new">The Active Directory Connector provided the following parameters for inbound Synchronization Rules:</target>
        </trans-unit>
        <trans-unit id="8d0d1c7d-b0d6-4ec4-9d85-da439d7f7eb0" xml:space="preserve">
          <source>| Domain.Netbios | Domain.FQDN | Domain.LDAP |
| Forest.Netbios | Forest.FQDN | Forest.LDAP |</source>
          <target state="new">| Domain.Netbios | Domain.FQDN | Domain.LDAP |
| Forest.Netbios | Forest.FQDN | Forest.LDAP |</target>
        </trans-unit>
        <trans-unit id="4dc51c1b-d3ba-457b-9633-a4408c5cdf0d" xml:space="preserve">
          <source>The system provides the following parameter:</source>
          <target state="new">The system provides the following parameter:</target>
        </trans-unit>
        <trans-unit id="f855ee38-2350-4592-b272-23d341f0dd07" xml:space="preserve">
          <source>Connector.ID</source>
          <target state="new">Connector.ID</target>
        </trans-unit>
        <trans-unit id="8b1e38b6-4a53-4fbd-9e35-0e550c00c74b" xml:space="preserve">
          <source>An example which will populate the metaverse attribute domain with the netbios name of the domain where the user is located.</source>
          <target state="new">An example which will populate the metaverse attribute domain with the netbios name of the domain where the user is located.</target>
        </trans-unit>
        <trans-unit id="72392ab7-9bb7-46df-95b9-3ad4a5f57605" xml:space="preserve">
          <source>domain &lt;- %Domain.Netbios%</source>
          <target state="new">domain &lt;- %Domain.Netbios%</target>
        </trans-unit>
        <trans-unit id="5f524565-5257-4a58-b7a1-a8880125f3f7" xml:space="preserve">
          <source>String attributes are by default set to be indexable and the maximum length is 448 characters.</source>
          <target state="new">String attributes are by default set to be indexable and the maximum length is 448 characters.</target>
        </trans-unit>
        <trans-unit id="6bf4283c-0b50-4f16-9104-bc58d8e8d548" xml:space="preserve">
          <source>If you are working with string attributes which might contain more, then make sure to include the following in the attribute flow:</source>
          <target state="new">If you are working with string attributes which might contain more, then make sure to include the following in the attribute flow:</target>
        </trans-unit>
        <trans-unit id="16e3e307-75a8-4124-aede-ee2adf4d1b1b" xml:space="preserve">
          <source><bpt id="4e5035b5-ef2e-4874-9202-0f16ab8bf3cb">&lt;code&gt;</bpt>attributeName &lt;- Left([attributeName],448)<ept id="4e5035b5-ef2e-4874-9202-0f16ab8bf3cb">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="4e5035b5-ef2e-4874-9202-0f16ab8bf3cb">&lt;code&gt;</bpt>attributeName &lt;- Left([attributeName],448)<ept id="4e5035b5-ef2e-4874-9202-0f16ab8bf3cb">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b2d0f04a-6222-4c36-8490-5f52af86ce5b" xml:space="preserve">
          <source>The userPrincipalName attribute in Active Directory is not always known by the users and might not be suitable as the login ID. The AAD Sync installation guide allows picking a different attribute, e.g. mail. But in some cases the attribute must be calculated. For example the company Contoso has two AAD directories, one for production and one for testing. They want the users in their test tenant to just change the suffix in the login ID.userPrincipalName &lt;- Word([userPrincipalName],1,"@") &amp; "@contosotest.com"</source>
          <target state="new">The userPrincipalName attribute in Active Directory is not always known by the users and might not be suitable as the login ID. The AAD Sync installation guide allows picking a different attribute, e.g. mail. But in some cases the attribute must be calculated. For example the company Contoso has two AAD directories, one for production and one for testing. They want the users in their test tenant to just change the suffix in the login ID.userPrincipalName &lt;- Word([userPrincipalName],1,"@") &amp; "@contosotest.com"</target>
        </trans-unit>
        <trans-unit id="19f1c165-4342-47b4-8720-532bf698a606" xml:space="preserve">
          <source>In this expression we take everything left of the first @-sign (Word) and concatenate with a fixed string.</source>
          <target state="new">In this expression we take everything left of the first @-sign (Word) and concatenate with a fixed string.</target>
        </trans-unit>
        <trans-unit id="c75c1235-a337-429e-af79-643966275ae8" xml:space="preserve">
          <source>Some attributes in Active Directory are multi-valued in the schema even though they look single valued in Active Directory Users and Computers.</source>
          <target state="new">Some attributes in Active Directory are multi-valued in the schema even though they look single valued in Active Directory Users and Computers.</target>
        </trans-unit>
        <trans-unit id="fc1d2f3f-4641-4843-bf5d-b943fc537f58" xml:space="preserve">
          <source>An example is the description attribute.</source>
          <target state="new">An example is the description attribute.</target>
        </trans-unit>
        <trans-unit id="43ed5b3d-5bd4-417d-9bc0-80d2a9afd0aa" xml:space="preserve">
          <source>In this expression in case the attribute has a value, we take the first item (Item) in the attribute, remove leading and trailing spaces (Trim), and then keep the first 448 characters (Left) in the string.</source>
          <target state="new">In this expression in case the attribute has a value, we take the first item (Item) in the attribute, remove leading and trailing spaces (Trim), and then keep the first 448 characters (Left) in the string.</target>
        </trans-unit>
        <trans-unit id="3779a3a8-c6a7-439d-9ca8-1a0e3e4e7240" xml:space="preserve">
          <source>For inbound Synchronization Rules, the constant <bpt id="a1844979-1506-4890-ae30-7062bc6be74f">&lt;strong&gt;</bpt>NULL<ept id="a1844979-1506-4890-ae30-7062bc6be74f">&lt;/strong&gt;</ept> should always be used.</source>
          <target state="new">For inbound Synchronization Rules, the constant <bpt id="a1844979-1506-4890-ae30-7062bc6be74f">&lt;strong&gt;</bpt>NULL<ept id="a1844979-1506-4890-ae30-7062bc6be74f">&lt;/strong&gt;</ept> should always be used.</target>
        </trans-unit>
        <trans-unit id="3fd320f0-d2de-41e0-8103-3c1b631d6986" xml:space="preserve">
          <source>This indicates that the flow has no value to contribute and another rule can contribute a value.</source>
          <target state="new">This indicates that the flow has no value to contribute and another rule can contribute a value.</target>
        </trans-unit>
        <trans-unit id="d1073948-eb52-4439-8d56-8d822cf53b58" xml:space="preserve">
          <source>If no rule contributed a value, then the metaverse attribute is removed.</source>
          <target state="new">If no rule contributed a value, then the metaverse attribute is removed.</target>
        </trans-unit>
        <trans-unit id="aa0bd4c5-71e8-47aa-8f08-b2ed37d9154e" xml:space="preserve">
          <source>For outbound Synchronization Rules there are two different constants to use: NULL and IgnoreThisFlow.</source>
          <target state="new">For outbound Synchronization Rules there are two different constants to use: NULL and IgnoreThisFlow.</target>
        </trans-unit>
        <trans-unit id="bd934c78-e0bf-48a4-9cf2-b928f8b8917f" xml:space="preserve">
          <source>Both indicates that the attribute flow has nothing to contribute, but the difference is what happens when no other rule has anything to contribute either.</source>
          <target state="new">Both indicates that the attribute flow has nothing to contribute, but the difference is what happens when no other rule has anything to contribute either.</target>
        </trans-unit>
        <trans-unit id="c9f63de4-12f7-4b61-bd95-06b891d5655b" xml:space="preserve">
          <source>If there is an existing value in the connected directory, a NULL will stage a delete on the attribute removing it while IgnoreThisFlow will keep the existing value.</source>
          <target state="new">If there is an existing value in the connected directory, a NULL will stage a delete on the attribute removing it while IgnoreThisFlow will keep the existing value.</target>
        </trans-unit>
        <trans-unit id="9121ce1b-75cc-4279-bf73-e5f9fb415090" xml:space="preserve">
          <source>The function ImportedValues is different than all other functions since the attribute name must be enclosed in quotes rather than square brackets: ImportedValue(“proxyAddresses”).</source>
          <target state="new">The function ImportedValues is different than all other functions since the attribute name must be enclosed in quotes rather than square brackets: ImportedValue(“proxyAddresses”).</target>
        </trans-unit>
        <trans-unit id="c4fb541f-87b5-4836-9de5-7db10b745d3c" xml:space="preserve">
          <source>Usually during synchronization an attribute will use the expected value, even if it hasn’t been exported yet or an error was received during export (“top of the tower”).</source>
          <target state="new">Usually during synchronization an attribute will use the expected value, even if it hasn’t been exported yet or an error was received during export (“top of the tower”).</target>
        </trans-unit>
        <trans-unit id="7a28a01b-293a-470e-8388-74fb9893350b" xml:space="preserve">
          <source>An inbound synchronization will assume that an attribute which hasn’t yet reached a connected directory will eventually reach it.</source>
          <target state="new">An inbound synchronization will assume that an attribute which hasn’t yet reached a connected directory will eventually reach it.</target>
        </trans-unit>
        <trans-unit id="962a7c1e-2192-45d8-a71f-6abb001051bc" xml:space="preserve">
          <source>In some cases it is important to only synchronize a value which has been confirmed by the connected directory and in this case the function ImportedValue is used (“hologram and delta import tower”).</source>
          <target state="new">In some cases it is important to only synchronize a value which has been confirmed by the connected directory and in this case the function ImportedValue is used (“hologram and delta import tower”).</target>
        </trans-unit>
        <trans-unit id="dae3d5a5-f015-409f-b1bd-b20cf2faae08" xml:space="preserve">
          <source>An example of this can be found in the out-of-box Synchronization Rule In from AD – User Common from Exchange where in Hybrid Exchange the value added by Exchange online should only be synchronized if it has been confirmed the value was exported successfully:</source>
          <target state="new">An example of this can be found in the out-of-box Synchronization Rule In from AD – User Common from Exchange where in Hybrid Exchange the value added by Exchange online should only be synchronized if it has been confirmed the value was exported successfully:</target>
        </trans-unit>
        <trans-unit id="5856be33-d165-40bf-bd57-da103a3ddcbb" xml:space="preserve">
          <source><bpt id="dc651819-8440-4e00-9f9b-37cd73a42ddd">&lt;code&gt;</bpt>proxyAddresses &lt;- RemoveDuplicates(Trim(ImportedValues(“proxyAddresses”)))<ept id="dc651819-8440-4e00-9f9b-37cd73a42ddd">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="dc651819-8440-4e00-9f9b-37cd73a42ddd">&lt;code&gt;</bpt>proxyAddresses &lt;- RemoveDuplicates(Trim(ImportedValues(“proxyAddresses”)))<ept id="dc651819-8440-4e00-9f9b-37cd73a42ddd">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="02c28251-cf51-414e-a8e0-1a12409fb6b1" xml:space="preserve">
          <source>For a complete list of functions, see <bpt id="dacd0c16-c61a-499b-b906-c239d2b09ab0">&lt;linkText&gt;</bpt>Azure AD Connect Sync: Functions Reference<ept id="dacd0c16-c61a-499b-b906-c239d2b09ab0">&lt;/linkText&gt;</ept><bpt id="dacd0c16-c61a-499b-b906-c239d2b09ab0">&lt;title&gt;</bpt><ept id="dacd0c16-c61a-499b-b906-c239d2b09ab0">&lt;/title&gt;</ept></source>
          <target state="new">For a complete list of functions, see <bpt id="dacd0c16-c61a-499b-b906-c239d2b09ab0">&lt;linkText&gt;</bpt>Azure AD Connect Sync: Functions Reference<ept id="dacd0c16-c61a-499b-b906-c239d2b09ab0">&lt;/linkText&gt;</ept><bpt id="dacd0c16-c61a-499b-b906-c239d2b09ab0">&lt;title&gt;</bpt><ept id="dacd0c16-c61a-499b-b906-c239d2b09ab0">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b513ea06-be19-4829-a6bf-b5cf75734dd6" xml:space="preserve">
          <source><bpt id="5363b531-bd8c-4db4-80a2-a24620b536ec">&lt;linkText&gt;</bpt>Azure AD Connect Sync: Customizing Synchronization options<ept id="5363b531-bd8c-4db4-80a2-a24620b536ec">&lt;/linkText&gt;</ept><bpt id="5363b531-bd8c-4db4-80a2-a24620b536ec">&lt;title&gt;</bpt><ept id="5363b531-bd8c-4db4-80a2-a24620b536ec">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="5363b531-bd8c-4db4-80a2-a24620b536ec">&lt;linkText&gt;</bpt>Azure AD Connect Sync: Customizing Synchronization options<ept id="5363b531-bd8c-4db4-80a2-a24620b536ec">&lt;/linkText&gt;</ept><bpt id="5363b531-bd8c-4db4-80a2-a24620b536ec">&lt;title&gt;</bpt><ept id="5363b531-bd8c-4db4-80a2-a24620b536ec">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="182888ba-6bb0-4339-acc1-a1d51963f0be" xml:space="preserve">
          <source><bpt id="c67d36eb-86c8-4dc9-bce5-7ede81a367ea">&lt;linkText&gt;</bpt>Integrating your on-premises identities with Azure Active Directory<ept id="c67d36eb-86c8-4dc9-bce5-7ede81a367ea">&lt;/linkText&gt;</ept><bpt id="c67d36eb-86c8-4dc9-bce5-7ede81a367ea">&lt;title&gt;</bpt><ept id="c67d36eb-86c8-4dc9-bce5-7ede81a367ea">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="c67d36eb-86c8-4dc9-bce5-7ede81a367ea">&lt;linkText&gt;</bpt>Integrating your on-premises identities with Azure Active Directory<ept id="c67d36eb-86c8-4dc9-bce5-7ede81a367ea">&lt;/linkText&gt;</ept><bpt id="c67d36eb-86c8-4dc9-bce5-7ede81a367ea">&lt;title&gt;</bpt><ept id="c67d36eb-86c8-4dc9-bce5-7ede81a367ea">&lt;/title&gt;</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>