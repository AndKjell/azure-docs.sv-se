<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="86e4d4ed-daf1-488b-856e-31e9e7626878" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="86e4d4ed-daf1-488b-856e-31e9e7626878" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="89bb90b7-280e-45a4-b822-35d7ab49ecfc">
        <trans-unit id="7437bcc3-3760-4bbf-80e3-8f71b316cd19" xml:space="preserve">
          <source>App Model v2.0 | Microsoft Azure</source>
          <target state="new">App Model v2.0 | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="9cf69e77-dfd4-4c3b-bee6-6499231d504c" xml:space="preserve">
          <source>How to build a Node JS web app that signs users in with both personal Microsoft Account and work or school accounts.</source>
          <target state="new">How to build a Node JS web app that signs users in with both personal Microsoft Account and work or school accounts.</target>
        </trans-unit>
        <trans-unit id="e8aec3a1-485b-48c3-ad87-aa4951fa3884" xml:space="preserve">
          <source>This information applies to the v2.0 app model public preview.</source>
          <target state="new">This information applies to the v2.0 app model public preview.</target>
        </trans-unit>
        <trans-unit id="43aa15f4-325f-4da0-abd6-e52ecc5cbceb" xml:space="preserve">
          <source>For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="9f55ee52-5f07-44d3-8e4e-c1613fd512c3">&lt;linkText&gt;</bpt>Azure Active Directory Developer Guide<ept id="9f55ee52-5f07-44d3-8e4e-c1613fd512c3">&lt;/linkText&gt;</ept><bpt id="9f55ee52-5f07-44d3-8e4e-c1613fd512c3">&lt;title&gt;</bpt><ept id="9f55ee52-5f07-44d3-8e4e-c1613fd512c3">&lt;/title&gt;</ept>.</source>
          <target state="new">For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="9f55ee52-5f07-44d3-8e4e-c1613fd512c3">&lt;linkText&gt;</bpt>Azure Active Directory Developer Guide<ept id="9f55ee52-5f07-44d3-8e4e-c1613fd512c3">&lt;/linkText&gt;</ept><bpt id="9f55ee52-5f07-44d3-8e4e-c1613fd512c3">&lt;title&gt;</bpt><ept id="9f55ee52-5f07-44d3-8e4e-c1613fd512c3">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="17ab4ba9-a88d-40ba-95d7-b441d8ffe4f4" xml:space="preserve">
          <source>Here we'll use Passport to:</source>
          <target state="new">Here we'll use Passport to:</target>
        </trans-unit>
        <trans-unit id="e23dc149-a3db-42ab-aaa2-475249c4a382" xml:space="preserve">
          <source>Sign the user into the app using Azure AD and the v2.0 app model.</source>
          <target state="new">Sign the user into the app using Azure AD and the v2.0 app model.</target>
        </trans-unit>
        <trans-unit id="8a0d28f8-27f2-437f-b29a-f7fe2894383a" xml:space="preserve">
          <source>Display some information about the user.</source>
          <target state="new">Display some information about the user.</target>
        </trans-unit>
        <trans-unit id="cc6eba31-b41d-4885-92dc-546a37500f0d" xml:space="preserve">
          <source>Sign the user out of the app.</source>
          <target state="new">Sign the user out of the app.</target>
        </trans-unit>
        <trans-unit id="397fb554-c703-44c0-9876-df7454db2aa3" xml:space="preserve">
          <source><bpt id="89070b45-3f50-47c6-bcb8-9ca60ef10797">&lt;strong&gt;</bpt>Passport<ept id="89070b45-3f50-47c6-bcb8-9ca60ef10797">&lt;/strong&gt;</ept> is authentication middleware for Node.js.</source>
          <target state="new"><bpt id="89070b45-3f50-47c6-bcb8-9ca60ef10797">&lt;strong&gt;</bpt>Passport<ept id="89070b45-3f50-47c6-bcb8-9ca60ef10797">&lt;/strong&gt;</ept> is authentication middleware for Node.js.</target>
        </trans-unit>
        <trans-unit id="14468908-dbbe-4162-8956-042836ddbfae" xml:space="preserve">
          <source>Extremely flexible and modular, Passport can be unobtrusively dropped in to any Express-based or Resitify web application.</source>
          <target state="new">Extremely flexible and modular, Passport can be unobtrusively dropped in to any Express-based or Resitify web application.</target>
        </trans-unit>
        <trans-unit id="2286a286-ded0-4d39-a5d8-6bd1a7a80d6f" xml:space="preserve">
          <source>A comprehensive set of strategies support authentication using a username and password, Facebook, Twitter, and more.</source>
          <target state="new">A comprehensive set of strategies support authentication using a username and password, Facebook, Twitter, and more.</target>
        </trans-unit>
        <trans-unit id="f502fcff-2161-45ad-9a17-2768cd4fc1c7" xml:space="preserve">
          <source>We have developed a strategy for Microsoft Azure Active Directory.</source>
          <target state="new">We have developed a strategy for Microsoft Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="f3b88d17-2112-4754-9837-0a0df660f9ad" xml:space="preserve">
          <source>We will install this module and then add the Microsoft Azure Active Directory <bpt id="9df67a9e-b82a-4673-ab5a-0c6769f3d38c">&lt;code&gt;</bpt>passport-azure-ad<ept id="9df67a9e-b82a-4673-ab5a-0c6769f3d38c">&lt;/code&gt;</ept> plug-in.</source>
          <target state="new">We will install this module and then add the Microsoft Azure Active Directory <bpt id="9df67a9e-b82a-4673-ab5a-0c6769f3d38c">&lt;code&gt;</bpt>passport-azure-ad<ept id="9df67a9e-b82a-4673-ab5a-0c6769f3d38c">&lt;/code&gt;</ept> plug-in.</target>
        </trans-unit>
        <trans-unit id="6ad10583-5c29-4b10-918d-131a182e18a1" xml:space="preserve">
          <source>In order to do this, you'll need to:</source>
          <target state="new">In order to do this, you'll need to:</target>
        </trans-unit>
        <trans-unit id="d74a7605-b21a-4d18-a0e6-45c9280c9e32" xml:space="preserve">
          <source>Register an app.</source>
          <target state="new">Register an app.</target>
        </trans-unit>
        <trans-unit id="0f19abe2-6994-499e-ab9b-a973015cb073" xml:space="preserve">
          <source>Set up your app to use the Passport-azure-ad strategy.</source>
          <target state="new">Set up your app to use the Passport-azure-ad strategy.</target>
        </trans-unit>
        <trans-unit id="01a03029-f520-48c9-a66b-4b8a5233daa6" xml:space="preserve">
          <source>Use Passport to issue sign-in and sign-out requests to Azure AD.</source>
          <target state="new">Use Passport to issue sign-in and sign-out requests to Azure AD.</target>
        </trans-unit>
        <trans-unit id="ac2a8b81-d95a-406b-85ba-3a85224bc062" xml:space="preserve">
          <source>Print out data about the user.</source>
          <target state="new">Print out data about the user.</target>
        </trans-unit>
        <trans-unit id="d4e59a0c-d068-4146-bef5-f0f71723d378" xml:space="preserve">
          <source>The code for this tutorial is maintained <bpt id="bf7a8157-39d6-44d6-ad30-fdc2314186e8">&lt;linkText&gt;</bpt>on GitHub<ept id="bf7a8157-39d6-44d6-ad30-fdc2314186e8">&lt;/linkText&gt;</ept><bpt id="bf7a8157-39d6-44d6-ad30-fdc2314186e8">&lt;title&gt;</bpt><ept id="bf7a8157-39d6-44d6-ad30-fdc2314186e8">&lt;/title&gt;</ept>.</source>
          <target state="new">The code for this tutorial is maintained <bpt id="bf7a8157-39d6-44d6-ad30-fdc2314186e8">&lt;linkText&gt;</bpt>on GitHub<ept id="bf7a8157-39d6-44d6-ad30-fdc2314186e8">&lt;/linkText&gt;</ept><bpt id="bf7a8157-39d6-44d6-ad30-fdc2314186e8">&lt;title&gt;</bpt><ept id="bf7a8157-39d6-44d6-ad30-fdc2314186e8">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="f01afe79-4178-43f9-8c0d-7cd0c53ad979" xml:space="preserve">
          <source>To follow along, you can <bpt id="a66e42c2-eef0-4a2d-b606-a6b206828f6c">&lt;linkText&gt;</bpt>download the app's skeleton as a .zip<ept id="a66e42c2-eef0-4a2d-b606-a6b206828f6c">&lt;/linkText&gt;</ept><bpt id="a66e42c2-eef0-4a2d-b606-a6b206828f6c">&lt;title&gt;</bpt><ept id="a66e42c2-eef0-4a2d-b606-a6b206828f6c">&lt;/title&gt;</ept> or clone the skeleton:</source>
          <target state="new">To follow along, you can <bpt id="a66e42c2-eef0-4a2d-b606-a6b206828f6c">&lt;linkText&gt;</bpt>download the app's skeleton as a .zip<ept id="a66e42c2-eef0-4a2d-b606-a6b206828f6c">&lt;/linkText&gt;</ept><bpt id="a66e42c2-eef0-4a2d-b606-a6b206828f6c">&lt;title&gt;</bpt><ept id="a66e42c2-eef0-4a2d-b606-a6b206828f6c">&lt;/title&gt;</ept> or clone the skeleton:</target>
        </trans-unit>
        <trans-unit id="31006724-41c2-4fb5-80cd-bd106e895012" xml:space="preserve">
          <source>After that, use the strategy we just referenced to handle our login requests</source>
          <target state="new">After that, use the strategy we just referenced to handle our login requests</target>
        </trans-unit>
        <trans-unit id="8e088966-c75a-4a85-821c-193754b777dd" xml:space="preserve">
          <source>Passport uses a similar pattern for all it’s Strategies (Twitter, Facebook, etc.)</source>
          <target state="new">Passport uses a similar pattern for all it’s Strategies (Twitter, Facebook, etc.)</target>
        </trans-unit>
        <trans-unit id="d5c3fc15-7ab4-4f6f-9dd0-c57bcfb748df" xml:space="preserve">
          <source>that all Strategy writers adhere to.</source>
          <target state="new">that all Strategy writers adhere to.</target>
        </trans-unit>
        <trans-unit id="071a054e-c398-4c39-adee-3a120539e3e2" xml:space="preserve">
          <source>Looking at the strategy you see we pass it a function() that has a token and a done as the parameters.</source>
          <target state="new">Looking at the strategy you see we pass it a function() that has a token and a done as the parameters.</target>
        </trans-unit>
        <trans-unit id="7e39f37d-a520-4c61-ba69-1da455230436" xml:space="preserve">
          <source>The strategy will dutifully come back to us once it does all it’s work.</source>
          <target state="new">The strategy will dutifully come back to us once it does all it’s work.</target>
        </trans-unit>
        <trans-unit id="a753716a-3f45-42e6-862c-2b5dcce83e94" xml:space="preserve">
          <source>Once it does we’ll want to store the user and stash the token so we won’t need to ask for it again.</source>
          <target state="new">Once it does we’ll want to store the user and stash the token so we won’t need to ask for it again.</target>
        </trans-unit>
        <trans-unit id="ccf2d80b-6a8a-4207-b836-d4ca7a9c7e42" xml:space="preserve">
          <source>The code above takes any user that happens to authenticate to our server.</source>
          <target state="new">The code above takes any user that happens to authenticate to our server.</target>
        </trans-unit>
        <trans-unit id="1aeff982-7049-4c72-a60e-125fbc564ae4" xml:space="preserve">
          <source>This is known as auto registration.</source>
          <target state="new">This is known as auto registration.</target>
        </trans-unit>
        <trans-unit id="a18bd30f-de9d-4600-9d1c-48e6325f4a7c" xml:space="preserve">
          <source>In production servers you wouldn’t want to let anyone in without first having them go through a registration process you decide.</source>
          <target state="new">In production servers you wouldn’t want to let anyone in without first having them go through a registration process you decide.</target>
        </trans-unit>
        <trans-unit id="ef8a64db-a890-4404-9d2b-19e49f83e442" xml:space="preserve">
          <source>This is usually the pattern you see in consumer apps who allow you to register with Facebook but then ask you to fill out additional information.</source>
          <target state="new">This is usually the pattern you see in consumer apps who allow you to register with Facebook but then ask you to fill out additional information.</target>
        </trans-unit>
        <trans-unit id="5d6a0141-9660-4070-bea2-6aef95764719" xml:space="preserve">
          <source>If this wasn’t a sample application, we could have just extracted the email from the token object that is returned and then asked them to fill out additional information.</source>
          <target state="new">If this wasn’t a sample application, we could have just extracted the email from the token object that is returned and then asked them to fill out additional information.</target>
        </trans-unit>
        <trans-unit id="f9be8149-0ae3-429b-84da-c303aceda238" xml:space="preserve">
          <source>Since this is a test server we simply add them to the in-memory database.</source>
          <target state="new">Since this is a test server we simply add them to the in-memory database.</target>
        </trans-unit>
        <trans-unit id="a6a06524-7363-4531-b31c-817cb09cfa4b" xml:space="preserve">
          <source>Next, let's add the methods that will allow us to keep track of the logged in users as required by Passport.</source>
          <target state="new">Next, let's add the methods that will allow us to keep track of the logged in users as required by Passport.</target>
        </trans-unit>
        <trans-unit id="c4ae60b5-fcf2-40e2-8402-c20f8dcc34ae" xml:space="preserve">
          <source>This includes serializing and deserializing the user's information:</source>
          <target state="new">This includes serializing and deserializing the user's information:</target>
        </trans-unit>
        <trans-unit id="cd13d4fe-cbc2-4c35-b6e4-b7e4ed7672f0" xml:space="preserve">
          <source>Next, let's add the code to load the express engine.</source>
          <target state="new">Next, let's add the code to load the express engine.</target>
        </trans-unit>
        <trans-unit id="22c02f1a-ec70-4e10-b25b-180b68d6a309" xml:space="preserve">
          <source>Here you see we use the default /views and /routes pattern that Express provides.</source>
          <target state="new">Here you see we use the default /views and /routes pattern that Express provides.</target>
        </trans-unit>
        <trans-unit id="a3ab48fe-83d1-4551-86ac-3d158049066d" xml:space="preserve">
          <source>Finally, let's add the POST routes that will hand off the actual login requests to the <bpt id="844ce441-426d-481f-87d5-a9e7393c7c12">&lt;code&gt;</bpt>passport-azure-ad<ept id="844ce441-426d-481f-87d5-a9e7393c7c12">&lt;/code&gt;</ept> engine:</source>
          <target state="new">Finally, let's add the POST routes that will hand off the actual login requests to the <bpt id="844ce441-426d-481f-87d5-a9e7393c7c12">&lt;code&gt;</bpt>passport-azure-ad<ept id="844ce441-426d-481f-87d5-a9e7393c7c12">&lt;/code&gt;</ept> engine:</target>
        </trans-unit>
        <trans-unit id="0f0396e1-b9c4-4125-abb2-5fb8ae7bbc26" xml:space="preserve">
          <source>Your app is now properly configured to communicate with the v2.0 endpoint using the OpenID Connect authentication protocol.</source>
          <target state="new">Your app is now properly configured to communicate with the v2.0 endpoint using the OpenID Connect authentication protocol.</target>
        </trans-unit>
        <trans-unit id="4c703814-2c4e-4e8c-b111-f2b9ff280769" xml:space="preserve">
          <source><bpt id="8880dffa-cbaf-45da-8247-4b9e2ab03208">&lt;code&gt;</bpt>passport-azure-ad<ept id="8880dffa-cbaf-45da-8247-4b9e2ab03208">&lt;/code&gt;</ept> has taken care of all of the ugly details of crafting authentication messages, validating tokens from Azure AD, and maintaining user session.</source>
          <target state="new"><bpt id="8880dffa-cbaf-45da-8247-4b9e2ab03208">&lt;code&gt;</bpt>passport-azure-ad<ept id="8880dffa-cbaf-45da-8247-4b9e2ab03208">&lt;/code&gt;</ept> has taken care of all of the ugly details of crafting authentication messages, validating tokens from Azure AD, and maintaining user session.</target>
        </trans-unit>
        <trans-unit id="64d4a361-9fdb-4c04-b774-cc3c936789a7" xml:space="preserve">
          <source>All that remains is to give your users a way to sign in, sign out, and gather additional info on the logged in user.</source>
          <target state="new">All that remains is to give your users a way to sign in, sign out, and gather additional info on the logged in user.</target>
        </trans-unit>
        <trans-unit id="dda9c8bf-2e1d-4184-b721-f694b1c91d61" xml:space="preserve">
          <source>First, lets add the default, login, account, and logout methods to our <bpt id="c66e8c97-9d75-4f17-b88f-0a95e674ed14">&lt;code&gt;</bpt>app.js<ept id="c66e8c97-9d75-4f17-b88f-0a95e674ed14">&lt;/code&gt;</ept> file:</source>
          <target state="new">First, lets add the default, login, account, and logout methods to our <bpt id="c66e8c97-9d75-4f17-b88f-0a95e674ed14">&lt;code&gt;</bpt>app.js<ept id="c66e8c97-9d75-4f17-b88f-0a95e674ed14">&lt;/code&gt;</ept> file:</target>
        </trans-unit>
        <trans-unit id="6e1b299a-2a4c-41b0-9841-85391e3427be" xml:space="preserve">
          <source>Let's review these in detail:</source>
          <target state="new">Let's review these in detail:</target>
        </trans-unit>
        <trans-unit id="1c585046-b463-4d85-a473-7a7a643cf4d1" xml:space="preserve">
          <source>The <bpt id="d6c5c12e-bf89-45f0-849d-469236cfc1b8">&lt;code&gt;</bpt>/<ept id="d6c5c12e-bf89-45f0-849d-469236cfc1b8">&lt;/code&gt;</ept> route will redirect to the index.ejs view passing the user in the request (if it exists)</source>
          <target state="new">The <bpt id="d6c5c12e-bf89-45f0-849d-469236cfc1b8">&lt;code&gt;</bpt>/<ept id="d6c5c12e-bf89-45f0-849d-469236cfc1b8">&lt;/code&gt;</ept> route will redirect to the index.ejs view passing the user in the request (if it exists)</target>
        </trans-unit>
        <trans-unit id="10516b92-c24e-40f7-bcd8-f1d305f6476e" xml:space="preserve">
          <source>The <bpt id="ece8f74b-99d0-4fcf-af91-bc2d92a813bb">&lt;code&gt;</bpt>/account<ept id="ece8f74b-99d0-4fcf-af91-bc2d92a813bb">&lt;/code&gt;</ept> route will first <bpt id="830729f2-9a07-474e-b78b-93e3f9b50414">&lt;strong&gt;</bpt>*ensure we are authenticated*<ept id="830729f2-9a07-474e-b78b-93e3f9b50414">&lt;/strong&gt;</ept> (we implement that below) and then pass the user in the request so that we can get additional information about the user.</source>
          <target state="new">The <bpt id="ece8f74b-99d0-4fcf-af91-bc2d92a813bb">&lt;code&gt;</bpt>/account<ept id="ece8f74b-99d0-4fcf-af91-bc2d92a813bb">&lt;/code&gt;</ept> route will first <bpt id="830729f2-9a07-474e-b78b-93e3f9b50414">&lt;strong&gt;</bpt>*ensure we are authenticated*<ept id="830729f2-9a07-474e-b78b-93e3f9b50414">&lt;/strong&gt;</ept> (we implement that below) and then pass the user in the request so that we can get additional information about the user.</target>
        </trans-unit>
        <trans-unit id="0fecd501-a828-4ef2-b881-78a63099c57e" xml:space="preserve">
          <source>The <bpt id="ce8803c5-e2da-49b7-b6a5-19452f5cf7d3">&lt;code&gt;</bpt>/login<ept id="ce8803c5-e2da-49b7-b6a5-19452f5cf7d3">&lt;/code&gt;</ept> route will call our azuread-openidconnect authenticator from <bpt id="7f849b83-8063-48b1-b519-4d388760d313">&lt;code&gt;</bpt>passport-azuread<ept id="7f849b83-8063-48b1-b519-4d388760d313">&lt;/code&gt;</ept> and if that doesn't succeed will redirect the user back to /login</source>
          <target state="new">The <bpt id="ce8803c5-e2da-49b7-b6a5-19452f5cf7d3">&lt;code&gt;</bpt>/login<ept id="ce8803c5-e2da-49b7-b6a5-19452f5cf7d3">&lt;/code&gt;</ept> route will call our azuread-openidconnect authenticator from <bpt id="7f849b83-8063-48b1-b519-4d388760d313">&lt;code&gt;</bpt>passport-azuread<ept id="7f849b83-8063-48b1-b519-4d388760d313">&lt;/code&gt;</ept> and if that doesn't succeed will redirect the user back to /login</target>
        </trans-unit>
        <trans-unit id="f8f7ba53-5d04-4e25-99f0-87ea421f7f9e" xml:space="preserve">
          <source>The <bpt id="c7a26c9f-39fa-4e7c-a97a-a9c9b3ef00bc">&lt;code&gt;</bpt>/logout<ept id="c7a26c9f-39fa-4e7c-a97a-a9c9b3ef00bc">&lt;/code&gt;</ept> will simply call the logout.ejs (and route) which clears cookies and then return the user back to index.ejs</source>
          <target state="new">The <bpt id="c7a26c9f-39fa-4e7c-a97a-a9c9b3ef00bc">&lt;code&gt;</bpt>/logout<ept id="c7a26c9f-39fa-4e7c-a97a-a9c9b3ef00bc">&lt;/code&gt;</ept> will simply call the logout.ejs (and route) which clears cookies and then return the user back to index.ejs</target>
        </trans-unit>
        <trans-unit id="86d3ae90-6dd9-4391-b418-3adc6f8b047e" xml:space="preserve">
          <source>For the last part of <bpt id="a41f6ae2-acb3-461d-bc8b-a67c09709959">&lt;code&gt;</bpt>app.js<ept id="a41f6ae2-acb3-461d-bc8b-a67c09709959">&lt;/code&gt;</ept>, let's add the EnsureAuthenticated method that is used in <bpt id="7182cc7a-fdfb-4c5c-a187-7fef5bdb93ec">&lt;code&gt;</bpt>/account<ept id="7182cc7a-fdfb-4c5c-a187-7fef5bdb93ec">&lt;/code&gt;</ept> above.</source>
          <target state="new">For the last part of <bpt id="a41f6ae2-acb3-461d-bc8b-a67c09709959">&lt;code&gt;</bpt>app.js<ept id="a41f6ae2-acb3-461d-bc8b-a67c09709959">&lt;/code&gt;</ept>, let's add the EnsureAuthenticated method that is used in <bpt id="7182cc7a-fdfb-4c5c-a187-7fef5bdb93ec">&lt;code&gt;</bpt>/account<ept id="7182cc7a-fdfb-4c5c-a187-7fef5bdb93ec">&lt;/code&gt;</ept> above.</target>
        </trans-unit>
        <trans-unit id="350bea5e-9293-4bbe-a0ea-a496bfd255e6" xml:space="preserve">
          <source>Finally, let's actually create the server itself in <bpt id="67970d30-548c-45cc-9fdd-3e88a7794370">&lt;code&gt;</bpt>app.js<ept id="67970d30-548c-45cc-9fdd-3e88a7794370">&lt;/code&gt;</ept>:</source>
          <target state="new">Finally, let's actually create the server itself in <bpt id="67970d30-548c-45cc-9fdd-3e88a7794370">&lt;code&gt;</bpt>app.js<ept id="67970d30-548c-45cc-9fdd-3e88a7794370">&lt;/code&gt;</ept>:</target>
        </trans-unit>
        <trans-unit id="1ff66de7-5fcd-49fc-b8bf-3775feda6d03" xml:space="preserve">
          <source>We have our <bpt id="b747bb9e-7b22-45da-9ee2-b9a2b9a2c790">&lt;code&gt;</bpt>app.js<ept id="b747bb9e-7b22-45da-9ee2-b9a2b9a2c790">&lt;/code&gt;</ept> complete.</source>
          <target state="new">We have our <bpt id="b747bb9e-7b22-45da-9ee2-b9a2b9a2c790">&lt;code&gt;</bpt>app.js<ept id="b747bb9e-7b22-45da-9ee2-b9a2b9a2c790">&lt;/code&gt;</ept> complete.</target>
        </trans-unit>
        <trans-unit id="2f8bbec7-4066-482c-b54c-621dead8b00e" xml:space="preserve">
          <source>Now we simply need to add the routes and views that will show the information we get to the user as well as handle the <bpt id="c22fce1c-7cf3-42a7-8aff-c53587ddd29f">&lt;code&gt;</bpt>/logout<ept id="c22fce1c-7cf3-42a7-8aff-c53587ddd29f">&lt;/code&gt;</ept> and <bpt id="b695d06b-b233-47c6-b4ea-bc2bd48ad699">&lt;code&gt;</bpt>/login<ept id="b695d06b-b233-47c6-b4ea-bc2bd48ad699">&lt;/code&gt;</ept> routes we've created.</source>
          <target state="new">Now we simply need to add the routes and views that will show the information we get to the user as well as handle the <bpt id="c22fce1c-7cf3-42a7-8aff-c53587ddd29f">&lt;code&gt;</bpt>/logout<ept id="c22fce1c-7cf3-42a7-8aff-c53587ddd29f">&lt;/code&gt;</ept> and <bpt id="b695d06b-b233-47c6-b4ea-bc2bd48ad699">&lt;code&gt;</bpt>/login<ept id="b695d06b-b233-47c6-b4ea-bc2bd48ad699">&lt;/code&gt;</ept> routes we've created.</target>
        </trans-unit>
        <trans-unit id="f8c4adbe-fa8a-4d81-970e-0fc20ab61c91" xml:space="preserve">
          <source>Create the <bpt id="452e16e5-e536-4538-b2ee-73811168f1aa">&lt;code&gt;</bpt>/routes/index.js<ept id="452e16e5-e536-4538-b2ee-73811168f1aa">&lt;/code&gt;</ept> route under the root directory.</source>
          <target state="new">Create the <bpt id="452e16e5-e536-4538-b2ee-73811168f1aa">&lt;code&gt;</bpt>/routes/index.js<ept id="452e16e5-e536-4538-b2ee-73811168f1aa">&lt;/code&gt;</ept> route under the root directory.</target>
        </trans-unit>
        <trans-unit id="23e2cb82-1212-4039-b827-00bf47e944d8" xml:space="preserve">
          <source>Create the <bpt id="b32f91c6-d13d-4384-8fa7-f8ed7b34e3c6">&lt;code&gt;</bpt>/routes/user.js<ept id="b32f91c6-d13d-4384-8fa7-f8ed7b34e3c6">&lt;/code&gt;</ept> route under the root directory</source>
          <target state="new">Create the <bpt id="b32f91c6-d13d-4384-8fa7-f8ed7b34e3c6">&lt;code&gt;</bpt>/routes/user.js<ept id="b32f91c6-d13d-4384-8fa7-f8ed7b34e3c6">&lt;/code&gt;</ept> route under the root directory</target>
        </trans-unit>
        <trans-unit id="9ef920d8-89a6-48e3-a1d7-c771c3c32eab" xml:space="preserve">
          <source>These simple routes will just pass along the request to our views, including the user if present.</source>
          <target state="new">These simple routes will just pass along the request to our views, including the user if present.</target>
        </trans-unit>
        <trans-unit id="e8c75d11-f034-4734-a749-49c93cc1bab6" xml:space="preserve">
          <source>Create the <bpt id="8b61d87e-f767-4e65-b246-5fa6ddfd2da7">&lt;code&gt;</bpt>/views/index.ejs<ept id="8b61d87e-f767-4e65-b246-5fa6ddfd2da7">&lt;/code&gt;</ept> view under the root directory.</source>
          <target state="new">Create the <bpt id="8b61d87e-f767-4e65-b246-5fa6ddfd2da7">&lt;code&gt;</bpt>/views/index.ejs<ept id="8b61d87e-f767-4e65-b246-5fa6ddfd2da7">&lt;/code&gt;</ept> view under the root directory.</target>
        </trans-unit>
        <trans-unit id="77096bba-822b-407c-b279-39008f6f15fb" xml:space="preserve">
          <source>this is a simple page that will call our login and logout methods and allow us to grab account information.</source>
          <target state="new">this is a simple page that will call our login and logout methods and allow us to grab account information.</target>
        </trans-unit>
        <trans-unit id="43a83bd0-fbbb-4cd0-b237-92e18c5e9fbf" xml:space="preserve">
          <source>Notice that we can use the conditional <bpt id="78c30a33-f89b-4290-8490-090df6fe8ed1">&lt;code&gt;</bpt>if (!user)<ept id="78c30a33-f89b-4290-8490-090df6fe8ed1">&lt;/code&gt;</ept> as the user being passed through in the request is evidence we have a logged in user.</source>
          <target state="new">Notice that we can use the conditional <bpt id="78c30a33-f89b-4290-8490-090df6fe8ed1">&lt;code&gt;</bpt>if (!user)<ept id="78c30a33-f89b-4290-8490-090df6fe8ed1">&lt;/code&gt;</ept> as the user being passed through in the request is evidence we have a logged in user.</target>
        </trans-unit>
        <trans-unit id="6bf5da26-0ee3-4370-b86f-55fd053a3409" xml:space="preserve">
          <source>Create the <bpt id="0ea303fa-9c76-4e80-aca4-751c5ef91b70">&lt;code&gt;</bpt>/views/account.ejs<ept id="0ea303fa-9c76-4e80-aca4-751c5ef91b70">&lt;/code&gt;</ept> view under the root directory so that we can view additional information that <bpt id="eb280acb-6b2e-47f0-9773-a615c5f5f62b">&lt;code&gt;</bpt>passport-azuread<ept id="eb280acb-6b2e-47f0-9773-a615c5f5f62b">&lt;/code&gt;</ept> has put in the user request.</source>
          <target state="new">Create the <bpt id="0ea303fa-9c76-4e80-aca4-751c5ef91b70">&lt;code&gt;</bpt>/views/account.ejs<ept id="0ea303fa-9c76-4e80-aca4-751c5ef91b70">&lt;/code&gt;</ept> view under the root directory so that we can view additional information that <bpt id="eb280acb-6b2e-47f0-9773-a615c5f5f62b">&lt;code&gt;</bpt>passport-azuread<ept id="eb280acb-6b2e-47f0-9773-a615c5f5f62b">&lt;/code&gt;</ept> has put in the user request.</target>
        </trans-unit>
        <trans-unit id="c8784ce6-1a04-479d-9c85-7b4089500032" xml:space="preserve">
          <source>Finally, let's make this look pretty by adding a layout.</source>
          <target state="new">Finally, let's make this look pretty by adding a layout.</target>
        </trans-unit>
        <trans-unit id="6b47c9af-60ba-4a1c-9646-b725250a9a5e" xml:space="preserve">
          <source>Create the '/views/layout.ejs' view under the root directory</source>
          <target state="new">Create the '/views/layout.ejs' view under the root directory</target>
        </trans-unit>
        <trans-unit id="2e615f6b-51f0-4ae2-85fe-7a1a6c03ec0c" xml:space="preserve">
          <source>Finally, build and run your app!</source>
          <target state="new">Finally, build and run your app!</target>
        </trans-unit>
        <trans-unit id="4e2be7f0-41cc-44d4-849f-f3bbfd415566" xml:space="preserve">
          <source>Run <bpt id="85d98b90-6b32-40bd-be21-a6d5d4a1747f">&lt;code&gt;</bpt>node app.js<ept id="85d98b90-6b32-40bd-be21-a6d5d4a1747f">&lt;/code&gt;</ept> and navigate to <bpt id="c6b2d0cd-8019-4efc-8df7-0658f5da5749">&lt;code&gt;</bpt>http://localhost:3000<ept id="c6b2d0cd-8019-4efc-8df7-0658f5da5749">&lt;/code&gt;</ept></source>
          <target state="new">Run <bpt id="85d98b90-6b32-40bd-be21-a6d5d4a1747f">&lt;code&gt;</bpt>node app.js<ept id="85d98b90-6b32-40bd-be21-a6d5d4a1747f">&lt;/code&gt;</ept> and navigate to <bpt id="c6b2d0cd-8019-4efc-8df7-0658f5da5749">&lt;code&gt;</bpt>http://localhost:3000<ept id="c6b2d0cd-8019-4efc-8df7-0658f5da5749">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="dec38ca7-58dc-4f30-90dd-b0c0db36c1ee" xml:space="preserve">
          <source>Sign in with either a personal Microsoft Account or a work or school account, and notice how the user's identity is reflected in the /account list.</source>
          <target state="new">Sign in with either a personal Microsoft Account or a work or school account, and notice how the user's identity is reflected in the /account list.</target>
        </trans-unit>
        <trans-unit id="6fd158a3-74bf-46e9-a6c7-0b3707a58978" xml:space="preserve">
          <source>You now have a web app secured using industry standard protocols that can authenticate users with both their personal and work/school accounts.</source>
          <target state="new">You now have a web app secured using industry standard protocols that can authenticate users with both their personal and work/school accounts.</target>
        </trans-unit>
        <trans-unit id="1277f5a9-9cad-46db-9c49-6ec2c85fd0f9" xml:space="preserve">
          <source>For reference, the completed sample (without your configuration values) <bpt id="1ca40993-0444-48f2-93a0-9edd77b0943c">&lt;linkText&gt;</bpt>is provided as a .zip here<ept id="1ca40993-0444-48f2-93a0-9edd77b0943c">&lt;/linkText&gt;</ept><bpt id="1ca40993-0444-48f2-93a0-9edd77b0943c">&lt;title&gt;</bpt><ept id="1ca40993-0444-48f2-93a0-9edd77b0943c">&lt;/title&gt;</ept>, or you can clone it from GitHub:</source>
          <target state="new">For reference, the completed sample (without your configuration values) <bpt id="1ca40993-0444-48f2-93a0-9edd77b0943c">&lt;linkText&gt;</bpt>is provided as a .zip here<ept id="1ca40993-0444-48f2-93a0-9edd77b0943c">&lt;/linkText&gt;</ept><bpt id="1ca40993-0444-48f2-93a0-9edd77b0943c">&lt;title&gt;</bpt><ept id="1ca40993-0444-48f2-93a0-9edd77b0943c">&lt;/title&gt;</ept>, or you can clone it from GitHub:</target>
        </trans-unit>
        <trans-unit id="cbfa0680-0cca-4e54-9b10-adcbe5d50e14" xml:space="preserve">
          <source><bpt id="d8b636d9-209f-458a-90a7-05fbba6c1b5e">&lt;code&gt;</bpt>git clone --branch complete https://github.com/AzureADQuickStarts/AppModelv2-WebApp-OpenIDConnect-nodejs.git<ept id="d8b636d9-209f-458a-90a7-05fbba6c1b5e">&lt;/code&gt;</ept></source>
          <target state="new"><bpt id="d8b636d9-209f-458a-90a7-05fbba6c1b5e">&lt;code&gt;</bpt>git clone --branch complete https://github.com/AzureADQuickStarts/AppModelv2-WebApp-OpenIDConnect-nodejs.git<ept id="d8b636d9-209f-458a-90a7-05fbba6c1b5e">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6609bbc1-5c9f-4535-bb45-c56e5d72b29a" xml:space="preserve">
          <source>You can now move onto more advanced topics.</source>
          <target state="new">You can now move onto more advanced topics.</target>
        </trans-unit>
        <trans-unit id="cbcdf3c5-a01a-4f6a-8a51-eaa895b469ee" xml:space="preserve">
          <source>You may want to try:</source>
          <target state="new">You may want to try:</target>
        </trans-unit>
        <trans-unit id="b520fa16-46e2-4db9-980a-83d826ba4225" xml:space="preserve">
          <source><bpt id="0940548d-3504-416d-bb36-b934b4113260">&lt;linkText&gt;</bpt>Secure a Web API with the v2.0 app model in node.js &gt;&gt;<ept id="0940548d-3504-416d-bb36-b934b4113260">&lt;/linkText&gt;</ept><bpt id="0940548d-3504-416d-bb36-b934b4113260">&lt;title&gt;</bpt><ept id="0940548d-3504-416d-bb36-b934b4113260">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="0940548d-3504-416d-bb36-b934b4113260">&lt;linkText&gt;</bpt>Secure a Web API with the v2.0 app model in node.js &gt;&gt;<ept id="0940548d-3504-416d-bb36-b934b4113260">&lt;/linkText&gt;</ept><bpt id="0940548d-3504-416d-bb36-b934b4113260">&lt;title&gt;</bpt><ept id="0940548d-3504-416d-bb36-b934b4113260">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="2c080fb2-e8a6-4272-85d3-c7d7bd6c7be8" xml:space="preserve">
          <source>For additional resources, check out:</source>
          <target state="new">For additional resources, check out:</target>
        </trans-unit>
        <trans-unit id="7c85069f-9270-48ab-ab9c-681dca4cbbb2" xml:space="preserve">
          <source><bpt id="8e08aa65-6cfc-4098-b4e3-3e505221c71c">&lt;linkText&gt;</bpt>The App Model v2.0 Preview &gt;&gt;<ept id="8e08aa65-6cfc-4098-b4e3-3e505221c71c">&lt;/linkText&gt;</ept><bpt id="8e08aa65-6cfc-4098-b4e3-3e505221c71c">&lt;title&gt;</bpt><ept id="8e08aa65-6cfc-4098-b4e3-3e505221c71c">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="8e08aa65-6cfc-4098-b4e3-3e505221c71c">&lt;linkText&gt;</bpt>The App Model v2.0 Preview &gt;&gt;<ept id="8e08aa65-6cfc-4098-b4e3-3e505221c71c">&lt;/linkText&gt;</ept><bpt id="8e08aa65-6cfc-4098-b4e3-3e505221c71c">&lt;title&gt;</bpt><ept id="8e08aa65-6cfc-4098-b4e3-3e505221c71c">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="48650955-392b-4279-8004-0ee33a7a5a87" xml:space="preserve">
          <source><bpt id="8fefe624-62d4-4930-960f-303c077d21f4">&lt;linkText&gt;</bpt>StackOverflow "azure-active-directory" tag &gt;&gt;<ept id="8fefe624-62d4-4930-960f-303c077d21f4">&lt;/linkText&gt;</ept><bpt id="8fefe624-62d4-4930-960f-303c077d21f4">&lt;title&gt;</bpt><ept id="8fefe624-62d4-4930-960f-303c077d21f4">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="8fefe624-62d4-4930-960f-303c077d21f4">&lt;linkText&gt;</bpt>StackOverflow "azure-active-directory" tag &gt;&gt;<ept id="8fefe624-62d4-4930-960f-303c077d21f4">&lt;/linkText&gt;</ept><bpt id="8fefe624-62d4-4930-960f-303c077d21f4">&lt;title&gt;</bpt><ept id="8fefe624-62d4-4930-960f-303c077d21f4">&lt;/title&gt;</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>