<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="91e95c89-11e8-40f6-9d6c-d51d5127a1af" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="91e95c89-11e8-40f6-9d6c-d51d5127a1af" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="569055a4-04e8-44c8-881d-f69286e6ee0c">
        <trans-unit id="c4a5dc2c-3dc7-4c95-a849-ec0625dbe865" xml:space="preserve">
          <source>How to partition data in DocumentDB with the .NET SDK | Microsoft Azure</source>
          <target state="new">How to partition data in DocumentDB with the .NET SDK | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="780d8ffc-236c-45d7-97d7-1ddf70a2e1aa" xml:space="preserve">
          <source>Learn how to use the Azure DocumentDB .NET SDK to partition (shard) data and route requests across multiple collections</source>
          <target state="new">Learn how to use the Azure DocumentDB .NET SDK to partition (shard) data and route requests across multiple collections</target>
        </trans-unit>
        <trans-unit id="f96d8448-21de-42de-8dd3-58169895fe87" xml:space="preserve">
          <source>Azure DocumentDB is a document database service that enables you to seamlessly scale your account through provisioning of collections using the <bpt id="abb37c59-d188-42c7-8dc4-adfc8ce65a5c">&lt;linkText&gt;</bpt>SDKs<ept id="abb37c59-d188-42c7-8dc4-adfc8ce65a5c">&lt;/linkText&gt;</ept><bpt id="abb37c59-d188-42c7-8dc4-adfc8ce65a5c">&lt;title&gt;</bpt><ept id="abb37c59-d188-42c7-8dc4-adfc8ce65a5c">&lt;/title&gt;</ept> and <bpt id="a80d237c-3db3-4a05-b49f-bb4b24575dc3">&lt;linkText&gt;</bpt>REST APIs<ept id="a80d237c-3db3-4a05-b49f-bb4b24575dc3">&lt;/linkText&gt;</ept><bpt id="a80d237c-3db3-4a05-b49f-bb4b24575dc3">&lt;title&gt;</bpt><ept id="a80d237c-3db3-4a05-b49f-bb4b24575dc3">&lt;/title&gt;</ept> (also called <bpt id="42cc7429-e969-4155-9406-9d94330c903c">&lt;strong&gt;</bpt>sharding<ept id="42cc7429-e969-4155-9406-9d94330c903c">&lt;/strong&gt;</ept>).</source>
          <target state="new">Azure DocumentDB is a document database service that enables you to seamlessly scale your account through provisioning of collections using the <bpt id="abb37c59-d188-42c7-8dc4-adfc8ce65a5c">&lt;linkText&gt;</bpt>SDKs<ept id="abb37c59-d188-42c7-8dc4-adfc8ce65a5c">&lt;/linkText&gt;</ept><bpt id="abb37c59-d188-42c7-8dc4-adfc8ce65a5c">&lt;title&gt;</bpt><ept id="abb37c59-d188-42c7-8dc4-adfc8ce65a5c">&lt;/title&gt;</ept> and <bpt id="a80d237c-3db3-4a05-b49f-bb4b24575dc3">&lt;linkText&gt;</bpt>REST APIs<ept id="a80d237c-3db3-4a05-b49f-bb4b24575dc3">&lt;/linkText&gt;</ept><bpt id="a80d237c-3db3-4a05-b49f-bb4b24575dc3">&lt;title&gt;</bpt><ept id="a80d237c-3db3-4a05-b49f-bb4b24575dc3">&lt;/title&gt;</ept> (also called <bpt id="42cc7429-e969-4155-9406-9d94330c903c">&lt;strong&gt;</bpt>sharding<ept id="42cc7429-e969-4155-9406-9d94330c903c">&lt;/strong&gt;</ept>).</target>
        </trans-unit>
        <trans-unit id="e84862a1-dc80-4379-a3ad-a328d64999b4" xml:space="preserve">
          <source>In order to make it easier to develop partitioned applications and reduce the amount of boiler-plate code required for partitioning tasks, we have added functionality in the .NET SDK that makes it easier to build applications that are scaled out across multiple partitions.</source>
          <target state="new">In order to make it easier to develop partitioned applications and reduce the amount of boiler-plate code required for partitioning tasks, we have added functionality in the .NET SDK that makes it easier to build applications that are scaled out across multiple partitions.</target>
        </trans-unit>
        <trans-unit id="9c346914-0e5f-4a89-9adf-8a330537b7b5" xml:space="preserve">
          <source>In this article, we'll take a look at the classes and interfaces in the .NET SDK and how you can use them to develop partitioned applications.</source>
          <target state="new">In this article, we'll take a look at the classes and interfaces in the .NET SDK and how you can use them to develop partitioned applications.</target>
        </trans-unit>
        <trans-unit id="f55872ce-3211-4ddc-8d99-8688ee465c3f" xml:space="preserve">
          <source>Before we dig deeper into partitioning, let's recap some basic DocumentDB concepts that relate to partitioning.</source>
          <target state="new">Before we dig deeper into partitioning, let's recap some basic DocumentDB concepts that relate to partitioning.</target>
        </trans-unit>
        <trans-unit id="47055092-efd9-48e6-97e2-a1745b390d8d" xml:space="preserve">
          <source>Every Azure DocumentDB database account consists of a set of databases, each containing multiple collections, each of which can contain stored procedures, triggers, UDFs, documents, and related attachments.</source>
          <target state="new">Every Azure DocumentDB database account consists of a set of databases, each containing multiple collections, each of which can contain stored procedures, triggers, UDFs, documents, and related attachments.</target>
        </trans-unit>
        <trans-unit id="de5dd0a6-471e-458a-ad4d-91ccb7e74cc8" xml:space="preserve">
          <source>Collections can be treated as partitions in DocumentDB and have the following properties:</source>
          <target state="new">Collections can be treated as partitions in DocumentDB and have the following properties:</target>
        </trans-unit>
        <trans-unit id="82e31573-ee9e-4cd2-b8b8-3d42a5272484" xml:space="preserve">
          <source>Collections are physical partitions, not just logical containers.</source>
          <target state="new">Collections are physical partitions, not just logical containers.</target>
        </trans-unit>
        <trans-unit id="92146039-3cdd-4694-bb2f-471c83398533" xml:space="preserve">
          <source>Hence there is a performance benefit in querying or processing documents which are located within the same collection.</source>
          <target state="new">Hence there is a performance benefit in querying or processing documents which are located within the same collection.</target>
        </trans-unit>
        <trans-unit id="a375e525-04c8-44f6-b0a8-fa4a73ad081f" xml:space="preserve">
          <source>Collections are the boundary for ACID transactions, i.e., stored procedures and triggers.</source>
          <target state="new">Collections are the boundary for ACID transactions, i.e., stored procedures and triggers.</target>
        </trans-unit>
        <trans-unit id="177e4495-b4d1-41f1-afe8-c3a558261bf3" xml:space="preserve">
          <source>Collections do not enforce a schema, so they can be used for JSON documents of the same type or different types.</source>
          <target state="new">Collections do not enforce a schema, so they can be used for JSON documents of the same type or different types.</target>
        </trans-unit>
        <trans-unit id="afd67cbe-7d6b-4b12-866b-93bbb8ef7e13" xml:space="preserve">
          <source>Starting with version <bpt id="7166756c-1a4f-47c9-83a5-f461e4d238a0">&lt;linkText&gt;</bpt>1.1.0 of the Azure DocumentDB .NET SDK<ept id="7166756c-1a4f-47c9-83a5-f461e4d238a0">&lt;/linkText&gt;</ept><bpt id="7166756c-1a4f-47c9-83a5-f461e4d238a0">&lt;title&gt;</bpt><ept id="7166756c-1a4f-47c9-83a5-f461e4d238a0">&lt;/title&gt;</ept>, you can perform document operations directly against a database.</source>
          <target state="new">Starting with version <bpt id="7166756c-1a4f-47c9-83a5-f461e4d238a0">&lt;linkText&gt;</bpt>1.1.0 of the Azure DocumentDB .NET SDK<ept id="7166756c-1a4f-47c9-83a5-f461e4d238a0">&lt;/linkText&gt;</ept><bpt id="7166756c-1a4f-47c9-83a5-f461e4d238a0">&lt;title&gt;</bpt><ept id="7166756c-1a4f-47c9-83a5-f461e4d238a0">&lt;/title&gt;</ept>, you can perform document operations directly against a database.</target>
        </trans-unit>
        <trans-unit id="9d4ade42-fca3-4f23-9f1c-58e375675439" xml:space="preserve">
          <source>Internally the <bpt id="6575d4b3-4697-411f-af13-953ba4dd9f0e">&lt;linkText&gt;</bpt>DocumentClient<ept id="6575d4b3-4697-411f-af13-953ba4dd9f0e">&lt;/linkText&gt;</ept><bpt id="6575d4b3-4697-411f-af13-953ba4dd9f0e">&lt;title&gt;</bpt><ept id="6575d4b3-4697-411f-af13-953ba4dd9f0e">&lt;/title&gt;</ept> uses the PartitionResolver that you have specified for the database to route requests to the appropriate collection.</source>
          <target state="new">Internally the <bpt id="6575d4b3-4697-411f-af13-953ba4dd9f0e">&lt;linkText&gt;</bpt>DocumentClient<ept id="6575d4b3-4697-411f-af13-953ba4dd9f0e">&lt;/linkText&gt;</ept><bpt id="6575d4b3-4697-411f-af13-953ba4dd9f0e">&lt;title&gt;</bpt><ept id="6575d4b3-4697-411f-af13-953ba4dd9f0e">&lt;/title&gt;</ept> uses the PartitionResolver that you have specified for the database to route requests to the appropriate collection.</target>
        </trans-unit>
        <trans-unit id="1ff49e17-b041-4a95-8f52-44a80385a132" xml:space="preserve">
          <source>Each PartitionResolver class is a concrete implementation of an <bpt id="0b66dce6-9596-46d8-a986-cee316f21ef3">&lt;linkText&gt;</bpt>IPartitionResolver<ept id="0b66dce6-9596-46d8-a986-cee316f21ef3">&lt;/linkText&gt;</ept><bpt id="0b66dce6-9596-46d8-a986-cee316f21ef3">&lt;title&gt;</bpt><ept id="0b66dce6-9596-46d8-a986-cee316f21ef3">&lt;/title&gt;</ept> interface that has three methods - <bpt id="8ad4c874-281c-45d9-92ac-759326d121e6">&lt;linkText&gt;</bpt>GetPartitionKey<ept id="8ad4c874-281c-45d9-92ac-759326d121e6">&lt;/linkText&gt;</ept><bpt id="8ad4c874-281c-45d9-92ac-759326d121e6">&lt;title&gt;</bpt><ept id="8ad4c874-281c-45d9-92ac-759326d121e6">&lt;/title&gt;</ept>, <bpt id="38e4654c-1a81-4e2f-a97c-0e163a1a4185">&lt;linkText&gt;</bpt>ResolveForCreate<ept id="38e4654c-1a81-4e2f-a97c-0e163a1a4185">&lt;/linkText&gt;</ept><bpt id="38e4654c-1a81-4e2f-a97c-0e163a1a4185">&lt;title&gt;</bpt><ept id="38e4654c-1a81-4e2f-a97c-0e163a1a4185">&lt;/title&gt;</ept> and <bpt id="fb26ee7a-0e23-40cb-add6-947799871e75">&lt;linkText&gt;</bpt>ResolveForRead<ept id="fb26ee7a-0e23-40cb-add6-947799871e75">&lt;/linkText&gt;</ept><bpt id="fb26ee7a-0e23-40cb-add6-947799871e75">&lt;title&gt;</bpt><ept id="fb26ee7a-0e23-40cb-add6-947799871e75">&lt;/title&gt;</ept>.</source>
          <target state="new">Each PartitionResolver class is a concrete implementation of an <bpt id="0b66dce6-9596-46d8-a986-cee316f21ef3">&lt;linkText&gt;</bpt>IPartitionResolver<ept id="0b66dce6-9596-46d8-a986-cee316f21ef3">&lt;/linkText&gt;</ept><bpt id="0b66dce6-9596-46d8-a986-cee316f21ef3">&lt;title&gt;</bpt><ept id="0b66dce6-9596-46d8-a986-cee316f21ef3">&lt;/title&gt;</ept> interface that has three methods - <bpt id="8ad4c874-281c-45d9-92ac-759326d121e6">&lt;linkText&gt;</bpt>GetPartitionKey<ept id="8ad4c874-281c-45d9-92ac-759326d121e6">&lt;/linkText&gt;</ept><bpt id="8ad4c874-281c-45d9-92ac-759326d121e6">&lt;title&gt;</bpt><ept id="8ad4c874-281c-45d9-92ac-759326d121e6">&lt;/title&gt;</ept>, <bpt id="38e4654c-1a81-4e2f-a97c-0e163a1a4185">&lt;linkText&gt;</bpt>ResolveForCreate<ept id="38e4654c-1a81-4e2f-a97c-0e163a1a4185">&lt;/linkText&gt;</ept><bpt id="38e4654c-1a81-4e2f-a97c-0e163a1a4185">&lt;title&gt;</bpt><ept id="38e4654c-1a81-4e2f-a97c-0e163a1a4185">&lt;/title&gt;</ept> and <bpt id="fb26ee7a-0e23-40cb-add6-947799871e75">&lt;linkText&gt;</bpt>ResolveForRead<ept id="fb26ee7a-0e23-40cb-add6-947799871e75">&lt;/linkText&gt;</ept><bpt id="fb26ee7a-0e23-40cb-add6-947799871e75">&lt;title&gt;</bpt><ept id="fb26ee7a-0e23-40cb-add6-947799871e75">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="c73f05cc-6db8-45b4-8e0e-9473a98856f7" xml:space="preserve">
          <source>LINQ queries and ReadFeed iterators use the ResolveForRead method internally to iterate over all the collections that match the partition key for the request.</source>
          <target state="new">LINQ queries and ReadFeed iterators use the ResolveForRead method internally to iterate over all the collections that match the partition key for the request.</target>
        </trans-unit>
        <trans-unit id="de5cf862-cf43-4400-86b7-a4c84350c014" xml:space="preserve">
          <source>Similarly, create operations use the ResolveForCreate method to route creates to the right partition.</source>
          <target state="new">Similarly, create operations use the ResolveForCreate method to route creates to the right partition.</target>
        </trans-unit>
        <trans-unit id="9faf408e-521c-49c7-9974-66c03b1d1add" xml:space="preserve">
          <source>There are no changes required for Replace, Delete and Read since they use documents, which already contain the reference to the corresponding collection.</source>
          <target state="new">There are no changes required for Replace, Delete and Read since they use documents, which already contain the reference to the corresponding collection.</target>
        </trans-unit>
        <trans-unit id="799d54b7-4213-404d-aeaf-b37a48c9ac95" xml:space="preserve">
          <source>The SDK also includes two classes that support the two canonical partitioning techniques, hashing and range lookups, via a <bpt id="0c96ef6d-4b33-45c7-86bc-dc19cf499ca1">&lt;linkText&gt;</bpt>HashPartitionResolver<ept id="0c96ef6d-4b33-45c7-86bc-dc19cf499ca1">&lt;/linkText&gt;</ept><bpt id="0c96ef6d-4b33-45c7-86bc-dc19cf499ca1">&lt;title&gt;</bpt><ept id="0c96ef6d-4b33-45c7-86bc-dc19cf499ca1">&lt;/title&gt;</ept> and a <bpt id="cf4e6eb0-e67d-4f38-a26e-e46e70258272">&lt;linkText&gt;</bpt>RangePartitionResolver<ept id="cf4e6eb0-e67d-4f38-a26e-e46e70258272">&lt;/linkText&gt;</ept><bpt id="cf4e6eb0-e67d-4f38-a26e-e46e70258272">&lt;title&gt;</bpt><ept id="cf4e6eb0-e67d-4f38-a26e-e46e70258272">&lt;/title&gt;</ept>.</source>
          <target state="new">The SDK also includes two classes that support the two canonical partitioning techniques, hashing and range lookups, via a <bpt id="0c96ef6d-4b33-45c7-86bc-dc19cf499ca1">&lt;linkText&gt;</bpt>HashPartitionResolver<ept id="0c96ef6d-4b33-45c7-86bc-dc19cf499ca1">&lt;/linkText&gt;</ept><bpt id="0c96ef6d-4b33-45c7-86bc-dc19cf499ca1">&lt;title&gt;</bpt><ept id="0c96ef6d-4b33-45c7-86bc-dc19cf499ca1">&lt;/title&gt;</ept> and a <bpt id="cf4e6eb0-e67d-4f38-a26e-e46e70258272">&lt;linkText&gt;</bpt>RangePartitionResolver<ept id="cf4e6eb0-e67d-4f38-a26e-e46e70258272">&lt;/linkText&gt;</ept><bpt id="cf4e6eb0-e67d-4f38-a26e-e46e70258272">&lt;title&gt;</bpt><ept id="cf4e6eb0-e67d-4f38-a26e-e46e70258272">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="ba1c99fc-02aa-4377-a8b3-12ecce22c8dc" xml:space="preserve">
          <source>You can use these classes to easily add partitioning logic to your application.</source>
          <target state="new">You can use these classes to easily add partitioning logic to your application.</target>
        </trans-unit>
        <trans-unit id="3659afad-87e9-44d0-9866-06e39aeb4bb0" xml:space="preserve">
          <source>Here's a snippet showing how to create a <bpt id="8a672b1c-7eae-4ee7-acd6-904fe31cd837">&lt;linkText&gt;</bpt>HashPartitionResolver<ept id="8a672b1c-7eae-4ee7-acd6-904fe31cd837">&lt;/linkText&gt;</ept><bpt id="8a672b1c-7eae-4ee7-acd6-904fe31cd837">&lt;title&gt;</bpt><ept id="8a672b1c-7eae-4ee7-acd6-904fe31cd837">&lt;/title&gt;</ept> and register with the DocumentClient for a database.</source>
          <target state="new">Here's a snippet showing how to create a <bpt id="8a672b1c-7eae-4ee7-acd6-904fe31cd837">&lt;linkText&gt;</bpt>HashPartitionResolver<ept id="8a672b1c-7eae-4ee7-acd6-904fe31cd837">&lt;/linkText&gt;</ept><bpt id="8a672b1c-7eae-4ee7-acd6-904fe31cd837">&lt;title&gt;</bpt><ept id="8a672b1c-7eae-4ee7-acd6-904fe31cd837">&lt;/title&gt;</ept> and register with the DocumentClient for a database.</target>
        </trans-unit>
        <trans-unit id="433336cf-d72b-45f5-becc-23f68eb30b06" xml:space="preserve">
          <source>Once the PartitionResolver is registered, you can perform creates and queries directly against the database as shown below.</source>
          <target state="new">Once the PartitionResolver is registered, you can perform creates and queries directly against the database as shown below.</target>
        </trans-unit>
        <trans-unit id="43bcf471-837e-414a-9dbc-638dfb39db17" xml:space="preserve">
          <source>In this example, the SDK uses the PartitionResolver to extract the UserId, hash it, and then use that value to route the create operation to the correct collection.</source>
          <target state="new">In this example, the SDK uses the PartitionResolver to extract the UserId, hash it, and then use that value to route the create operation to the correct collection.</target>
        </trans-unit>
        <trans-unit id="4c4a2701-d052-411b-97fc-ffcded31eb07" xml:space="preserve">
          <source>You can query using the <bpt id="c62c0f39-766d-41e7-868d-4a2670731cfd">&lt;linkText&gt;</bpt>CreateDocumentQuery<ept id="c62c0f39-766d-41e7-868d-4a2670731cfd">&lt;/linkText&gt;</ept><bpt id="c62c0f39-766d-41e7-868d-4a2670731cfd">&lt;title&gt;</bpt><ept id="c62c0f39-766d-41e7-868d-4a2670731cfd">&lt;/title&gt;</ept> method by passing in the database and a partition key.</source>
          <target state="new">You can query using the <bpt id="c62c0f39-766d-41e7-868d-4a2670731cfd">&lt;linkText&gt;</bpt>CreateDocumentQuery<ept id="c62c0f39-766d-41e7-868d-4a2670731cfd">&lt;/linkText&gt;</ept><bpt id="c62c0f39-766d-41e7-868d-4a2670731cfd">&lt;title&gt;</bpt><ept id="c62c0f39-766d-41e7-868d-4a2670731cfd">&lt;/title&gt;</ept> method by passing in the database and a partition key.</target>
        </trans-unit>
        <trans-unit id="ac2f47aa-bc47-49cb-9568-0adb59e9a5f4" xml:space="preserve">
          <source>The query returns a single result-set over all the collections within the database that map to the partition key.</source>
          <target state="new">The query returns a single result-set over all the collections within the database that map to the partition key.</target>
        </trans-unit>
        <trans-unit id="9269f4bf-4a1d-482c-8a9c-edd06c472cc4" xml:space="preserve">
          <source>You can also query all collections within the database and enumerate the results as show below, by skipping the partition key argument.</source>
          <target state="new">You can also query all collections within the database and enumerate the results as show below, by skipping the partition key argument.</target>
        </trans-unit>
        <trans-unit id="b0ef23e2-5eeb-403c-975a-9a04e0662c53" xml:space="preserve">
          <source>With hash partitioning, partitions are assigned based on the value of a hash function, allowing you to evenly distribute requests and data across a number of partitions.</source>
          <target state="new">With hash partitioning, partitions are assigned based on the value of a hash function, allowing you to evenly distribute requests and data across a number of partitions.</target>
        </trans-unit>
        <trans-unit id="7da9e1be-6bef-4367-8c29-d83a3f68c82f" xml:space="preserve">
          <source>This approach is commonly used to partition data produced or consumed from a large number of distinct clients, and is useful for storing user profiles, catalog items, and IoT ("Internet of Things") telemetry data.</source>
          <target state="new">This approach is commonly used to partition data produced or consumed from a large number of distinct clients, and is useful for storing user profiles, catalog items, and IoT ("Internet of Things") telemetry data.</target>
        </trans-unit>
        <trans-unit id="8f5cbda0-f8e4-40c9-ba61-a97d090e700d" xml:space="preserve">
          <source><bpt id="f02df081-2911-4724-bf8c-b3525c171304">&lt;strong&gt;</bpt>Hash Partitioning:<ept id="f02df081-2911-4724-bf8c-b3525c171304">&lt;/strong&gt;</ept>
<bpt id="bf24e3a2-3604-4a5a-a165-29af2dd94c06">&lt;linkText&gt;</bpt>Diagram illustrating how hash partitioning evenly distributes requests across partitions<ept id="bf24e3a2-3604-4a5a-a165-29af2dd94c06">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="f02df081-2911-4724-bf8c-b3525c171304">&lt;strong&gt;</bpt>Hash Partitioning:<ept id="f02df081-2911-4724-bf8c-b3525c171304">&lt;/strong&gt;</ept>
<bpt id="bf24e3a2-3604-4a5a-a165-29af2dd94c06">&lt;linkText&gt;</bpt>Diagram illustrating how hash partitioning evenly distributes requests across partitions<ept id="bf24e3a2-3604-4a5a-a165-29af2dd94c06">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9e0405c7-7a14-43c8-b166-4984ecb57426" xml:space="preserve">
          <source>A simple hash partitioning scheme across <bpt id="2f36a597-b6a4-4e8b-9494-86ee703c6886">&lt;em&gt;</bpt>N<ept id="2f36a597-b6a4-4e8b-9494-86ee703c6886">&lt;/em&gt;</ept> collections would be to take any document, compute <bpt id="0b5553d8-4ff7-4aa7-9603-38b62881b940">&lt;em&gt;</bpt>hash(d) mod N<ept id="0b5553d8-4ff7-4aa7-9603-38b62881b940">&lt;/em&gt;</ept> to determine which collection it's placed in.</source>
          <target state="new">A simple hash partitioning scheme across <bpt id="2f36a597-b6a4-4e8b-9494-86ee703c6886">&lt;em&gt;</bpt>N<ept id="2f36a597-b6a4-4e8b-9494-86ee703c6886">&lt;/em&gt;</ept> collections would be to take any document, compute <bpt id="0b5553d8-4ff7-4aa7-9603-38b62881b940">&lt;em&gt;</bpt>hash(d) mod N<ept id="0b5553d8-4ff7-4aa7-9603-38b62881b940">&lt;/em&gt;</ept> to determine which collection it's placed in.</target>
        </trans-unit>
        <trans-unit id="af40cfb2-a986-47f7-89f6-90a3f0dd137b" xml:space="preserve">
          <source>But a problem with this simple technique is that it does not work well when you add new collections, or remove collections as this would require almost all the data to get reshuffled.</source>
          <target state="new">But a problem with this simple technique is that it does not work well when you add new collections, or remove collections as this would require almost all the data to get reshuffled.</target>
        </trans-unit>
        <trans-unit id="a5af913f-2088-4266-b4b5-cdb33532ba22" xml:space="preserve">
          <source>[Consistent hashing] (http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.23.3738) is a well-known algorithm that addresses this by implementing a hashing scheme that minimizes the amount of data movement required during adding or removing collections.</source>
          <target state="new">[Consistent hashing] (http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.23.3738) is a well-known algorithm that addresses this by implementing a hashing scheme that minimizes the amount of data movement required during adding or removing collections.</target>
        </trans-unit>
        <trans-unit id="a0e9f6e6-c7d5-4301-bb27-a54c7eb44fc2" xml:space="preserve">
          <source>The <bpt id="cb458f71-c807-47ac-b9c7-b6e64ee6c237">&lt;linkText&gt;</bpt>HashPartitionResolver<ept id="cb458f71-c807-47ac-b9c7-b6e64ee6c237">&lt;/linkText&gt;</ept><bpt id="cb458f71-c807-47ac-b9c7-b6e64ee6c237">&lt;title&gt;</bpt><ept id="cb458f71-c807-47ac-b9c7-b6e64ee6c237">&lt;/title&gt;</ept> class implements logic to build a consistent hash ring over the hash function specified in the <bpt id="0bcaf8d1-846c-4794-91e1-d464b7cd0fcf">&lt;linkText&gt;</bpt>IHashGenerator<ept id="0bcaf8d1-846c-4794-91e1-d464b7cd0fcf">&lt;/linkText&gt;</ept><bpt id="0bcaf8d1-846c-4794-91e1-d464b7cd0fcf">&lt;title&gt;</bpt><ept id="0bcaf8d1-846c-4794-91e1-d464b7cd0fcf">&lt;/title&gt;</ept> interface.</source>
          <target state="new">The <bpt id="cb458f71-c807-47ac-b9c7-b6e64ee6c237">&lt;linkText&gt;</bpt>HashPartitionResolver<ept id="cb458f71-c807-47ac-b9c7-b6e64ee6c237">&lt;/linkText&gt;</ept><bpt id="cb458f71-c807-47ac-b9c7-b6e64ee6c237">&lt;title&gt;</bpt><ept id="cb458f71-c807-47ac-b9c7-b6e64ee6c237">&lt;/title&gt;</ept> class implements logic to build a consistent hash ring over the hash function specified in the <bpt id="0bcaf8d1-846c-4794-91e1-d464b7cd0fcf">&lt;linkText&gt;</bpt>IHashGenerator<ept id="0bcaf8d1-846c-4794-91e1-d464b7cd0fcf">&lt;/linkText&gt;</ept><bpt id="0bcaf8d1-846c-4794-91e1-d464b7cd0fcf">&lt;title&gt;</bpt><ept id="0bcaf8d1-846c-4794-91e1-d464b7cd0fcf">&lt;/title&gt;</ept> interface.</target>
        </trans-unit>
        <trans-unit id="3d6f2bc1-a61d-4711-9b4d-60042059aa85" xml:space="preserve">
          <source>By default, the HashPartitionResolver uses an MD5 hash function, but you can swap this out with your own hashing implementation.</source>
          <target state="new">By default, the HashPartitionResolver uses an MD5 hash function, but you can swap this out with your own hashing implementation.</target>
        </trans-unit>
        <trans-unit id="52f80899-656d-44a5-95fe-5ead2d006ece" xml:space="preserve">
          <source>The HashPartitionResolver internally creates 16 hashes or "virtual nodes" within the hash ring for each collection in order to achieve a more uniform distribution of documents across the collections, but you can vary this number to trade off data skewness with the amount of client side computation.</source>
          <target state="new">The HashPartitionResolver internally creates 16 hashes or "virtual nodes" within the hash ring for each collection in order to achieve a more uniform distribution of documents across the collections, but you can vary this number to trade off data skewness with the amount of client side computation.</target>
        </trans-unit>
        <trans-unit id="e554b755-c900-4b10-9842-e900ca929d32" xml:space="preserve">
          <source><bpt id="2ceb587e-ff4f-4e4a-92c7-21933ab870ef">&lt;strong&gt;</bpt>Consistent hashing with HashPartitionResolver:<ept id="2ceb587e-ff4f-4e4a-92c7-21933ab870ef">&lt;/strong&gt;</ept>
<bpt id="95caabf0-ffa3-4e12-a9a4-bb27dcc61551">&lt;linkText&gt;</bpt>Diagram illustrating how HashPartitionResolver creates a hash ring<ept id="95caabf0-ffa3-4e12-a9a4-bb27dcc61551">&lt;/linkText&gt;</ept></source>
          <target state="new"><bpt id="2ceb587e-ff4f-4e4a-92c7-21933ab870ef">&lt;strong&gt;</bpt>Consistent hashing with HashPartitionResolver:<ept id="2ceb587e-ff4f-4e4a-92c7-21933ab870ef">&lt;/strong&gt;</ept>
<bpt id="95caabf0-ffa3-4e12-a9a4-bb27dcc61551">&lt;linkText&gt;</bpt>Diagram illustrating how HashPartitionResolver creates a hash ring<ept id="95caabf0-ffa3-4e12-a9a4-bb27dcc61551">&lt;/linkText&gt;</ept></target>
        </trans-unit>
        <trans-unit id="453564a4-1b05-4b33-9d79-735750d709ff" xml:space="preserve">
          <source>In range partitioning, partitions are assigned based on whether the partition key is within a certain range. This is commonly used for partitioning with time stamp properties (e.g., eventTime between Apr 1, 2015 and Apr 14, 2015). The <bpt id="88cfa8af-3c2d-47c7-a224-dd448a8f22d3">&lt;linkText&gt;</bpt>RangePartitionResolver<ept id="88cfa8af-3c2d-47c7-a224-dd448a8f22d3">&lt;/linkText&gt;</ept><bpt id="88cfa8af-3c2d-47c7-a224-dd448a8f22d3">&lt;title&gt;</bpt><ept id="88cfa8af-3c2d-47c7-a224-dd448a8f22d3">&lt;/title&gt;</ept> class helps you maintain a mapping between a Range\&lt;T\&gt; and collection self-link. </source>
          <target state="new">In range partitioning, partitions are assigned based on whether the partition key is within a certain range. This is commonly used for partitioning with time stamp properties (e.g., eventTime between Apr 1, 2015 and Apr 14, 2015). The <bpt id="88cfa8af-3c2d-47c7-a224-dd448a8f22d3">&lt;linkText&gt;</bpt>RangePartitionResolver<ept id="88cfa8af-3c2d-47c7-a224-dd448a8f22d3">&lt;/linkText&gt;</ept><bpt id="88cfa8af-3c2d-47c7-a224-dd448a8f22d3">&lt;title&gt;</bpt><ept id="88cfa8af-3c2d-47c7-a224-dd448a8f22d3">&lt;/title&gt;</ept> class helps you maintain a mapping between a Range\&lt;T\&gt; and collection self-link. </target>
        </trans-unit>
        <trans-unit id="a90e3207-5472-4e6a-8cd8-ceb5bc81cbb5" xml:space="preserve">
          <source><bpt id="d858a30e-272a-44f4-a1fb-beb3230c64be">&lt;linkText&gt;</bpt>Range\&lt;T\&gt;<ept id="d858a30e-272a-44f4-a1fb-beb3230c64be">&lt;/linkText&gt;</ept><bpt id="d858a30e-272a-44f4-a1fb-beb3230c64be">&lt;title&gt;</bpt><ept id="d858a30e-272a-44f4-a1fb-beb3230c64be">&lt;/title&gt;</ept> is a simple class that manages ranges of any types that implement IComparable\&lt;T\&gt; and IEquatable\&lt;T\&gt; like strings or numbers. For reads and creates, you can pass in any arbitrary range, and the resolver identifies all the candidate collections by identifying the ranges of the partitions that intersect with the requested range. This functionality can be useful when performing range queries against time series data.</source>
          <target state="new"><bpt id="d858a30e-272a-44f4-a1fb-beb3230c64be">&lt;linkText&gt;</bpt>Range\&lt;T\&gt;<ept id="d858a30e-272a-44f4-a1fb-beb3230c64be">&lt;/linkText&gt;</ept><bpt id="d858a30e-272a-44f4-a1fb-beb3230c64be">&lt;title&gt;</bpt><ept id="d858a30e-272a-44f4-a1fb-beb3230c64be">&lt;/title&gt;</ept> is a simple class that manages ranges of any types that implement IComparable\&lt;T\&gt; and IEquatable\&lt;T\&gt; like strings or numbers. For reads and creates, you can pass in any arbitrary range, and the resolver identifies all the candidate collections by identifying the ranges of the partitions that intersect with the requested range. This functionality can be useful when performing range queries against time series data.</target>
        </trans-unit>
        <trans-unit id="23f15a84-c7fc-41a6-acb3-2f0e066d2ea4" xml:space="preserve">
          <source><bpt id="6e67977a-093c-4832-a5e9-f4b958c81f19">&lt;strong&gt;</bpt>Range Partitioning:<ept id="6e67977a-093c-4832-a5e9-f4b958c81f19">&lt;/strong&gt;</ept>  </source>
          <target state="new"><bpt id="6e67977a-093c-4832-a5e9-f4b958c81f19">&lt;strong&gt;</bpt>Range Partitioning:<ept id="6e67977a-093c-4832-a5e9-f4b958c81f19">&lt;/strong&gt;</ept>  </target>
        </trans-unit>
        <trans-unit id="4312e6d6-fb5a-4c3a-826f-51a81d704009" xml:space="preserve">
          <source><bpt id="4fc13843-bc33-45ef-9c27-d8dc8fbf1b0e">&lt;linkText&gt;</bpt> Diagram illustrating how range partitioning evenly distributes requests across partitions<ept id="4fc13843-bc33-45ef-9c27-d8dc8fbf1b0e">&lt;/linkText&gt;</ept>  </source>
          <target state="new"><bpt id="4fc13843-bc33-45ef-9c27-d8dc8fbf1b0e">&lt;linkText&gt;</bpt> Diagram illustrating how range partitioning evenly distributes requests across partitions<ept id="4fc13843-bc33-45ef-9c27-d8dc8fbf1b0e">&lt;/linkText&gt;</ept>  </target>
        </trans-unit>
        <trans-unit id="059c51da-1e81-4487-9539-1675904978f4" xml:space="preserve">
          <source>A special case of range partitioning is when the range is just a single discrete value, sometimes called "lookup partitioning".</source>
          <target state="new">A special case of range partitioning is when the range is just a single discrete value, sometimes called "lookup partitioning".</target>
        </trans-unit>
        <trans-unit id="629ee278-5c20-4191-9a93-26ec694bdacf" xml:space="preserve">
          <source>This is commonly used for partitioning by region (e.g. the partition for Scandinavia contains Norway, Denmark, and Sweden) or for partitioning tenants in a multi-tenant application.</source>
          <target state="new">This is commonly used for partitioning by region (e.g. the partition for Scandinavia contains Norway, Denmark, and Sweden) or for partitioning tenants in a multi-tenant application.</target>
        </trans-unit>
        <trans-unit id="0d472979-8b4b-445c-be74-81965aba5eb2" xml:space="preserve">
          <source>Take a look at the  <bpt id="26357eb8-0626-41c3-aea7-5a63f644ac5c">&lt;linkText&gt;</bpt>DocumentDB Partitioning Samples Github project<ept id="26357eb8-0626-41c3-aea7-5a63f644ac5c">&lt;/linkText&gt;</ept><bpt id="26357eb8-0626-41c3-aea7-5a63f644ac5c">&lt;title&gt;</bpt><ept id="26357eb8-0626-41c3-aea7-5a63f644ac5c">&lt;/title&gt;</ept> containing code snippets on how to use these PartitionResolvers and extend them to implement your own resolvers to fit specific use cases, like the following: </source>
          <target state="new">Take a look at the  <bpt id="26357eb8-0626-41c3-aea7-5a63f644ac5c">&lt;linkText&gt;</bpt>DocumentDB Partitioning Samples Github project<ept id="26357eb8-0626-41c3-aea7-5a63f644ac5c">&lt;/linkText&gt;</ept><bpt id="26357eb8-0626-41c3-aea7-5a63f644ac5c">&lt;title&gt;</bpt><ept id="26357eb8-0626-41c3-aea7-5a63f644ac5c">&lt;/title&gt;</ept> containing code snippets on how to use these PartitionResolvers and extend them to implement your own resolvers to fit specific use cases, like the following: </target>
        </trans-unit>
        <trans-unit id="e358c52c-16e7-46f1-9338-e73a8cc60d11" xml:space="preserve">
          <source>How to specify an arbitrary lambda expression for GetPartitionKey and use it to implement compound partitioning keys or to partition different types of objects differently.</source>
          <target state="new">How to specify an arbitrary lambda expression for GetPartitionKey and use it to implement compound partitioning keys or to partition different types of objects differently.</target>
        </trans-unit>
        <trans-unit id="b71a67b5-ce1e-46a4-b4a0-775a440331d4" xml:space="preserve">
          <source>How to create a simple <bpt id="6403b324-4ef9-4667-be21-623677790be9">&lt;linkText&gt;</bpt>LookupPartitionResolver<ept id="6403b324-4ef9-4667-be21-623677790be9">&lt;/linkText&gt;</ept><bpt id="6403b324-4ef9-4667-be21-623677790be9">&lt;title&gt;</bpt><ept id="6403b324-4ef9-4667-be21-623677790be9">&lt;/title&gt;</ept> that uses a manual lookup table to perform partitioning.</source>
          <target state="new">How to create a simple <bpt id="6403b324-4ef9-4667-be21-623677790be9">&lt;linkText&gt;</bpt>LookupPartitionResolver<ept id="6403b324-4ef9-4667-be21-623677790be9">&lt;/linkText&gt;</ept><bpt id="6403b324-4ef9-4667-be21-623677790be9">&lt;title&gt;</bpt><ept id="6403b324-4ef9-4667-be21-623677790be9">&lt;/title&gt;</ept> that uses a manual lookup table to perform partitioning.</target>
        </trans-unit>
        <trans-unit id="99e388ed-f22b-4f5f-b3bd-1dea83d6dbf5" xml:space="preserve">
          <source>This pattern is commonly used for partitioning based on discrete values like region, tenant ID or application name.</source>
          <target state="new">This pattern is commonly used for partitioning based on discrete values like region, tenant ID or application name.</target>
        </trans-unit>
        <trans-unit id="9d931563-9333-4a0f-a0d2-ca661d9be1bf" xml:space="preserve">
          <source>How to create a <bpt id="f2a3978e-9f1a-4f1a-8650-2f7999b009c7">&lt;linkText&gt;</bpt>ManagedPartitionResolver<ept id="f2a3978e-9f1a-4f1a-8650-2f7999b009c7">&lt;/linkText&gt;</ept><bpt id="f2a3978e-9f1a-4f1a-8650-2f7999b009c7">&lt;title&gt;</bpt><ept id="f2a3978e-9f1a-4f1a-8650-2f7999b009c7">&lt;/title&gt;</ept> that creates collections automatically based on a template that defines a naming scheme, IndexingPolicy and stored procedures that need to be registered against new collections.</source>
          <target state="new">How to create a <bpt id="f2a3978e-9f1a-4f1a-8650-2f7999b009c7">&lt;linkText&gt;</bpt>ManagedPartitionResolver<ept id="f2a3978e-9f1a-4f1a-8650-2f7999b009c7">&lt;/linkText&gt;</ept><bpt id="f2a3978e-9f1a-4f1a-8650-2f7999b009c7">&lt;title&gt;</bpt><ept id="f2a3978e-9f1a-4f1a-8650-2f7999b009c7">&lt;/title&gt;</ept> that creates collections automatically based on a template that defines a naming scheme, IndexingPolicy and stored procedures that need to be registered against new collections.</target>
        </trans-unit>
        <trans-unit id="1907a34d-71bb-4f5b-8144-45576a768391" xml:space="preserve">
          <source>How to create a scheme-less <bpt id="f924ce64-b67b-48b1-8fe5-a39e28d02e7b">&lt;linkText&gt;</bpt>SpilloverPartitionResolver<ept id="f924ce64-b67b-48b1-8fe5-a39e28d02e7b">&lt;/linkText&gt;</ept><bpt id="f924ce64-b67b-48b1-8fe5-a39e28d02e7b">&lt;title&gt;</bpt><ept id="f924ce64-b67b-48b1-8fe5-a39e28d02e7b">&lt;/title&gt;</ept> that simply creates new collections as the old collections fill up.</source>
          <target state="new">How to create a scheme-less <bpt id="f924ce64-b67b-48b1-8fe5-a39e28d02e7b">&lt;linkText&gt;</bpt>SpilloverPartitionResolver<ept id="f924ce64-b67b-48b1-8fe5-a39e28d02e7b">&lt;/linkText&gt;</ept><bpt id="f924ce64-b67b-48b1-8fe5-a39e28d02e7b">&lt;title&gt;</bpt><ept id="f924ce64-b67b-48b1-8fe5-a39e28d02e7b">&lt;/title&gt;</ept> that simply creates new collections as the old collections fill up.</target>
        </trans-unit>
        <trans-unit id="1639fd1a-ce34-4455-afd1-de111163c6a2" xml:space="preserve">
          <source>How to serialize and deserialize your PartitionResolver state as JSON, so that you can share between processes and across shutdowns.</source>
          <target state="new">How to serialize and deserialize your PartitionResolver state as JSON, so that you can share between processes and across shutdowns.</target>
        </trans-unit>
        <trans-unit id="97ff55c1-ca2d-46e1-a758-66d713712701" xml:space="preserve">
          <source>You can persist these in config files, or even in a DocumentDB collection.</source>
          <target state="new">You can persist these in config files, or even in a DocumentDB collection.</target>
        </trans-unit>
        <trans-unit id="d6c10d13-b179-4f69-91a7-b36e347001c4" xml:space="preserve">
          <source>A <bpt id="1eb30269-6578-4507-ba34-3267d14b3536">&lt;linkText&gt;</bpt>DocumentClientHashPartitioningManager<ept id="1eb30269-6578-4507-ba34-3267d14b3536">&lt;/linkText&gt;</ept><bpt id="1eb30269-6578-4507-ba34-3267d14b3536">&lt;title&gt;</bpt><ept id="1eb30269-6578-4507-ba34-3267d14b3536">&lt;/title&gt;</ept> class for dynamically adding and removing partitions to a database partitioned based on consistent hashing.</source>
          <target state="new">A <bpt id="1eb30269-6578-4507-ba34-3267d14b3536">&lt;linkText&gt;</bpt>DocumentClientHashPartitioningManager<ept id="1eb30269-6578-4507-ba34-3267d14b3536">&lt;/linkText&gt;</ept><bpt id="1eb30269-6578-4507-ba34-3267d14b3536">&lt;title&gt;</bpt><ept id="1eb30269-6578-4507-ba34-3267d14b3536">&lt;/title&gt;</ept> class for dynamically adding and removing partitions to a database partitioned based on consistent hashing.</target>
        </trans-unit>
        <trans-unit id="d4e0293c-9b76-4c7a-814d-75f74e10d0b1" xml:space="preserve">
          <source>Internally it uses a <bpt id="2a6042d8-180a-4df1-9ae0-76433e538c72">&lt;linkText&gt;</bpt>TransitionHashPartitionResolver<ept id="2a6042d8-180a-4df1-9ae0-76433e538c72">&lt;/linkText&gt;</ept><bpt id="2a6042d8-180a-4df1-9ae0-76433e538c72">&lt;title&gt;</bpt><ept id="2a6042d8-180a-4df1-9ae0-76433e538c72">&lt;/title&gt;</ept> to route reads and writes during migration using one of four modes - read from the old partitioning scheme (ReadCurrent), the new one (ReadNext), merge results from both (ReadBoth) or be unavailable during migration (None).</source>
          <target state="new">Internally it uses a <bpt id="2a6042d8-180a-4df1-9ae0-76433e538c72">&lt;linkText&gt;</bpt>TransitionHashPartitionResolver<ept id="2a6042d8-180a-4df1-9ae0-76433e538c72">&lt;/linkText&gt;</ept><bpt id="2a6042d8-180a-4df1-9ae0-76433e538c72">&lt;title&gt;</bpt><ept id="2a6042d8-180a-4df1-9ae0-76433e538c72">&lt;/title&gt;</ept> to route reads and writes during migration using one of four modes - read from the old partitioning scheme (ReadCurrent), the new one (ReadNext), merge results from both (ReadBoth) or be unavailable during migration (None).</target>
        </trans-unit>
        <trans-unit id="c5f640ce-c7c9-4d61-8f8d-27f7a58a4335" xml:space="preserve">
          <source>The samples are open source and we encourage you to submit pull requests with contributions that could benefit other DocumentDB developers.</source>
          <target state="new">The samples are open source and we encourage you to submit pull requests with contributions that could benefit other DocumentDB developers.</target>
        </trans-unit>
        <trans-unit id="f8e8e3aa-83b2-4eb3-9b54-30636a8b756f" xml:space="preserve">
          <source>Please refer to the <bpt id="cd5cad8f-2196-4991-b33b-ad07fc4f5efa">&lt;linkText&gt;</bpt>Contribution guidelines<ept id="cd5cad8f-2196-4991-b33b-ad07fc4f5efa">&lt;/linkText&gt;</ept><bpt id="cd5cad8f-2196-4991-b33b-ad07fc4f5efa">&lt;title&gt;</bpt><ept id="cd5cad8f-2196-4991-b33b-ad07fc4f5efa">&lt;/title&gt;</ept> for guidance on how to contribute.</source>
          <target state="new">Please refer to the <bpt id="cd5cad8f-2196-4991-b33b-ad07fc4f5efa">&lt;linkText&gt;</bpt>Contribution guidelines<ept id="cd5cad8f-2196-4991-b33b-ad07fc4f5efa">&lt;/linkText&gt;</ept><bpt id="cd5cad8f-2196-4991-b33b-ad07fc4f5efa">&lt;title&gt;</bpt><ept id="cd5cad8f-2196-4991-b33b-ad07fc4f5efa">&lt;/title&gt;</ept> for guidance on how to contribute.</target>
        </trans-unit>
        <trans-unit id="e3fe22fe-0d79-439a-9dc5-a7c6b47ab334" xml:space="preserve">
          <source>Collection creates are rate-limited by DocumentDB, so some of the sample methods shown here might take a few minutes to complete.</source>
          <target state="new">Collection creates are rate-limited by DocumentDB, so some of the sample methods shown here might take a few minutes to complete.</target>
        </trans-unit>
        <trans-unit id="829df9aa-cc10-40cd-8ff1-64cf1e7a9e1e" xml:space="preserve">
          <source><bpt id="9e283d8d-d752-4b67-b9c6-6f6f267fd818">&lt;strong&gt;</bpt>Why does DocumentDB support client-side partitioning vs. server-side partitioning?<ept id="9e283d8d-d752-4b67-b9c6-6f6f267fd818">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="9e283d8d-d752-4b67-b9c6-6f6f267fd818">&lt;strong&gt;</bpt>Why does DocumentDB support client-side partitioning vs. server-side partitioning?<ept id="9e283d8d-d752-4b67-b9c6-6f6f267fd818">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6c256264-d132-40b8-88b8-63bac967540f" xml:space="preserve">
          <source>DocumentDB supports client-side partitioning for a couple of reasons:</source>
          <target state="new">DocumentDB supports client-side partitioning for a couple of reasons:</target>
        </trans-unit>
        <trans-unit id="724dc735-5292-4c0f-84fc-68a73831780d" xml:space="preserve">
          <source>It is really difficult to abstract away the concept of a collection from developers without compromising one of the three among consistent indexing/querying, high availability and ACID transaction guarantees.</source>
          <target state="new">It is really difficult to abstract away the concept of a collection from developers without compromising one of the three among consistent indexing/querying, high availability and ACID transaction guarantees.</target>
        </trans-unit>
        <trans-unit id="b9609e98-f706-407c-b340-b8144ba41a12" xml:space="preserve">
          <source>Document databases often require flexibility in terms of defining partitioning strategies, which a server-side approach might not be able to accommodate.</source>
          <target state="new">Document databases often require flexibility in terms of defining partitioning strategies, which a server-side approach might not be able to accommodate.</target>
        </trans-unit>
        <trans-unit id="216c62e3-bcc7-4afe-b9ad-18837c62cc90" xml:space="preserve">
          <source><bpt id="4a45733d-a24d-4b68-86dd-76da6d713566">&lt;strong&gt;</bpt>Why is partitioning not supported in other platforms (Node.js, Java, or Python)?<ept id="4a45733d-a24d-4b68-86dd-76da6d713566">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="4a45733d-a24d-4b68-86dd-76da6d713566">&lt;strong&gt;</bpt>Why is partitioning not supported in other platforms (Node.js, Java, or Python)?<ept id="4a45733d-a24d-4b68-86dd-76da6d713566">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d73370ac-d4ef-4c97-ac52-fe499ec9d9f0" xml:space="preserve">
          <source>We will gradually rollout partitioning support to other platforms based on feedback from the .NET SDK customers.</source>
          <target state="new">We will gradually rollout partitioning support to other platforms based on feedback from the .NET SDK customers.</target>
        </trans-unit>
        <trans-unit id="ff23db53-e943-4492-a401-f396012c964d" xml:space="preserve">
          <source><bpt id="ef6a4f9b-955e-479b-93ae-36183d3cd9b2">&lt;strong&gt;</bpt>How do I add or remove a collection to my partitioning scheme?<ept id="ef6a4f9b-955e-479b-93ae-36183d3cd9b2">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="ef6a4f9b-955e-479b-93ae-36183d3cd9b2">&lt;strong&gt;</bpt>How do I add or remove a collection to my partitioning scheme?<ept id="ef6a4f9b-955e-479b-93ae-36183d3cd9b2">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="359d4eea-564d-440e-9abe-343bf6fcd23e" xml:space="preserve">
          <source>Take a look at the implementation of DocumentClientHashPartitioningManager in the samples project for an example of how you can implement repartitioning.</source>
          <target state="new">Take a look at the implementation of DocumentClientHashPartitioningManager in the samples project for an example of how you can implement repartitioning.</target>
        </trans-unit>
        <trans-unit id="8a9b1e5b-8bdb-4bce-b4ce-48dec8c44679" xml:space="preserve">
          <source><bpt id="7d2381c4-678b-4cc2-af5c-0f605ce35da0">&lt;strong&gt;</bpt>How do I persist or share my partitioning configuration with other clients?<ept id="7d2381c4-678b-4cc2-af5c-0f605ce35da0">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="7d2381c4-678b-4cc2-af5c-0f605ce35da0">&lt;strong&gt;</bpt>How do I persist or share my partitioning configuration with other clients?<ept id="7d2381c4-678b-4cc2-af5c-0f605ce35da0">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b8c84d25-ca74-434e-8812-2e4a33ebf8fe" xml:space="preserve">
          <source>You can serialize the partitioner state as JSON and store in configuration files, or even within DocumentDB collections.</source>
          <target state="new">You can serialize the partitioner state as JSON and store in configuration files, or even within DocumentDB collections.</target>
        </trans-unit>
        <trans-unit id="f3504af8-7987-44e4-bd3e-5156f2287291" xml:space="preserve">
          <source>Take a look at the RunSerializeDeserializeSample method in the samples project for an example.</source>
          <target state="new">Take a look at the RunSerializeDeserializeSample method in the samples project for an example.</target>
        </trans-unit>
        <trans-unit id="22b777bb-4f7e-4ae4-bcf9-770bff88374d" xml:space="preserve">
          <source><bpt id="fe659581-e3e0-4536-b331-ec83115c8bff">&lt;strong&gt;</bpt>How do I chain various partitioning techniques?<ept id="fe659581-e3e0-4536-b331-ec83115c8bff">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="fe659581-e3e0-4536-b331-ec83115c8bff">&lt;strong&gt;</bpt>How do I chain various partitioning techniques?<ept id="fe659581-e3e0-4536-b331-ec83115c8bff">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="7f03bd2e-2fdb-474d-9001-2229a2b8865b" xml:space="preserve">
          <source>You can chain PartitionResolvers by implementing your own IPartitionResolver that internally uses one or more existing resolvers.</source>
          <target state="new">You can chain PartitionResolvers by implementing your own IPartitionResolver that internally uses one or more existing resolvers.</target>
        </trans-unit>
        <trans-unit id="1cc43222-b037-4dd3-a99c-3fa26e510f20" xml:space="preserve">
          <source>Take a look at TransitionHashPartitionResolver in the samples project for an example.</source>
          <target state="new">Take a look at TransitionHashPartitionResolver in the samples project for an example.</target>
        </trans-unit>
        <trans-unit id="2e206a5e-f72e-4393-84ac-bb691ca0c227" xml:space="preserve">
          <source><bpt id="24ad849a-1219-4708-bf6d-c032ae49bca1">&lt;linkText&gt;</bpt>Partitioning code samples on Github<ept id="24ad849a-1219-4708-bf6d-c032ae49bca1">&lt;/linkText&gt;</ept><bpt id="24ad849a-1219-4708-bf6d-c032ae49bca1">&lt;title&gt;</bpt><ept id="24ad849a-1219-4708-bf6d-c032ae49bca1">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="24ad849a-1219-4708-bf6d-c032ae49bca1">&lt;linkText&gt;</bpt>Partitioning code samples on Github<ept id="24ad849a-1219-4708-bf6d-c032ae49bca1">&lt;/linkText&gt;</ept><bpt id="24ad849a-1219-4708-bf6d-c032ae49bca1">&lt;title&gt;</bpt><ept id="24ad849a-1219-4708-bf6d-c032ae49bca1">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="72c7e881-bd5c-4668-bbb5-9978128cea84" xml:space="preserve">
          <source><bpt id="77ead07a-c0a9-4662-a6f4-e9539382f02a">&lt;linkText&gt;</bpt>Partitioning data with DocumentDB concepts<ept id="77ead07a-c0a9-4662-a6f4-e9539382f02a">&lt;/linkText&gt;</ept><bpt id="77ead07a-c0a9-4662-a6f4-e9539382f02a">&lt;title&gt;</bpt><ept id="77ead07a-c0a9-4662-a6f4-e9539382f02a">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="77ead07a-c0a9-4662-a6f4-e9539382f02a">&lt;linkText&gt;</bpt>Partitioning data with DocumentDB concepts<ept id="77ead07a-c0a9-4662-a6f4-e9539382f02a">&lt;/linkText&gt;</ept><bpt id="77ead07a-c0a9-4662-a6f4-e9539382f02a">&lt;title&gt;</bpt><ept id="77ead07a-c0a9-4662-a6f4-e9539382f02a">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="00db423a-b1bc-4f95-bfb0-2358c9b5627d" xml:space="preserve">
          <source><bpt id="349137c5-194a-4d96-888f-6be8d0a70c8b">&lt;linkText&gt;</bpt>DocumentDB collections and performance levels<ept id="349137c5-194a-4d96-888f-6be8d0a70c8b">&lt;/linkText&gt;</ept><bpt id="349137c5-194a-4d96-888f-6be8d0a70c8b">&lt;title&gt;</bpt><ept id="349137c5-194a-4d96-888f-6be8d0a70c8b">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="349137c5-194a-4d96-888f-6be8d0a70c8b">&lt;linkText&gt;</bpt>DocumentDB collections and performance levels<ept id="349137c5-194a-4d96-888f-6be8d0a70c8b">&lt;/linkText&gt;</ept><bpt id="349137c5-194a-4d96-888f-6be8d0a70c8b">&lt;title&gt;</bpt><ept id="349137c5-194a-4d96-888f-6be8d0a70c8b">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="330a324e-c880-4cb4-95bd-0d78d18cb912" xml:space="preserve">
          <source><bpt id="dddf6468-659b-423d-b590-5cabebc1217f">&lt;linkText&gt;</bpt>DocumentDB .NET SDK Documentation at MSDN<ept id="dddf6468-659b-423d-b590-5cabebc1217f">&lt;/linkText&gt;</ept><bpt id="dddf6468-659b-423d-b590-5cabebc1217f">&lt;title&gt;</bpt><ept id="dddf6468-659b-423d-b590-5cabebc1217f">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="dddf6468-659b-423d-b590-5cabebc1217f">&lt;linkText&gt;</bpt>DocumentDB .NET SDK Documentation at MSDN<ept id="dddf6468-659b-423d-b590-5cabebc1217f">&lt;/linkText&gt;</ept><bpt id="dddf6468-659b-423d-b590-5cabebc1217f">&lt;title&gt;</bpt><ept id="dddf6468-659b-423d-b590-5cabebc1217f">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="2503b57f-e1ea-487e-8751-d13dcb8f729d" xml:space="preserve">
          <source><bpt id="534f2e31-9c2b-4fa2-94c0-e9bd0b3c24f0">&lt;linkText&gt;</bpt>DocumentDB .NET samples<ept id="534f2e31-9c2b-4fa2-94c0-e9bd0b3c24f0">&lt;/linkText&gt;</ept><bpt id="534f2e31-9c2b-4fa2-94c0-e9bd0b3c24f0">&lt;title&gt;</bpt><ept id="534f2e31-9c2b-4fa2-94c0-e9bd0b3c24f0">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="534f2e31-9c2b-4fa2-94c0-e9bd0b3c24f0">&lt;linkText&gt;</bpt>DocumentDB .NET samples<ept id="534f2e31-9c2b-4fa2-94c0-e9bd0b3c24f0">&lt;/linkText&gt;</ept><bpt id="534f2e31-9c2b-4fa2-94c0-e9bd0b3c24f0">&lt;title&gt;</bpt><ept id="534f2e31-9c2b-4fa2-94c0-e9bd0b3c24f0">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ba091690-9c3b-4ece-8226-6d755cdb084e" xml:space="preserve">
          <source><bpt id="d288d5f0-b195-42e7-b2f6-ffd91c130fb7">&lt;linkText&gt;</bpt>DocumentDB Limits<ept id="d288d5f0-b195-42e7-b2f6-ffd91c130fb7">&lt;/linkText&gt;</ept><bpt id="d288d5f0-b195-42e7-b2f6-ffd91c130fb7">&lt;title&gt;</bpt><ept id="d288d5f0-b195-42e7-b2f6-ffd91c130fb7">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="d288d5f0-b195-42e7-b2f6-ffd91c130fb7">&lt;linkText&gt;</bpt>DocumentDB Limits<ept id="d288d5f0-b195-42e7-b2f6-ffd91c130fb7">&lt;/linkText&gt;</ept><bpt id="d288d5f0-b195-42e7-b2f6-ffd91c130fb7">&lt;title&gt;</bpt><ept id="d288d5f0-b195-42e7-b2f6-ffd91c130fb7">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="93dfb025-2290-42ac-b479-f60f9c6e6b06" xml:space="preserve">
          <source><bpt id="68f7f8ca-e3b8-4ca7-887e-f7b31a9a6cc7">&lt;linkText&gt;</bpt>DocumentDB Blog on Performance Tips<ept id="68f7f8ca-e3b8-4ca7-887e-f7b31a9a6cc7">&lt;/linkText&gt;</ept><bpt id="68f7f8ca-e3b8-4ca7-887e-f7b31a9a6cc7">&lt;title&gt;</bpt><ept id="68f7f8ca-e3b8-4ca7-887e-f7b31a9a6cc7">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="68f7f8ca-e3b8-4ca7-887e-f7b31a9a6cc7">&lt;linkText&gt;</bpt>DocumentDB Blog on Performance Tips<ept id="68f7f8ca-e3b8-4ca7-887e-f7b31a9a6cc7">&lt;/linkText&gt;</ept><bpt id="68f7f8ca-e3b8-4ca7-887e-f7b31a9a6cc7">&lt;title&gt;</bpt><ept id="68f7f8ca-e3b8-4ca7-887e-f7b31a9a6cc7">&lt;/title&gt;</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>