<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="d9db411d-1b5d-4eb5-9aa6-c13a2b2204bd" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="d9db411d-1b5d-4eb5-9aa6-c13a2b2204bd" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="60389354-b64f-49b4-a6e1-fa3ea9f02410">
        <trans-unit id="205b1555-d8fc-4068-9b7d-fac7a335e3b7" xml:space="preserve">
          <source>Working with Geospatial data in Azure DocumentDB | Microsoft Azure</source>
          <target state="new">Working with Geospatial data in Azure DocumentDB | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="faa9fee6-4edd-4218-ab49-3bee3d82952f" xml:space="preserve">
          <source>Understand how to create, index and query spatial objects with Azure DocumentDB.</source>
          <target state="new">Understand how to create, index and query spatial objects with Azure DocumentDB.</target>
        </trans-unit>
        <trans-unit id="bbfc2963-ec19-4560-ab31-1ba74ac3b5ad" xml:space="preserve">
          <source>This article is an introduction to the geospatial functionality in <bpt id="74d5fd82-fec3-4450-b9ca-8301375ae970">&lt;linkText&gt;</bpt>Azure DocumentDB<ept id="74d5fd82-fec3-4450-b9ca-8301375ae970">&lt;/linkText&gt;</ept><bpt id="74d5fd82-fec3-4450-b9ca-8301375ae970">&lt;title&gt;</bpt><ept id="74d5fd82-fec3-4450-b9ca-8301375ae970">&lt;/title&gt;</ept>.</source>
          <target state="new">This article is an introduction to the geospatial functionality in <bpt id="74d5fd82-fec3-4450-b9ca-8301375ae970">&lt;linkText&gt;</bpt>Azure DocumentDB<ept id="74d5fd82-fec3-4450-b9ca-8301375ae970">&lt;/linkText&gt;</ept><bpt id="74d5fd82-fec3-4450-b9ca-8301375ae970">&lt;title&gt;</bpt><ept id="74d5fd82-fec3-4450-b9ca-8301375ae970">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="1c8af91d-7bb5-4dd2-8026-8944d3b5fe0a" xml:space="preserve">
          <source>After reading this, you will be able to answer the following questions:</source>
          <target state="new">After reading this, you will be able to answer the following questions:</target>
        </trans-unit>
        <trans-unit id="8f360045-eb40-476b-8621-5cc2fd3f4c4c" xml:space="preserve">
          <source>How do I store spatial data in Azure DocumentDB?</source>
          <target state="new">How do I store spatial data in Azure DocumentDB?</target>
        </trans-unit>
        <trans-unit id="f5b9e461-852d-45a9-a753-0e1f6a5c7bef" xml:space="preserve">
          <source>How can I query geospatial data in Azure DocumentDB in SQL and LINQ?</source>
          <target state="new">How can I query geospatial data in Azure DocumentDB in SQL and LINQ?</target>
        </trans-unit>
        <trans-unit id="e6fa4e60-f843-42a2-bb85-74ea5748676b" xml:space="preserve">
          <source>How do I enable or disable spatial indexing in DocumentDB?</source>
          <target state="new">How do I enable or disable spatial indexing in DocumentDB?</target>
        </trans-unit>
        <trans-unit id="98bbce24-974e-47f9-8850-8103588c76ce" xml:space="preserve">
          <source>Please see this <bpt id="403465e2-d3ff-47f8-9527-7990a7923939">&lt;linkText&gt;</bpt>Github project<ept id="403465e2-d3ff-47f8-9527-7990a7923939">&lt;/linkText&gt;</ept><bpt id="403465e2-d3ff-47f8-9527-7990a7923939">&lt;title&gt;</bpt><ept id="403465e2-d3ff-47f8-9527-7990a7923939">&lt;/title&gt;</ept> for code samples.</source>
          <target state="new">Please see this <bpt id="403465e2-d3ff-47f8-9527-7990a7923939">&lt;linkText&gt;</bpt>Github project<ept id="403465e2-d3ff-47f8-9527-7990a7923939">&lt;/linkText&gt;</ept><bpt id="403465e2-d3ff-47f8-9527-7990a7923939">&lt;title&gt;</bpt><ept id="403465e2-d3ff-47f8-9527-7990a7923939">&lt;/title&gt;</ept> for code samples.</target>
        </trans-unit>
        <trans-unit id="2623e633-509b-4c1d-b64d-1484c1ab8fa6" xml:space="preserve">
          <source>Spatial data describes the position and shape of objects in space.</source>
          <target state="new">Spatial data describes the position and shape of objects in space.</target>
        </trans-unit>
        <trans-unit id="d50201a4-961e-4e9c-bda7-407bad5f1d1a" xml:space="preserve">
          <source>In most applications, these correspond to objects on the earth, i.e. geospatial data.</source>
          <target state="new">In most applications, these correspond to objects on the earth, i.e. geospatial data.</target>
        </trans-unit>
        <trans-unit id="f0dd7f43-1227-4fda-ab81-60c3578ffa44" xml:space="preserve">
          <source>Spatial data can be used to represent the location of a person, a place of interest, or the boundary of a city, or a lake.</source>
          <target state="new">Spatial data can be used to represent the location of a person, a place of interest, or the boundary of a city, or a lake.</target>
        </trans-unit>
        <trans-unit id="42aca5cd-c60d-4f44-8607-be9c892b3f69" xml:space="preserve">
          <source>Common use cases often involve proximity queries, for e.g., "find all coffee shops near my current location".</source>
          <target state="new">Common use cases often involve proximity queries, for e.g., "find all coffee shops near my current location".</target>
        </trans-unit>
        <trans-unit id="8f3232ad-d6d5-47f4-9a1c-ce47d2a4212e" xml:space="preserve">
          <source>DocumentDB supports indexing and querying of geospatial data that's represented using the <bpt id="f4ab5e8b-c8e6-4d29-8422-e226947ed22a">&lt;linkText&gt;</bpt>GeoJSON specification<ept id="f4ab5e8b-c8e6-4d29-8422-e226947ed22a">&lt;/linkText&gt;</ept><bpt id="f4ab5e8b-c8e6-4d29-8422-e226947ed22a">&lt;title&gt;</bpt><ept id="f4ab5e8b-c8e6-4d29-8422-e226947ed22a">&lt;/title&gt;</ept>.</source>
          <target state="new">DocumentDB supports indexing and querying of geospatial data that's represented using the <bpt id="f4ab5e8b-c8e6-4d29-8422-e226947ed22a">&lt;linkText&gt;</bpt>GeoJSON specification<ept id="f4ab5e8b-c8e6-4d29-8422-e226947ed22a">&lt;/linkText&gt;</ept><bpt id="f4ab5e8b-c8e6-4d29-8422-e226947ed22a">&lt;title&gt;</bpt><ept id="f4ab5e8b-c8e6-4d29-8422-e226947ed22a">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="1b16f377-c497-4555-bd31-dad5d3803017" xml:space="preserve">
          <source>GeoJSON data structures are always valid JSON objects, so they can be stored and queried using DocumentDB without any specialized tools or libraries.</source>
          <target state="new">GeoJSON data structures are always valid JSON objects, so they can be stored and queried using DocumentDB without any specialized tools or libraries.</target>
        </trans-unit>
        <trans-unit id="a757787c-5400-45f0-9527-aab36cf468fe" xml:space="preserve">
          <source>The DocumentDB SDKs provide helper classes and methods that make it easy to work with spatial data.</source>
          <target state="new">The DocumentDB SDKs provide helper classes and methods that make it easy to work with spatial data.</target>
        </trans-unit>
        <trans-unit id="a69350fe-0cac-449c-b0c6-1a0cf3c43af3" xml:space="preserve">
          <source>A <bpt id="13f82fe5-c8d4-4959-b7af-db52a349ad91">&lt;strong&gt;</bpt>Point<ept id="13f82fe5-c8d4-4959-b7af-db52a349ad91">&lt;/strong&gt;</ept> denotes a single position in space.</source>
          <target state="new">A <bpt id="13f82fe5-c8d4-4959-b7af-db52a349ad91">&lt;strong&gt;</bpt>Point<ept id="13f82fe5-c8d4-4959-b7af-db52a349ad91">&lt;/strong&gt;</ept> denotes a single position in space.</target>
        </trans-unit>
        <trans-unit id="32ac9a8c-07a5-4326-b17b-133bb5a338c2" xml:space="preserve">
          <source>In geospatial data, a point represents the exact location, which could be a street address of a grocery store, a kiosk, an automobile or a city.</source>
          <target state="new">In geospatial data, a point represents the exact location, which could be a street address of a grocery store, a kiosk, an automobile or a city.</target>
        </trans-unit>
        <trans-unit id="012264af-651f-4d15-980c-af7f30fbc410" xml:space="preserve">
          <source>A point is represented in GeoJSON (and DocumentDB) using its coordinate pair or longitude and latitude.</source>
          <target state="new">A point is represented in GeoJSON (and DocumentDB) using its coordinate pair or longitude and latitude.</target>
        </trans-unit>
        <trans-unit id="5feddb51-167c-4ec5-86e5-42ce290e4eda" xml:space="preserve">
          <source>Here's an example JSON for a point.</source>
          <target state="new">Here's an example JSON for a point.</target>
        </trans-unit>
        <trans-unit id="c1c6ceae-d880-4654-b873-9c847b42a998" xml:space="preserve">
          <source><bpt id="12257e08-d1a1-47ee-9e5a-3e343b5d165b">&lt;strong&gt;</bpt>Points in DocumentDB<ept id="12257e08-d1a1-47ee-9e5a-3e343b5d165b">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="12257e08-d1a1-47ee-9e5a-3e343b5d165b">&lt;strong&gt;</bpt>Points in DocumentDB<ept id="12257e08-d1a1-47ee-9e5a-3e343b5d165b">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="60661d55-07cc-4b2e-8b7d-907f9a95e5f4" xml:space="preserve">
          <source>The GeoJSON specification specifies longitude first and latitude second.</source>
          <target state="new">The GeoJSON specification specifies longitude first and latitude second.</target>
        </trans-unit>
        <trans-unit id="36b238e0-6457-42e6-aeec-19005e8c72e7" xml:space="preserve">
          <source>Like in other mapping applications, longitude and latitude are angles and represented in terms of degrees.</source>
          <target state="new">Like in other mapping applications, longitude and latitude are angles and represented in terms of degrees.</target>
        </trans-unit>
        <trans-unit id="e9c10f16-bf9d-498e-8546-91c6746661be" xml:space="preserve">
          <source>Longitude values are measured from the Prime Meridian and are between -180 and 180.0 degrees, and latitude values are measured from the equator and are between -90.0 and 90.0 degrees.</source>
          <target state="new">Longitude values are measured from the Prime Meridian and are between -180 and 180.0 degrees, and latitude values are measured from the equator and are between -90.0 and 90.0 degrees.</target>
        </trans-unit>
        <trans-unit id="c798ec78-6bb1-4967-b51f-a3990c120880" xml:space="preserve">
          <source>DocumentDB interprets coordinates as represented per the WGS-84 reference system.</source>
          <target state="new">DocumentDB interprets coordinates as represented per the WGS-84 reference system.</target>
        </trans-unit>
        <trans-unit id="fe615e2b-8dab-48f2-926d-e01d1b75a3e6" xml:space="preserve">
          <source>Please see below for more details about coordinate reference systems.</source>
          <target state="new">Please see below for more details about coordinate reference systems.</target>
        </trans-unit>
        <trans-unit id="eac30fce-9033-4f04-847e-5e00fd38f4df" xml:space="preserve">
          <source>This can be embedded in a DocumentDB document as shown in this example of a user profile containing location data:</source>
          <target state="new">This can be embedded in a DocumentDB document as shown in this example of a user profile containing location data:</target>
        </trans-unit>
        <trans-unit id="2d664e17-20a6-4619-842d-487fe52c7535" xml:space="preserve">
          <source><bpt id="190cab62-687c-48c4-8f4b-b97fadf575c5">&lt;strong&gt;</bpt>Use Profile with Location stored in DocumentDB<ept id="190cab62-687c-48c4-8f4b-b97fadf575c5">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="190cab62-687c-48c4-8f4b-b97fadf575c5">&lt;strong&gt;</bpt>Use Profile with Location stored in DocumentDB<ept id="190cab62-687c-48c4-8f4b-b97fadf575c5">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9659d4ec-8a48-4e21-8e68-d576e57373fd" xml:space="preserve">
          <source>In addition to points, GeoJSON also supports LineStrings and Polygons.</source>
          <target state="new">In addition to points, GeoJSON also supports LineStrings and Polygons.</target>
        </trans-unit>
        <trans-unit id="c8ac5fb8-e454-4440-bc02-c549000c6795" xml:space="preserve">
          <source><bpt id="d75ff271-8e4b-4cd3-af4b-b7bf443052a8">&lt;strong&gt;</bpt>LineStrings<ept id="d75ff271-8e4b-4cd3-af4b-b7bf443052a8">&lt;/strong&gt;</ept> represent a series of two or more points in space and the line segments that connect them.</source>
          <target state="new"><bpt id="d75ff271-8e4b-4cd3-af4b-b7bf443052a8">&lt;strong&gt;</bpt>LineStrings<ept id="d75ff271-8e4b-4cd3-af4b-b7bf443052a8">&lt;/strong&gt;</ept> represent a series of two or more points in space and the line segments that connect them.</target>
        </trans-unit>
        <trans-unit id="e887d6e3-bca3-4c9d-a85d-8a8b1ede99c2" xml:space="preserve">
          <source>In geospatial data, linestrings are commonly used to represent highways or rivers.</source>
          <target state="new">In geospatial data, linestrings are commonly used to represent highways or rivers.</target>
        </trans-unit>
        <trans-unit id="152388c1-4d66-4d83-85d9-29eee8c6c273" xml:space="preserve">
          <source>A <bpt id="bfdddbf5-eb64-4ecd-8be9-00c851e23459">&lt;strong&gt;</bpt>polygon<ept id="bfdddbf5-eb64-4ecd-8be9-00c851e23459">&lt;/strong&gt;</ept> is a boundary of connected points that forms a closed LineString.</source>
          <target state="new">A <bpt id="bfdddbf5-eb64-4ecd-8be9-00c851e23459">&lt;strong&gt;</bpt>polygon<ept id="bfdddbf5-eb64-4ecd-8be9-00c851e23459">&lt;/strong&gt;</ept> is a boundary of connected points that forms a closed LineString.</target>
        </trans-unit>
        <trans-unit id="d109802c-08c7-4861-adba-8f0cd27cefde" xml:space="preserve">
          <source>Polygons are commonly used to represent natural formations like lakes or political jurisdictions like cities and states.</source>
          <target state="new">Polygons are commonly used to represent natural formations like lakes or political jurisdictions like cities and states.</target>
        </trans-unit>
        <trans-unit id="7eb39ae4-e915-4077-88d6-bd65fba3b6c9" xml:space="preserve">
          <source>Here's an example of a polygon in DocumentDB.</source>
          <target state="new">Here's an example of a polygon in DocumentDB.</target>
        </trans-unit>
        <trans-unit id="243636f0-14e2-43d1-8031-67bbd33d1329" xml:space="preserve">
          <source><bpt id="7fef25d5-df33-44a0-95a5-e944b6078587">&lt;strong&gt;</bpt>Polygons in DocumentDB<ept id="7fef25d5-df33-44a0-95a5-e944b6078587">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="7fef25d5-df33-44a0-95a5-e944b6078587">&lt;strong&gt;</bpt>Polygons in DocumentDB<ept id="7fef25d5-df33-44a0-95a5-e944b6078587">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="72f52da4-e2c1-4f14-8843-287237a89175" xml:space="preserve">
          <source>The GeoJSON specification requires that for valid polygons, the last coordinate pair provided should be the same as the first, to create a closed shape.</source>
          <target state="new">The GeoJSON specification requires that for valid polygons, the last coordinate pair provided should be the same as the first, to create a closed shape.</target>
        </trans-unit>
        <trans-unit id="e77fb287-7997-439b-9556-5a3bea6f2137" xml:space="preserve">
          <source>Points within a polygon must be specified in counter-clockwise order.</source>
          <target state="new">Points within a polygon must be specified in counter-clockwise order.</target>
        </trans-unit>
        <trans-unit id="6c323dd7-1a7c-4925-97bd-f50971d8e1df" xml:space="preserve">
          <source>A polygon specified in clockwise order represents the inverse of the region within it.</source>
          <target state="new">A polygon specified in clockwise order represents the inverse of the region within it.</target>
        </trans-unit>
        <trans-unit id="d4272c1f-939c-45c0-9136-9bcb274266f0" xml:space="preserve">
          <source>In addition to Point, LineString and Polygon, GeoJSON also specifies the representation for how to group multiple geospatial locations, as well as how to associate arbitrary properties with geolocation as a <bpt id="b235081a-e8a0-4b4d-bf17-fb04843e3960">&lt;strong&gt;</bpt>Feature<ept id="b235081a-e8a0-4b4d-bf17-fb04843e3960">&lt;/strong&gt;</ept>.</source>
          <target state="new">In addition to Point, LineString and Polygon, GeoJSON also specifies the representation for how to group multiple geospatial locations, as well as how to associate arbitrary properties with geolocation as a <bpt id="b235081a-e8a0-4b4d-bf17-fb04843e3960">&lt;strong&gt;</bpt>Feature<ept id="b235081a-e8a0-4b4d-bf17-fb04843e3960">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="9f5fd027-7648-4cfe-a2ef-897215594b03" xml:space="preserve">
          <source>Since these objects are valid JSON, they can all be stored and processed in DocumentDB.</source>
          <target state="new">Since these objects are valid JSON, they can all be stored and processed in DocumentDB.</target>
        </trans-unit>
        <trans-unit id="04fe2d48-422a-4630-9ba6-e24781cce1fc" xml:space="preserve">
          <source>Since the shape of the earth is irregular, coordinates of geospatial data is represented in many coordinate reference systems (CRS), each with their own frames of reference and units of measurement.</source>
          <target state="new">Since the shape of the earth is irregular, coordinates of geospatial data is represented in many coordinate reference systems (CRS), each with their own frames of reference and units of measurement.</target>
        </trans-unit>
        <trans-unit id="79dddf98-0ced-4d05-9746-a77572558d5b" xml:space="preserve">
          <source>For example, the "National Grid of Britain" is a reference system is very accurate for the United Kingdom, but not outside it.</source>
          <target state="new">For example, the "National Grid of Britain" is a reference system is very accurate for the United Kingdom, but not outside it.</target>
        </trans-unit>
        <trans-unit id="eade8b1d-10f7-4a46-bf95-67886b4a9ace" xml:space="preserve">
          <source>The most popular CRS in use today is the World Geodetic System  <bpt id="84d0f4f1-8042-4861-850c-8d0a9c379a51">&lt;linkText&gt;</bpt>WGS-84<ept id="84d0f4f1-8042-4861-850c-8d0a9c379a51">&lt;/linkText&gt;</ept><bpt id="84d0f4f1-8042-4861-850c-8d0a9c379a51">&lt;title&gt;</bpt><ept id="84d0f4f1-8042-4861-850c-8d0a9c379a51">&lt;/title&gt;</ept>.</source>
          <target state="new">The most popular CRS in use today is the World Geodetic System  <bpt id="84d0f4f1-8042-4861-850c-8d0a9c379a51">&lt;linkText&gt;</bpt>WGS-84<ept id="84d0f4f1-8042-4861-850c-8d0a9c379a51">&lt;/linkText&gt;</ept><bpt id="84d0f4f1-8042-4861-850c-8d0a9c379a51">&lt;title&gt;</bpt><ept id="84d0f4f1-8042-4861-850c-8d0a9c379a51">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="4aacaed6-e830-4f03-a544-5438b92b4c05" xml:space="preserve">
          <source>GPS devices, and many mapping services including Google Maps and Bing Maps APIs use WGS-84.</source>
          <target state="new">GPS devices, and many mapping services including Google Maps and Bing Maps APIs use WGS-84.</target>
        </trans-unit>
        <trans-unit id="0b87685a-b189-418e-9b4c-98d290530c30" xml:space="preserve">
          <source>DocumentDB supports indexing and querying of geospatial data using the WGS-84 CRS only.</source>
          <target state="new">DocumentDB supports indexing and querying of geospatial data using the WGS-84 CRS only.</target>
        </trans-unit>
        <trans-unit id="b5a84455-8f64-4ab7-bd06-4a5045d259f5" xml:space="preserve">
          <source>When you create documents that contain GeoJSON values, they are automatically indexed with a spatial index in accordance to the indexing policy of the collection.</source>
          <target state="new">When you create documents that contain GeoJSON values, they are automatically indexed with a spatial index in accordance to the indexing policy of the collection.</target>
        </trans-unit>
        <trans-unit id="036e0faf-19b0-4356-8d0d-e09475efcb89" xml:space="preserve">
          <source>If you're working with a DocumentDB SDK in a dynamically typed language like Python or Node.js, you must create valid GeoJSON.</source>
          <target state="new">If you're working with a DocumentDB SDK in a dynamically typed language like Python or Node.js, you must create valid GeoJSON.</target>
        </trans-unit>
        <trans-unit id="fdf72d15-045b-45cd-aa34-e4023fa42119" xml:space="preserve">
          <source><bpt id="c227ba6c-5268-4913-8f98-e1e48b7cd730">&lt;strong&gt;</bpt>Create Document with Geospatial data in Node.js<ept id="c227ba6c-5268-4913-8f98-e1e48b7cd730">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="c227ba6c-5268-4913-8f98-e1e48b7cd730">&lt;strong&gt;</bpt>Create Document with Geospatial data in Node.js<ept id="c227ba6c-5268-4913-8f98-e1e48b7cd730">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f665675f-6824-4d8a-be73-4c2f0a4aa026" xml:space="preserve">
          <source>If you're working with the .NET (or Java) SDKs, you can use the new Point and Polygon classes within the Microsoft.Azure.Documents.Spatial namespace to embed location information within your application objects.</source>
          <target state="new">If you're working with the .NET (or Java) SDKs, you can use the new Point and Polygon classes within the Microsoft.Azure.Documents.Spatial namespace to embed location information within your application objects.</target>
        </trans-unit>
        <trans-unit id="b3e92103-ad59-4ea3-a744-5681cc693e10" xml:space="preserve">
          <source>These classes help simplify the serialization and deserialization of spatial data into GeoJSON.</source>
          <target state="new">These classes help simplify the serialization and deserialization of spatial data into GeoJSON.</target>
        </trans-unit>
        <trans-unit id="9c504089-f39d-487a-8fba-c7ff9b193444" xml:space="preserve">
          <source><bpt id="023ec041-b936-4f8d-bd48-998893bb5798">&lt;strong&gt;</bpt>Create Document with Geospatial data in .NET<ept id="023ec041-b936-4f8d-bd48-998893bb5798">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="023ec041-b936-4f8d-bd48-998893bb5798">&lt;strong&gt;</bpt>Create Document with Geospatial data in .NET<ept id="023ec041-b936-4f8d-bd48-998893bb5798">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="810686d1-c2d4-421f-b468-aea866863284" xml:space="preserve">
          <source>If you don't have the latitude and longitude information, but have the physical addresses or location name like city or country, you can look up the actual coordinates by using a geocoding service like Bing Maps REST Services.</source>
          <target state="new">If you don't have the latitude and longitude information, but have the physical addresses or location name like city or country, you can look up the actual coordinates by using a geocoding service like Bing Maps REST Services.</target>
        </trans-unit>
        <trans-unit id="e578a095-8aac-441b-b005-e2fd60bd58c8" xml:space="preserve">
          <source>Learn more about Bing Maps geocoding <bpt id="88962391-4403-4f62-9b05-550160af1170">&lt;linkText&gt;</bpt>here<ept id="88962391-4403-4f62-9b05-550160af1170">&lt;/linkText&gt;</ept><bpt id="88962391-4403-4f62-9b05-550160af1170">&lt;title&gt;</bpt><ept id="88962391-4403-4f62-9b05-550160af1170">&lt;/title&gt;</ept>.</source>
          <target state="new">Learn more about Bing Maps geocoding <bpt id="88962391-4403-4f62-9b05-550160af1170">&lt;linkText&gt;</bpt>here<ept id="88962391-4403-4f62-9b05-550160af1170">&lt;/linkText&gt;</ept><bpt id="88962391-4403-4f62-9b05-550160af1170">&lt;title&gt;</bpt><ept id="88962391-4403-4f62-9b05-550160af1170">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="ac79a038-b18b-48ad-a52a-6f2395640502" xml:space="preserve">
          <source>Now that we've taken a look at how to insert geospatial data, let's take a look at how to query this data using DocumentDB using SQL and LINQ.</source>
          <target state="new">Now that we've taken a look at how to insert geospatial data, let's take a look at how to query this data using DocumentDB using SQL and LINQ.</target>
        </trans-unit>
        <trans-unit id="cd4810f4-1564-424b-bada-f0e492bdcdb8" xml:space="preserve">
          <source>DocumentDB supports the following Open Geospatial Consortium (OGC) built-in functions for geospatial querying.</source>
          <target state="new">DocumentDB supports the following Open Geospatial Consortium (OGC) built-in functions for geospatial querying.</target>
        </trans-unit>
        <trans-unit id="76897e35-e336-423f-b12e-b8269367045d" xml:space="preserve">
          <source>For more details on the complete set of built-in functions in the SQL language, please refer to <bpt id="868af68e-16a5-430b-9358-1edc7de0aec7">&lt;linkText&gt;</bpt>Query DocumentDB<ept id="868af68e-16a5-430b-9358-1edc7de0aec7">&lt;/linkText&gt;</ept><bpt id="868af68e-16a5-430b-9358-1edc7de0aec7">&lt;title&gt;</bpt><ept id="868af68e-16a5-430b-9358-1edc7de0aec7">&lt;/title&gt;</ept>.</source>
          <target state="new">For more details on the complete set of built-in functions in the SQL language, please refer to <bpt id="868af68e-16a5-430b-9358-1edc7de0aec7">&lt;linkText&gt;</bpt>Query DocumentDB<ept id="868af68e-16a5-430b-9358-1edc7de0aec7">&lt;/linkText&gt;</ept><bpt id="868af68e-16a5-430b-9358-1edc7de0aec7">&lt;title&gt;</bpt><ept id="868af68e-16a5-430b-9358-1edc7de0aec7">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="95235463-3d3e-4e35-bb1e-0d9e72e2dee2" xml:space="preserve">
          <source>Usage</source>
          <target state="new">Usage</target>
        </trans-unit>
        <trans-unit id="e351f34c-777a-4c4d-9cd7-bb18c5e99189" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="f73725cf-08b2-482e-a25b-d89aa2df7ee7" xml:space="preserve">
          <source>ST_DISTANCE (point_expr, point_expr)</source>
          <target state="new">ST_DISTANCE (point_expr, point_expr)</target>
        </trans-unit>
        <trans-unit id="936074a0-d6a3-4103-8efb-e0887beba3d4" xml:space="preserve">
          <source>Returns the distance between the two GeoJSON point expressions.</source>
          <target state="new">Returns the distance between the two GeoJSON point expressions.</target>
        </trans-unit>
        <trans-unit id="387a2f5a-44dc-49a5-a4ca-eb6c1a00d2af" xml:space="preserve">
          <source>ST_WITHIN (point_expr, polygon_expr)</source>
          <target state="new">ST_WITHIN (point_expr, polygon_expr)</target>
        </trans-unit>
        <trans-unit id="9ffa9c56-f12e-4915-904d-596470255093" xml:space="preserve">
          <source>Returns a Boolean expression indicating whether the GeoJSON point specified in the first argument is within the GeoJSON polygon in the second argument.</source>
          <target state="new">Returns a Boolean expression indicating whether the GeoJSON point specified in the first argument is within the GeoJSON polygon in the second argument.</target>
        </trans-unit>
        <trans-unit id="8199f2c7-388b-4ef3-ab5c-12c4623a66ef" xml:space="preserve">
          <source>ST_ISVALID</source>
          <target state="new">ST_ISVALID</target>
        </trans-unit>
        <trans-unit id="9f65985f-ee14-4c44-a1f5-5382b3844234" xml:space="preserve">
          <source>Returns a Boolean value indicating whether the specified GeoJSON point or polygon expression is valid.</source>
          <target state="new">Returns a Boolean value indicating whether the specified GeoJSON point or polygon expression is valid.</target>
        </trans-unit>
        <trans-unit id="a247ff6b-f0ca-4403-85c8-d040eb4efcc6" xml:space="preserve">
          <source>ST_ISVALIDDETAILED</source>
          <target state="new">ST_ISVALIDDETAILED</target>
        </trans-unit>
        <trans-unit id="e2797a60-8c85-440b-8e4d-e1f01bd647ff" xml:space="preserve">
          <source>Returns a JSON value containing a Boolean value if the specified GeoJSON point or polygon expression is valid, and if invalid, additionally the reason as a string value.</source>
          <target state="new">Returns a JSON value containing a Boolean value if the specified GeoJSON point or polygon expression is valid, and if invalid, additionally the reason as a string value.</target>
        </trans-unit>
        <trans-unit id="dcee747f-e951-4726-80f1-a56d4b997148" xml:space="preserve">
          <source>Spatial functions can be used to perform proximity querries against spatial data.</source>
          <target state="new">Spatial functions can be used to perform proximity querries against spatial data.</target>
        </trans-unit>
        <trans-unit id="09d0d885-767f-4c0c-a42d-cadf9411b053" xml:space="preserve">
          <source>For example, here's a query that returns all family documents that are within 30 km of the specified location using the ST_DISTANCE built-in function.</source>
          <target state="new">For example, here's a query that returns all family documents that are within 30 km of the specified location using the ST_DISTANCE built-in function.</target>
        </trans-unit>
        <trans-unit id="4c86ce23-cf22-4f4a-a95b-fa4b4cff4aad" xml:space="preserve">
          <source><bpt id="46e1f43a-d0d8-46cb-9459-07c0d5f04af7">&lt;strong&gt;</bpt>Query<ept id="46e1f43a-d0d8-46cb-9459-07c0d5f04af7">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="46e1f43a-d0d8-46cb-9459-07c0d5f04af7">&lt;strong&gt;</bpt>Query<ept id="46e1f43a-d0d8-46cb-9459-07c0d5f04af7">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="4770eb06-d648-4d54-9843-b75042ea7fd2" xml:space="preserve">
          <source><bpt id="2a7d4ce8-b537-4029-8e78-9546323adfd0">&lt;strong&gt;</bpt>Results<ept id="2a7d4ce8-b537-4029-8e78-9546323adfd0">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="2a7d4ce8-b537-4029-8e78-9546323adfd0">&lt;strong&gt;</bpt>Results<ept id="2a7d4ce8-b537-4029-8e78-9546323adfd0">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="1cedc286-1ff0-450c-ba2b-fdf5c0bd9121" xml:space="preserve">
          <source>If you include spatial indexing in your indexing policy, then "distance queries" will be served efficiently through the index.</source>
          <target state="new">If you include spatial indexing in your indexing policy, then "distance queries" will be served efficiently through the index.</target>
        </trans-unit>
        <trans-unit id="99e466d0-5398-4ed2-ae45-8309e6beea00" xml:space="preserve">
          <source>For more details on spatial indexing, please see the section below.</source>
          <target state="new">For more details on spatial indexing, please see the section below.</target>
        </trans-unit>
        <trans-unit id="a0ec6f09-e25e-440f-9011-8a3e1ff2d7d1" xml:space="preserve">
          <source>If you don't have a spatial index for the specified paths, you can still perform spatial queries by specifying <bpt id="fb93a6bb-d9ee-4663-af4c-2c26e3a1378d">&lt;code&gt;</bpt>x-ms-documentdb-query-enable-scan<ept id="fb93a6bb-d9ee-4663-af4c-2c26e3a1378d">&lt;/code&gt;</ept> request header with the value set to "true".</source>
          <target state="new">If you don't have a spatial index for the specified paths, you can still perform spatial queries by specifying <bpt id="fb93a6bb-d9ee-4663-af4c-2c26e3a1378d">&lt;code&gt;</bpt>x-ms-documentdb-query-enable-scan<ept id="fb93a6bb-d9ee-4663-af4c-2c26e3a1378d">&lt;/code&gt;</ept> request header with the value set to "true".</target>
        </trans-unit>
        <trans-unit id="1067b050-63fa-4598-b1cc-5869e37c1390" xml:space="preserve">
          <source>In .NET, this can be done by passing the optional <bpt id="269f9c4a-6749-44fe-84c0-9480b7d0c191">&lt;strong&gt;</bpt>FeedOptions<ept id="269f9c4a-6749-44fe-84c0-9480b7d0c191">&lt;/strong&gt;</ept> argument to queries with <bpt id="bc9115e7-d7ed-4237-8555-87b4a5516d4a">&lt;linkText&gt;</bpt>EnableScanInQuery<ept id="bc9115e7-d7ed-4237-8555-87b4a5516d4a">&lt;/linkText&gt;</ept><bpt id="bc9115e7-d7ed-4237-8555-87b4a5516d4a">&lt;title&gt;</bpt><ept id="bc9115e7-d7ed-4237-8555-87b4a5516d4a">&lt;/title&gt;</ept> set to true.</source>
          <target state="new">In .NET, this can be done by passing the optional <bpt id="269f9c4a-6749-44fe-84c0-9480b7d0c191">&lt;strong&gt;</bpt>FeedOptions<ept id="269f9c4a-6749-44fe-84c0-9480b7d0c191">&lt;/strong&gt;</ept> argument to queries with <bpt id="bc9115e7-d7ed-4237-8555-87b4a5516d4a">&lt;linkText&gt;</bpt>EnableScanInQuery<ept id="bc9115e7-d7ed-4237-8555-87b4a5516d4a">&lt;/linkText&gt;</ept><bpt id="bc9115e7-d7ed-4237-8555-87b4a5516d4a">&lt;title&gt;</bpt><ept id="bc9115e7-d7ed-4237-8555-87b4a5516d4a">&lt;/title&gt;</ept> set to true.</target>
        </trans-unit>
        <trans-unit id="e81e265e-ee34-4369-b463-eff19cf9e637" xml:space="preserve">
          <source>ST_WITHIN can be used to check if a point lies within a polygon.</source>
          <target state="new">ST_WITHIN can be used to check if a point lies within a polygon.</target>
        </trans-unit>
        <trans-unit id="c0b4dbd8-1688-4e95-8e8c-549eda39de96" xml:space="preserve">
          <source>Commonly polygons are used to represent boundaries like zip codes, state boundaries, or natural formations.</source>
          <target state="new">Commonly polygons are used to represent boundaries like zip codes, state boundaries, or natural formations.</target>
        </trans-unit>
        <trans-unit id="022a7bcc-75ed-4230-a2c4-8665bc5ff841" xml:space="preserve">
          <source>Again if you include spatial indexing in your indexing policy, then "within" queries will be served efficiently through the index.</source>
          <target state="new">Again if you include spatial indexing in your indexing policy, then "within" queries will be served efficiently through the index.</target>
        </trans-unit>
        <trans-unit id="0ba22c69-fa62-4adc-a39b-c06305cc076b" xml:space="preserve">
          <source>Polygon arguments in ST_WITHIN can contain only a single ring, i.e. the polygons must not contain holes in them.</source>
          <target state="new">Polygon arguments in ST_WITHIN can contain only a single ring, i.e. the polygons must not contain holes in them.</target>
        </trans-unit>
        <trans-unit id="71a2fee0-431a-40b4-ad5a-85d7c4f7ebd9" xml:space="preserve">
          <source>Check the <bpt id="ffe163ff-d090-46b0-818c-aaf6ac801534">&lt;linkText&gt;</bpt>DocumentDB limits<ept id="ffe163ff-d090-46b0-818c-aaf6ac801534">&lt;/linkText&gt;</ept><bpt id="ffe163ff-d090-46b0-818c-aaf6ac801534">&lt;title&gt;</bpt><ept id="ffe163ff-d090-46b0-818c-aaf6ac801534">&lt;/title&gt;</ept> for the maximum number of points allowed in a polygon for an ST_WITHIN query.</source>
          <target state="new">Check the <bpt id="ffe163ff-d090-46b0-818c-aaf6ac801534">&lt;linkText&gt;</bpt>DocumentDB limits<ept id="ffe163ff-d090-46b0-818c-aaf6ac801534">&lt;/linkText&gt;</ept><bpt id="ffe163ff-d090-46b0-818c-aaf6ac801534">&lt;title&gt;</bpt><ept id="ffe163ff-d090-46b0-818c-aaf6ac801534">&lt;/title&gt;</ept> for the maximum number of points allowed in a polygon for an ST_WITHIN query.</target>
        </trans-unit>
        <trans-unit id="dbf745e7-8b36-4158-b958-b48d827256a3" xml:space="preserve">
          <source><bpt id="b858ba33-22f0-42ce-9f46-583055e66ac9">&lt;strong&gt;</bpt>Query<ept id="b858ba33-22f0-42ce-9f46-583055e66ac9">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="b858ba33-22f0-42ce-9f46-583055e66ac9">&lt;strong&gt;</bpt>Query<ept id="b858ba33-22f0-42ce-9f46-583055e66ac9">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0fc4ba04-da32-484f-94c6-b07956082dbb" xml:space="preserve">
          <source><bpt id="371470cf-eab6-4792-a1ea-b97320ffa266">&lt;strong&gt;</bpt>Results<ept id="371470cf-eab6-4792-a1ea-b97320ffa266">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="371470cf-eab6-4792-a1ea-b97320ffa266">&lt;strong&gt;</bpt>Results<ept id="371470cf-eab6-4792-a1ea-b97320ffa266">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="77415a05-e838-4084-9fc8-83f216f65d2e" xml:space="preserve">
          <source>Similar to how mismatched types works in DocumentDB query, if the location value specified in either argument is malformed or invalid, then it will evaluate to <bpt id="1d29e8d4-7f8d-4fa5-99ca-506dc83ca8a2">&lt;strong&gt;</bpt>undefined<ept id="1d29e8d4-7f8d-4fa5-99ca-506dc83ca8a2">&lt;/strong&gt;</ept> and the evaluated document to be skipped from the query results.</source>
          <target state="new">Similar to how mismatched types works in DocumentDB query, if the location value specified in either argument is malformed or invalid, then it will evaluate to <bpt id="1d29e8d4-7f8d-4fa5-99ca-506dc83ca8a2">&lt;strong&gt;</bpt>undefined<ept id="1d29e8d4-7f8d-4fa5-99ca-506dc83ca8a2">&lt;/strong&gt;</ept> and the evaluated document to be skipped from the query results.</target>
        </trans-unit>
        <trans-unit id="80f8f375-1172-4eea-85eb-655768164422" xml:space="preserve">
          <source>If your query returns no results, run ST_ISVALIDDETAILED To debug why the spatail type is invalid.</source>
          <target state="new">If your query returns no results, run ST_ISVALIDDETAILED To debug why the spatail type is invalid.</target>
        </trans-unit>
        <trans-unit id="fcac8bce-0150-430b-82a6-a4d2ccf3138a" xml:space="preserve">
          <source>ST<bpt id="a7cb34d8-3a98-4c1f-a676-3fe689fb116e">&lt;em&gt;</bpt>ISVALID and ST<ept id="a7cb34d8-3a98-4c1f-a676-3fe689fb116e">&lt;/em&gt;</ept>ISVALIDDETAILED can be used to check if a spatial object is valid.</source>
          <target state="new">ST<bpt id="a7cb34d8-3a98-4c1f-a676-3fe689fb116e">&lt;em&gt;</bpt>ISVALID and ST<ept id="a7cb34d8-3a98-4c1f-a676-3fe689fb116e">&lt;/em&gt;</ept>ISVALIDDETAILED can be used to check if a spatial object is valid.</target>
        </trans-unit>
        <trans-unit id="6eaa3acc-8b15-44ba-b236-ef5b02de2cd0" xml:space="preserve">
          <source>For example, the following query checks the validity of a point with an out of range latitude value (-132.8).</source>
          <target state="new">For example, the following query checks the validity of a point with an out of range latitude value (-132.8).</target>
        </trans-unit>
        <trans-unit id="a084c595-26a4-4e0d-be49-dac984e7e2df" xml:space="preserve">
          <source>ST<bpt id="7b81cf68-7d0f-441a-9ec0-95ef6a36525c">&lt;em&gt;</bpt>ISVALID returns just a Boolean value, and ST<ept id="7b81cf68-7d0f-441a-9ec0-95ef6a36525c">&lt;/em&gt;</ept>ISVALIDDETAILED returns the Boolean and a string containing the reason why it is considered invalid.</source>
          <target state="new">ST<bpt id="7b81cf68-7d0f-441a-9ec0-95ef6a36525c">&lt;em&gt;</bpt>ISVALID returns just a Boolean value, and ST<ept id="7b81cf68-7d0f-441a-9ec0-95ef6a36525c">&lt;/em&gt;</ept>ISVALIDDETAILED returns the Boolean and a string containing the reason why it is considered invalid.</target>
        </trans-unit>
        <trans-unit id="b8014fac-68d6-490d-91e8-4b307173d167" xml:space="preserve">
          <source><bpt id="bda99e39-dced-43c5-a73b-81a58877626e">&lt;em&gt;</bpt>* Query *<ept id="bda99e39-dced-43c5-a73b-81a58877626e">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="bda99e39-dced-43c5-a73b-81a58877626e">&lt;em&gt;</bpt>* Query *<ept id="bda99e39-dced-43c5-a73b-81a58877626e">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f9f734de-7e28-4cda-84a9-8c7b1ce130d0" xml:space="preserve">
          <source><bpt id="49916740-a4ae-42ad-9d7e-26ef26c704e9">&lt;strong&gt;</bpt>Results<ept id="49916740-a4ae-42ad-9d7e-26ef26c704e9">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="49916740-a4ae-42ad-9d7e-26ef26c704e9">&lt;strong&gt;</bpt>Results<ept id="49916740-a4ae-42ad-9d7e-26ef26c704e9">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="3d460e2b-6e9b-4d1f-bc9b-03ac9415f8f2" xml:space="preserve">
          <source>These functions can also be used to validate polygons.</source>
          <target state="new">These functions can also be used to validate polygons.</target>
        </trans-unit>
        <trans-unit id="6ff27adc-043f-4bd2-b52c-405e1f1d910c" xml:space="preserve">
          <source>For example, here we use ST_ISVALIDDETAILED to validate a polygon that is not closed.</source>
          <target state="new">For example, here we use ST_ISVALIDDETAILED to validate a polygon that is not closed.</target>
        </trans-unit>
        <trans-unit id="ece35653-8b3f-484b-bc53-8d0c8608c2ef" xml:space="preserve">
          <source><bpt id="070db89a-4f07-448b-8bc4-af223415ada3">&lt;strong&gt;</bpt>Query<ept id="070db89a-4f07-448b-8bc4-af223415ada3">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="070db89a-4f07-448b-8bc4-af223415ada3">&lt;strong&gt;</bpt>Query<ept id="070db89a-4f07-448b-8bc4-af223415ada3">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f16f9589-e9b7-4dc9-aaa7-a9f69c570c96" xml:space="preserve">
          <source><bpt id="9e6fcd18-9998-4db4-bd0d-03248324ab5c">&lt;strong&gt;</bpt>Results<ept id="9e6fcd18-9998-4db4-bd0d-03248324ab5c">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="9e6fcd18-9998-4db4-bd0d-03248324ab5c">&lt;strong&gt;</bpt>Results<ept id="9e6fcd18-9998-4db4-bd0d-03248324ab5c">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="7c59b099-83b0-40ab-a4e4-4d1f9c7d47c9" xml:space="preserve">
          <source>The DocumentDB .NET SDK also providers stub methods <bpt id="97198089-d88e-49ab-ac8f-34d91a814e90">&lt;code&gt;</bpt>Distance()<ept id="97198089-d88e-49ab-ac8f-34d91a814e90">&lt;/code&gt;</ept> and <bpt id="459d352a-b5fd-4058-a36e-41199eba93df">&lt;code&gt;</bpt>Within()<ept id="459d352a-b5fd-4058-a36e-41199eba93df">&lt;/code&gt;</ept> for use within LINQ expressions.</source>
          <target state="new">The DocumentDB .NET SDK also providers stub methods <bpt id="97198089-d88e-49ab-ac8f-34d91a814e90">&lt;code&gt;</bpt>Distance()<ept id="97198089-d88e-49ab-ac8f-34d91a814e90">&lt;/code&gt;</ept> and <bpt id="459d352a-b5fd-4058-a36e-41199eba93df">&lt;code&gt;</bpt>Within()<ept id="459d352a-b5fd-4058-a36e-41199eba93df">&lt;/code&gt;</ept> for use within LINQ expressions.</target>
        </trans-unit>
        <trans-unit id="f3d664f5-6665-40d7-bcbb-47844942352e" xml:space="preserve">
          <source>The DocumentDB LINQ provider translates these method calls to the equivalent SQL built-in function calls (ST<bpt id="117b45f0-56c2-4b8b-b270-d99a8a72015a">&lt;em&gt;</bpt>DISTANCE and ST<ept id="117b45f0-56c2-4b8b-b270-d99a8a72015a">&lt;/em&gt;</ept>WITHIN respectively).</source>
          <target state="new">The DocumentDB LINQ provider translates these method calls to the equivalent SQL built-in function calls (ST<bpt id="117b45f0-56c2-4b8b-b270-d99a8a72015a">&lt;em&gt;</bpt>DISTANCE and ST<ept id="117b45f0-56c2-4b8b-b270-d99a8a72015a">&lt;/em&gt;</ept>WITHIN respectively).</target>
        </trans-unit>
        <trans-unit id="af8cf81a-bf23-415c-87ff-c522302092ee" xml:space="preserve">
          <source>Here's an example of a LINQ query that finds all documents in the DocumentDB collection whose "location" value is within a radius of 30km of the specified point using LINQ.</source>
          <target state="new">Here's an example of a LINQ query that finds all documents in the DocumentDB collection whose "location" value is within a radius of 30km of the specified point using LINQ.</target>
        </trans-unit>
        <trans-unit id="1d81e62e-6568-46e9-b68b-9bc1ec4e49e3" xml:space="preserve">
          <source><bpt id="bd9548ef-831b-418d-ae00-3acacf8662be">&lt;strong&gt;</bpt>LINQ query for Distance<ept id="bd9548ef-831b-418d-ae00-3acacf8662be">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="bd9548ef-831b-418d-ae00-3acacf8662be">&lt;strong&gt;</bpt>LINQ query for Distance<ept id="bd9548ef-831b-418d-ae00-3acacf8662be">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="cc121f2e-b5ba-46a9-b2f3-1b43bec3f569" xml:space="preserve">
          <source>Similarly, here's a query for finding all the documents whose "location" is within the specified box/polygon.</source>
          <target state="new">Similarly, here's a query for finding all the documents whose "location" is within the specified box/polygon.</target>
        </trans-unit>
        <trans-unit id="872d1e74-97ca-4928-ab2a-98a3619d5e67" xml:space="preserve">
          <source><bpt id="c37eedd5-8ad7-4ffd-a29c-687caadf4bd2">&lt;strong&gt;</bpt>LINQ query for Within<ept id="c37eedd5-8ad7-4ffd-a29c-687caadf4bd2">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="c37eedd5-8ad7-4ffd-a29c-687caadf4bd2">&lt;strong&gt;</bpt>LINQ query for Within<ept id="c37eedd5-8ad7-4ffd-a29c-687caadf4bd2">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="3a92402a-ad71-4cfc-896b-6eb2cf141bb3" xml:space="preserve">
          <source>Now that we've taken a look at how to query documents using LINQ and SQL, let's take a look at how to configure DocumentDB for spatial indexing.</source>
          <target state="new">Now that we've taken a look at how to query documents using LINQ and SQL, let's take a look at how to configure DocumentDB for spatial indexing.</target>
        </trans-unit>
        <trans-unit id="b3a80e99-c5a2-41f9-ac4b-85c6bf6b2176" xml:space="preserve">
          <source>As we described in the <bpt id="cfa561a6-9b9b-4df5-9829-60a474275e1e">&lt;linkText&gt;</bpt>Schema Agnostic Indexing with Azure DocumentDB<ept id="cfa561a6-9b9b-4df5-9829-60a474275e1e">&lt;/linkText&gt;</ept><bpt id="cfa561a6-9b9b-4df5-9829-60a474275e1e">&lt;title&gt;</bpt><ept id="cfa561a6-9b9b-4df5-9829-60a474275e1e">&lt;/title&gt;</ept> paper, we designed DocumentDB’s database engine to be truly schema agnostic and provide first class support for JSON.</source>
          <target state="new">As we described in the <bpt id="cfa561a6-9b9b-4df5-9829-60a474275e1e">&lt;linkText&gt;</bpt>Schema Agnostic Indexing with Azure DocumentDB<ept id="cfa561a6-9b9b-4df5-9829-60a474275e1e">&lt;/linkText&gt;</ept><bpt id="cfa561a6-9b9b-4df5-9829-60a474275e1e">&lt;title&gt;</bpt><ept id="cfa561a6-9b9b-4df5-9829-60a474275e1e">&lt;/title&gt;</ept> paper, we designed DocumentDB’s database engine to be truly schema agnostic and provide first class support for JSON.</target>
        </trans-unit>
        <trans-unit id="535fcf10-cc56-459b-9f14-0a2afb90f977" xml:space="preserve">
          <source>The write optimized database engine of DocumentDB now also natively understands spatial data represented in the GeoJSON standard.</source>
          <target state="new">The write optimized database engine of DocumentDB now also natively understands spatial data represented in the GeoJSON standard.</target>
        </trans-unit>
        <trans-unit id="7c484cd2-07a6-43bd-98c5-cf69991271a7" xml:space="preserve">
          <source>In a nutshell, the geometry is projected from geodetic coordinates onto a 2D plane then divided progressively into cells using a <bpt id="a444d49e-6ef3-4922-a25f-14c408c642ea">&lt;strong&gt;</bpt>quadtree<ept id="a444d49e-6ef3-4922-a25f-14c408c642ea">&lt;/strong&gt;</ept>.</source>
          <target state="new">In a nutshell, the geometry is projected from geodetic coordinates onto a 2D plane then divided progressively into cells using a <bpt id="a444d49e-6ef3-4922-a25f-14c408c642ea">&lt;strong&gt;</bpt>quadtree<ept id="a444d49e-6ef3-4922-a25f-14c408c642ea">&lt;/strong&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="6687329d-2ab4-4dbe-95f6-fb16696a4776" xml:space="preserve">
          <source>These cells are mapped to 1D based on the location of the cell within a <bpt id="02d718cd-117d-4518-964c-0a4fead4773b">&lt;strong&gt;</bpt>Hilbert space filling curve<ept id="02d718cd-117d-4518-964c-0a4fead4773b">&lt;/strong&gt;</ept>, which preserves locality of points.</source>
          <target state="new">These cells are mapped to 1D based on the location of the cell within a <bpt id="02d718cd-117d-4518-964c-0a4fead4773b">&lt;strong&gt;</bpt>Hilbert space filling curve<ept id="02d718cd-117d-4518-964c-0a4fead4773b">&lt;/strong&gt;</ept>, which preserves locality of points.</target>
        </trans-unit>
        <trans-unit id="daaba89a-6eb7-4fd3-b331-4475c7b2faf9" xml:space="preserve">
          <source>Additionally when location data is indexed, it goes through a process known as <bpt id="954068df-9620-4dc2-88e0-286f078bd502">&lt;strong&gt;</bpt>tessellation<ept id="954068df-9620-4dc2-88e0-286f078bd502">&lt;/strong&gt;</ept>, i.e. all the cells that intersect a location are identified and stored as keys in the DocumentDB index.</source>
          <target state="new">Additionally when location data is indexed, it goes through a process known as <bpt id="954068df-9620-4dc2-88e0-286f078bd502">&lt;strong&gt;</bpt>tessellation<ept id="954068df-9620-4dc2-88e0-286f078bd502">&lt;/strong&gt;</ept>, i.e. all the cells that intersect a location are identified and stored as keys in the DocumentDB index.</target>
        </trans-unit>
        <trans-unit id="4995e61d-c61f-4244-a4ed-f12519f8ad60" xml:space="preserve">
          <source>At query time, arguments like points and polygons are also tessellated to extract the relevant cell ID ranges, then used to retrieve data from the index.</source>
          <target state="new">At query time, arguments like points and polygons are also tessellated to extract the relevant cell ID ranges, then used to retrieve data from the index.</target>
        </trans-unit>
        <trans-unit id="c4bfb27d-dfd0-4779-aba5-78937e799843" xml:space="preserve">
          <source>If you specify an indexing policy that includes spatial index for /* (all paths), then all points found within the collection are indexed for efficient spatial queries (ST<bpt id="5cb050b7-520a-4344-989b-97bbd3943ed5">&lt;em&gt;</bpt>WITHIN and ST<ept id="5cb050b7-520a-4344-989b-97bbd3943ed5">&lt;/em&gt;</ept>DISTANCE).</source>
          <target state="new">If you specify an indexing policy that includes spatial index for /* (all paths), then all points found within the collection are indexed for efficient spatial queries (ST<bpt id="5cb050b7-520a-4344-989b-97bbd3943ed5">&lt;em&gt;</bpt>WITHIN and ST<ept id="5cb050b7-520a-4344-989b-97bbd3943ed5">&lt;/em&gt;</ept>DISTANCE).</target>
        </trans-unit>
        <trans-unit id="f5dbb4d6-0e08-4704-afd9-581548b5f59e" xml:space="preserve">
          <source>Spatial indexes do not have a precision value, and always use a default precision value.</source>
          <target state="new">Spatial indexes do not have a precision value, and always use a default precision value.</target>
        </trans-unit>
        <trans-unit id="333e6187-c410-4785-bae3-2fbfd4f1895f" xml:space="preserve">
          <source>The following JSON snippet shows an indexing policy with spatial indexing enabled, i.e. index any GeoJSON point found within documents for spatial querying.</source>
          <target state="new">The following JSON snippet shows an indexing policy with spatial indexing enabled, i.e. index any GeoJSON point found within documents for spatial querying.</target>
        </trans-unit>
        <trans-unit id="504a2091-c0da-401f-9126-2184c2ac637a" xml:space="preserve">
          <source>If you are modifying the indexing policy using the Azure Preview Portal, you can specify the following JSON for indexing policy to enable spatial indexing on your collection.</source>
          <target state="new">If you are modifying the indexing policy using the Azure Preview Portal, you can specify the following JSON for indexing policy to enable spatial indexing on your collection.</target>
        </trans-unit>
        <trans-unit id="85a39bed-d44f-46fa-bb5a-7f420b01102d" xml:space="preserve">
          <source><bpt id="49d6a03d-e578-4441-8e9a-84a9faabd7ee">&lt;strong&gt;</bpt>Collection Indexing Policy JSON with Spatial enabled<ept id="49d6a03d-e578-4441-8e9a-84a9faabd7ee">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="49d6a03d-e578-4441-8e9a-84a9faabd7ee">&lt;strong&gt;</bpt>Collection Indexing Policy JSON with Spatial enabled<ept id="49d6a03d-e578-4441-8e9a-84a9faabd7ee">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6a37b5ff-2e71-4439-9664-d71659101474" xml:space="preserve">
          <source>Here's a code snippet in .NET that shows how to create a collection with spatial indexing turned on for all paths containing points.</source>
          <target state="new">Here's a code snippet in .NET that shows how to create a collection with spatial indexing turned on for all paths containing points.</target>
        </trans-unit>
        <trans-unit id="8bbc1a89-db16-4c76-b109-ea551b6fd433" xml:space="preserve">
          <source><bpt id="ced07524-8f9f-425e-9de3-aa89ec2401da">&lt;strong&gt;</bpt>Create a collection with spatial indexing<ept id="ced07524-8f9f-425e-9de3-aa89ec2401da">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="ced07524-8f9f-425e-9de3-aa89ec2401da">&lt;strong&gt;</bpt>Create a collection with spatial indexing<ept id="ced07524-8f9f-425e-9de3-aa89ec2401da">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ad141731-0257-4cde-afad-7e590c64a66d" xml:space="preserve">
          <source>And here's how you can modify an existing collection to take advantage of spatial indexing over any points that are stored within documents.</source>
          <target state="new">And here's how you can modify an existing collection to take advantage of spatial indexing over any points that are stored within documents.</target>
        </trans-unit>
        <trans-unit id="25a89ddd-e079-4544-b83a-28470e2841dd" xml:space="preserve">
          <source><bpt id="fa1fbd77-2fcf-427b-834c-2d5574370e9c">&lt;strong&gt;</bpt>Modify an existing collection with spatial indexing<ept id="fa1fbd77-2fcf-427b-834c-2d5574370e9c">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="fa1fbd77-2fcf-427b-834c-2d5574370e9c">&lt;strong&gt;</bpt>Modify an existing collection with spatial indexing<ept id="fa1fbd77-2fcf-427b-834c-2d5574370e9c">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="58431687-8ed0-48af-b85c-219fc7da045e" xml:space="preserve">
          <source>If the location GeoJSON value within the document is malformed or invalid, then it will not get indexed for spatial querying.</source>
          <target state="new">If the location GeoJSON value within the document is malformed or invalid, then it will not get indexed for spatial querying.</target>
        </trans-unit>
        <trans-unit id="fe584cba-de0e-4e3c-ad8d-9d2758005c55" xml:space="preserve">
          <source>You can validate location values using ST<bpt id="acfe9c19-d409-47ac-8473-dea31ae1bbf9">&lt;em&gt;</bpt>ISVALID and ST<ept id="acfe9c19-d409-47ac-8473-dea31ae1bbf9">&lt;/em&gt;</ept>ISVALIDDETAILED.</source>
          <target state="new">You can validate location values using ST<bpt id="acfe9c19-d409-47ac-8473-dea31ae1bbf9">&lt;em&gt;</bpt>ISVALID and ST<ept id="acfe9c19-d409-47ac-8473-dea31ae1bbf9">&lt;/em&gt;</ept>ISVALIDDETAILED.</target>
        </trans-unit>
        <trans-unit id="2a5ce195-efab-40e6-8fd1-1ac902ad4ffd" xml:space="preserve">
          <source>Now that you've learnt about how to get started with geospatial support in DocumentDB, you can:</source>
          <target state="new">Now that you've learnt about how to get started with geospatial support in DocumentDB, you can:</target>
        </trans-unit>
        <trans-unit id="b62c09c4-4fbf-4851-862f-77d1751cf501" xml:space="preserve">
          <source>Start coding with the <bpt id="cb811126-32d0-491a-b8f4-8e5c9f353c7a">&lt;linkText&gt;</bpt>Geospatial .NET code samples on Github<ept id="cb811126-32d0-491a-b8f4-8e5c9f353c7a">&lt;/linkText&gt;</ept><bpt id="cb811126-32d0-491a-b8f4-8e5c9f353c7a">&lt;title&gt;</bpt><ept id="cb811126-32d0-491a-b8f4-8e5c9f353c7a">&lt;/title&gt;</ept></source>
          <target state="new">Start coding with the <bpt id="cb811126-32d0-491a-b8f4-8e5c9f353c7a">&lt;linkText&gt;</bpt>Geospatial .NET code samples on Github<ept id="cb811126-32d0-491a-b8f4-8e5c9f353c7a">&lt;/linkText&gt;</ept><bpt id="cb811126-32d0-491a-b8f4-8e5c9f353c7a">&lt;title&gt;</bpt><ept id="cb811126-32d0-491a-b8f4-8e5c9f353c7a">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="972ab05c-ef9e-4d84-9e73-a9f95c2cfba8" xml:space="preserve">
          <source>Get hands on with geospatial querying at the <bpt id="0ea74d5e-0389-4046-a882-3488cd35f0a4">&lt;linkText&gt;</bpt>DocumentDB Query Playground<ept id="0ea74d5e-0389-4046-a882-3488cd35f0a4">&lt;/linkText&gt;</ept><bpt id="0ea74d5e-0389-4046-a882-3488cd35f0a4">&lt;title&gt;</bpt><ept id="0ea74d5e-0389-4046-a882-3488cd35f0a4">&lt;/title&gt;</ept></source>
          <target state="new">Get hands on with geospatial querying at the <bpt id="0ea74d5e-0389-4046-a882-3488cd35f0a4">&lt;linkText&gt;</bpt>DocumentDB Query Playground<ept id="0ea74d5e-0389-4046-a882-3488cd35f0a4">&lt;/linkText&gt;</ept><bpt id="0ea74d5e-0389-4046-a882-3488cd35f0a4">&lt;title&gt;</bpt><ept id="0ea74d5e-0389-4046-a882-3488cd35f0a4">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="5ede8db9-b3f2-422a-8200-d5ac0617879c" xml:space="preserve">
          <source>Learn more about <bpt id="cc418460-9d0a-4661-a557-918660ff7a2a">&lt;linkText&gt;</bpt>DocumentDB Query<ept id="cc418460-9d0a-4661-a557-918660ff7a2a">&lt;/linkText&gt;</ept><bpt id="cc418460-9d0a-4661-a557-918660ff7a2a">&lt;title&gt;</bpt><ept id="cc418460-9d0a-4661-a557-918660ff7a2a">&lt;/title&gt;</ept></source>
          <target state="new">Learn more about <bpt id="cc418460-9d0a-4661-a557-918660ff7a2a">&lt;linkText&gt;</bpt>DocumentDB Query<ept id="cc418460-9d0a-4661-a557-918660ff7a2a">&lt;/linkText&gt;</ept><bpt id="cc418460-9d0a-4661-a557-918660ff7a2a">&lt;title&gt;</bpt><ept id="cc418460-9d0a-4661-a557-918660ff7a2a">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="4b7c664a-358a-4f80-8198-50ea44a5daef" xml:space="preserve">
          <source>Learn more about <bpt id="0d3345c7-bfc1-42a5-b36f-5117000ccd5a">&lt;linkText&gt;</bpt>DocumentDB Indexing Policies<ept id="0d3345c7-bfc1-42a5-b36f-5117000ccd5a">&lt;/linkText&gt;</ept><bpt id="0d3345c7-bfc1-42a5-b36f-5117000ccd5a">&lt;title&gt;</bpt><ept id="0d3345c7-bfc1-42a5-b36f-5117000ccd5a">&lt;/title&gt;</ept></source>
          <target state="new">Learn more about <bpt id="0d3345c7-bfc1-42a5-b36f-5117000ccd5a">&lt;linkText&gt;</bpt>DocumentDB Indexing Policies<ept id="0d3345c7-bfc1-42a5-b36f-5117000ccd5a">&lt;/linkText&gt;</ept><bpt id="0d3345c7-bfc1-42a5-b36f-5117000ccd5a">&lt;title&gt;</bpt><ept id="0d3345c7-bfc1-42a5-b36f-5117000ccd5a">&lt;/title&gt;</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>